{"version":3,"sources":["js/three/three.js","js/three/options.js","index.js","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/css-loader.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","THREE","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","SRGB8_ALPHA8_ASTC_4x4_Format","SRGB8_ALPHA8_ASTC_5x4_Format","SRGB8_ALPHA8_ASTC_5x5_Format","SRGB8_ALPHA8_ASTC_6x5_Format","SRGB8_ALPHA8_ASTC_6x6_Format","SRGB8_ALPHA8_ASTC_8x5_Format","SRGB8_ALPHA8_ASTC_8x6_Format","SRGB8_ALPHA8_ASTC_8x8_Format","SRGB8_ALPHA8_ASTC_10x5_Format","SRGB8_ALPHA8_ASTC_10x6_Format","SRGB8_ALPHA8_ASTC_10x8_Format","SRGB8_ALPHA8_ASTC_10x10_Format","SRGB8_ALPHA8_ASTC_12x10_Format","SRGB8_ALPHA8_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","EventDispatcher","type","listener","_listeners","undefined","listeners","indexOf","push","listenerArray","index","splice","event","target","array","slice","i","l","length","call","_lut","toString","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toUpperCase","clamp","value","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","MathUtils","Object","freeze","__proto__","Vector2","scalar","Error","constructor","v","w","addVectors","subVectors","multiplyScalar","e","elements","minVal","maxVal","divideScalar","round","sqrt","angle","atan2","distanceToSquared","dx","dy","normalize","alpha","v1","v2","offset","attribute","getX","getY","center","prototype","isVector2","Matrix3","arguments","error","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","me","xAxis","yAxis","zAxis","setFromMatrix3Column","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","d","f","g","h","t11","t12","t13","det","detInv","tmp","matrix4","setFromMatrix4","invert","transpose","r","tx","ty","sx","sy","rotation","cx","cy","theta","matrix","fromArray","isMatrix3","_canvas","ImageUtils","image","test","src","HTMLCanvasElement","canvas","document","createElementNS","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","defineProperty","name","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","setUvTransform","copy","source","meta","isRootObject","textures","output","metadata","generator","wrap","images","url","Array","isArray","isDataTexture","serializeImage","dispatchEvent","uv","applyMatrix3","isTexture","HTMLImageElement","ImageBitmap","getDataURL","data","Vector4","z","acos","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","isVector4","WebGLRenderTarget","options","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","dispose","clone","isWebGLRenderTarget","WebGLMultipleRenderTargets","count","il","isWebGLMultipleRenderTargets","WebGLMultisampleRenderTarget","samples","isWebGLMultisampleRenderTarget","Quaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","euler","update","isEuler","_order","c1","c3","s1","s3","axis","halfAngle","trace","vFrom","vTo","dot","Number","EPSILON","step","angleTo","slerp","conjugate","p","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","qa","callback","qm","slerpQuaternions","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","isQuaternion","Vector3","multiplyVectors","applyQuaternion","_quaternion$4","setFromEuler","setFromAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","camera","applyMatrix4","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","matrixWorld","crossVectors","ax","ay","az","bx","by","bz","denominator","lengthSq","planeNormal","_vector$c","projectOnVector","sub","normal","dz","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindricalCoords","setFromMatrixColumn","sz","isVector3","Box3","Infinity","minX","minY","minZ","maxX","maxY","maxZ","points","makeEmpty","expandByPoint","size","halfSize","_vector$b","add","object","expandByObject","box","isEmpty","point","vector","addScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","_box$3","union","children","sphere","clampPoint","plane","constant","triangle","getCenter","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","clampedPoint","getSize","_points","setFromPoints","equals","isBox3","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","distanceTo","radiusSum","intersectsSphere","distanceToPoint","deltaLengthSq","expandByScalar","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","directionDistance","distanceSqToPoint","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","tca","radius2","thc","t0","t1","distanceToPlane","distToPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectBox","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","cross","QdN","transformDirection","Matrix4","n14","n24","n34","n41","n42","n43","n44","scaleX","_v1$5","scaleY","scaleZ","af","bf","ce","cf","de","df","ac","ad","bc","bd","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","t14","scaleXSq","scaleYSq","scaleZSq","yx","zx","zy","position","scale","x2","y2","z2","wx","wy","wz","determinant","_m1$2","invSX","invSY","invSZ","setFromRotationMatrix","left","right","top","bottom","near","far","isMatrix4","_matrix$1","_quaternion$3","Euler","DefaultOrder","asin","makeRotationFromQuaternion","newOrder","setFromQuaternion","optionalResult","RotationOrders","Layers","mask","channel","layers","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","parent","DefaultUp","onRotationChange","onQuaternionChange","_onChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","userData","updateMatrix","premultiply","decompose","multiply","rotateOnAxis","distance","translateOnAxis","setFromMatrixPosition","isCamera","isLight","lookAt","extractRotation","isObject3D","remove","id","getObjectByProperty","child","traverse","traverseVisible","traverseAncestors","force","updateMatrixWorld","updateParents","updateChildren","geometries","materials","shapes","skeletons","JSON","stringify","toArray","isInstancedMesh","instanceMatrix","toJSON","instanceColor","serialize","library","element","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","parse","_vector1","_vector2$1","_normalMatrix","Plane","setFromNormalAndCoplanarPoint","inverseNormalLength","negate","line","delta","start","startSign","endSign","end","intersectsPlane","optionalNormalMatrix","getNormalMatrix","referencePoint","coplanarPoint","isPlane","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","i0","i1","i2","getNormal","setFromCoplanarPoints","getBarycoord","uv1","uv2","uv3","getUV","containsPoint","isFrontFacing","intersectsTriangle","d4","vc","addScaledVector","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","u","p3","materialId","Material","fog","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","alphaToCoverage","premultipliedAlpha","toneMapped","onBeforeCompile","newValue","flatShading","currentValue","isColor","isRoot","color","getHex","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","morphTargets","morphNormals","srcPlanes","dstPlanes","isMaterial","_colorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","_hslA","_hslB","hue2rgb","SRGBToLinear","LinearToSRGB","Color","setRGB","setHex","setStyle","hex","style","handleAlpha","string","parseFloat","exec","components","parseInt","setHSL","charAt","setColorName","toLowerCase","gammaFactor","safeInverse","copyGammaToLinear","copyLinearToGamma","copySRGBToLinear","copyLinearToSRGB","hue","saturation","lightness","getHSL","color1","color2","normalized","NAMES","MeshBasicMaterial","setValues","isMeshBasicMaterial","_vector$9","_vector2","BufferAttribute","itemSize","TypeError","usage","updateRange","index1","index2","colors","vectors","fromBufferAttribute","setXY","setXYZ","applyNormalMatrix","onUploadCallback","isBufferAttribute","Int8BufferAttribute","Int8Array","Uint8BufferAttribute","Uint8Array","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","Float32Array","Float64BufferAttribute","Float64Array","arrayMax","TYPED_ARRAYS","getTypedArray","buffer","_id","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","materialIndex","needsUpdate","tangent","computeBoundingSphere","makeRotationX","makeRotationY","makeRotationZ","makeTranslation","makeScale","translate","setAttribute","morphAttributesPosition","isGLBufferAttribute","setFromBufferAttribute","morphAttribute","isNaN","jl","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","positionAttribute","getAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","isBufferGeometry","attribute1","attributeArray1","attribute2","attributeArray2","attributeOffset","convertBufferAttribute","array2","geometry2","newAttribute","morphArray","addGroup","keys","hasMorphAttributes","attributeArray","setIndex","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","assign","ml","String","raycaster","intersects","intersectsBox","intersection","morphPosition","groupMaterial","checkBufferGeometryIntersection","faceIndex","face","isGeometry","checkIntersection","intersect","intersectTriangle","morphInfluences","influence","boneTransform","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","property","mergeUniforms","uniforms","merged","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","isShaderMaterial","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","focalLength","vExtentSlope","getFilmHeight","atan","fullWidth","fullHeight","enabled","offsetX","offsetY","skew","getFilmWidth","makePerspective","isPerspectiveCamera","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","render","CubeTexture","_needsFlipEnvMap","isCubeTexture","WebGLCubeRenderTarget","dummy","isInteger","shader","tEquirect","mesh","currentMinFilter","stencil","clear","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","get","isInterleavedBufferAttribute","deleteBuffer","delete","cached","elementSize","PlaneGeometry","width_half","height_half","segment_width","segment_height","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","ShaderChunk","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","background","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","transmissionSamplerSize","transmissionSamplerMap","WebGLBackground","cubemaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","isScene","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","deleteAttribute","onBeforeRender","copyPosition","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","getParameter","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","stride","vertexAttribIPointer","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","reset","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","useCache","materialProperties","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","fromEquirectangularTexture","addEventListener","onTextureDispose","removeEventListener","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","workInfluences","objectInfluences","influences","sort","MAX_SAFE_INTEGER","morphInfluencesSum","hasAttribute","morphBaseInfluence","getUniforms","setValue","WebGLObjects","updateMap","buffergeometry","hasEventListener","onInstancedMeshDispose","instancedMesh","DataTexture2DArray","wrapR","isDataTexture2DArray","DataTexture3D","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","copyArray","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","safeSetTexture2D","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT6Array","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","updateCache","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","addLineNumbers","split","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","trim","getShaderSource","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","WebGLProgram","cacheKey","gammaFactorDefine","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getMaxBones","bones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","getParameters","shadows","environment","isMeshStandardMaterial","isFogExp2","directional","spot","rectArea","hemi","shadowMap","customProgramCacheKey","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","pop","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","transmissive","defaultProgram","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","finish","WebGLRenderLists","lists","renderCallDepth","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","identity","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","vsm_frag","vsm_vert","WebGLShadowMap","_renderer","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","_maxTextureSize","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","mapPass","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","renderObject","VSMPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","getDistanceMaterialVariant","getDepthMaterial","result","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","intersectsObject","k","kl","depthMaterial","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","enable","DEPTH_TEST","disable","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","enabledCapabilities","xrFramebuffer","currentBoundFramebuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindXRFramebuffer","framebuffer","bindFramebuffer","FRAMEBUFFER","DRAW_FRAMEBUFFER","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texImage3D","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","_videoTextures","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","textureProperties","__maxMipLevel","log2","getInternalFormat","internalFormatName","glFormat","glType","RED","R32F","R16F","R8","RGB","RGB32F","RGB16F","RGB8","RGBA32F","RGBA16F","RGBA8","filterFallback","LINEAR","deallocateTexture","isVideoTexture","onRenderTargetDispose","deallocateRenderTarget","__webglInit","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","TEXTURE_2D_ARRAY","TEXTURE_3D","setTextureCube","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","NONE","convert","glInternalFormat","mipmap","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressedTexture","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isMultipleRenderTargets","isRenderTarget3D","createFramebuffer","COLOR_ATTACHMENT0","glTextureType","isTexture3D","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","warnedTexture2D","warnedTextureCube","WebGLUtils","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","RED_INTEGER","RG","RG_INTEGER","RGB_INTEGER","RGBA_INTEGER","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","cameras","isArrayCamera","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","joints","inputState","pinching","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","getPose","targetRaySpace","transform","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","WebXRManager","framebufferScaleFactor","referenceSpaceType","pose","controllers","inputSourcesMap","Map","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","onSessionEvent","onSessionEnd","forEach","disconnect","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","onInputSourcesChange","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","baseLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","inputSources","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","translateX","translateZ","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","getCamera","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","WebGLMaterials","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","uvScaleMap","uv2ScaleMap","createCanvasElement","display","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_currentDrawBuffers","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","rangeMin","rangeMax","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","setSize","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","renderObjectImmediate","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","DYNAMIC_DRAW","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","material2","getProgram","window","setFromProjectionMatrix","projectObject","opaqueObjects","transmissiveObjects","transparentObjects","renderObjects","renderTransmissiveObjects","onAfterRender","isLOD","intersectsSprite","isImmediateRenderObject","camera2","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","onBuild","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isOrthographicCamera","boneTexture","computeBoneTexture","boneTextureSize","markUniformsLightsNeedsUpdate","framebufferBound","drawBuffersWEBGL","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","texSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","FogExp2","Fog","Scene","InterleavedBuffer","arrayBuffers","_uuid","ib","setUsage","isInterleavedBuffer","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","float32Array","setFromMatrixScale","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","levels","addLevel","getObjectForDistance","raycast","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","bindMatrixInverse","calculateInverses","skinWeight","manhattanLength","setXYZW","skinIndex","weight","getComponent","boneIndex","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","json","boneInverse","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","raycastTimes","instanceId","getMatrixAt","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","lineDistances","params","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","distanceSqToSegment","_start","_end","LineSegments","LineLoop","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","closestPointToPoint","distanceToRay","VideoTexture","video","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","isCanvasTexture","DepthTexture","CircleGeometry","segments","thetaStart","thetaLength","vertex","segment","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","computeVertexNormals","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","getIndex","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","prev","invSize","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","hole","findHoleBridge","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","px","py","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","sum","ShapeUtils","contour","pts","holes","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","extrudeByPath","splineTube","binormal","position2","getSpacedPoints","computeFrenetFrames","shapePoints","extractPoints","reverse","isClockWise","hl","ahole","triangulateShape","concat","scalePt2","pt","vec","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","binormals","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","LatheGeometry","phiStart","phiLength","inverseSegments","base","n1","OctahedronGeometry","ParametricGeometry","func","slices","stacks","EPS","pu","pv","sliceCount","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TextGeometry","text","font","isFont","generateShapes","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","closed","frames","P","generateBufferData","generateSegment","generateIndices","getPointAt","WireframeGeometry","edge","edges","o","ol","edge1","edge2","Geometries","BoxBufferGeometry","CircleBufferGeometry","ConeBufferGeometry","CylinderBufferGeometry","DodecahedronBufferGeometry","ExtrudeBufferGeometry","IcosahedronBufferGeometry","LatheBufferGeometry","OctahedronBufferGeometry","ParametricBufferGeometry","PlaneBufferGeometry","PolyhedronBufferGeometry","RingBufferGeometry","ShapeBufferGeometry","SphereBufferGeometry","TetrahedronBufferGeometry","TextBufferGeometry","TorusBufferGeometry","TorusKnotBufferGeometry","TubeBufferGeometry","RawShaderMaterial","STANDARD","PHYSICAL","ior","TOON","MATCAP","Materials","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","getSettings_","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","factoryMethod","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","getInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","slerpFlat","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","validate","optimize","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","morphTargetSequence","noLoop","numMorphTargets","objectOrClipArray","clipArray","animationToMorphTargets","pattern","morphTarget","parts","animationMorphTargets","clips","CreateFromMorphTargetSequence","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","Promise","resolve","reject","load","loading","FileLoader","setTimeout","dataUriRegex","dataUriRegexResult","request","mimeType","isBase64","decodeURIComponent","atob","response","responseType","charCodeAt","Blob","parser","DOMParser","parseFromString","XMLHttpRequest","open","callbacks","overrideMimeType","header","setRequestHeader","send","AnimationLoader","setPath","setWithCredentials","CompressedTextureLoader","setResponseType","loaded","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","onImageError","substr","CubeTextureLoader","urls","setCrossOrigin","DataTextureLoader","texData","TextureLoader","isJPEG","search","Curve","arcLengthDivisions","optionalTarget","getUtoTmapping","getPoint","divisions","lengths","getLengths","cacheArcLengths","current","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","t2","pt1","pt2","getTangent","mat","getTangentAt","MAX_VALUE","tz","makeRotationAxis","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","twoPi","deltaAngle","samePoints","isEllipseCurve","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","pz","CatmullRomCurve3","curveType","intPoint","isCatmullRomCurve3","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","startPoint","endPoint","getLength","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","getPoints","fromJSON","Path","currentPoint","moveTo","lineTo","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","npts","absarc","absellipse","firstPoint","lastPoint","Shape","holesPts","getPointsHoles","Light","HemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","PointLight","OrthographicCamera","scaleW","scaleH","makeOrthographic","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","coeff","shBasis","isSphericalHarmonics3","LightProbe","MaterialLoader","getTexture","shading","LoaderUtils","TextDecoder","decode","fromCharCode","escape","lastIndexOf","InstancedBufferGeometry","InstancedBufferAttribute","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","arrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","extractUrlBase","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","geometryShapes","bufferGeometryLoader","details","setTextures","loadImage","deserializeImage","currentUrl","deserializedImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","objectAnimations","bind","setResourcePath","ImageBitmapLoader","createImageBitmap","fetch","fetchOptions","credentials","headers","then","res","blob","colorSpaceConversion","imageBitmap","catch","isImageBitmapLoader","ShapePath","subPaths","currentPath","quadraticCurveTo","bezierCurveTo","splineThru","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","Font","paths","createPaths","toShapes","chars","line_height","yMax","yMin","underlineThickness","char","ret","createPath","glyph","glyphs","familyName","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","action","ha","FontLoader","substring","AudioContext","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","sky","ground","isHemisphereLightProbe","AmbientLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setPosition","setOrientation","Audio","getInput","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","audioNode","mediaElement","createMediaElementSource","mediaStream","createMediaStreamSource","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","getOutput","getFilters","setFilters","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","refDistance","rolloffFactor","distanceModel","maxDistance","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getByteFrequencyData","getFrequencyData","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accuIndex","currentWeight","mix","weightAdditive","originalValueOffset","getValue","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","resolvedProperty","propertyIndex","targetObject","dest","targetArray","sourceArray","objectName","_getValue_unavailable","_setValue_unavailable","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","matches","results","lastDot","getBoneByName","searchNodeSubtree","childNode","subTreeNode","_getValue_direct","_getValue_array","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","indicesByUUID","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","lastObject","indicesByPath","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","_isActiveAction","_scheduleFading","fadeOutAction","warp","fadeOut","fadeIn","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","fadeInAction","crossFadeFrom","weightInterpolant","_takeBackControlInterpolant","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","_root","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","accumulateAdditive","accumulate","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","create","clipUuid","actionsForClip","_actionsByClip","_bindAction","knownActions","_addInactiveAction","_lendBinding","saveOriginalState","_lendAction","restoreOriginalState","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","optionalRoot","clipObject","findByName","existingAction","newAction","nActions","_update","timeInSeconds","actionsToRemove","_removeInactiveAction","Uniform","InstancedInterleavedBuffer","GLBufferAttribute","Raycaster","coords","unproject","intersectObject","ascSort","Spherical","other","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","clampToLine","startEnd2","startEnd_startP","closestPointToPointParameter","ImmediateRenderObject","_vector$3","SpotLightHelper","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","rotateY","GridHelper","PolarGridHelper","radials","circles","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","_box","BoxHelper","setFromObject","Box3Helper","PlaneHelper","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setLength","AxesHelper","_floatView","_int32View","DataUtils","val","LOD_MIN","LOD_MAX","SIZE_MAX","EXTRA_LOD_SIGMA","TOTAL_LODS","ENCODINGS","backgroundMaterial","backgroundBox","_flatCamera","_createPlanes","_lodPlanes","_sizeLods","_sigmas","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","convertLinearToRGBE","maxComponent","fExp","PMREMGenerator","_pingPongRenderTarget","_blurMaterial","_getBlurShader","_equirectShader","_cubemapShader","_compileMaterial","sigma","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","equirectangular","_fromTexture","_getCubemapShader","_getEquirectShader","outputTarget","_setViewport","_textureToCubeUV","_isLDR","_createRenderTarget","tmpMesh","cubeCamera","upSign","forwardSign","originalAutoClear","useSolidColor","convertSRGBToLinear","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","outputSize","lod","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","latitudinal","dTheta","mipInt","inputEncoding","_getCommonVertexShader","_getEncodings","LineStrip","LinePieces","NoColors","FaceColors","VertexColors","MeshFaceMaterial","MultiMaterial","isMultiMaterial","PointCloud","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","construct","fromPoints","AxisHelper","BoundingBoxHelper","EdgesHelper","setColors","WireframeHelper","Handlers","XHRLoader","BinaryTextureLoader","empty","isIntersectionBox","isIntersectionSphere","setFromMatrix","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","getInverse","extractPosition","getPosition","setRotationFromQuaternion","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateX","rotateZ","rotateByAxis","makeFrustum","isIntersectionLine","intersectsLine","isIntersectionPlane","getArea","barycoordFromPoint","midpoint","getMidpoint","prototypenormal","getPlane","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","manhattanDistanceTo","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","getChildByName","getObjectByName","renderDepth","getWorldRotation","applyMatrix","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","setFocalLength","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","clearGroups","computeOffsets","removeAttribute","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","initMaterial","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","renderReverseSided","renderSingleSided","WebGLRenderTargetCube","audioLoader","setBuffer","getData","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","CanvasRenderer","JSONLoader","SceneUtils","createMultiMaterialObject","detach","attach","LensFlare","revision","__THREE__","bundleURL","getBundleURLCached","getBundleURL","stack","getBaseURL","bundle","require","updateLink","link","newLink","cloneNode","onload","href","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","OVERLAY_ID","OldModule","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","overlay","createErrorOverlay","body","appendChild","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","some"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["/**\r\n * @license\r\n * Copyright 2010-2021 Three.js Authors\r\n * SPDX-License-Identifier: MIT\r\n */\r\n(function (global, factory) {\r\n  typeof exports === 'object' && typeof module !== 'undefined'\r\n    ? factory(exports)\r\n    : typeof define === 'function' && define.amd\r\n    ? define(['exports'], factory)\r\n    : ((global = typeof globalThis !== 'undefined' ? globalThis : global || self),\r\n      factory((global.THREE = {})));\r\n})(this, function (exports) {\r\n  'use strict';\r\n\r\n  const REVISION = '129';\r\n  const MOUSE = {\r\n    LEFT: 0,\r\n    MIDDLE: 1,\r\n    RIGHT: 2,\r\n    ROTATE: 0,\r\n    DOLLY: 1,\r\n    PAN: 2,\r\n  };\r\n  const TOUCH = {\r\n    ROTATE: 0,\r\n    PAN: 1,\r\n    DOLLY_PAN: 2,\r\n    DOLLY_ROTATE: 3,\r\n  };\r\n  const CullFaceNone = 0;\r\n  const CullFaceBack = 1;\r\n  const CullFaceFront = 2;\r\n  const CullFaceFrontBack = 3;\r\n  const BasicShadowMap = 0;\r\n  const PCFShadowMap = 1;\r\n  const PCFSoftShadowMap = 2;\r\n  const VSMShadowMap = 3;\r\n  const FrontSide = 0;\r\n  const BackSide = 1;\r\n  const DoubleSide = 2;\r\n  const FlatShading = 1;\r\n  const SmoothShading = 2;\r\n  const NoBlending = 0;\r\n  const NormalBlending = 1;\r\n  const AdditiveBlending = 2;\r\n  const SubtractiveBlending = 3;\r\n  const MultiplyBlending = 4;\r\n  const CustomBlending = 5;\r\n  const AddEquation = 100;\r\n  const SubtractEquation = 101;\r\n  const ReverseSubtractEquation = 102;\r\n  const MinEquation = 103;\r\n  const MaxEquation = 104;\r\n  const ZeroFactor = 200;\r\n  const OneFactor = 201;\r\n  const SrcColorFactor = 202;\r\n  const OneMinusSrcColorFactor = 203;\r\n  const SrcAlphaFactor = 204;\r\n  const OneMinusSrcAlphaFactor = 205;\r\n  const DstAlphaFactor = 206;\r\n  const OneMinusDstAlphaFactor = 207;\r\n  const DstColorFactor = 208;\r\n  const OneMinusDstColorFactor = 209;\r\n  const SrcAlphaSaturateFactor = 210;\r\n  const NeverDepth = 0;\r\n  const AlwaysDepth = 1;\r\n  const LessDepth = 2;\r\n  const LessEqualDepth = 3;\r\n  const EqualDepth = 4;\r\n  const GreaterEqualDepth = 5;\r\n  const GreaterDepth = 6;\r\n  const NotEqualDepth = 7;\r\n  const MultiplyOperation = 0;\r\n  const MixOperation = 1;\r\n  const AddOperation = 2;\r\n  const NoToneMapping = 0;\r\n  const LinearToneMapping = 1;\r\n  const ReinhardToneMapping = 2;\r\n  const CineonToneMapping = 3;\r\n  const ACESFilmicToneMapping = 4;\r\n  const CustomToneMapping = 5;\r\n  const UVMapping = 300;\r\n  const CubeReflectionMapping = 301;\r\n  const CubeRefractionMapping = 302;\r\n  const EquirectangularReflectionMapping = 303;\r\n  const EquirectangularRefractionMapping = 304;\r\n  const CubeUVReflectionMapping = 306;\r\n  const CubeUVRefractionMapping = 307;\r\n  const RepeatWrapping = 1000;\r\n  const ClampToEdgeWrapping = 1001;\r\n  const MirroredRepeatWrapping = 1002;\r\n  const NearestFilter = 1003;\r\n  const NearestMipmapNearestFilter = 1004;\r\n  const NearestMipMapNearestFilter = 1004;\r\n  const NearestMipmapLinearFilter = 1005;\r\n  const NearestMipMapLinearFilter = 1005;\r\n  const LinearFilter = 1006;\r\n  const LinearMipmapNearestFilter = 1007;\r\n  const LinearMipMapNearestFilter = 1007;\r\n  const LinearMipmapLinearFilter = 1008;\r\n  const LinearMipMapLinearFilter = 1008;\r\n  const UnsignedByteType = 1009;\r\n  const ByteType = 1010;\r\n  const ShortType = 1011;\r\n  const UnsignedShortType = 1012;\r\n  const IntType = 1013;\r\n  const UnsignedIntType = 1014;\r\n  const FloatType = 1015;\r\n  const HalfFloatType = 1016;\r\n  const UnsignedShort4444Type = 1017;\r\n  const UnsignedShort5551Type = 1018;\r\n  const UnsignedShort565Type = 1019;\r\n  const UnsignedInt248Type = 1020;\r\n  const AlphaFormat = 1021;\r\n  const RGBFormat = 1022;\r\n  const RGBAFormat = 1023;\r\n  const LuminanceFormat = 1024;\r\n  const LuminanceAlphaFormat = 1025;\r\n  const RGBEFormat = RGBAFormat;\r\n  const DepthFormat = 1026;\r\n  const DepthStencilFormat = 1027;\r\n  const RedFormat = 1028;\r\n  const RedIntegerFormat = 1029;\r\n  const RGFormat = 1030;\r\n  const RGIntegerFormat = 1031;\r\n  const RGBIntegerFormat = 1032;\r\n  const RGBAIntegerFormat = 1033;\r\n  const RGB_S3TC_DXT1_Format = 33776;\r\n  const RGBA_S3TC_DXT1_Format = 33777;\r\n  const RGBA_S3TC_DXT3_Format = 33778;\r\n  const RGBA_S3TC_DXT5_Format = 33779;\r\n  const RGB_PVRTC_4BPPV1_Format = 35840;\r\n  const RGB_PVRTC_2BPPV1_Format = 35841;\r\n  const RGBA_PVRTC_4BPPV1_Format = 35842;\r\n  const RGBA_PVRTC_2BPPV1_Format = 35843;\r\n  const RGB_ETC1_Format = 36196;\r\n  const RGB_ETC2_Format = 37492;\r\n  const RGBA_ETC2_EAC_Format = 37496;\r\n  const RGBA_ASTC_4x4_Format = 37808;\r\n  const RGBA_ASTC_5x4_Format = 37809;\r\n  const RGBA_ASTC_5x5_Format = 37810;\r\n  const RGBA_ASTC_6x5_Format = 37811;\r\n  const RGBA_ASTC_6x6_Format = 37812;\r\n  const RGBA_ASTC_8x5_Format = 37813;\r\n  const RGBA_ASTC_8x6_Format = 37814;\r\n  const RGBA_ASTC_8x8_Format = 37815;\r\n  const RGBA_ASTC_10x5_Format = 37816;\r\n  const RGBA_ASTC_10x6_Format = 37817;\r\n  const RGBA_ASTC_10x8_Format = 37818;\r\n  const RGBA_ASTC_10x10_Format = 37819;\r\n  const RGBA_ASTC_12x10_Format = 37820;\r\n  const RGBA_ASTC_12x12_Format = 37821;\r\n  const RGBA_BPTC_Format = 36492;\r\n  const SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\r\n  const SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\r\n  const SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\r\n  const SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\r\n  const SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\r\n  const SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\r\n  const SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\r\n  const SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\r\n  const SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\r\n  const SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\r\n  const SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\r\n  const SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\r\n  const SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\r\n  const SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\r\n  const LoopOnce = 2200;\r\n  const LoopRepeat = 2201;\r\n  const LoopPingPong = 2202;\r\n  const InterpolateDiscrete = 2300;\r\n  const InterpolateLinear = 2301;\r\n  const InterpolateSmooth = 2302;\r\n  const ZeroCurvatureEnding = 2400;\r\n  const ZeroSlopeEnding = 2401;\r\n  const WrapAroundEnding = 2402;\r\n  const NormalAnimationBlendMode = 2500;\r\n  const AdditiveAnimationBlendMode = 2501;\r\n  const TrianglesDrawMode = 0;\r\n  const TriangleStripDrawMode = 1;\r\n  const TriangleFanDrawMode = 2;\r\n  const LinearEncoding = 3000;\r\n  const sRGBEncoding = 3001;\r\n  const GammaEncoding = 3007;\r\n  const RGBEEncoding = 3002;\r\n  const LogLuvEncoding = 3003;\r\n  const RGBM7Encoding = 3004;\r\n  const RGBM16Encoding = 3005;\r\n  const RGBDEncoding = 3006;\r\n  const BasicDepthPacking = 3200;\r\n  const RGBADepthPacking = 3201;\r\n  const TangentSpaceNormalMap = 0;\r\n  const ObjectSpaceNormalMap = 1;\r\n  const ZeroStencilOp = 0;\r\n  const KeepStencilOp = 7680;\r\n  const ReplaceStencilOp = 7681;\r\n  const IncrementStencilOp = 7682;\r\n  const DecrementStencilOp = 7683;\r\n  const IncrementWrapStencilOp = 34055;\r\n  const DecrementWrapStencilOp = 34056;\r\n  const InvertStencilOp = 5386;\r\n  const NeverStencilFunc = 512;\r\n  const LessStencilFunc = 513;\r\n  const EqualStencilFunc = 514;\r\n  const LessEqualStencilFunc = 515;\r\n  const GreaterStencilFunc = 516;\r\n  const NotEqualStencilFunc = 517;\r\n  const GreaterEqualStencilFunc = 518;\r\n  const AlwaysStencilFunc = 519;\r\n  const StaticDrawUsage = 35044;\r\n  const DynamicDrawUsage = 35048;\r\n  const StreamDrawUsage = 35040;\r\n  const StaticReadUsage = 35045;\r\n  const DynamicReadUsage = 35049;\r\n  const StreamReadUsage = 35041;\r\n  const StaticCopyUsage = 35046;\r\n  const DynamicCopyUsage = 35050;\r\n  const StreamCopyUsage = 35042;\r\n  const GLSL1 = '100';\r\n  const GLSL3 = '300 es';\r\n\r\n  /**\r\n   * https://github.com/mrdoob/eventdispatcher.js/\r\n   */\r\n  class EventDispatcher {\r\n    addEventListener(type, listener) {\r\n      if (this._listeners === undefined) this._listeners = {};\r\n      const listeners = this._listeners;\r\n\r\n      if (listeners[type] === undefined) {\r\n        listeners[type] = [];\r\n      }\r\n\r\n      if (listeners[type].indexOf(listener) === -1) {\r\n        listeners[type].push(listener);\r\n      }\r\n    }\r\n\r\n    hasEventListener(type, listener) {\r\n      if (this._listeners === undefined) return false;\r\n      const listeners = this._listeners;\r\n      return listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n      if (this._listeners === undefined) return;\r\n      const listeners = this._listeners;\r\n      const listenerArray = listeners[type];\r\n\r\n      if (listenerArray !== undefined) {\r\n        const index = listenerArray.indexOf(listener);\r\n\r\n        if (index !== -1) {\r\n          listenerArray.splice(index, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    dispatchEvent(event) {\r\n      if (this._listeners === undefined) return;\r\n      const listeners = this._listeners;\r\n      const listenerArray = listeners[event.type];\r\n\r\n      if (listenerArray !== undefined) {\r\n        event.target = this; // Make a copy, in case listeners are removed while iterating.\r\n\r\n        const array = listenerArray.slice(0);\r\n\r\n        for (let i = 0, l = array.length; i < l; i++) {\r\n          array[i].call(this, event);\r\n        }\r\n\r\n        event.target = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  const _lut = [];\r\n\r\n  for (let i = 0; i < 256; i++) {\r\n    _lut[i] = (i < 16 ? '0' : '') + i.toString(16);\r\n  }\r\n\r\n  let _seed = 1234567;\r\n  const DEG2RAD = Math.PI / 180;\r\n  const RAD2DEG = 180 / Math.PI; // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n\r\n  function generateUUID() {\r\n    const d0 = (Math.random() * 0xffffffff) | 0;\r\n    const d1 = (Math.random() * 0xffffffff) | 0;\r\n    const d2 = (Math.random() * 0xffffffff) | 0;\r\n    const d3 = (Math.random() * 0xffffffff) | 0;\r\n    const uuid =\r\n      _lut[d0 & 0xff] +\r\n      _lut[(d0 >> 8) & 0xff] +\r\n      _lut[(d0 >> 16) & 0xff] +\r\n      _lut[(d0 >> 24) & 0xff] +\r\n      '-' +\r\n      _lut[d1 & 0xff] +\r\n      _lut[(d1 >> 8) & 0xff] +\r\n      '-' +\r\n      _lut[((d1 >> 16) & 0x0f) | 0x40] +\r\n      _lut[(d1 >> 24) & 0xff] +\r\n      '-' +\r\n      _lut[(d2 & 0x3f) | 0x80] +\r\n      _lut[(d2 >> 8) & 0xff] +\r\n      '-' +\r\n      _lut[(d2 >> 16) & 0xff] +\r\n      _lut[(d2 >> 24) & 0xff] +\r\n      _lut[d3 & 0xff] +\r\n      _lut[(d3 >> 8) & 0xff] +\r\n      _lut[(d3 >> 16) & 0xff] +\r\n      _lut[(d3 >> 24) & 0xff]; // .toUpperCase() here flattens concatenated strings to save heap memory space.\r\n\r\n    return uuid.toUpperCase();\r\n  }\r\n\r\n  function clamp(value, min, max) {\r\n    return Math.max(min, Math.min(max, value));\r\n  } // compute euclidian modulo of m % n\r\n  // https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n  function euclideanModulo(n, m) {\r\n    return ((n % m) + m) % m;\r\n  } // Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n  function mapLinear(x, a1, a2, b1, b2) {\r\n    return b1 + ((x - a1) * (b2 - b1)) / (a2 - a1);\r\n  } // https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\r\n\r\n  function inverseLerp(x, y, value) {\r\n    if (x !== y) {\r\n      return (value - x) / (y - x);\r\n    } else {\r\n      return 0;\r\n    }\r\n  } // https://en.wikipedia.org/wiki/Linear_interpolation\r\n\r\n  function lerp(x, y, t) {\r\n    return (1 - t) * x + t * y;\r\n  } // http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\n\r\n  function damp(x, y, lambda, dt) {\r\n    return lerp(x, y, 1 - Math.exp(-lambda * dt));\r\n  } // https://www.desmos.com/calculator/vcsjnyz7x4\r\n\r\n  function pingpong(x, length = 1) {\r\n    return length - Math.abs(euclideanModulo(x, length * 2) - length);\r\n  } // http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n  function smoothstep(x, min, max) {\r\n    if (x <= min) return 0;\r\n    if (x >= max) return 1;\r\n    x = (x - min) / (max - min);\r\n    return x * x * (3 - 2 * x);\r\n  }\r\n\r\n  function smootherstep(x, min, max) {\r\n    if (x <= min) return 0;\r\n    if (x >= max) return 1;\r\n    x = (x - min) / (max - min);\r\n    return x * x * x * (x * (x * 6 - 15) + 10);\r\n  } // Random integer from <low, high> interval\r\n\r\n  function randInt(low, high) {\r\n    return low + Math.floor(Math.random() * (high - low + 1));\r\n  } // Random float from <low, high> interval\r\n\r\n  function randFloat(low, high) {\r\n    return low + Math.random() * (high - low);\r\n  } // Random float from <-range/2, range/2> interval\r\n\r\n  function randFloatSpread(range) {\r\n    return range * (0.5 - Math.random());\r\n  } // Deterministic pseudo-random float in the interval [ 0, 1 ]\r\n\r\n  function seededRandom(s) {\r\n    if (s !== undefined) _seed = s % 2147483647; // Park-Miller algorithm\r\n\r\n    _seed = (_seed * 16807) % 2147483647;\r\n    return (_seed - 1) / 2147483646;\r\n  }\r\n\r\n  function degToRad(degrees) {\r\n    return degrees * DEG2RAD;\r\n  }\r\n\r\n  function radToDeg(radians) {\r\n    return radians * RAD2DEG;\r\n  }\r\n\r\n  function isPowerOfTwo(value) {\r\n    return (value & (value - 1)) === 0 && value !== 0;\r\n  }\r\n\r\n  function ceilPowerOfTwo(value) {\r\n    return Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\r\n  }\r\n\r\n  function floorPowerOfTwo(value) {\r\n    return Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\r\n  }\r\n\r\n  function setQuaternionFromProperEuler(q, a, b, c, order) {\r\n    // Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\r\n    // rotations are applied to the axes in the order specified by 'order'\r\n    // rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\r\n    // angles are in radians\r\n    const cos = Math.cos;\r\n    const sin = Math.sin;\r\n    const c2 = cos(b / 2);\r\n    const s2 = sin(b / 2);\r\n    const c13 = cos((a + c) / 2);\r\n    const s13 = sin((a + c) / 2);\r\n    const c1_3 = cos((a - c) / 2);\r\n    const s1_3 = sin((a - c) / 2);\r\n    const c3_1 = cos((c - a) / 2);\r\n    const s3_1 = sin((c - a) / 2);\r\n\r\n    switch (order) {\r\n      case 'XYX':\r\n        q.set(c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13);\r\n        break;\r\n\r\n      case 'YZY':\r\n        q.set(s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13);\r\n        break;\r\n\r\n      case 'ZXZ':\r\n        q.set(s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13);\r\n        break;\r\n\r\n      case 'XZX':\r\n        q.set(c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13);\r\n        break;\r\n\r\n      case 'YXY':\r\n        q.set(s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13);\r\n        break;\r\n\r\n      case 'ZYZ':\r\n        q.set(s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13);\r\n        break;\r\n\r\n      default:\r\n        console.warn(\r\n          'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order,\r\n        );\r\n    }\r\n  }\r\n\r\n  var MathUtils = /*#__PURE__*/ Object.freeze({\r\n    __proto__: null,\r\n    DEG2RAD: DEG2RAD,\r\n    RAD2DEG: RAD2DEG,\r\n    generateUUID: generateUUID,\r\n    clamp: clamp,\r\n    euclideanModulo: euclideanModulo,\r\n    mapLinear: mapLinear,\r\n    inverseLerp: inverseLerp,\r\n    lerp: lerp,\r\n    damp: damp,\r\n    pingpong: pingpong,\r\n    smoothstep: smoothstep,\r\n    smootherstep: smootherstep,\r\n    randInt: randInt,\r\n    randFloat: randFloat,\r\n    randFloatSpread: randFloatSpread,\r\n    seededRandom: seededRandom,\r\n    degToRad: degToRad,\r\n    radToDeg: radToDeg,\r\n    isPowerOfTwo: isPowerOfTwo,\r\n    ceilPowerOfTwo: ceilPowerOfTwo,\r\n    floorPowerOfTwo: floorPowerOfTwo,\r\n    setQuaternionFromProperEuler: setQuaternionFromProperEuler,\r\n  });\r\n\r\n  class Vector2 {\r\n    constructor(x = 0, y = 0) {\r\n      this.x = x;\r\n      this.y = y;\r\n    }\r\n\r\n    get width() {\r\n      return this.x;\r\n    }\r\n\r\n    set width(value) {\r\n      this.x = value;\r\n    }\r\n\r\n    get height() {\r\n      return this.y;\r\n    }\r\n\r\n    set height(value) {\r\n      this.y = value;\r\n    }\r\n\r\n    set(x, y) {\r\n      this.x = x;\r\n      this.y = y;\r\n      return this;\r\n    }\r\n\r\n    setScalar(scalar) {\r\n      this.x = scalar;\r\n      this.y = scalar;\r\n      return this;\r\n    }\r\n\r\n    setX(x) {\r\n      this.x = x;\r\n      return this;\r\n    }\r\n\r\n    setY(y) {\r\n      this.y = y;\r\n      return this;\r\n    }\r\n\r\n    setComponent(index, value) {\r\n      switch (index) {\r\n        case 0:\r\n          this.x = value;\r\n          break;\r\n\r\n        case 1:\r\n          this.y = value;\r\n          break;\r\n\r\n        default:\r\n          throw new Error('index is out of range: ' + index);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    getComponent(index) {\r\n      switch (index) {\r\n        case 0:\r\n          return this.x;\r\n\r\n        case 1:\r\n          return this.y;\r\n\r\n        default:\r\n          throw new Error('index is out of range: ' + index);\r\n      }\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor(this.x, this.y);\r\n    }\r\n\r\n    copy(v) {\r\n      this.x = v.x;\r\n      this.y = v.y;\r\n      return this;\r\n    }\r\n\r\n    add(v, w) {\r\n      if (w !== undefined) {\r\n        console.warn(\r\n          'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.',\r\n        );\r\n        return this.addVectors(v, w);\r\n      }\r\n\r\n      this.x += v.x;\r\n      this.y += v.y;\r\n      return this;\r\n    }\r\n\r\n    addScalar(s) {\r\n      this.x += s;\r\n      this.y += s;\r\n      return this;\r\n    }\r\n\r\n    addVectors(a, b) {\r\n      this.x = a.x + b.x;\r\n      this.y = a.y + b.y;\r\n      return this;\r\n    }\r\n\r\n    addScaledVector(v, s) {\r\n      this.x += v.x * s;\r\n      this.y += v.y * s;\r\n      return this;\r\n    }\r\n\r\n    sub(v, w) {\r\n      if (w !== undefined) {\r\n        console.warn(\r\n          'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.',\r\n        );\r\n        return this.subVectors(v, w);\r\n      }\r\n\r\n      this.x -= v.x;\r\n      this.y -= v.y;\r\n      return this;\r\n    }\r\n\r\n    subScalar(s) {\r\n      this.x -= s;\r\n      this.y -= s;\r\n      return this;\r\n    }\r\n\r\n    subVectors(a, b) {\r\n      this.x = a.x - b.x;\r\n      this.y = a.y - b.y;\r\n      return this;\r\n    }\r\n\r\n    multiply(v) {\r\n      this.x *= v.x;\r\n      this.y *= v.y;\r\n      return this;\r\n    }\r\n\r\n    multiplyScalar(scalar) {\r\n      this.x *= scalar;\r\n      this.y *= scalar;\r\n      return this;\r\n    }\r\n\r\n    divide(v) {\r\n      this.x /= v.x;\r\n      this.y /= v.y;\r\n      return this;\r\n    }\r\n\r\n    divideScalar(scalar) {\r\n      return this.multiplyScalar(1 / scalar);\r\n    }\r\n\r\n    applyMatrix3(m) {\r\n      const x = this.x,\r\n        y = this.y;\r\n      const e = m.elements;\r\n      this.x = e[0] * x + e[3] * y + e[6];\r\n      this.y = e[1] * x + e[4] * y + e[7];\r\n      return this;\r\n    }\r\n\r\n    min(v) {\r\n      this.x = Math.min(this.x, v.x);\r\n      this.y = Math.min(this.y, v.y);\r\n      return this;\r\n    }\r\n\r\n    max(v) {\r\n      this.x = Math.max(this.x, v.x);\r\n      this.y = Math.max(this.y, v.y);\r\n      return this;\r\n    }\r\n\r\n    clamp(min, max) {\r\n      // assumes min < max, componentwise\r\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\r\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\r\n      return this;\r\n    }\r\n\r\n    clampScalar(minVal, maxVal) {\r\n      this.x = Math.max(minVal, Math.min(maxVal, this.x));\r\n      this.y = Math.max(minVal, Math.min(maxVal, this.y));\r\n      return this;\r\n    }\r\n\r\n    clampLength(min, max) {\r\n      const length = this.length();\r\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\r\n    }\r\n\r\n    floor() {\r\n      this.x = Math.floor(this.x);\r\n      this.y = Math.floor(this.y);\r\n      return this;\r\n    }\r\n\r\n    ceil() {\r\n      this.x = Math.ceil(this.x);\r\n      this.y = Math.ceil(this.y);\r\n      return this;\r\n    }\r\n\r\n    round() {\r\n      this.x = Math.round(this.x);\r\n      this.y = Math.round(this.y);\r\n      return this;\r\n    }\r\n\r\n    roundToZero() {\r\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\r\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\r\n      return this;\r\n    }\r\n\r\n    negate() {\r\n      this.x = -this.x;\r\n      this.y = -this.y;\r\n      return this;\r\n    }\r\n\r\n    dot(v) {\r\n      return this.x * v.x + this.y * v.y;\r\n    }\r\n\r\n    cross(v) {\r\n      return this.x * v.y - this.y * v.x;\r\n    }\r\n\r\n    lengthSq() {\r\n      return this.x * this.x + this.y * this.y;\r\n    }\r\n\r\n    length() {\r\n      return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    }\r\n\r\n    manhattanLength() {\r\n      return Math.abs(this.x) + Math.abs(this.y);\r\n    }\r\n\r\n    normalize() {\r\n      return this.divideScalar(this.length() || 1);\r\n    }\r\n\r\n    angle() {\r\n      // computes the angle in radians with respect to the positive x-axis\r\n      const angle = Math.atan2(-this.y, -this.x) + Math.PI;\r\n      return angle;\r\n    }\r\n\r\n    distanceTo(v) {\r\n      return Math.sqrt(this.distanceToSquared(v));\r\n    }\r\n\r\n    distanceToSquared(v) {\r\n      const dx = this.x - v.x,\r\n        dy = this.y - v.y;\r\n      return dx * dx + dy * dy;\r\n    }\r\n\r\n    manhattanDistanceTo(v) {\r\n      return Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\r\n    }\r\n\r\n    setLength(length) {\r\n      return this.normalize().multiplyScalar(length);\r\n    }\r\n\r\n    lerp(v, alpha) {\r\n      this.x += (v.x - this.x) * alpha;\r\n      this.y += (v.y - this.y) * alpha;\r\n      return this;\r\n    }\r\n\r\n    lerpVectors(v1, v2, alpha) {\r\n      this.x = v1.x + (v2.x - v1.x) * alpha;\r\n      this.y = v1.y + (v2.y - v1.y) * alpha;\r\n      return this;\r\n    }\r\n\r\n    equals(v) {\r\n      return v.x === this.x && v.y === this.y;\r\n    }\r\n\r\n    fromArray(array, offset = 0) {\r\n      this.x = array[offset];\r\n      this.y = array[offset + 1];\r\n      return this;\r\n    }\r\n\r\n    toArray(array = [], offset = 0) {\r\n      array[offset] = this.x;\r\n      array[offset + 1] = this.y;\r\n      return array;\r\n    }\r\n\r\n    fromBufferAttribute(attribute, index, offset) {\r\n      if (offset !== undefined) {\r\n        console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\r\n      }\r\n\r\n      this.x = attribute.getX(index);\r\n      this.y = attribute.getY(index);\r\n      return this;\r\n    }\r\n\r\n    rotateAround(center, angle) {\r\n      const c = Math.cos(angle),\r\n        s = Math.sin(angle);\r\n      const x = this.x - center.x;\r\n      const y = this.y - center.y;\r\n      this.x = x * c - y * s + center.x;\r\n      this.y = x * s + y * c + center.y;\r\n      return this;\r\n    }\r\n\r\n    random() {\r\n      this.x = Math.random();\r\n      this.y = Math.random();\r\n      return this;\r\n    }\r\n  }\r\n\r\n  Vector2.prototype.isVector2 = true;\r\n\r\n  class Matrix3 {\r\n    constructor() {\r\n      this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n\r\n      if (arguments.length > 0) {\r\n        console.error(\r\n          'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.',\r\n        );\r\n      }\r\n    }\r\n\r\n    set(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\r\n      const te = this.elements;\r\n      te[0] = n11;\r\n      te[1] = n21;\r\n      te[2] = n31;\r\n      te[3] = n12;\r\n      te[4] = n22;\r\n      te[5] = n32;\r\n      te[6] = n13;\r\n      te[7] = n23;\r\n      te[8] = n33;\r\n      return this;\r\n    }\r\n\r\n    identity() {\r\n      this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\r\n      return this;\r\n    }\r\n\r\n    copy(m) {\r\n      const te = this.elements;\r\n      const me = m.elements;\r\n      te[0] = me[0];\r\n      te[1] = me[1];\r\n      te[2] = me[2];\r\n      te[3] = me[3];\r\n      te[4] = me[4];\r\n      te[5] = me[5];\r\n      te[6] = me[6];\r\n      te[7] = me[7];\r\n      te[8] = me[8];\r\n      return this;\r\n    }\r\n\r\n    extractBasis(xAxis, yAxis, zAxis) {\r\n      xAxis.setFromMatrix3Column(this, 0);\r\n      yAxis.setFromMatrix3Column(this, 1);\r\n      zAxis.setFromMatrix3Column(this, 2);\r\n      return this;\r\n    }\r\n\r\n    setFromMatrix4(m) {\r\n      const me = m.elements;\r\n      this.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\r\n      return this;\r\n    }\r\n\r\n    multiply(m) {\r\n      return this.multiplyMatrices(this, m);\r\n    }\r\n\r\n    premultiply(m) {\r\n      return this.multiplyMatrices(m, this);\r\n    }\r\n\r\n    multiplyMatrices(a, b) {\r\n      const ae = a.elements;\r\n      const be = b.elements;\r\n      const te = this.elements;\r\n      const a11 = ae[0],\r\n        a12 = ae[3],\r\n        a13 = ae[6];\r\n      const a21 = ae[1],\r\n        a22 = ae[4],\r\n        a23 = ae[7];\r\n      const a31 = ae[2],\r\n        a32 = ae[5],\r\n        a33 = ae[8];\r\n      const b11 = be[0],\r\n        b12 = be[3],\r\n        b13 = be[6];\r\n      const b21 = be[1],\r\n        b22 = be[4],\r\n        b23 = be[7];\r\n      const b31 = be[2],\r\n        b32 = be[5],\r\n        b33 = be[8];\r\n      te[0] = a11 * b11 + a12 * b21 + a13 * b31;\r\n      te[3] = a11 * b12 + a12 * b22 + a13 * b32;\r\n      te[6] = a11 * b13 + a12 * b23 + a13 * b33;\r\n      te[1] = a21 * b11 + a22 * b21 + a23 * b31;\r\n      te[4] = a21 * b12 + a22 * b22 + a23 * b32;\r\n      te[7] = a21 * b13 + a22 * b23 + a23 * b33;\r\n      te[2] = a31 * b11 + a32 * b21 + a33 * b31;\r\n      te[5] = a31 * b12 + a32 * b22 + a33 * b32;\r\n      te[8] = a31 * b13 + a32 * b23 + a33 * b33;\r\n      return this;\r\n    }\r\n\r\n    multiplyScalar(s) {\r\n      const te = this.elements;\r\n      te[0] *= s;\r\n      te[3] *= s;\r\n      te[6] *= s;\r\n      te[1] *= s;\r\n      te[4] *= s;\r\n      te[7] *= s;\r\n      te[2] *= s;\r\n      te[5] *= s;\r\n      te[8] *= s;\r\n      return this;\r\n    }\r\n\r\n    determinant() {\r\n      const te = this.elements;\r\n      const a = te[0],\r\n        b = te[1],\r\n        c = te[2],\r\n        d = te[3],\r\n        e = te[4],\r\n        f = te[5],\r\n        g = te[6],\r\n        h = te[7],\r\n        i = te[8];\r\n      return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n    }\r\n\r\n    invert() {\r\n      const te = this.elements,\r\n        n11 = te[0],\r\n        n21 = te[1],\r\n        n31 = te[2],\r\n        n12 = te[3],\r\n        n22 = te[4],\r\n        n32 = te[5],\r\n        n13 = te[6],\r\n        n23 = te[7],\r\n        n33 = te[8],\r\n        t11 = n33 * n22 - n32 * n23,\r\n        t12 = n32 * n13 - n33 * n12,\r\n        t13 = n23 * n12 - n22 * n13,\r\n        det = n11 * t11 + n21 * t12 + n31 * t13;\r\n      if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n      const detInv = 1 / det;\r\n      te[0] = t11 * detInv;\r\n      te[1] = (n31 * n23 - n33 * n21) * detInv;\r\n      te[2] = (n32 * n21 - n31 * n22) * detInv;\r\n      te[3] = t12 * detInv;\r\n      te[4] = (n33 * n11 - n31 * n13) * detInv;\r\n      te[5] = (n31 * n12 - n32 * n11) * detInv;\r\n      te[6] = t13 * detInv;\r\n      te[7] = (n21 * n13 - n23 * n11) * detInv;\r\n      te[8] = (n22 * n11 - n21 * n12) * detInv;\r\n      return this;\r\n    }\r\n\r\n    transpose() {\r\n      let tmp;\r\n      const m = this.elements;\r\n      tmp = m[1];\r\n      m[1] = m[3];\r\n      m[3] = tmp;\r\n      tmp = m[2];\r\n      m[2] = m[6];\r\n      m[6] = tmp;\r\n      tmp = m[5];\r\n      m[5] = m[7];\r\n      m[7] = tmp;\r\n      return this;\r\n    }\r\n\r\n    getNormalMatrix(matrix4) {\r\n      return this.setFromMatrix4(matrix4).invert().transpose();\r\n    }\r\n\r\n    transposeIntoArray(r) {\r\n      const m = this.elements;\r\n      r[0] = m[0];\r\n      r[1] = m[3];\r\n      r[2] = m[6];\r\n      r[3] = m[1];\r\n      r[4] = m[4];\r\n      r[5] = m[7];\r\n      r[6] = m[2];\r\n      r[7] = m[5];\r\n      r[8] = m[8];\r\n      return this;\r\n    }\r\n\r\n    setUvTransform(tx, ty, sx, sy, rotation, cx, cy) {\r\n      const c = Math.cos(rotation);\r\n      const s = Math.sin(rotation);\r\n      this.set(\r\n        sx * c,\r\n        sx * s,\r\n        -sx * (c * cx + s * cy) + cx + tx,\r\n        -sy * s,\r\n        sy * c,\r\n        -sy * (-s * cx + c * cy) + cy + ty,\r\n        0,\r\n        0,\r\n        1,\r\n      );\r\n      return this;\r\n    }\r\n\r\n    scale(sx, sy) {\r\n      const te = this.elements;\r\n      te[0] *= sx;\r\n      te[3] *= sx;\r\n      te[6] *= sx;\r\n      te[1] *= sy;\r\n      te[4] *= sy;\r\n      te[7] *= sy;\r\n      return this;\r\n    }\r\n\r\n    rotate(theta) {\r\n      const c = Math.cos(theta);\r\n      const s = Math.sin(theta);\r\n      const te = this.elements;\r\n      const a11 = te[0],\r\n        a12 = te[3],\r\n        a13 = te[6];\r\n      const a21 = te[1],\r\n        a22 = te[4],\r\n        a23 = te[7];\r\n      te[0] = c * a11 + s * a21;\r\n      te[3] = c * a12 + s * a22;\r\n      te[6] = c * a13 + s * a23;\r\n      te[1] = -s * a11 + c * a21;\r\n      te[4] = -s * a12 + c * a22;\r\n      te[7] = -s * a13 + c * a23;\r\n      return this;\r\n    }\r\n\r\n    translate(tx, ty) {\r\n      const te = this.elements;\r\n      te[0] += tx * te[2];\r\n      te[3] += tx * te[5];\r\n      te[6] += tx * te[8];\r\n      te[1] += ty * te[2];\r\n      te[4] += ty * te[5];\r\n      te[7] += ty * te[8];\r\n      return this;\r\n    }\r\n\r\n    equals(matrix) {\r\n      const te = this.elements;\r\n      const me = matrix.elements;\r\n\r\n      for (let i = 0; i < 9; i++) {\r\n        if (te[i] !== me[i]) return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    fromArray(array, offset = 0) {\r\n      for (let i = 0; i < 9; i++) {\r\n        this.elements[i] = array[i + offset];\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    toArray(array = [], offset = 0) {\r\n      const te = this.elements;\r\n      array[offset] = te[0];\r\n      array[offset + 1] = te[1];\r\n      array[offset + 2] = te[2];\r\n      array[offset + 3] = te[3];\r\n      array[offset + 4] = te[4];\r\n      array[offset + 5] = te[5];\r\n      array[offset + 6] = te[6];\r\n      array[offset + 7] = te[7];\r\n      array[offset + 8] = te[8];\r\n      return array;\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().fromArray(this.elements);\r\n    }\r\n  }\r\n\r\n  Matrix3.prototype.isMatrix3 = true;\r\n\r\n  let _canvas;\r\n\r\n  class ImageUtils {\r\n    static getDataURL(image) {\r\n      if (/^data:/i.test(image.src)) {\r\n        return image.src;\r\n      }\r\n\r\n      if (typeof HTMLCanvasElement == 'undefined') {\r\n        return image.src;\r\n      }\r\n\r\n      let canvas;\r\n\r\n      if (image instanceof HTMLCanvasElement) {\r\n        canvas = image;\r\n      } else {\r\n        if (_canvas === undefined)\r\n          _canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\r\n        _canvas.width = image.width;\r\n        _canvas.height = image.height;\r\n\r\n        const context = _canvas.getContext('2d');\r\n\r\n        if (image instanceof ImageData) {\r\n          context.putImageData(image, 0, 0);\r\n        } else {\r\n          context.drawImage(image, 0, 0, image.width, image.height);\r\n        }\r\n\r\n        canvas = _canvas;\r\n      }\r\n\r\n      if (canvas.width > 2048 || canvas.height > 2048) {\r\n        console.warn(\r\n          'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons',\r\n          image,\r\n        );\r\n        return canvas.toDataURL('image/jpeg', 0.6);\r\n      } else {\r\n        return canvas.toDataURL('image/png');\r\n      }\r\n    }\r\n  }\r\n\r\n  let textureId = 0;\r\n\r\n  class Texture extends EventDispatcher {\r\n    constructor(\r\n      image = Texture.DEFAULT_IMAGE,\r\n      mapping = Texture.DEFAULT_MAPPING,\r\n      wrapS = ClampToEdgeWrapping,\r\n      wrapT = ClampToEdgeWrapping,\r\n      magFilter = LinearFilter,\r\n      minFilter = LinearMipmapLinearFilter,\r\n      format = RGBAFormat,\r\n      type = UnsignedByteType,\r\n      anisotropy = 1,\r\n      encoding = LinearEncoding,\r\n    ) {\r\n      super();\r\n      Object.defineProperty(this, 'id', {\r\n        value: textureId++,\r\n      });\r\n      this.uuid = generateUUID();\r\n      this.name = '';\r\n      this.image = image;\r\n      this.mipmaps = [];\r\n      this.mapping = mapping;\r\n      this.wrapS = wrapS;\r\n      this.wrapT = wrapT;\r\n      this.magFilter = magFilter;\r\n      this.minFilter = minFilter;\r\n      this.anisotropy = anisotropy;\r\n      this.format = format;\r\n      this.internalFormat = null;\r\n      this.type = type;\r\n      this.offset = new Vector2(0, 0);\r\n      this.repeat = new Vector2(1, 1);\r\n      this.center = new Vector2(0, 0);\r\n      this.rotation = 0;\r\n      this.matrixAutoUpdate = true;\r\n      this.matrix = new Matrix3();\r\n      this.generateMipmaps = true;\r\n      this.premultiplyAlpha = false;\r\n      this.flipY = true;\r\n      this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n      // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\r\n      //\r\n      // Also changing the encoding after already used by a Material will not automatically make the Material\r\n      // update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\r\n\r\n      this.encoding = encoding;\r\n      this.version = 0;\r\n      this.onUpdate = null;\r\n    }\r\n\r\n    updateMatrix() {\r\n      this.matrix.setUvTransform(\r\n        this.offset.x,\r\n        this.offset.y,\r\n        this.repeat.x,\r\n        this.repeat.y,\r\n        this.rotation,\r\n        this.center.x,\r\n        this.center.y,\r\n      );\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().copy(this);\r\n    }\r\n\r\n    copy(source) {\r\n      this.name = source.name;\r\n      this.image = source.image;\r\n      this.mipmaps = source.mipmaps.slice(0);\r\n      this.mapping = source.mapping;\r\n      this.wrapS = source.wrapS;\r\n      this.wrapT = source.wrapT;\r\n      this.magFilter = source.magFilter;\r\n      this.minFilter = source.minFilter;\r\n      this.anisotropy = source.anisotropy;\r\n      this.format = source.format;\r\n      this.internalFormat = source.internalFormat;\r\n      this.type = source.type;\r\n      this.offset.copy(source.offset);\r\n      this.repeat.copy(source.repeat);\r\n      this.center.copy(source.center);\r\n      this.rotation = source.rotation;\r\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\r\n      this.matrix.copy(source.matrix);\r\n      this.generateMipmaps = source.generateMipmaps;\r\n      this.premultiplyAlpha = source.premultiplyAlpha;\r\n      this.flipY = source.flipY;\r\n      this.unpackAlignment = source.unpackAlignment;\r\n      this.encoding = source.encoding;\r\n      return this;\r\n    }\r\n\r\n    toJSON(meta) {\r\n      const isRootObject = meta === undefined || typeof meta === 'string';\r\n\r\n      if (!isRootObject && meta.textures[this.uuid] !== undefined) {\r\n        return meta.textures[this.uuid];\r\n      }\r\n\r\n      const output = {\r\n        metadata: {\r\n          version: 4.5,\r\n          type: 'Texture',\r\n          generator: 'Texture.toJSON',\r\n        },\r\n        uuid: this.uuid,\r\n        name: this.name,\r\n        mapping: this.mapping,\r\n        repeat: [this.repeat.x, this.repeat.y],\r\n        offset: [this.offset.x, this.offset.y],\r\n        center: [this.center.x, this.center.y],\r\n        rotation: this.rotation,\r\n        wrap: [this.wrapS, this.wrapT],\r\n        format: this.format,\r\n        type: this.type,\r\n        encoding: this.encoding,\r\n        minFilter: this.minFilter,\r\n        magFilter: this.magFilter,\r\n        anisotropy: this.anisotropy,\r\n        flipY: this.flipY,\r\n        premultiplyAlpha: this.premultiplyAlpha,\r\n        unpackAlignment: this.unpackAlignment,\r\n      };\r\n\r\n      if (this.image !== undefined) {\r\n        // TODO: Move to THREE.Image\r\n        const image = this.image;\r\n\r\n        if (image.uuid === undefined) {\r\n          image.uuid = generateUUID(); // UGH\r\n        }\r\n\r\n        if (!isRootObject && meta.images[image.uuid] === undefined) {\r\n          let url;\r\n\r\n          if (Array.isArray(image)) {\r\n            // process array of images e.g. CubeTexture\r\n            url = [];\r\n\r\n            for (let i = 0, l = image.length; i < l; i++) {\r\n              // check cube texture with data textures\r\n              if (image[i].isDataTexture) {\r\n                url.push(serializeImage(image[i].image));\r\n              } else {\r\n                url.push(serializeImage(image[i]));\r\n              }\r\n            }\r\n          } else {\r\n            // process single image\r\n            url = serializeImage(image);\r\n          }\r\n\r\n          meta.images[image.uuid] = {\r\n            uuid: image.uuid,\r\n            url: url,\r\n          };\r\n        }\r\n\r\n        output.image = image.uuid;\r\n      }\r\n\r\n      if (!isRootObject) {\r\n        meta.textures[this.uuid] = output;\r\n      }\r\n\r\n      return output;\r\n    }\r\n\r\n    dispose() {\r\n      this.dispatchEvent({\r\n        type: 'dispose',\r\n      });\r\n    }\r\n\r\n    transformUv(uv) {\r\n      if (this.mapping !== UVMapping) return uv;\r\n      uv.applyMatrix3(this.matrix);\r\n\r\n      if (uv.x < 0 || uv.x > 1) {\r\n        switch (this.wrapS) {\r\n          case RepeatWrapping:\r\n            uv.x = uv.x - Math.floor(uv.x);\r\n            break;\r\n\r\n          case ClampToEdgeWrapping:\r\n            uv.x = uv.x < 0 ? 0 : 1;\r\n            break;\r\n\r\n          case MirroredRepeatWrapping:\r\n            if (Math.abs(Math.floor(uv.x) % 2) === 1) {\r\n              uv.x = Math.ceil(uv.x) - uv.x;\r\n            } else {\r\n              uv.x = uv.x - Math.floor(uv.x);\r\n            }\r\n\r\n            break;\r\n        }\r\n      }\r\n\r\n      if (uv.y < 0 || uv.y > 1) {\r\n        switch (this.wrapT) {\r\n          case RepeatWrapping:\r\n            uv.y = uv.y - Math.floor(uv.y);\r\n            break;\r\n\r\n          case ClampToEdgeWrapping:\r\n            uv.y = uv.y < 0 ? 0 : 1;\r\n            break;\r\n\r\n          case MirroredRepeatWrapping:\r\n            if (Math.abs(Math.floor(uv.y) % 2) === 1) {\r\n              uv.y = Math.ceil(uv.y) - uv.y;\r\n            } else {\r\n              uv.y = uv.y - Math.floor(uv.y);\r\n            }\r\n\r\n            break;\r\n        }\r\n      }\r\n\r\n      if (this.flipY) {\r\n        uv.y = 1 - uv.y;\r\n      }\r\n\r\n      return uv;\r\n    }\r\n\r\n    set needsUpdate(value) {\r\n      if (value === true) this.version++;\r\n    }\r\n  }\r\n\r\n  Texture.DEFAULT_IMAGE = undefined;\r\n  Texture.DEFAULT_MAPPING = UVMapping;\r\n  Texture.prototype.isTexture = true;\r\n\r\n  function serializeImage(image) {\r\n    if (\r\n      (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement) ||\r\n      (typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement) ||\r\n      (typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap)\r\n    ) {\r\n      // default images\r\n      return ImageUtils.getDataURL(image);\r\n    } else {\r\n      if (image.data) {\r\n        // images of DataTexture\r\n        return {\r\n          data: Array.prototype.slice.call(image.data),\r\n          width: image.width,\r\n          height: image.height,\r\n          type: image.data.constructor.name,\r\n        };\r\n      } else {\r\n        console.warn('THREE.Texture: Unable to serialize Texture.');\r\n        return {};\r\n      }\r\n    }\r\n  }\r\n\r\n  class Vector4 {\r\n    constructor(x = 0, y = 0, z = 0, w = 1) {\r\n      this.x = x;\r\n      this.y = y;\r\n      this.z = z;\r\n      this.w = w;\r\n    }\r\n\r\n    get width() {\r\n      return this.z;\r\n    }\r\n\r\n    set width(value) {\r\n      this.z = value;\r\n    }\r\n\r\n    get height() {\r\n      return this.w;\r\n    }\r\n\r\n    set height(value) {\r\n      this.w = value;\r\n    }\r\n\r\n    set(x, y, z, w) {\r\n      this.x = x;\r\n      this.y = y;\r\n      this.z = z;\r\n      this.w = w;\r\n      return this;\r\n    }\r\n\r\n    setScalar(scalar) {\r\n      this.x = scalar;\r\n      this.y = scalar;\r\n      this.z = scalar;\r\n      this.w = scalar;\r\n      return this;\r\n    }\r\n\r\n    setX(x) {\r\n      this.x = x;\r\n      return this;\r\n    }\r\n\r\n    setY(y) {\r\n      this.y = y;\r\n      return this;\r\n    }\r\n\r\n    setZ(z) {\r\n      this.z = z;\r\n      return this;\r\n    }\r\n\r\n    setW(w) {\r\n      this.w = w;\r\n      return this;\r\n    }\r\n\r\n    setComponent(index, value) {\r\n      switch (index) {\r\n        case 0:\r\n          this.x = value;\r\n          break;\r\n\r\n        case 1:\r\n          this.y = value;\r\n          break;\r\n\r\n        case 2:\r\n          this.z = value;\r\n          break;\r\n\r\n        case 3:\r\n          this.w = value;\r\n          break;\r\n\r\n        default:\r\n          throw new Error('index is out of range: ' + index);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    getComponent(index) {\r\n      switch (index) {\r\n        case 0:\r\n          return this.x;\r\n\r\n        case 1:\r\n          return this.y;\r\n\r\n        case 2:\r\n          return this.z;\r\n\r\n        case 3:\r\n          return this.w;\r\n\r\n        default:\r\n          throw new Error('index is out of range: ' + index);\r\n      }\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor(this.x, this.y, this.z, this.w);\r\n    }\r\n\r\n    copy(v) {\r\n      this.x = v.x;\r\n      this.y = v.y;\r\n      this.z = v.z;\r\n      this.w = v.w !== undefined ? v.w : 1;\r\n      return this;\r\n    }\r\n\r\n    add(v, w) {\r\n      if (w !== undefined) {\r\n        console.warn(\r\n          'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.',\r\n        );\r\n        return this.addVectors(v, w);\r\n      }\r\n\r\n      this.x += v.x;\r\n      this.y += v.y;\r\n      this.z += v.z;\r\n      this.w += v.w;\r\n      return this;\r\n    }\r\n\r\n    addScalar(s) {\r\n      this.x += s;\r\n      this.y += s;\r\n      this.z += s;\r\n      this.w += s;\r\n      return this;\r\n    }\r\n\r\n    addVectors(a, b) {\r\n      this.x = a.x + b.x;\r\n      this.y = a.y + b.y;\r\n      this.z = a.z + b.z;\r\n      this.w = a.w + b.w;\r\n      return this;\r\n    }\r\n\r\n    addScaledVector(v, s) {\r\n      this.x += v.x * s;\r\n      this.y += v.y * s;\r\n      this.z += v.z * s;\r\n      this.w += v.w * s;\r\n      return this;\r\n    }\r\n\r\n    sub(v, w) {\r\n      if (w !== undefined) {\r\n        console.warn(\r\n          'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.',\r\n        );\r\n        return this.subVectors(v, w);\r\n      }\r\n\r\n      this.x -= v.x;\r\n      this.y -= v.y;\r\n      this.z -= v.z;\r\n      this.w -= v.w;\r\n      return this;\r\n    }\r\n\r\n    subScalar(s) {\r\n      this.x -= s;\r\n      this.y -= s;\r\n      this.z -= s;\r\n      this.w -= s;\r\n      return this;\r\n    }\r\n\r\n    subVectors(a, b) {\r\n      this.x = a.x - b.x;\r\n      this.y = a.y - b.y;\r\n      this.z = a.z - b.z;\r\n      this.w = a.w - b.w;\r\n      return this;\r\n    }\r\n\r\n    multiply(v) {\r\n      this.x *= v.x;\r\n      this.y *= v.y;\r\n      this.z *= v.z;\r\n      this.w *= v.w;\r\n      return this;\r\n    }\r\n\r\n    multiplyScalar(scalar) {\r\n      this.x *= scalar;\r\n      this.y *= scalar;\r\n      this.z *= scalar;\r\n      this.w *= scalar;\r\n      return this;\r\n    }\r\n\r\n    applyMatrix4(m) {\r\n      const x = this.x,\r\n        y = this.y,\r\n        z = this.z,\r\n        w = this.w;\r\n      const e = m.elements;\r\n      this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\r\n      this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\r\n      this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\r\n      this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\r\n      return this;\r\n    }\r\n\r\n    divideScalar(scalar) {\r\n      return this.multiplyScalar(1 / scalar);\r\n    }\r\n\r\n    setAxisAngleFromQuaternion(q) {\r\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n      // q is assumed to be normalized\r\n      this.w = 2 * Math.acos(q.w);\r\n      const s = Math.sqrt(1 - q.w * q.w);\r\n\r\n      if (s < 0.0001) {\r\n        this.x = 1;\r\n        this.y = 0;\r\n        this.z = 0;\r\n      } else {\r\n        this.x = q.x / s;\r\n        this.y = q.y / s;\r\n        this.z = q.z / s;\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    setAxisAngleFromRotationMatrix(m) {\r\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n      let angle, x, y, z; // variables for result\r\n\r\n      const epsilon = 0.01,\r\n        // margin to allow for rounding errors\r\n        epsilon2 = 0.1,\r\n        // margin to distinguish between 0 and 180 degrees\r\n        te = m.elements,\r\n        m11 = te[0],\r\n        m12 = te[4],\r\n        m13 = te[8],\r\n        m21 = te[1],\r\n        m22 = te[5],\r\n        m23 = te[9],\r\n        m31 = te[2],\r\n        m32 = te[6],\r\n        m33 = te[10];\r\n\r\n      if (\r\n        Math.abs(m12 - m21) < epsilon &&\r\n        Math.abs(m13 - m31) < epsilon &&\r\n        Math.abs(m23 - m32) < epsilon\r\n      ) {\r\n        // singularity found\r\n        // first check for identity matrix which must have +1 for all terms\r\n        // in leading diagonal and zero in other terms\r\n        if (\r\n          Math.abs(m12 + m21) < epsilon2 &&\r\n          Math.abs(m13 + m31) < epsilon2 &&\r\n          Math.abs(m23 + m32) < epsilon2 &&\r\n          Math.abs(m11 + m22 + m33 - 3) < epsilon2\r\n        ) {\r\n          // this singularity is identity matrix so angle = 0\r\n          this.set(1, 0, 0, 0);\r\n          return this; // zero angle, arbitrary axis\r\n        } // otherwise this singularity is angle = 180\r\n\r\n        angle = Math.PI;\r\n        const xx = (m11 + 1) / 2;\r\n        const yy = (m22 + 1) / 2;\r\n        const zz = (m33 + 1) / 2;\r\n        const xy = (m12 + m21) / 4;\r\n        const xz = (m13 + m31) / 4;\r\n        const yz = (m23 + m32) / 4;\r\n\r\n        if (xx > yy && xx > zz) {\r\n          // m11 is the largest diagonal term\r\n          if (xx < epsilon) {\r\n            x = 0;\r\n            y = 0.707106781;\r\n            z = 0.707106781;\r\n          } else {\r\n            x = Math.sqrt(xx);\r\n            y = xy / x;\r\n            z = xz / x;\r\n          }\r\n        } else if (yy > zz) {\r\n          // m22 is the largest diagonal term\r\n          if (yy < epsilon) {\r\n            x = 0.707106781;\r\n            y = 0;\r\n            z = 0.707106781;\r\n          } else {\r\n            y = Math.sqrt(yy);\r\n            x = xy / y;\r\n            z = yz / y;\r\n          }\r\n        } else {\r\n          // m33 is the largest diagonal term so base result on this\r\n          if (zz < epsilon) {\r\n            x = 0.707106781;\r\n            y = 0.707106781;\r\n            z = 0;\r\n          } else {\r\n            z = Math.sqrt(zz);\r\n            x = xz / z;\r\n            y = yz / z;\r\n          }\r\n        }\r\n\r\n        this.set(x, y, z, angle);\r\n        return this; // return 180 deg rotation\r\n      } // as we have reached here there are no singularities so we can handle normally\r\n\r\n      let s = Math.sqrt(\r\n        (m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12),\r\n      ); // used to normalize\r\n\r\n      if (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n      // caught by singularity test above, but I've left it in just in case\r\n\r\n      this.x = (m32 - m23) / s;\r\n      this.y = (m13 - m31) / s;\r\n      this.z = (m21 - m12) / s;\r\n      this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\r\n      return this;\r\n    }\r\n\r\n    min(v) {\r\n      this.x = Math.min(this.x, v.x);\r\n      this.y = Math.min(this.y, v.y);\r\n      this.z = Math.min(this.z, v.z);\r\n      this.w = Math.min(this.w, v.w);\r\n      return this;\r\n    }\r\n\r\n    max(v) {\r\n      this.x = Math.max(this.x, v.x);\r\n      this.y = Math.max(this.y, v.y);\r\n      this.z = Math.max(this.z, v.z);\r\n      this.w = Math.max(this.w, v.w);\r\n      return this;\r\n    }\r\n\r\n    clamp(min, max) {\r\n      // assumes min < max, componentwise\r\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\r\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\r\n      this.z = Math.max(min.z, Math.min(max.z, this.z));\r\n      this.w = Math.max(min.w, Math.min(max.w, this.w));\r\n      return this;\r\n    }\r\n\r\n    clampScalar(minVal, maxVal) {\r\n      this.x = Math.max(minVal, Math.min(maxVal, this.x));\r\n      this.y = Math.max(minVal, Math.min(maxVal, this.y));\r\n      this.z = Math.max(minVal, Math.min(maxVal, this.z));\r\n      this.w = Math.max(minVal, Math.min(maxVal, this.w));\r\n      return this;\r\n    }\r\n\r\n    clampLength(min, max) {\r\n      const length = this.length();\r\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\r\n    }\r\n\r\n    floor() {\r\n      this.x = Math.floor(this.x);\r\n      this.y = Math.floor(this.y);\r\n      this.z = Math.floor(this.z);\r\n      this.w = Math.floor(this.w);\r\n      return this;\r\n    }\r\n\r\n    ceil() {\r\n      this.x = Math.ceil(this.x);\r\n      this.y = Math.ceil(this.y);\r\n      this.z = Math.ceil(this.z);\r\n      this.w = Math.ceil(this.w);\r\n      return this;\r\n    }\r\n\r\n    round() {\r\n      this.x = Math.round(this.x);\r\n      this.y = Math.round(this.y);\r\n      this.z = Math.round(this.z);\r\n      this.w = Math.round(this.w);\r\n      return this;\r\n    }\r\n\r\n    roundToZero() {\r\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\r\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\r\n      this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\r\n      this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\r\n      return this;\r\n    }\r\n\r\n    negate() {\r\n      this.x = -this.x;\r\n      this.y = -this.y;\r\n      this.z = -this.z;\r\n      this.w = -this.w;\r\n      return this;\r\n    }\r\n\r\n    dot(v) {\r\n      return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n    }\r\n\r\n    lengthSq() {\r\n      return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n    }\r\n\r\n    length() {\r\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n    }\r\n\r\n    manhattanLength() {\r\n      return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\r\n    }\r\n\r\n    normalize() {\r\n      return this.divideScalar(this.length() || 1);\r\n    }\r\n\r\n    setLength(length) {\r\n      return this.normalize().multiplyScalar(length);\r\n    }\r\n\r\n    lerp(v, alpha) {\r\n      this.x += (v.x - this.x) * alpha;\r\n      this.y += (v.y - this.y) * alpha;\r\n      this.z += (v.z - this.z) * alpha;\r\n      this.w += (v.w - this.w) * alpha;\r\n      return this;\r\n    }\r\n\r\n    lerpVectors(v1, v2, alpha) {\r\n      this.x = v1.x + (v2.x - v1.x) * alpha;\r\n      this.y = v1.y + (v2.y - v1.y) * alpha;\r\n      this.z = v1.z + (v2.z - v1.z) * alpha;\r\n      this.w = v1.w + (v2.w - v1.w) * alpha;\r\n      return this;\r\n    }\r\n\r\n    equals(v) {\r\n      return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\r\n    }\r\n\r\n    fromArray(array, offset = 0) {\r\n      this.x = array[offset];\r\n      this.y = array[offset + 1];\r\n      this.z = array[offset + 2];\r\n      this.w = array[offset + 3];\r\n      return this;\r\n    }\r\n\r\n    toArray(array = [], offset = 0) {\r\n      array[offset] = this.x;\r\n      array[offset + 1] = this.y;\r\n      array[offset + 2] = this.z;\r\n      array[offset + 3] = this.w;\r\n      return array;\r\n    }\r\n\r\n    fromBufferAttribute(attribute, index, offset) {\r\n      if (offset !== undefined) {\r\n        console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');\r\n      }\r\n\r\n      this.x = attribute.getX(index);\r\n      this.y = attribute.getY(index);\r\n      this.z = attribute.getZ(index);\r\n      this.w = attribute.getW(index);\r\n      return this;\r\n    }\r\n\r\n    random() {\r\n      this.x = Math.random();\r\n      this.y = Math.random();\r\n      this.z = Math.random();\r\n      this.w = Math.random();\r\n      return this;\r\n    }\r\n  }\r\n\r\n  Vector4.prototype.isVector4 = true;\r\n\r\n  /*\r\n\t In options, we can specify:\r\n\t * Texture parameters for an auto-generated target texture\r\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\r\n\t*/\r\n\r\n  class WebGLRenderTarget extends EventDispatcher {\r\n    constructor(width, height, options) {\r\n      super();\r\n      this.width = width;\r\n      this.height = height;\r\n      this.depth = 1;\r\n      this.scissor = new Vector4(0, 0, width, height);\r\n      this.scissorTest = false;\r\n      this.viewport = new Vector4(0, 0, width, height);\r\n      options = options || {};\r\n      this.texture = new Texture(\r\n        undefined,\r\n        options.mapping,\r\n        options.wrapS,\r\n        options.wrapT,\r\n        options.magFilter,\r\n        options.minFilter,\r\n        options.format,\r\n        options.type,\r\n        options.anisotropy,\r\n        options.encoding,\r\n      );\r\n      this.texture.image = {};\r\n      this.texture.image.width = width;\r\n      this.texture.image.height = height;\r\n      this.texture.image.depth = 1;\r\n      this.texture.generateMipmaps =\r\n        options.generateMipmaps !== undefined ? options.generateMipmaps : false;\r\n      this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\r\n      this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n      this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\r\n      this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\r\n    }\r\n\r\n    setTexture(texture) {\r\n      texture.image = {\r\n        width: this.width,\r\n        height: this.height,\r\n        depth: this.depth,\r\n      };\r\n      this.texture = texture;\r\n    }\r\n\r\n    setSize(width, height, depth = 1) {\r\n      if (this.width !== width || this.height !== height || this.depth !== depth) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.depth = depth;\r\n        this.texture.image.width = width;\r\n        this.texture.image.height = height;\r\n        this.texture.image.depth = depth;\r\n        this.dispose();\r\n      }\r\n\r\n      this.viewport.set(0, 0, width, height);\r\n      this.scissor.set(0, 0, width, height);\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().copy(this);\r\n    }\r\n\r\n    copy(source) {\r\n      this.width = source.width;\r\n      this.height = source.height;\r\n      this.depth = source.depth;\r\n      this.viewport.copy(source.viewport);\r\n      this.texture = source.texture.clone();\r\n      this.texture.image = { ...this.texture.image }; // See #20328.\r\n\r\n      this.depthBuffer = source.depthBuffer;\r\n      this.stencilBuffer = source.stencilBuffer;\r\n      this.depthTexture = source.depthTexture;\r\n      return this;\r\n    }\r\n\r\n    dispose() {\r\n      this.dispatchEvent({\r\n        type: 'dispose',\r\n      });\r\n    }\r\n  }\r\n\r\n  WebGLRenderTarget.prototype.isWebGLRenderTarget = true;\r\n\r\n  class WebGLMultipleRenderTargets extends WebGLRenderTarget {\r\n    constructor(width, height, count) {\r\n      super(width, height);\r\n      const texture = this.texture;\r\n      this.texture = [];\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        this.texture[i] = texture.clone();\r\n      }\r\n    }\r\n\r\n    setSize(width, height, depth = 1) {\r\n      if (this.width !== width || this.height !== height || this.depth !== depth) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.depth = depth;\r\n\r\n        for (let i = 0, il = this.texture.length; i < il; i++) {\r\n          this.texture[i].image.width = width;\r\n          this.texture[i].image.height = height;\r\n          this.texture[i].image.depth = depth;\r\n        }\r\n\r\n        this.dispose();\r\n      }\r\n\r\n      this.viewport.set(0, 0, width, height);\r\n      this.scissor.set(0, 0, width, height);\r\n      return this;\r\n    }\r\n\r\n    copy(source) {\r\n      this.dispose();\r\n      this.width = source.width;\r\n      this.height = source.height;\r\n      this.depth = source.depth;\r\n      this.viewport.set(0, 0, this.width, this.height);\r\n      this.scissor.set(0, 0, this.width, this.height);\r\n      this.depthBuffer = source.depthBuffer;\r\n      this.stencilBuffer = source.stencilBuffer;\r\n      this.depthTexture = source.depthTexture;\r\n      this.texture.length = 0;\r\n\r\n      for (let i = 0, il = source.texture.length; i < il; i++) {\r\n        this.texture[i] = source.texture[i].clone();\r\n      }\r\n\r\n      return this;\r\n    }\r\n  }\r\n\r\n  WebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;\r\n\r\n  class WebGLMultisampleRenderTarget extends WebGLRenderTarget {\r\n    constructor(width, height, options) {\r\n      super(width, height, options);\r\n      this.samples = 4;\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy.call(this, source);\r\n      this.samples = source.samples;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  WebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget = true;\r\n\r\n  class Quaternion {\r\n    constructor(x = 0, y = 0, z = 0, w = 1) {\r\n      this._x = x;\r\n      this._y = y;\r\n      this._z = z;\r\n      this._w = w;\r\n    }\r\n\r\n    static slerp(qa, qb, qm, t) {\r\n      console.warn(\r\n        'THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.',\r\n      );\r\n      return qm.slerpQuaternions(qa, qb, t);\r\n    }\r\n\r\n    static slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\r\n      // fuzz-free, array-based Quaternion SLERP operation\r\n      let x0 = src0[srcOffset0 + 0],\r\n        y0 = src0[srcOffset0 + 1],\r\n        z0 = src0[srcOffset0 + 2],\r\n        w0 = src0[srcOffset0 + 3];\r\n      const x1 = src1[srcOffset1 + 0],\r\n        y1 = src1[srcOffset1 + 1],\r\n        z1 = src1[srcOffset1 + 2],\r\n        w1 = src1[srcOffset1 + 3];\r\n\r\n      if (t === 0) {\r\n        dst[dstOffset + 0] = x0;\r\n        dst[dstOffset + 1] = y0;\r\n        dst[dstOffset + 2] = z0;\r\n        dst[dstOffset + 3] = w0;\r\n        return;\r\n      }\r\n\r\n      if (t === 1) {\r\n        dst[dstOffset + 0] = x1;\r\n        dst[dstOffset + 1] = y1;\r\n        dst[dstOffset + 2] = z1;\r\n        dst[dstOffset + 3] = w1;\r\n        return;\r\n      }\r\n\r\n      if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\r\n        let s = 1 - t;\r\n        const cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\r\n          dir = cos >= 0 ? 1 : -1,\r\n          sqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\r\n\r\n        if (sqrSin > Number.EPSILON) {\r\n          const sin = Math.sqrt(sqrSin),\r\n            len = Math.atan2(sin, cos * dir);\r\n          s = Math.sin(s * len) / sin;\r\n          t = Math.sin(t * len) / sin;\r\n        }\r\n\r\n        const tDir = t * dir;\r\n        x0 = x0 * s + x1 * tDir;\r\n        y0 = y0 * s + y1 * tDir;\r\n        z0 = z0 * s + z1 * tDir;\r\n        w0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\r\n\r\n        if (s === 1 - t) {\r\n          const f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\r\n          x0 *= f;\r\n          y0 *= f;\r\n          z0 *= f;\r\n          w0 *= f;\r\n        }\r\n      }\r\n\r\n      dst[dstOffset] = x0;\r\n      dst[dstOffset + 1] = y0;\r\n      dst[dstOffset + 2] = z0;\r\n      dst[dstOffset + 3] = w0;\r\n    }\r\n\r\n    static multiplyQuaternionsFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1) {\r\n      const x0 = src0[srcOffset0];\r\n      const y0 = src0[srcOffset0 + 1];\r\n      const z0 = src0[srcOffset0 + 2];\r\n      const w0 = src0[srcOffset0 + 3];\r\n      const x1 = src1[srcOffset1];\r\n      const y1 = src1[srcOffset1 + 1];\r\n      const z1 = src1[srcOffset1 + 2];\r\n      const w1 = src1[srcOffset1 + 3];\r\n      dst[dstOffset] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\r\n      dst[dstOffset + 1] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\r\n      dst[dstOffset + 2] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\r\n      dst[dstOffset + 3] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\r\n      return dst;\r\n    }\r\n\r\n    get x() {\r\n      return this._x;\r\n    }\r\n\r\n    set x(value) {\r\n      this._x = value;\r\n\r\n      this._onChangeCallback();\r\n    }\r\n\r\n    get y() {\r\n      return this._y;\r\n    }\r\n\r\n    set y(value) {\r\n      this._y = value;\r\n\r\n      this._onChangeCallback();\r\n    }\r\n\r\n    get z() {\r\n      return this._z;\r\n    }\r\n\r\n    set z(value) {\r\n      this._z = value;\r\n\r\n      this._onChangeCallback();\r\n    }\r\n\r\n    get w() {\r\n      return this._w;\r\n    }\r\n\r\n    set w(value) {\r\n      this._w = value;\r\n\r\n      this._onChangeCallback();\r\n    }\r\n\r\n    set(x, y, z, w) {\r\n      this._x = x;\r\n      this._y = y;\r\n      this._z = z;\r\n      this._w = w;\r\n\r\n      this._onChangeCallback();\r\n\r\n      return this;\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor(this._x, this._y, this._z, this._w);\r\n    }\r\n\r\n    copy(quaternion) {\r\n      this._x = quaternion.x;\r\n      this._y = quaternion.y;\r\n      this._z = quaternion.z;\r\n      this._w = quaternion.w;\r\n\r\n      this._onChangeCallback();\r\n\r\n      return this;\r\n    }\r\n\r\n    setFromEuler(euler, update) {\r\n      if (!(euler && euler.isEuler)) {\r\n        throw new Error(\r\n          'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.',\r\n        );\r\n      }\r\n\r\n      const x = euler._x,\r\n        y = euler._y,\r\n        z = euler._z,\r\n        order = euler._order; // http://www.mathworks.com/matlabcentral/fileexchange/\r\n      // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n      //\tcontent/SpinCalc.m\r\n\r\n      const cos = Math.cos;\r\n      const sin = Math.sin;\r\n      const c1 = cos(x / 2);\r\n      const c2 = cos(y / 2);\r\n      const c3 = cos(z / 2);\r\n      const s1 = sin(x / 2);\r\n      const s2 = sin(y / 2);\r\n      const s3 = sin(z / 2);\r\n\r\n      switch (order) {\r\n        case 'XYZ':\r\n          this._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n          this._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n          this._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n          this._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n          break;\r\n\r\n        case 'YXZ':\r\n          this._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n          this._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n          this._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n          this._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n          break;\r\n\r\n        case 'ZXY':\r\n          this._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n          this._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n          this._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n          this._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n          break;\r\n\r\n        case 'ZYX':\r\n          this._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n          this._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n          this._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n          this._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n          break;\r\n\r\n        case 'YZX':\r\n          this._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n          this._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n          this._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n          this._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n          break;\r\n\r\n        case 'XZY':\r\n          this._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n          this._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n          this._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n          this._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n          break;\r\n\r\n        default:\r\n          console.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order);\r\n      }\r\n\r\n      if (update !== false) this._onChangeCallback();\r\n      return this;\r\n    }\r\n\r\n    setFromAxisAngle(axis, angle) {\r\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n      // assumes axis is normalized\r\n      const halfAngle = angle / 2,\r\n        s = Math.sin(halfAngle);\r\n      this._x = axis.x * s;\r\n      this._y = axis.y * s;\r\n      this._z = axis.z * s;\r\n      this._w = Math.cos(halfAngle);\r\n\r\n      this._onChangeCallback();\r\n\r\n      return this;\r\n    }\r\n\r\n    setFromRotationMatrix(m) {\r\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n      const te = m.elements,\r\n        m11 = te[0],\r\n        m12 = te[4],\r\n        m13 = te[8],\r\n        m21 = te[1],\r\n        m22 = te[5],\r\n        m23 = te[9],\r\n        m31 = te[2],\r\n        m32 = te[6],\r\n        m33 = te[10],\r\n        trace = m11 + m22 + m33;\r\n\r\n      if (trace > 0) {\r\n        const s = 0.5 / Math.sqrt(trace + 1.0);\r\n        this._w = 0.25 / s;\r\n        this._x = (m32 - m23) * s;\r\n        this._y = (m13 - m31) * s;\r\n        this._z = (m21 - m12) * s;\r\n      } else if (m11 > m22 && m11 > m33) {\r\n        const s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\r\n        this._w = (m32 - m23) / s;\r\n        this._x = 0.25 * s;\r\n        this._y = (m12 + m21) / s;\r\n        this._z = (m13 + m31) / s;\r\n      } else if (m22 > m33) {\r\n        const s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\r\n        this._w = (m13 - m31) / s;\r\n        this._x = (m12 + m21) / s;\r\n        this._y = 0.25 * s;\r\n        this._z = (m23 + m32) / s;\r\n      } else {\r\n        const s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\r\n        this._w = (m21 - m12) / s;\r\n        this._x = (m13 + m31) / s;\r\n        this._y = (m23 + m32) / s;\r\n        this._z = 0.25 * s;\r\n      }\r\n\r\n      this._onChangeCallback();\r\n\r\n      return this;\r\n    }\r\n\r\n    setFromUnitVectors(vFrom, vTo) {\r\n      // assumes direction vectors vFrom and vTo are normalized\r\n      let r = vFrom.dot(vTo) + 1;\r\n\r\n      if (r < Number.EPSILON) {\r\n        // vFrom and vTo point in opposite directions\r\n        r = 0;\r\n\r\n        if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\r\n          this._x = -vFrom.y;\r\n          this._y = vFrom.x;\r\n          this._z = 0;\r\n          this._w = r;\r\n        } else {\r\n          this._x = 0;\r\n          this._y = -vFrom.z;\r\n          this._z = vFrom.y;\r\n          this._w = r;\r\n        }\r\n      } else {\r\n        // crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\r\n        this._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\r\n        this._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\r\n        this._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\r\n        this._w = r;\r\n      }\r\n\r\n      return this.normalize();\r\n    }\r\n\r\n    angleTo(q) {\r\n      return 2 * Math.acos(Math.abs(clamp(this.dot(q), -1, 1)));\r\n    }\r\n\r\n    rotateTowards(q, step) {\r\n      const angle = this.angleTo(q);\r\n      if (angle === 0) return this;\r\n      const t = Math.min(1, step / angle);\r\n      this.slerp(q, t);\r\n      return this;\r\n    }\r\n\r\n    identity() {\r\n      return this.set(0, 0, 0, 1);\r\n    }\r\n\r\n    invert() {\r\n      // quaternion is assumed to have unit length\r\n      return this.conjugate();\r\n    }\r\n\r\n    conjugate() {\r\n      this._x *= -1;\r\n      this._y *= -1;\r\n      this._z *= -1;\r\n\r\n      this._onChangeCallback();\r\n\r\n      return this;\r\n    }\r\n\r\n    dot(v) {\r\n      return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n    }\r\n\r\n    lengthSq() {\r\n      return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n    }\r\n\r\n    length() {\r\n      return Math.sqrt(\r\n        this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w,\r\n      );\r\n    }\r\n\r\n    normalize() {\r\n      let l = this.length();\r\n\r\n      if (l === 0) {\r\n        this._x = 0;\r\n        this._y = 0;\r\n        this._z = 0;\r\n        this._w = 1;\r\n      } else {\r\n        l = 1 / l;\r\n        this._x = this._x * l;\r\n        this._y = this._y * l;\r\n        this._z = this._z * l;\r\n        this._w = this._w * l;\r\n      }\r\n\r\n      this._onChangeCallback();\r\n\r\n      return this;\r\n    }\r\n\r\n    multiply(q, p) {\r\n      if (p !== undefined) {\r\n        console.warn(\r\n          'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.',\r\n        );\r\n        return this.multiplyQuaternions(q, p);\r\n      }\r\n\r\n      return this.multiplyQuaternions(this, q);\r\n    }\r\n\r\n    premultiply(q) {\r\n      return this.multiplyQuaternions(q, this);\r\n    }\r\n\r\n    multiplyQuaternions(a, b) {\r\n      // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n      const qax = a._x,\r\n        qay = a._y,\r\n        qaz = a._z,\r\n        qaw = a._w;\r\n      const qbx = b._x,\r\n        qby = b._y,\r\n        qbz = b._z,\r\n        qbw = b._w;\r\n      this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n      this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n      this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n      this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n      this._onChangeCallback();\r\n\r\n      return this;\r\n    }\r\n\r\n    slerp(qb, t) {\r\n      if (t === 0) return this;\r\n      if (t === 1) return this.copy(qb);\r\n      const x = this._x,\r\n        y = this._y,\r\n        z = this._z,\r\n        w = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n      let cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n      if (cosHalfTheta < 0) {\r\n        this._w = -qb._w;\r\n        this._x = -qb._x;\r\n        this._y = -qb._y;\r\n        this._z = -qb._z;\r\n        cosHalfTheta = -cosHalfTheta;\r\n      } else {\r\n        this.copy(qb);\r\n      }\r\n\r\n      if (cosHalfTheta >= 1.0) {\r\n        this._w = w;\r\n        this._x = x;\r\n        this._y = y;\r\n        this._z = z;\r\n        return this;\r\n      }\r\n\r\n      const sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\r\n\r\n      if (sqrSinHalfTheta <= Number.EPSILON) {\r\n        const s = 1 - t;\r\n        this._w = s * w + t * this._w;\r\n        this._x = s * x + t * this._x;\r\n        this._y = s * y + t * this._y;\r\n        this._z = s * z + t * this._z;\r\n        this.normalize();\r\n\r\n        this._onChangeCallback();\r\n\r\n        return this;\r\n      }\r\n\r\n      const sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\r\n      const halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\r\n      const ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\r\n        ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\r\n      this._w = w * ratioA + this._w * ratioB;\r\n      this._x = x * ratioA + this._x * ratioB;\r\n      this._y = y * ratioA + this._y * ratioB;\r\n      this._z = z * ratioA + this._z * ratioB;\r\n\r\n      this._onChangeCallback();\r\n\r\n      return this;\r\n    }\r\n\r\n    slerpQuaternions(qa, qb, t) {\r\n      this.copy(qa).slerp(qb, t);\r\n    }\r\n\r\n    equals(quaternion) {\r\n      return (\r\n        quaternion._x === this._x &&\r\n        quaternion._y === this._y &&\r\n        quaternion._z === this._z &&\r\n        quaternion._w === this._w\r\n      );\r\n    }\r\n\r\n    fromArray(array, offset = 0) {\r\n      this._x = array[offset];\r\n      this._y = array[offset + 1];\r\n      this._z = array[offset + 2];\r\n      this._w = array[offset + 3];\r\n\r\n      this._onChangeCallback();\r\n\r\n      return this;\r\n    }\r\n\r\n    toArray(array = [], offset = 0) {\r\n      array[offset] = this._x;\r\n      array[offset + 1] = this._y;\r\n      array[offset + 2] = this._z;\r\n      array[offset + 3] = this._w;\r\n      return array;\r\n    }\r\n\r\n    fromBufferAttribute(attribute, index) {\r\n      this._x = attribute.getX(index);\r\n      this._y = attribute.getY(index);\r\n      this._z = attribute.getZ(index);\r\n      this._w = attribute.getW(index);\r\n      return this;\r\n    }\r\n\r\n    _onChange(callback) {\r\n      this._onChangeCallback = callback;\r\n      return this;\r\n    }\r\n\r\n    _onChangeCallback() {}\r\n  }\r\n\r\n  Quaternion.prototype.isQuaternion = true;\r\n\r\n  class Vector3 {\r\n    constructor(x = 0, y = 0, z = 0) {\r\n      this.x = x;\r\n      this.y = y;\r\n      this.z = z;\r\n    }\r\n\r\n    set(x, y, z) {\r\n      if (z === undefined) z = this.z; // sprite.scale.set(x,y)\r\n\r\n      this.x = x;\r\n      this.y = y;\r\n      this.z = z;\r\n      return this;\r\n    }\r\n\r\n    setScalar(scalar) {\r\n      this.x = scalar;\r\n      this.y = scalar;\r\n      this.z = scalar;\r\n      return this;\r\n    }\r\n\r\n    setX(x) {\r\n      this.x = x;\r\n      return this;\r\n    }\r\n\r\n    setY(y) {\r\n      this.y = y;\r\n      return this;\r\n    }\r\n\r\n    setZ(z) {\r\n      this.z = z;\r\n      return this;\r\n    }\r\n\r\n    setComponent(index, value) {\r\n      switch (index) {\r\n        case 0:\r\n          this.x = value;\r\n          break;\r\n\r\n        case 1:\r\n          this.y = value;\r\n          break;\r\n\r\n        case 2:\r\n          this.z = value;\r\n          break;\r\n\r\n        default:\r\n          throw new Error('index is out of range: ' + index);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    getComponent(index) {\r\n      switch (index) {\r\n        case 0:\r\n          return this.x;\r\n\r\n        case 1:\r\n          return this.y;\r\n\r\n        case 2:\r\n          return this.z;\r\n\r\n        default:\r\n          throw new Error('index is out of range: ' + index);\r\n      }\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor(this.x, this.y, this.z);\r\n    }\r\n\r\n    copy(v) {\r\n      this.x = v.x;\r\n      this.y = v.y;\r\n      this.z = v.z;\r\n      return this;\r\n    }\r\n\r\n    add(v, w) {\r\n      if (w !== undefined) {\r\n        console.warn(\r\n          'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.',\r\n        );\r\n        return this.addVectors(v, w);\r\n      }\r\n\r\n      this.x += v.x;\r\n      this.y += v.y;\r\n      this.z += v.z;\r\n      return this;\r\n    }\r\n\r\n    addScalar(s) {\r\n      this.x += s;\r\n      this.y += s;\r\n      this.z += s;\r\n      return this;\r\n    }\r\n\r\n    addVectors(a, b) {\r\n      this.x = a.x + b.x;\r\n      this.y = a.y + b.y;\r\n      this.z = a.z + b.z;\r\n      return this;\r\n    }\r\n\r\n    addScaledVector(v, s) {\r\n      this.x += v.x * s;\r\n      this.y += v.y * s;\r\n      this.z += v.z * s;\r\n      return this;\r\n    }\r\n\r\n    sub(v, w) {\r\n      if (w !== undefined) {\r\n        console.warn(\r\n          'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.',\r\n        );\r\n        return this.subVectors(v, w);\r\n      }\r\n\r\n      this.x -= v.x;\r\n      this.y -= v.y;\r\n      this.z -= v.z;\r\n      return this;\r\n    }\r\n\r\n    subScalar(s) {\r\n      this.x -= s;\r\n      this.y -= s;\r\n      this.z -= s;\r\n      return this;\r\n    }\r\n\r\n    subVectors(a, b) {\r\n      this.x = a.x - b.x;\r\n      this.y = a.y - b.y;\r\n      this.z = a.z - b.z;\r\n      return this;\r\n    }\r\n\r\n    multiply(v, w) {\r\n      if (w !== undefined) {\r\n        console.warn(\r\n          'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.',\r\n        );\r\n        return this.multiplyVectors(v, w);\r\n      }\r\n\r\n      this.x *= v.x;\r\n      this.y *= v.y;\r\n      this.z *= v.z;\r\n      return this;\r\n    }\r\n\r\n    multiplyScalar(scalar) {\r\n      this.x *= scalar;\r\n      this.y *= scalar;\r\n      this.z *= scalar;\r\n      return this;\r\n    }\r\n\r\n    multiplyVectors(a, b) {\r\n      this.x = a.x * b.x;\r\n      this.y = a.y * b.y;\r\n      this.z = a.z * b.z;\r\n      return this;\r\n    }\r\n\r\n    applyEuler(euler) {\r\n      if (!(euler && euler.isEuler)) {\r\n        console.error(\r\n          'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.',\r\n        );\r\n      }\r\n\r\n      return this.applyQuaternion(_quaternion$4.setFromEuler(euler));\r\n    }\r\n\r\n    applyAxisAngle(axis, angle) {\r\n      return this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis, angle));\r\n    }\r\n\r\n    applyMatrix3(m) {\r\n      const x = this.x,\r\n        y = this.y,\r\n        z = this.z;\r\n      const e = m.elements;\r\n      this.x = e[0] * x + e[3] * y + e[6] * z;\r\n      this.y = e[1] * x + e[4] * y + e[7] * z;\r\n      this.z = e[2] * x + e[5] * y + e[8] * z;\r\n      return this;\r\n    }\r\n\r\n    applyNormalMatrix(m) {\r\n      return this.applyMatrix3(m).normalize();\r\n    }\r\n\r\n    applyMatrix4(m) {\r\n      const x = this.x,\r\n        y = this.y,\r\n        z = this.z;\r\n      const e = m.elements;\r\n      const w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\r\n      this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\r\n      this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\r\n      this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\r\n      return this;\r\n    }\r\n\r\n    applyQuaternion(q) {\r\n      const x = this.x,\r\n        y = this.y,\r\n        z = this.z;\r\n      const qx = q.x,\r\n        qy = q.y,\r\n        qz = q.z,\r\n        qw = q.w; // calculate quat * vector\r\n\r\n      const ix = qw * x + qy * z - qz * y;\r\n      const iy = qw * y + qz * x - qx * z;\r\n      const iz = qw * z + qx * y - qy * x;\r\n      const iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\r\n\r\n      this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n      this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n      this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n      return this;\r\n    }\r\n\r\n    project(camera) {\r\n      return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\r\n    }\r\n\r\n    unproject(camera) {\r\n      return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\r\n    }\r\n\r\n    transformDirection(m) {\r\n      // input: THREE.Matrix4 affine matrix\r\n      // vector interpreted as a direction\r\n      const x = this.x,\r\n        y = this.y,\r\n        z = this.z;\r\n      const e = m.elements;\r\n      this.x = e[0] * x + e[4] * y + e[8] * z;\r\n      this.y = e[1] * x + e[5] * y + e[9] * z;\r\n      this.z = e[2] * x + e[6] * y + e[10] * z;\r\n      return this.normalize();\r\n    }\r\n\r\n    divide(v) {\r\n      this.x /= v.x;\r\n      this.y /= v.y;\r\n      this.z /= v.z;\r\n      return this;\r\n    }\r\n\r\n    divideScalar(scalar) {\r\n      return this.multiplyScalar(1 / scalar);\r\n    }\r\n\r\n    min(v) {\r\n      this.x = Math.min(this.x, v.x);\r\n      this.y = Math.min(this.y, v.y);\r\n      this.z = Math.min(this.z, v.z);\r\n      return this;\r\n    }\r\n\r\n    max(v) {\r\n      this.x = Math.max(this.x, v.x);\r\n      this.y = Math.max(this.y, v.y);\r\n      this.z = Math.max(this.z, v.z);\r\n      return this;\r\n    }\r\n\r\n    clamp(min, max) {\r\n      // assumes min < max, componentwise\r\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\r\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\r\n      this.z = Math.max(min.z, Math.min(max.z, this.z));\r\n      return this;\r\n    }\r\n\r\n    clampScalar(minVal, maxVal) {\r\n      this.x = Math.max(minVal, Math.min(maxVal, this.x));\r\n      this.y = Math.max(minVal, Math.min(maxVal, this.y));\r\n      this.z = Math.max(minVal, Math.min(maxVal, this.z));\r\n      return this;\r\n    }\r\n\r\n    clampLength(min, max) {\r\n      const length = this.length();\r\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\r\n    }\r\n\r\n    floor() {\r\n      this.x = Math.floor(this.x);\r\n      this.y = Math.floor(this.y);\r\n      this.z = Math.floor(this.z);\r\n      return this;\r\n    }\r\n\r\n    ceil() {\r\n      this.x = Math.ceil(this.x);\r\n      this.y = Math.ceil(this.y);\r\n      this.z = Math.ceil(this.z);\r\n      return this;\r\n    }\r\n\r\n    round() {\r\n      this.x = Math.round(this.x);\r\n      this.y = Math.round(this.y);\r\n      this.z = Math.round(this.z);\r\n      return this;\r\n    }\r\n\r\n    roundToZero() {\r\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\r\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\r\n      this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\r\n      return this;\r\n    }\r\n\r\n    negate() {\r\n      this.x = -this.x;\r\n      this.y = -this.y;\r\n      this.z = -this.z;\r\n      return this;\r\n    }\r\n\r\n    dot(v) {\r\n      return this.x * v.x + this.y * v.y + this.z * v.z;\r\n    } // TODO lengthSquared?\r\n\r\n    lengthSq() {\r\n      return this.x * this.x + this.y * this.y + this.z * this.z;\r\n    }\r\n\r\n    length() {\r\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n    }\r\n\r\n    manhattanLength() {\r\n      return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\r\n    }\r\n\r\n    normalize() {\r\n      return this.divideScalar(this.length() || 1);\r\n    }\r\n\r\n    setLength(length) {\r\n      return this.normalize().multiplyScalar(length);\r\n    }\r\n\r\n    lerp(v, alpha) {\r\n      this.x += (v.x - this.x) * alpha;\r\n      this.y += (v.y - this.y) * alpha;\r\n      this.z += (v.z - this.z) * alpha;\r\n      return this;\r\n    }\r\n\r\n    lerpVectors(v1, v2, alpha) {\r\n      this.x = v1.x + (v2.x - v1.x) * alpha;\r\n      this.y = v1.y + (v2.y - v1.y) * alpha;\r\n      this.z = v1.z + (v2.z - v1.z) * alpha;\r\n      return this;\r\n    }\r\n\r\n    cross(v, w) {\r\n      if (w !== undefined) {\r\n        console.warn(\r\n          'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.',\r\n        );\r\n        return this.crossVectors(v, w);\r\n      }\r\n\r\n      return this.crossVectors(this, v);\r\n    }\r\n\r\n    crossVectors(a, b) {\r\n      const ax = a.x,\r\n        ay = a.y,\r\n        az = a.z;\r\n      const bx = b.x,\r\n        by = b.y,\r\n        bz = b.z;\r\n      this.x = ay * bz - az * by;\r\n      this.y = az * bx - ax * bz;\r\n      this.z = ax * by - ay * bx;\r\n      return this;\r\n    }\r\n\r\n    projectOnVector(v) {\r\n      const denominator = v.lengthSq();\r\n      if (denominator === 0) return this.set(0, 0, 0);\r\n      const scalar = v.dot(this) / denominator;\r\n      return this.copy(v).multiplyScalar(scalar);\r\n    }\r\n\r\n    projectOnPlane(planeNormal) {\r\n      _vector$c.copy(this).projectOnVector(planeNormal);\r\n\r\n      return this.sub(_vector$c);\r\n    }\r\n\r\n    reflect(normal) {\r\n      // reflect incident vector off plane orthogonal to normal\r\n      // normal is assumed to have unit length\r\n      return this.sub(_vector$c.copy(normal).multiplyScalar(2 * this.dot(normal)));\r\n    }\r\n\r\n    angleTo(v) {\r\n      const denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\r\n      if (denominator === 0) return Math.PI / 2;\r\n      const theta = this.dot(v) / denominator; // clamp, to handle numerical problems\r\n\r\n      return Math.acos(clamp(theta, -1, 1));\r\n    }\r\n\r\n    distanceTo(v) {\r\n      return Math.sqrt(this.distanceToSquared(v));\r\n    }\r\n\r\n    distanceToSquared(v) {\r\n      const dx = this.x - v.x,\r\n        dy = this.y - v.y,\r\n        dz = this.z - v.z;\r\n      return dx * dx + dy * dy + dz * dz;\r\n    }\r\n\r\n    manhattanDistanceTo(v) {\r\n      return Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\r\n    }\r\n\r\n    setFromSpherical(s) {\r\n      return this.setFromSphericalCoords(s.radius, s.phi, s.theta);\r\n    }\r\n\r\n    setFromSphericalCoords(radius, phi, theta) {\r\n      const sinPhiRadius = Math.sin(phi) * radius;\r\n      this.x = sinPhiRadius * Math.sin(theta);\r\n      this.y = Math.cos(phi) * radius;\r\n      this.z = sinPhiRadius * Math.cos(theta);\r\n      return this;\r\n    }\r\n\r\n    setFromCylindrical(c) {\r\n      return this.setFromCylindricalCoords(c.radius, c.theta, c.y);\r\n    }\r\n\r\n    setFromCylindricalCoords(radius, theta, y) {\r\n      this.x = radius * Math.sin(theta);\r\n      this.y = y;\r\n      this.z = radius * Math.cos(theta);\r\n      return this;\r\n    }\r\n\r\n    setFromMatrixPosition(m) {\r\n      const e = m.elements;\r\n      this.x = e[12];\r\n      this.y = e[13];\r\n      this.z = e[14];\r\n      return this;\r\n    }\r\n\r\n    setFromMatrixScale(m) {\r\n      const sx = this.setFromMatrixColumn(m, 0).length();\r\n      const sy = this.setFromMatrixColumn(m, 1).length();\r\n      const sz = this.setFromMatrixColumn(m, 2).length();\r\n      this.x = sx;\r\n      this.y = sy;\r\n      this.z = sz;\r\n      return this;\r\n    }\r\n\r\n    setFromMatrixColumn(m, index) {\r\n      return this.fromArray(m.elements, index * 4);\r\n    }\r\n\r\n    setFromMatrix3Column(m, index) {\r\n      return this.fromArray(m.elements, index * 3);\r\n    }\r\n\r\n    equals(v) {\r\n      return v.x === this.x && v.y === this.y && v.z === this.z;\r\n    }\r\n\r\n    fromArray(array, offset = 0) {\r\n      this.x = array[offset];\r\n      this.y = array[offset + 1];\r\n      this.z = array[offset + 2];\r\n      return this;\r\n    }\r\n\r\n    toArray(array = [], offset = 0) {\r\n      array[offset] = this.x;\r\n      array[offset + 1] = this.y;\r\n      array[offset + 2] = this.z;\r\n      return array;\r\n    }\r\n\r\n    fromBufferAttribute(attribute, index, offset) {\r\n      if (offset !== undefined) {\r\n        console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\r\n      }\r\n\r\n      this.x = attribute.getX(index);\r\n      this.y = attribute.getY(index);\r\n      this.z = attribute.getZ(index);\r\n      return this;\r\n    }\r\n\r\n    random() {\r\n      this.x = Math.random();\r\n      this.y = Math.random();\r\n      this.z = Math.random();\r\n      return this;\r\n    }\r\n  }\r\n\r\n  Vector3.prototype.isVector3 = true;\r\n\r\n  const _vector$c = /*@__PURE__*/ new Vector3();\r\n\r\n  const _quaternion$4 = /*@__PURE__*/ new Quaternion();\r\n\r\n  class Box3 {\r\n    constructor(\r\n      min = new Vector3(+Infinity, +Infinity, +Infinity),\r\n      max = new Vector3(-Infinity, -Infinity, -Infinity),\r\n    ) {\r\n      this.min = min;\r\n      this.max = max;\r\n    }\r\n\r\n    set(min, max) {\r\n      this.min.copy(min);\r\n      this.max.copy(max);\r\n      return this;\r\n    }\r\n\r\n    setFromArray(array) {\r\n      let minX = +Infinity;\r\n      let minY = +Infinity;\r\n      let minZ = +Infinity;\r\n      let maxX = -Infinity;\r\n      let maxY = -Infinity;\r\n      let maxZ = -Infinity;\r\n\r\n      for (let i = 0, l = array.length; i < l; i += 3) {\r\n        const x = array[i];\r\n        const y = array[i + 1];\r\n        const z = array[i + 2];\r\n        if (x < minX) minX = x;\r\n        if (y < minY) minY = y;\r\n        if (z < minZ) minZ = z;\r\n        if (x > maxX) maxX = x;\r\n        if (y > maxY) maxY = y;\r\n        if (z > maxZ) maxZ = z;\r\n      }\r\n\r\n      this.min.set(minX, minY, minZ);\r\n      this.max.set(maxX, maxY, maxZ);\r\n      return this;\r\n    }\r\n\r\n    setFromBufferAttribute(attribute) {\r\n      let minX = +Infinity;\r\n      let minY = +Infinity;\r\n      let minZ = +Infinity;\r\n      let maxX = -Infinity;\r\n      let maxY = -Infinity;\r\n      let maxZ = -Infinity;\r\n\r\n      for (let i = 0, l = attribute.count; i < l; i++) {\r\n        const x = attribute.getX(i);\r\n        const y = attribute.getY(i);\r\n        const z = attribute.getZ(i);\r\n        if (x < minX) minX = x;\r\n        if (y < minY) minY = y;\r\n        if (z < minZ) minZ = z;\r\n        if (x > maxX) maxX = x;\r\n        if (y > maxY) maxY = y;\r\n        if (z > maxZ) maxZ = z;\r\n      }\r\n\r\n      this.min.set(minX, minY, minZ);\r\n      this.max.set(maxX, maxY, maxZ);\r\n      return this;\r\n    }\r\n\r\n    setFromPoints(points) {\r\n      this.makeEmpty();\r\n\r\n      for (let i = 0, il = points.length; i < il; i++) {\r\n        this.expandByPoint(points[i]);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    setFromCenterAndSize(center, size) {\r\n      const halfSize = _vector$b.copy(size).multiplyScalar(0.5);\r\n\r\n      this.min.copy(center).sub(halfSize);\r\n      this.max.copy(center).add(halfSize);\r\n      return this;\r\n    }\r\n\r\n    setFromObject(object) {\r\n      this.makeEmpty();\r\n      return this.expandByObject(object);\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().copy(this);\r\n    }\r\n\r\n    copy(box) {\r\n      this.min.copy(box.min);\r\n      this.max.copy(box.max);\r\n      return this;\r\n    }\r\n\r\n    makeEmpty() {\r\n      this.min.x = this.min.y = this.min.z = +Infinity;\r\n      this.max.x = this.max.y = this.max.z = -Infinity;\r\n      return this;\r\n    }\r\n\r\n    isEmpty() {\r\n      // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n      return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\r\n    }\r\n\r\n    getCenter(target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Box3: .getCenter() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      return this.isEmpty()\r\n        ? target.set(0, 0, 0)\r\n        : target.addVectors(this.min, this.max).multiplyScalar(0.5);\r\n    }\r\n\r\n    getSize(target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Box3: .getSize() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      return this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\r\n    }\r\n\r\n    expandByPoint(point) {\r\n      this.min.min(point);\r\n      this.max.max(point);\r\n      return this;\r\n    }\r\n\r\n    expandByVector(vector) {\r\n      this.min.sub(vector);\r\n      this.max.add(vector);\r\n      return this;\r\n    }\r\n\r\n    expandByScalar(scalar) {\r\n      this.min.addScalar(-scalar);\r\n      this.max.addScalar(scalar);\r\n      return this;\r\n    }\r\n\r\n    expandByObject(object) {\r\n      // Computes the world-axis-aligned bounding box of an object (including its children),\r\n      // accounting for both the object's, and children's, world transforms\r\n      object.updateWorldMatrix(false, false);\r\n      const geometry = object.geometry;\r\n\r\n      if (geometry !== undefined) {\r\n        if (geometry.boundingBox === null) {\r\n          geometry.computeBoundingBox();\r\n        }\r\n\r\n        _box$3.copy(geometry.boundingBox);\r\n\r\n        _box$3.applyMatrix4(object.matrixWorld);\r\n\r\n        this.union(_box$3);\r\n      }\r\n\r\n      const children = object.children;\r\n\r\n      for (let i = 0, l = children.length; i < l; i++) {\r\n        this.expandByObject(children[i]);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    containsPoint(point) {\r\n      return point.x < this.min.x ||\r\n        point.x > this.max.x ||\r\n        point.y < this.min.y ||\r\n        point.y > this.max.y ||\r\n        point.z < this.min.z ||\r\n        point.z > this.max.z\r\n        ? false\r\n        : true;\r\n    }\r\n\r\n    containsBox(box) {\r\n      return (\r\n        this.min.x <= box.min.x &&\r\n        box.max.x <= this.max.x &&\r\n        this.min.y <= box.min.y &&\r\n        box.max.y <= this.max.y &&\r\n        this.min.z <= box.min.z &&\r\n        box.max.z <= this.max.z\r\n      );\r\n    }\r\n\r\n    getParameter(point, target) {\r\n      // This can potentially have a divide by zero if the box\r\n      // has a size dimension of 0.\r\n      if (target === undefined) {\r\n        console.warn('THREE.Box3: .getParameter() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      return target.set(\r\n        (point.x - this.min.x) / (this.max.x - this.min.x),\r\n        (point.y - this.min.y) / (this.max.y - this.min.y),\r\n        (point.z - this.min.z) / (this.max.z - this.min.z),\r\n      );\r\n    }\r\n\r\n    intersectsBox(box) {\r\n      // using 6 splitting planes to rule out intersections.\r\n      return box.max.x < this.min.x ||\r\n        box.min.x > this.max.x ||\r\n        box.max.y < this.min.y ||\r\n        box.min.y > this.max.y ||\r\n        box.max.z < this.min.z ||\r\n        box.min.z > this.max.z\r\n        ? false\r\n        : true;\r\n    }\r\n\r\n    intersectsSphere(sphere) {\r\n      // Find the point on the AABB closest to the sphere center.\r\n      this.clampPoint(sphere.center, _vector$b); // If that point is inside the sphere, the AABB and sphere intersect.\r\n\r\n      return _vector$b.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\r\n    }\r\n\r\n    intersectsPlane(plane) {\r\n      // We compute the minimum and maximum dot product values. If those values\r\n      // are on the same side (back or front) of the plane, then there is no intersection.\r\n      let min, max;\r\n\r\n      if (plane.normal.x > 0) {\r\n        min = plane.normal.x * this.min.x;\r\n        max = plane.normal.x * this.max.x;\r\n      } else {\r\n        min = plane.normal.x * this.max.x;\r\n        max = plane.normal.x * this.min.x;\r\n      }\r\n\r\n      if (plane.normal.y > 0) {\r\n        min += plane.normal.y * this.min.y;\r\n        max += plane.normal.y * this.max.y;\r\n      } else {\r\n        min += plane.normal.y * this.max.y;\r\n        max += plane.normal.y * this.min.y;\r\n      }\r\n\r\n      if (plane.normal.z > 0) {\r\n        min += plane.normal.z * this.min.z;\r\n        max += plane.normal.z * this.max.z;\r\n      } else {\r\n        min += plane.normal.z * this.max.z;\r\n        max += plane.normal.z * this.min.z;\r\n      }\r\n\r\n      return min <= -plane.constant && max >= -plane.constant;\r\n    }\r\n\r\n    intersectsTriangle(triangle) {\r\n      if (this.isEmpty()) {\r\n        return false;\r\n      } // compute box center and extents\r\n\r\n      this.getCenter(_center);\r\n\r\n      _extents.subVectors(this.max, _center); // translate triangle to aabb origin\r\n\r\n      _v0$2.subVectors(triangle.a, _center);\r\n\r\n      _v1$7.subVectors(triangle.b, _center);\r\n\r\n      _v2$3.subVectors(triangle.c, _center); // compute edge vectors for triangle\r\n\r\n      _f0.subVectors(_v1$7, _v0$2);\r\n\r\n      _f1.subVectors(_v2$3, _v1$7);\r\n\r\n      _f2.subVectors(_v0$2, _v2$3); // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\r\n      // make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\r\n      // axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\r\n\r\n      let axes = [\r\n        0,\r\n        -_f0.z,\r\n        _f0.y,\r\n        0,\r\n        -_f1.z,\r\n        _f1.y,\r\n        0,\r\n        -_f2.z,\r\n        _f2.y,\r\n        _f0.z,\r\n        0,\r\n        -_f0.x,\r\n        _f1.z,\r\n        0,\r\n        -_f1.x,\r\n        _f2.z,\r\n        0,\r\n        -_f2.x,\r\n        -_f0.y,\r\n        _f0.x,\r\n        0,\r\n        -_f1.y,\r\n        _f1.x,\r\n        0,\r\n        -_f2.y,\r\n        _f2.x,\r\n        0,\r\n      ];\r\n\r\n      if (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\r\n        return false;\r\n      } // test 3 face normals from the aabb\r\n\r\n      axes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n\r\n      if (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\r\n        return false;\r\n      } // finally testing the face normal of the triangle\r\n      // use already existing triangle edge vectors here\r\n\r\n      _triangleNormal.crossVectors(_f0, _f1);\r\n\r\n      axes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];\r\n      return satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents);\r\n    }\r\n\r\n    clampPoint(point, target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Box3: .clampPoint() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      return target.copy(point).clamp(this.min, this.max);\r\n    }\r\n\r\n    distanceToPoint(point) {\r\n      const clampedPoint = _vector$b.copy(point).clamp(this.min, this.max);\r\n\r\n      return clampedPoint.sub(point).length();\r\n    }\r\n\r\n    getBoundingSphere(target) {\r\n      if (target === undefined) {\r\n        console.error('THREE.Box3: .getBoundingSphere() target is now required'); //target = new Sphere(); // removed to avoid cyclic dependency\r\n      }\r\n\r\n      this.getCenter(target.center);\r\n      target.radius = this.getSize(_vector$b).length() * 0.5;\r\n      return target;\r\n    }\r\n\r\n    intersect(box) {\r\n      this.min.max(box.min);\r\n      this.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\r\n\r\n      if (this.isEmpty()) this.makeEmpty();\r\n      return this;\r\n    }\r\n\r\n    union(box) {\r\n      this.min.min(box.min);\r\n      this.max.max(box.max);\r\n      return this;\r\n    }\r\n\r\n    applyMatrix4(matrix) {\r\n      // transform of empty box is an empty box.\r\n      if (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\r\n      _points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\r\n\r\n      _points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\r\n\r\n      _points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\r\n\r\n      _points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\r\n\r\n      _points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\r\n\r\n      _points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\r\n\r\n      _points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\r\n\r\n      _points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\r\n\r\n      this.setFromPoints(_points);\r\n      return this;\r\n    }\r\n\r\n    translate(offset) {\r\n      this.min.add(offset);\r\n      this.max.add(offset);\r\n      return this;\r\n    }\r\n\r\n    equals(box) {\r\n      return box.min.equals(this.min) && box.max.equals(this.max);\r\n    }\r\n  }\r\n\r\n  Box3.prototype.isBox3 = true;\r\n  const _points = [\r\n    /*@__PURE__*/ new Vector3(),\r\n    /*@__PURE__*/ new Vector3(),\r\n    /*@__PURE__*/ new Vector3(),\r\n    /*@__PURE__*/ new Vector3(),\r\n    /*@__PURE__*/ new Vector3(),\r\n    /*@__PURE__*/ new Vector3(),\r\n    /*@__PURE__*/ new Vector3(),\r\n    /*@__PURE__*/ new Vector3(),\r\n  ];\r\n\r\n  const _vector$b = /*@__PURE__*/ new Vector3();\r\n\r\n  const _box$3 = /*@__PURE__*/ new Box3(); // triangle centered vertices\r\n\r\n  const _v0$2 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _v1$7 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _v2$3 = /*@__PURE__*/ new Vector3(); // triangle edge vectors\r\n\r\n  const _f0 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _f1 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _f2 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _center = /*@__PURE__*/ new Vector3();\r\n\r\n  const _extents = /*@__PURE__*/ new Vector3();\r\n\r\n  const _triangleNormal = /*@__PURE__*/ new Vector3();\r\n\r\n  const _testAxis = /*@__PURE__*/ new Vector3();\r\n\r\n  function satForAxes(axes, v0, v1, v2, extents) {\r\n    for (let i = 0, j = axes.length - 3; i <= j; i += 3) {\r\n      _testAxis.fromArray(axes, i); // project the aabb onto the seperating axis\r\n\r\n      const r =\r\n        extents.x * Math.abs(_testAxis.x) +\r\n        extents.y * Math.abs(_testAxis.y) +\r\n        extents.z * Math.abs(_testAxis.z); // project all 3 vertices of the triangle onto the seperating axis\r\n\r\n      const p0 = v0.dot(_testAxis);\r\n      const p1 = v1.dot(_testAxis);\r\n      const p2 = v2.dot(_testAxis); // actual test, basically see if either of the most extreme of the triangle points intersects r\r\n\r\n      if (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\r\n        // points of the projected triangle are outside the projected half-length of the aabb\r\n        // the axis is seperating and we can exit\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  const _box$2 = /*@__PURE__*/ new Box3();\r\n\r\n  const _v1$6 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _toFarthestPoint = /*@__PURE__*/ new Vector3();\r\n\r\n  const _toPoint = /*@__PURE__*/ new Vector3();\r\n\r\n  class Sphere {\r\n    constructor(center = new Vector3(), radius = -1) {\r\n      this.center = center;\r\n      this.radius = radius;\r\n    }\r\n\r\n    set(center, radius) {\r\n      this.center.copy(center);\r\n      this.radius = radius;\r\n      return this;\r\n    }\r\n\r\n    setFromPoints(points, optionalCenter) {\r\n      const center = this.center;\r\n\r\n      if (optionalCenter !== undefined) {\r\n        center.copy(optionalCenter);\r\n      } else {\r\n        _box$2.setFromPoints(points).getCenter(center);\r\n      }\r\n\r\n      let maxRadiusSq = 0;\r\n\r\n      for (let i = 0, il = points.length; i < il; i++) {\r\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\r\n      }\r\n\r\n      this.radius = Math.sqrt(maxRadiusSq);\r\n      return this;\r\n    }\r\n\r\n    copy(sphere) {\r\n      this.center.copy(sphere.center);\r\n      this.radius = sphere.radius;\r\n      return this;\r\n    }\r\n\r\n    isEmpty() {\r\n      return this.radius < 0;\r\n    }\r\n\r\n    makeEmpty() {\r\n      this.center.set(0, 0, 0);\r\n      this.radius = -1;\r\n      return this;\r\n    }\r\n\r\n    containsPoint(point) {\r\n      return point.distanceToSquared(this.center) <= this.radius * this.radius;\r\n    }\r\n\r\n    distanceToPoint(point) {\r\n      return point.distanceTo(this.center) - this.radius;\r\n    }\r\n\r\n    intersectsSphere(sphere) {\r\n      const radiusSum = this.radius + sphere.radius;\r\n      return sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\r\n    }\r\n\r\n    intersectsBox(box) {\r\n      return box.intersectsSphere(this);\r\n    }\r\n\r\n    intersectsPlane(plane) {\r\n      return Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\r\n    }\r\n\r\n    clampPoint(point, target) {\r\n      const deltaLengthSq = this.center.distanceToSquared(point);\r\n\r\n      if (target === undefined) {\r\n        console.warn('THREE.Sphere: .clampPoint() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      target.copy(point);\r\n\r\n      if (deltaLengthSq > this.radius * this.radius) {\r\n        target.sub(this.center).normalize();\r\n        target.multiplyScalar(this.radius).add(this.center);\r\n      }\r\n\r\n      return target;\r\n    }\r\n\r\n    getBoundingBox(target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Sphere: .getBoundingBox() target is now required');\r\n        target = new Box3();\r\n      }\r\n\r\n      if (this.isEmpty()) {\r\n        // Empty sphere produces empty bounding box\r\n        target.makeEmpty();\r\n        return target;\r\n      }\r\n\r\n      target.set(this.center, this.center);\r\n      target.expandByScalar(this.radius);\r\n      return target;\r\n    }\r\n\r\n    applyMatrix4(matrix) {\r\n      this.center.applyMatrix4(matrix);\r\n      this.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n      return this;\r\n    }\r\n\r\n    translate(offset) {\r\n      this.center.add(offset);\r\n      return this;\r\n    }\r\n\r\n    expandByPoint(point) {\r\n      // from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\r\n      _toPoint.subVectors(point, this.center);\r\n\r\n      const lengthSq = _toPoint.lengthSq();\r\n\r\n      if (lengthSq > this.radius * this.radius) {\r\n        const length = Math.sqrt(lengthSq);\r\n        const missingRadiusHalf = (length - this.radius) * 0.5; // Nudge this sphere towards the target point. Add half the missing distance to radius,\r\n        // and the other half to position. This gives a tighter enclosure, instead of if\r\n        // the whole missing distance were just added to radius.\r\n\r\n        this.center.add(_toPoint.multiplyScalar(missingRadiusHalf / length));\r\n        this.radius += missingRadiusHalf;\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    union(sphere) {\r\n      // from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\r\n      // To enclose another sphere into this sphere, we only need to enclose two points:\r\n      // 1) Enclose the farthest point on the other sphere into this sphere.\r\n      // 2) Enclose the opposite point of the farthest point into this sphere.\r\n      _toFarthestPoint\r\n        .subVectors(sphere.center, this.center)\r\n        .normalize()\r\n        .multiplyScalar(sphere.radius);\r\n\r\n      this.expandByPoint(_v1$6.copy(sphere.center).add(_toFarthestPoint));\r\n      this.expandByPoint(_v1$6.copy(sphere.center).sub(_toFarthestPoint));\r\n      return this;\r\n    }\r\n\r\n    equals(sphere) {\r\n      return sphere.center.equals(this.center) && sphere.radius === this.radius;\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().copy(this);\r\n    }\r\n  }\r\n\r\n  const _vector$a = /*@__PURE__*/ new Vector3();\r\n\r\n  const _segCenter = /*@__PURE__*/ new Vector3();\r\n\r\n  const _segDir = /*@__PURE__*/ new Vector3();\r\n\r\n  const _diff = /*@__PURE__*/ new Vector3();\r\n\r\n  const _edge1 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _edge2 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _normal$1 = /*@__PURE__*/ new Vector3();\r\n\r\n  class Ray {\r\n    constructor(origin = new Vector3(), direction = new Vector3(0, 0, -1)) {\r\n      this.origin = origin;\r\n      this.direction = direction;\r\n    }\r\n\r\n    set(origin, direction) {\r\n      this.origin.copy(origin);\r\n      this.direction.copy(direction);\r\n      return this;\r\n    }\r\n\r\n    copy(ray) {\r\n      this.origin.copy(ray.origin);\r\n      this.direction.copy(ray.direction);\r\n      return this;\r\n    }\r\n\r\n    at(t, target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Ray: .at() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      return target.copy(this.direction).multiplyScalar(t).add(this.origin);\r\n    }\r\n\r\n    lookAt(v) {\r\n      this.direction.copy(v).sub(this.origin).normalize();\r\n      return this;\r\n    }\r\n\r\n    recast(t) {\r\n      this.origin.copy(this.at(t, _vector$a));\r\n      return this;\r\n    }\r\n\r\n    closestPointToPoint(point, target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Ray: .closestPointToPoint() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      target.subVectors(point, this.origin);\r\n      const directionDistance = target.dot(this.direction);\r\n\r\n      if (directionDistance < 0) {\r\n        return target.copy(this.origin);\r\n      }\r\n\r\n      return target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\r\n    }\r\n\r\n    distanceToPoint(point) {\r\n      return Math.sqrt(this.distanceSqToPoint(point));\r\n    }\r\n\r\n    distanceSqToPoint(point) {\r\n      const directionDistance = _vector$a.subVectors(point, this.origin).dot(this.direction); // point behind the ray\r\n\r\n      if (directionDistance < 0) {\r\n        return this.origin.distanceToSquared(point);\r\n      }\r\n\r\n      _vector$a.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\r\n\r\n      return _vector$a.distanceToSquared(point);\r\n    }\r\n\r\n    distanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\r\n      // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\r\n      // It returns the min distance between the ray and the segment\r\n      // defined by v0 and v1\r\n      // It can also set two optional targets :\r\n      // - The closest point on the ray\r\n      // - The closest point on the segment\r\n      _segCenter.copy(v0).add(v1).multiplyScalar(0.5);\r\n\r\n      _segDir.copy(v1).sub(v0).normalize();\r\n\r\n      _diff.copy(this.origin).sub(_segCenter);\r\n\r\n      const segExtent = v0.distanceTo(v1) * 0.5;\r\n      const a01 = -this.direction.dot(_segDir);\r\n\r\n      const b0 = _diff.dot(this.direction);\r\n\r\n      const b1 = -_diff.dot(_segDir);\r\n\r\n      const c = _diff.lengthSq();\r\n\r\n      const det = Math.abs(1 - a01 * a01);\r\n      let s0, s1, sqrDist, extDet;\r\n\r\n      if (det > 0) {\r\n        // The ray and segment are not parallel.\r\n        s0 = a01 * b1 - b0;\r\n        s1 = a01 * b0 - b1;\r\n        extDet = segExtent * det;\r\n\r\n        if (s0 >= 0) {\r\n          if (s1 >= -extDet) {\r\n            if (s1 <= extDet) {\r\n              // region 0\r\n              // Minimum at interior points of ray and segment.\r\n              const invDet = 1 / det;\r\n              s0 *= invDet;\r\n              s1 *= invDet;\r\n              sqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\r\n            } else {\r\n              // region 1\r\n              s1 = segExtent;\r\n              s0 = Math.max(0, -(a01 * s1 + b0));\r\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\r\n            }\r\n          } else {\r\n            // region 5\r\n            s1 = -segExtent;\r\n            s0 = Math.max(0, -(a01 * s1 + b0));\r\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\r\n          }\r\n        } else {\r\n          if (s1 <= -extDet) {\r\n            // region 4\r\n            s0 = Math.max(0, -(-a01 * segExtent + b0));\r\n            s1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\r\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\r\n          } else if (s1 <= extDet) {\r\n            // region 3\r\n            s0 = 0;\r\n            s1 = Math.min(Math.max(-segExtent, -b1), segExtent);\r\n            sqrDist = s1 * (s1 + 2 * b1) + c;\r\n          } else {\r\n            // region 2\r\n            s0 = Math.max(0, -(a01 * segExtent + b0));\r\n            s1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\r\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\r\n          }\r\n        }\r\n      } else {\r\n        // Ray and segment are parallel.\r\n        s1 = a01 > 0 ? -segExtent : segExtent;\r\n        s0 = Math.max(0, -(a01 * s1 + b0));\r\n        sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\r\n      }\r\n\r\n      if (optionalPointOnRay) {\r\n        optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\r\n      }\r\n\r\n      if (optionalPointOnSegment) {\r\n        optionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);\r\n      }\r\n\r\n      return sqrDist;\r\n    }\r\n\r\n    intersectSphere(sphere, target) {\r\n      _vector$a.subVectors(sphere.center, this.origin);\r\n\r\n      const tca = _vector$a.dot(this.direction);\r\n\r\n      const d2 = _vector$a.dot(_vector$a) - tca * tca;\r\n      const radius2 = sphere.radius * sphere.radius;\r\n      if (d2 > radius2) return null;\r\n      const thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\r\n\r\n      const t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\r\n\r\n      const t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\r\n\r\n      if (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\r\n      // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n      // in order to always return an intersect point that is in front of the ray.\r\n\r\n      if (t0 < 0) return this.at(t1, target); // else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\r\n      return this.at(t0, target);\r\n    }\r\n\r\n    intersectsSphere(sphere) {\r\n      return this.distanceSqToPoint(sphere.center) <= sphere.radius * sphere.radius;\r\n    }\r\n\r\n    distanceToPlane(plane) {\r\n      const denominator = plane.normal.dot(this.direction);\r\n\r\n      if (denominator === 0) {\r\n        // line is coplanar, return origin\r\n        if (plane.distanceToPoint(this.origin) === 0) {\r\n          return 0;\r\n        } // Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n        return null;\r\n      }\r\n\r\n      const t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\r\n\r\n      return t >= 0 ? t : null;\r\n    }\r\n\r\n    intersectPlane(plane, target) {\r\n      const t = this.distanceToPlane(plane);\r\n\r\n      if (t === null) {\r\n        return null;\r\n      }\r\n\r\n      return this.at(t, target);\r\n    }\r\n\r\n    intersectsPlane(plane) {\r\n      // check if the ray lies on the plane first\r\n      const distToPoint = plane.distanceToPoint(this.origin);\r\n\r\n      if (distToPoint === 0) {\r\n        return true;\r\n      }\r\n\r\n      const denominator = plane.normal.dot(this.direction);\r\n\r\n      if (denominator * distToPoint < 0) {\r\n        return true;\r\n      } // ray origin is behind the plane (and is pointing behind it)\r\n\r\n      return false;\r\n    }\r\n\r\n    intersectBox(box, target) {\r\n      let tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n      const invdirx = 1 / this.direction.x,\r\n        invdiry = 1 / this.direction.y,\r\n        invdirz = 1 / this.direction.z;\r\n      const origin = this.origin;\r\n\r\n      if (invdirx >= 0) {\r\n        tmin = (box.min.x - origin.x) * invdirx;\r\n        tmax = (box.max.x - origin.x) * invdirx;\r\n      } else {\r\n        tmin = (box.max.x - origin.x) * invdirx;\r\n        tmax = (box.min.x - origin.x) * invdirx;\r\n      }\r\n\r\n      if (invdiry >= 0) {\r\n        tymin = (box.min.y - origin.y) * invdiry;\r\n        tymax = (box.max.y - origin.y) * invdiry;\r\n      } else {\r\n        tymin = (box.max.y - origin.y) * invdiry;\r\n        tymax = (box.min.y - origin.y) * invdiry;\r\n      }\r\n\r\n      if (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\r\n      // (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n      if (tymin > tmin || tmin !== tmin) tmin = tymin;\r\n      if (tymax < tmax || tmax !== tmax) tmax = tymax;\r\n\r\n      if (invdirz >= 0) {\r\n        tzmin = (box.min.z - origin.z) * invdirz;\r\n        tzmax = (box.max.z - origin.z) * invdirz;\r\n      } else {\r\n        tzmin = (box.max.z - origin.z) * invdirz;\r\n        tzmax = (box.min.z - origin.z) * invdirz;\r\n      }\r\n\r\n      if (tmin > tzmax || tzmin > tmax) return null;\r\n      if (tzmin > tmin || tmin !== tmin) tmin = tzmin;\r\n      if (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\r\n\r\n      if (tmax < 0) return null;\r\n      return this.at(tmin >= 0 ? tmin : tmax, target);\r\n    }\r\n\r\n    intersectsBox(box) {\r\n      return this.intersectBox(box, _vector$a) !== null;\r\n    }\r\n\r\n    intersectTriangle(a, b, c, backfaceCulling, target) {\r\n      // Compute the offset origin, edges, and normal.\r\n      // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\r\n      _edge1.subVectors(b, a);\r\n\r\n      _edge2.subVectors(c, a);\r\n\r\n      _normal$1.crossVectors(_edge1, _edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n      // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n      //\t |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n      //\t |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n      //\t |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\r\n      let DdN = this.direction.dot(_normal$1);\r\n      let sign;\r\n\r\n      if (DdN > 0) {\r\n        if (backfaceCulling) return null;\r\n        sign = 1;\r\n      } else if (DdN < 0) {\r\n        sign = -1;\r\n        DdN = -DdN;\r\n      } else {\r\n        return null;\r\n      }\r\n\r\n      _diff.subVectors(this.origin, a);\r\n\r\n      const DdQxE2 = sign * this.direction.dot(_edge2.crossVectors(_diff, _edge2)); // b1 < 0, no intersection\r\n\r\n      if (DdQxE2 < 0) {\r\n        return null;\r\n      }\r\n\r\n      const DdE1xQ = sign * this.direction.dot(_edge1.cross(_diff)); // b2 < 0, no intersection\r\n\r\n      if (DdE1xQ < 0) {\r\n        return null;\r\n      } // b1+b2 > 1, no intersection\r\n\r\n      if (DdQxE2 + DdE1xQ > DdN) {\r\n        return null;\r\n      } // Line intersects triangle, check if ray does.\r\n\r\n      const QdN = -sign * _diff.dot(_normal$1); // t < 0, no intersection\r\n\r\n      if (QdN < 0) {\r\n        return null;\r\n      } // Ray intersects triangle.\r\n\r\n      return this.at(QdN / DdN, target);\r\n    }\r\n\r\n    applyMatrix4(matrix4) {\r\n      this.origin.applyMatrix4(matrix4);\r\n      this.direction.transformDirection(matrix4);\r\n      return this;\r\n    }\r\n\r\n    equals(ray) {\r\n      return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().copy(this);\r\n    }\r\n  }\r\n\r\n  class Matrix4 {\r\n    constructor() {\r\n      this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n\r\n      if (arguments.length > 0) {\r\n        console.error(\r\n          'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.',\r\n        );\r\n      }\r\n    }\r\n\r\n    set(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\r\n      const te = this.elements;\r\n      te[0] = n11;\r\n      te[4] = n12;\r\n      te[8] = n13;\r\n      te[12] = n14;\r\n      te[1] = n21;\r\n      te[5] = n22;\r\n      te[9] = n23;\r\n      te[13] = n24;\r\n      te[2] = n31;\r\n      te[6] = n32;\r\n      te[10] = n33;\r\n      te[14] = n34;\r\n      te[3] = n41;\r\n      te[7] = n42;\r\n      te[11] = n43;\r\n      te[15] = n44;\r\n      return this;\r\n    }\r\n\r\n    identity() {\r\n      this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n      return this;\r\n    }\r\n\r\n    clone() {\r\n      return new Matrix4().fromArray(this.elements);\r\n    }\r\n\r\n    copy(m) {\r\n      const te = this.elements;\r\n      const me = m.elements;\r\n      te[0] = me[0];\r\n      te[1] = me[1];\r\n      te[2] = me[2];\r\n      te[3] = me[3];\r\n      te[4] = me[4];\r\n      te[5] = me[5];\r\n      te[6] = me[6];\r\n      te[7] = me[7];\r\n      te[8] = me[8];\r\n      te[9] = me[9];\r\n      te[10] = me[10];\r\n      te[11] = me[11];\r\n      te[12] = me[12];\r\n      te[13] = me[13];\r\n      te[14] = me[14];\r\n      te[15] = me[15];\r\n      return this;\r\n    }\r\n\r\n    copyPosition(m) {\r\n      const te = this.elements,\r\n        me = m.elements;\r\n      te[12] = me[12];\r\n      te[13] = me[13];\r\n      te[14] = me[14];\r\n      return this;\r\n    }\r\n\r\n    setFromMatrix3(m) {\r\n      const me = m.elements;\r\n      this.set(me[0], me[3], me[6], 0, me[1], me[4], me[7], 0, me[2], me[5], me[8], 0, 0, 0, 0, 1);\r\n      return this;\r\n    }\r\n\r\n    extractBasis(xAxis, yAxis, zAxis) {\r\n      xAxis.setFromMatrixColumn(this, 0);\r\n      yAxis.setFromMatrixColumn(this, 1);\r\n      zAxis.setFromMatrixColumn(this, 2);\r\n      return this;\r\n    }\r\n\r\n    makeBasis(xAxis, yAxis, zAxis) {\r\n      this.set(\r\n        xAxis.x,\r\n        yAxis.x,\r\n        zAxis.x,\r\n        0,\r\n        xAxis.y,\r\n        yAxis.y,\r\n        zAxis.y,\r\n        0,\r\n        xAxis.z,\r\n        yAxis.z,\r\n        zAxis.z,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        1,\r\n      );\r\n      return this;\r\n    }\r\n\r\n    extractRotation(m) {\r\n      // this method does not support reflection matrices\r\n      const te = this.elements;\r\n      const me = m.elements;\r\n\r\n      const scaleX = 1 / _v1$5.setFromMatrixColumn(m, 0).length();\r\n\r\n      const scaleY = 1 / _v1$5.setFromMatrixColumn(m, 1).length();\r\n\r\n      const scaleZ = 1 / _v1$5.setFromMatrixColumn(m, 2).length();\r\n\r\n      te[0] = me[0] * scaleX;\r\n      te[1] = me[1] * scaleX;\r\n      te[2] = me[2] * scaleX;\r\n      te[3] = 0;\r\n      te[4] = me[4] * scaleY;\r\n      te[5] = me[5] * scaleY;\r\n      te[6] = me[6] * scaleY;\r\n      te[7] = 0;\r\n      te[8] = me[8] * scaleZ;\r\n      te[9] = me[9] * scaleZ;\r\n      te[10] = me[10] * scaleZ;\r\n      te[11] = 0;\r\n      te[12] = 0;\r\n      te[13] = 0;\r\n      te[14] = 0;\r\n      te[15] = 1;\r\n      return this;\r\n    }\r\n\r\n    makeRotationFromEuler(euler) {\r\n      if (!(euler && euler.isEuler)) {\r\n        console.error(\r\n          'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.',\r\n        );\r\n      }\r\n\r\n      const te = this.elements;\r\n      const x = euler.x,\r\n        y = euler.y,\r\n        z = euler.z;\r\n      const a = Math.cos(x),\r\n        b = Math.sin(x);\r\n      const c = Math.cos(y),\r\n        d = Math.sin(y);\r\n      const e = Math.cos(z),\r\n        f = Math.sin(z);\r\n\r\n      if (euler.order === 'XYZ') {\r\n        const ae = a * e,\r\n          af = a * f,\r\n          be = b * e,\r\n          bf = b * f;\r\n        te[0] = c * e;\r\n        te[4] = -c * f;\r\n        te[8] = d;\r\n        te[1] = af + be * d;\r\n        te[5] = ae - bf * d;\r\n        te[9] = -b * c;\r\n        te[2] = bf - ae * d;\r\n        te[6] = be + af * d;\r\n        te[10] = a * c;\r\n      } else if (euler.order === 'YXZ') {\r\n        const ce = c * e,\r\n          cf = c * f,\r\n          de = d * e,\r\n          df = d * f;\r\n        te[0] = ce + df * b;\r\n        te[4] = de * b - cf;\r\n        te[8] = a * d;\r\n        te[1] = a * f;\r\n        te[5] = a * e;\r\n        te[9] = -b;\r\n        te[2] = cf * b - de;\r\n        te[6] = df + ce * b;\r\n        te[10] = a * c;\r\n      } else if (euler.order === 'ZXY') {\r\n        const ce = c * e,\r\n          cf = c * f,\r\n          de = d * e,\r\n          df = d * f;\r\n        te[0] = ce - df * b;\r\n        te[4] = -a * f;\r\n        te[8] = de + cf * b;\r\n        te[1] = cf + de * b;\r\n        te[5] = a * e;\r\n        te[9] = df - ce * b;\r\n        te[2] = -a * d;\r\n        te[6] = b;\r\n        te[10] = a * c;\r\n      } else if (euler.order === 'ZYX') {\r\n        const ae = a * e,\r\n          af = a * f,\r\n          be = b * e,\r\n          bf = b * f;\r\n        te[0] = c * e;\r\n        te[4] = be * d - af;\r\n        te[8] = ae * d + bf;\r\n        te[1] = c * f;\r\n        te[5] = bf * d + ae;\r\n        te[9] = af * d - be;\r\n        te[2] = -d;\r\n        te[6] = b * c;\r\n        te[10] = a * c;\r\n      } else if (euler.order === 'YZX') {\r\n        const ac = a * c,\r\n          ad = a * d,\r\n          bc = b * c,\r\n          bd = b * d;\r\n        te[0] = c * e;\r\n        te[4] = bd - ac * f;\r\n        te[8] = bc * f + ad;\r\n        te[1] = f;\r\n        te[5] = a * e;\r\n        te[9] = -b * e;\r\n        te[2] = -d * e;\r\n        te[6] = ad * f + bc;\r\n        te[10] = ac - bd * f;\r\n      } else if (euler.order === 'XZY') {\r\n        const ac = a * c,\r\n          ad = a * d,\r\n          bc = b * c,\r\n          bd = b * d;\r\n        te[0] = c * e;\r\n        te[4] = -f;\r\n        te[8] = d * e;\r\n        te[1] = ac * f + bd;\r\n        te[5] = a * e;\r\n        te[9] = ad * f - bc;\r\n        te[2] = bc * f - ad;\r\n        te[6] = b * e;\r\n        te[10] = bd * f + ac;\r\n      } // bottom row\r\n\r\n      te[3] = 0;\r\n      te[7] = 0;\r\n      te[11] = 0; // last column\r\n\r\n      te[12] = 0;\r\n      te[13] = 0;\r\n      te[14] = 0;\r\n      te[15] = 1;\r\n      return this;\r\n    }\r\n\r\n    makeRotationFromQuaternion(q) {\r\n      return this.compose(_zero, q, _one);\r\n    }\r\n\r\n    lookAt(eye, target, up) {\r\n      const te = this.elements;\r\n\r\n      _z.subVectors(eye, target);\r\n\r\n      if (_z.lengthSq() === 0) {\r\n        // eye and target are in the same position\r\n        _z.z = 1;\r\n      }\r\n\r\n      _z.normalize();\r\n\r\n      _x.crossVectors(up, _z);\r\n\r\n      if (_x.lengthSq() === 0) {\r\n        // up and z are parallel\r\n        if (Math.abs(up.z) === 1) {\r\n          _z.x += 0.0001;\r\n        } else {\r\n          _z.z += 0.0001;\r\n        }\r\n\r\n        _z.normalize();\r\n\r\n        _x.crossVectors(up, _z);\r\n      }\r\n\r\n      _x.normalize();\r\n\r\n      _y.crossVectors(_z, _x);\r\n\r\n      te[0] = _x.x;\r\n      te[4] = _y.x;\r\n      te[8] = _z.x;\r\n      te[1] = _x.y;\r\n      te[5] = _y.y;\r\n      te[9] = _z.y;\r\n      te[2] = _x.z;\r\n      te[6] = _y.z;\r\n      te[10] = _z.z;\r\n      return this;\r\n    }\r\n\r\n    multiply(m, n) {\r\n      if (n !== undefined) {\r\n        console.warn(\r\n          'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.',\r\n        );\r\n        return this.multiplyMatrices(m, n);\r\n      }\r\n\r\n      return this.multiplyMatrices(this, m);\r\n    }\r\n\r\n    premultiply(m) {\r\n      return this.multiplyMatrices(m, this);\r\n    }\r\n\r\n    multiplyMatrices(a, b) {\r\n      const ae = a.elements;\r\n      const be = b.elements;\r\n      const te = this.elements;\r\n      const a11 = ae[0],\r\n        a12 = ae[4],\r\n        a13 = ae[8],\r\n        a14 = ae[12];\r\n      const a21 = ae[1],\r\n        a22 = ae[5],\r\n        a23 = ae[9],\r\n        a24 = ae[13];\r\n      const a31 = ae[2],\r\n        a32 = ae[6],\r\n        a33 = ae[10],\r\n        a34 = ae[14];\r\n      const a41 = ae[3],\r\n        a42 = ae[7],\r\n        a43 = ae[11],\r\n        a44 = ae[15];\r\n      const b11 = be[0],\r\n        b12 = be[4],\r\n        b13 = be[8],\r\n        b14 = be[12];\r\n      const b21 = be[1],\r\n        b22 = be[5],\r\n        b23 = be[9],\r\n        b24 = be[13];\r\n      const b31 = be[2],\r\n        b32 = be[6],\r\n        b33 = be[10],\r\n        b34 = be[14];\r\n      const b41 = be[3],\r\n        b42 = be[7],\r\n        b43 = be[11],\r\n        b44 = be[15];\r\n      te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n      te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n      te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n      te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n      te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n      te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n      te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n      te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n      te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n      te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n      te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n      te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n      te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n      te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n      te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n      te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n      return this;\r\n    }\r\n\r\n    multiplyScalar(s) {\r\n      const te = this.elements;\r\n      te[0] *= s;\r\n      te[4] *= s;\r\n      te[8] *= s;\r\n      te[12] *= s;\r\n      te[1] *= s;\r\n      te[5] *= s;\r\n      te[9] *= s;\r\n      te[13] *= s;\r\n      te[2] *= s;\r\n      te[6] *= s;\r\n      te[10] *= s;\r\n      te[14] *= s;\r\n      te[3] *= s;\r\n      te[7] *= s;\r\n      te[11] *= s;\r\n      te[15] *= s;\r\n      return this;\r\n    }\r\n\r\n    determinant() {\r\n      const te = this.elements;\r\n      const n11 = te[0],\r\n        n12 = te[4],\r\n        n13 = te[8],\r\n        n14 = te[12];\r\n      const n21 = te[1],\r\n        n22 = te[5],\r\n        n23 = te[9],\r\n        n24 = te[13];\r\n      const n31 = te[2],\r\n        n32 = te[6],\r\n        n33 = te[10],\r\n        n34 = te[14];\r\n      const n41 = te[3],\r\n        n42 = te[7],\r\n        n43 = te[11],\r\n        n44 = te[15]; //TODO: make this more efficient\r\n      //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n      return (\r\n        n41 *\r\n          (+n14 * n23 * n32 -\r\n            n13 * n24 * n32 -\r\n            n14 * n22 * n33 +\r\n            n12 * n24 * n33 +\r\n            n13 * n22 * n34 -\r\n            n12 * n23 * n34) +\r\n        n42 *\r\n          (+n11 * n23 * n34 -\r\n            n11 * n24 * n33 +\r\n            n14 * n21 * n33 -\r\n            n13 * n21 * n34 +\r\n            n13 * n24 * n31 -\r\n            n14 * n23 * n31) +\r\n        n43 *\r\n          (+n11 * n24 * n32 -\r\n            n11 * n22 * n34 -\r\n            n14 * n21 * n32 +\r\n            n12 * n21 * n34 +\r\n            n14 * n22 * n31 -\r\n            n12 * n24 * n31) +\r\n        n44 *\r\n          (-n13 * n22 * n31 -\r\n            n11 * n23 * n32 +\r\n            n11 * n22 * n33 +\r\n            n13 * n21 * n32 -\r\n            n12 * n21 * n33 +\r\n            n12 * n23 * n31)\r\n      );\r\n    }\r\n\r\n    transpose() {\r\n      const te = this.elements;\r\n      let tmp;\r\n      tmp = te[1];\r\n      te[1] = te[4];\r\n      te[4] = tmp;\r\n      tmp = te[2];\r\n      te[2] = te[8];\r\n      te[8] = tmp;\r\n      tmp = te[6];\r\n      te[6] = te[9];\r\n      te[9] = tmp;\r\n      tmp = te[3];\r\n      te[3] = te[12];\r\n      te[12] = tmp;\r\n      tmp = te[7];\r\n      te[7] = te[13];\r\n      te[13] = tmp;\r\n      tmp = te[11];\r\n      te[11] = te[14];\r\n      te[14] = tmp;\r\n      return this;\r\n    }\r\n\r\n    setPosition(x, y, z) {\r\n      const te = this.elements;\r\n\r\n      if (x.isVector3) {\r\n        te[12] = x.x;\r\n        te[13] = x.y;\r\n        te[14] = x.z;\r\n      } else {\r\n        te[12] = x;\r\n        te[13] = y;\r\n        te[14] = z;\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    invert() {\r\n      // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n      const te = this.elements,\r\n        n11 = te[0],\r\n        n21 = te[1],\r\n        n31 = te[2],\r\n        n41 = te[3],\r\n        n12 = te[4],\r\n        n22 = te[5],\r\n        n32 = te[6],\r\n        n42 = te[7],\r\n        n13 = te[8],\r\n        n23 = te[9],\r\n        n33 = te[10],\r\n        n43 = te[11],\r\n        n14 = te[12],\r\n        n24 = te[13],\r\n        n34 = te[14],\r\n        n44 = te[15],\r\n        t11 =\r\n          n23 * n34 * n42 -\r\n          n24 * n33 * n42 +\r\n          n24 * n32 * n43 -\r\n          n22 * n34 * n43 -\r\n          n23 * n32 * n44 +\r\n          n22 * n33 * n44,\r\n        t12 =\r\n          n14 * n33 * n42 -\r\n          n13 * n34 * n42 -\r\n          n14 * n32 * n43 +\r\n          n12 * n34 * n43 +\r\n          n13 * n32 * n44 -\r\n          n12 * n33 * n44,\r\n        t13 =\r\n          n13 * n24 * n42 -\r\n          n14 * n23 * n42 +\r\n          n14 * n22 * n43 -\r\n          n12 * n24 * n43 -\r\n          n13 * n22 * n44 +\r\n          n12 * n23 * n44,\r\n        t14 =\r\n          n14 * n23 * n32 -\r\n          n13 * n24 * n32 -\r\n          n14 * n22 * n33 +\r\n          n12 * n24 * n33 +\r\n          n13 * n22 * n34 -\r\n          n12 * n23 * n34;\r\n      const det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n      if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n      const detInv = 1 / det;\r\n      te[0] = t11 * detInv;\r\n      te[1] =\r\n        (n24 * n33 * n41 -\r\n          n23 * n34 * n41 -\r\n          n24 * n31 * n43 +\r\n          n21 * n34 * n43 +\r\n          n23 * n31 * n44 -\r\n          n21 * n33 * n44) *\r\n        detInv;\r\n      te[2] =\r\n        (n22 * n34 * n41 -\r\n          n24 * n32 * n41 +\r\n          n24 * n31 * n42 -\r\n          n21 * n34 * n42 -\r\n          n22 * n31 * n44 +\r\n          n21 * n32 * n44) *\r\n        detInv;\r\n      te[3] =\r\n        (n23 * n32 * n41 -\r\n          n22 * n33 * n41 -\r\n          n23 * n31 * n42 +\r\n          n21 * n33 * n42 +\r\n          n22 * n31 * n43 -\r\n          n21 * n32 * n43) *\r\n        detInv;\r\n      te[4] = t12 * detInv;\r\n      te[5] =\r\n        (n13 * n34 * n41 -\r\n          n14 * n33 * n41 +\r\n          n14 * n31 * n43 -\r\n          n11 * n34 * n43 -\r\n          n13 * n31 * n44 +\r\n          n11 * n33 * n44) *\r\n        detInv;\r\n      te[6] =\r\n        (n14 * n32 * n41 -\r\n          n12 * n34 * n41 -\r\n          n14 * n31 * n42 +\r\n          n11 * n34 * n42 +\r\n          n12 * n31 * n44 -\r\n          n11 * n32 * n44) *\r\n        detInv;\r\n      te[7] =\r\n        (n12 * n33 * n41 -\r\n          n13 * n32 * n41 +\r\n          n13 * n31 * n42 -\r\n          n11 * n33 * n42 -\r\n          n12 * n31 * n43 +\r\n          n11 * n32 * n43) *\r\n        detInv;\r\n      te[8] = t13 * detInv;\r\n      te[9] =\r\n        (n14 * n23 * n41 -\r\n          n13 * n24 * n41 -\r\n          n14 * n21 * n43 +\r\n          n11 * n24 * n43 +\r\n          n13 * n21 * n44 -\r\n          n11 * n23 * n44) *\r\n        detInv;\r\n      te[10] =\r\n        (n12 * n24 * n41 -\r\n          n14 * n22 * n41 +\r\n          n14 * n21 * n42 -\r\n          n11 * n24 * n42 -\r\n          n12 * n21 * n44 +\r\n          n11 * n22 * n44) *\r\n        detInv;\r\n      te[11] =\r\n        (n13 * n22 * n41 -\r\n          n12 * n23 * n41 -\r\n          n13 * n21 * n42 +\r\n          n11 * n23 * n42 +\r\n          n12 * n21 * n43 -\r\n          n11 * n22 * n43) *\r\n        detInv;\r\n      te[12] = t14 * detInv;\r\n      te[13] =\r\n        (n13 * n24 * n31 -\r\n          n14 * n23 * n31 +\r\n          n14 * n21 * n33 -\r\n          n11 * n24 * n33 -\r\n          n13 * n21 * n34 +\r\n          n11 * n23 * n34) *\r\n        detInv;\r\n      te[14] =\r\n        (n14 * n22 * n31 -\r\n          n12 * n24 * n31 -\r\n          n14 * n21 * n32 +\r\n          n11 * n24 * n32 +\r\n          n12 * n21 * n34 -\r\n          n11 * n22 * n34) *\r\n        detInv;\r\n      te[15] =\r\n        (n12 * n23 * n31 -\r\n          n13 * n22 * n31 +\r\n          n13 * n21 * n32 -\r\n          n11 * n23 * n32 -\r\n          n12 * n21 * n33 +\r\n          n11 * n22 * n33) *\r\n        detInv;\r\n      return this;\r\n    }\r\n\r\n    scale(v) {\r\n      const te = this.elements;\r\n      const x = v.x,\r\n        y = v.y,\r\n        z = v.z;\r\n      te[0] *= x;\r\n      te[4] *= y;\r\n      te[8] *= z;\r\n      te[1] *= x;\r\n      te[5] *= y;\r\n      te[9] *= z;\r\n      te[2] *= x;\r\n      te[6] *= y;\r\n      te[10] *= z;\r\n      te[3] *= x;\r\n      te[7] *= y;\r\n      te[11] *= z;\r\n      return this;\r\n    }\r\n\r\n    getMaxScaleOnAxis() {\r\n      const te = this.elements;\r\n      const scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\r\n      const scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\r\n      const scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\r\n      return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\r\n    }\r\n\r\n    makeTranslation(x, y, z) {\r\n      this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\r\n      return this;\r\n    }\r\n\r\n    makeRotationX(theta) {\r\n      const c = Math.cos(theta),\r\n        s = Math.sin(theta);\r\n      this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\r\n      return this;\r\n    }\r\n\r\n    makeRotationY(theta) {\r\n      const c = Math.cos(theta),\r\n        s = Math.sin(theta);\r\n      this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\r\n      return this;\r\n    }\r\n\r\n    makeRotationZ(theta) {\r\n      const c = Math.cos(theta),\r\n        s = Math.sin(theta);\r\n      this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n      return this;\r\n    }\r\n\r\n    makeRotationAxis(axis, angle) {\r\n      // Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n      const c = Math.cos(angle);\r\n      const s = Math.sin(angle);\r\n      const t = 1 - c;\r\n      const x = axis.x,\r\n        y = axis.y,\r\n        z = axis.z;\r\n      const tx = t * x,\r\n        ty = t * y;\r\n      this.set(\r\n        tx * x + c,\r\n        tx * y - s * z,\r\n        tx * z + s * y,\r\n        0,\r\n        tx * y + s * z,\r\n        ty * y + c,\r\n        ty * z - s * x,\r\n        0,\r\n        tx * z - s * y,\r\n        ty * z + s * x,\r\n        t * z * z + c,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        1,\r\n      );\r\n      return this;\r\n    }\r\n\r\n    makeScale(x, y, z) {\r\n      this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\r\n      return this;\r\n    }\r\n\r\n    makeShear(xy, xz, yx, yz, zx, zy) {\r\n      this.set(1, yx, zx, 0, xy, 1, zy, 0, xz, yz, 1, 0, 0, 0, 0, 1);\r\n      return this;\r\n    }\r\n\r\n    compose(position, quaternion, scale) {\r\n      const te = this.elements;\r\n      const x = quaternion._x,\r\n        y = quaternion._y,\r\n        z = quaternion._z,\r\n        w = quaternion._w;\r\n      const x2 = x + x,\r\n        y2 = y + y,\r\n        z2 = z + z;\r\n      const xx = x * x2,\r\n        xy = x * y2,\r\n        xz = x * z2;\r\n      const yy = y * y2,\r\n        yz = y * z2,\r\n        zz = z * z2;\r\n      const wx = w * x2,\r\n        wy = w * y2,\r\n        wz = w * z2;\r\n      const sx = scale.x,\r\n        sy = scale.y,\r\n        sz = scale.z;\r\n      te[0] = (1 - (yy + zz)) * sx;\r\n      te[1] = (xy + wz) * sx;\r\n      te[2] = (xz - wy) * sx;\r\n      te[3] = 0;\r\n      te[4] = (xy - wz) * sy;\r\n      te[5] = (1 - (xx + zz)) * sy;\r\n      te[6] = (yz + wx) * sy;\r\n      te[7] = 0;\r\n      te[8] = (xz + wy) * sz;\r\n      te[9] = (yz - wx) * sz;\r\n      te[10] = (1 - (xx + yy)) * sz;\r\n      te[11] = 0;\r\n      te[12] = position.x;\r\n      te[13] = position.y;\r\n      te[14] = position.z;\r\n      te[15] = 1;\r\n      return this;\r\n    }\r\n\r\n    decompose(position, quaternion, scale) {\r\n      const te = this.elements;\r\n\r\n      let sx = _v1$5.set(te[0], te[1], te[2]).length();\r\n\r\n      const sy = _v1$5.set(te[4], te[5], te[6]).length();\r\n\r\n      const sz = _v1$5.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\r\n\r\n      const det = this.determinant();\r\n      if (det < 0) sx = -sx;\r\n      position.x = te[12];\r\n      position.y = te[13];\r\n      position.z = te[14]; // scale the rotation part\r\n\r\n      _m1$2.copy(this);\r\n\r\n      const invSX = 1 / sx;\r\n      const invSY = 1 / sy;\r\n      const invSZ = 1 / sz;\r\n      _m1$2.elements[0] *= invSX;\r\n      _m1$2.elements[1] *= invSX;\r\n      _m1$2.elements[2] *= invSX;\r\n      _m1$2.elements[4] *= invSY;\r\n      _m1$2.elements[5] *= invSY;\r\n      _m1$2.elements[6] *= invSY;\r\n      _m1$2.elements[8] *= invSZ;\r\n      _m1$2.elements[9] *= invSZ;\r\n      _m1$2.elements[10] *= invSZ;\r\n      quaternion.setFromRotationMatrix(_m1$2);\r\n      scale.x = sx;\r\n      scale.y = sy;\r\n      scale.z = sz;\r\n      return this;\r\n    }\r\n\r\n    makePerspective(left, right, top, bottom, near, far) {\r\n      if (far === undefined) {\r\n        console.warn(\r\n          'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.',\r\n        );\r\n      }\r\n\r\n      const te = this.elements;\r\n      const x = (2 * near) / (right - left);\r\n      const y = (2 * near) / (top - bottom);\r\n      const a = (right + left) / (right - left);\r\n      const b = (top + bottom) / (top - bottom);\r\n      const c = -(far + near) / (far - near);\r\n      const d = (-2 * far * near) / (far - near);\r\n      te[0] = x;\r\n      te[4] = 0;\r\n      te[8] = a;\r\n      te[12] = 0;\r\n      te[1] = 0;\r\n      te[5] = y;\r\n      te[9] = b;\r\n      te[13] = 0;\r\n      te[2] = 0;\r\n      te[6] = 0;\r\n      te[10] = c;\r\n      te[14] = d;\r\n      te[3] = 0;\r\n      te[7] = 0;\r\n      te[11] = -1;\r\n      te[15] = 0;\r\n      return this;\r\n    }\r\n\r\n    makeOrthographic(left, right, top, bottom, near, far) {\r\n      const te = this.elements;\r\n      const w = 1.0 / (right - left);\r\n      const h = 1.0 / (top - bottom);\r\n      const p = 1.0 / (far - near);\r\n      const x = (right + left) * w;\r\n      const y = (top + bottom) * h;\r\n      const z = (far + near) * p;\r\n      te[0] = 2 * w;\r\n      te[4] = 0;\r\n      te[8] = 0;\r\n      te[12] = -x;\r\n      te[1] = 0;\r\n      te[5] = 2 * h;\r\n      te[9] = 0;\r\n      te[13] = -y;\r\n      te[2] = 0;\r\n      te[6] = 0;\r\n      te[10] = -2 * p;\r\n      te[14] = -z;\r\n      te[3] = 0;\r\n      te[7] = 0;\r\n      te[11] = 0;\r\n      te[15] = 1;\r\n      return this;\r\n    }\r\n\r\n    equals(matrix) {\r\n      const te = this.elements;\r\n      const me = matrix.elements;\r\n\r\n      for (let i = 0; i < 16; i++) {\r\n        if (te[i] !== me[i]) return false;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    fromArray(array, offset = 0) {\r\n      for (let i = 0; i < 16; i++) {\r\n        this.elements[i] = array[i + offset];\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    toArray(array = [], offset = 0) {\r\n      const te = this.elements;\r\n      array[offset] = te[0];\r\n      array[offset + 1] = te[1];\r\n      array[offset + 2] = te[2];\r\n      array[offset + 3] = te[3];\r\n      array[offset + 4] = te[4];\r\n      array[offset + 5] = te[5];\r\n      array[offset + 6] = te[6];\r\n      array[offset + 7] = te[7];\r\n      array[offset + 8] = te[8];\r\n      array[offset + 9] = te[9];\r\n      array[offset + 10] = te[10];\r\n      array[offset + 11] = te[11];\r\n      array[offset + 12] = te[12];\r\n      array[offset + 13] = te[13];\r\n      array[offset + 14] = te[14];\r\n      array[offset + 15] = te[15];\r\n      return array;\r\n    }\r\n  }\r\n\r\n  Matrix4.prototype.isMatrix4 = true;\r\n\r\n  const _v1$5 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _m1$2 = /*@__PURE__*/ new Matrix4();\r\n\r\n  const _zero = /*@__PURE__*/ new Vector3(0, 0, 0);\r\n\r\n  const _one = /*@__PURE__*/ new Vector3(1, 1, 1);\r\n\r\n  const _x = /*@__PURE__*/ new Vector3();\r\n\r\n  const _y = /*@__PURE__*/ new Vector3();\r\n\r\n  const _z = /*@__PURE__*/ new Vector3();\r\n\r\n  const _matrix$1 = /*@__PURE__*/ new Matrix4();\r\n\r\n  const _quaternion$3 = /*@__PURE__*/ new Quaternion();\r\n\r\n  class Euler {\r\n    constructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {\r\n      this._x = x;\r\n      this._y = y;\r\n      this._z = z;\r\n      this._order = order;\r\n    }\r\n\r\n    get x() {\r\n      return this._x;\r\n    }\r\n\r\n    set x(value) {\r\n      this._x = value;\r\n\r\n      this._onChangeCallback();\r\n    }\r\n\r\n    get y() {\r\n      return this._y;\r\n    }\r\n\r\n    set y(value) {\r\n      this._y = value;\r\n\r\n      this._onChangeCallback();\r\n    }\r\n\r\n    get z() {\r\n      return this._z;\r\n    }\r\n\r\n    set z(value) {\r\n      this._z = value;\r\n\r\n      this._onChangeCallback();\r\n    }\r\n\r\n    get order() {\r\n      return this._order;\r\n    }\r\n\r\n    set order(value) {\r\n      this._order = value;\r\n\r\n      this._onChangeCallback();\r\n    }\r\n\r\n    set(x, y, z, order) {\r\n      this._x = x;\r\n      this._y = y;\r\n      this._z = z;\r\n      this._order = order || this._order;\r\n\r\n      this._onChangeCallback();\r\n\r\n      return this;\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor(this._x, this._y, this._z, this._order);\r\n    }\r\n\r\n    copy(euler) {\r\n      this._x = euler._x;\r\n      this._y = euler._y;\r\n      this._z = euler._z;\r\n      this._order = euler._order;\r\n\r\n      this._onChangeCallback();\r\n\r\n      return this;\r\n    }\r\n\r\n    setFromRotationMatrix(m, order, update) {\r\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n      const te = m.elements;\r\n      const m11 = te[0],\r\n        m12 = te[4],\r\n        m13 = te[8];\r\n      const m21 = te[1],\r\n        m22 = te[5],\r\n        m23 = te[9];\r\n      const m31 = te[2],\r\n        m32 = te[6],\r\n        m33 = te[10];\r\n      order = order || this._order;\r\n\r\n      switch (order) {\r\n        case 'XYZ':\r\n          this._y = Math.asin(clamp(m13, -1, 1));\r\n\r\n          if (Math.abs(m13) < 0.9999999) {\r\n            this._x = Math.atan2(-m23, m33);\r\n            this._z = Math.atan2(-m12, m11);\r\n          } else {\r\n            this._x = Math.atan2(m32, m22);\r\n            this._z = 0;\r\n          }\r\n\r\n          break;\r\n\r\n        case 'YXZ':\r\n          this._x = Math.asin(-clamp(m23, -1, 1));\r\n\r\n          if (Math.abs(m23) < 0.9999999) {\r\n            this._y = Math.atan2(m13, m33);\r\n            this._z = Math.atan2(m21, m22);\r\n          } else {\r\n            this._y = Math.atan2(-m31, m11);\r\n            this._z = 0;\r\n          }\r\n\r\n          break;\r\n\r\n        case 'ZXY':\r\n          this._x = Math.asin(clamp(m32, -1, 1));\r\n\r\n          if (Math.abs(m32) < 0.9999999) {\r\n            this._y = Math.atan2(-m31, m33);\r\n            this._z = Math.atan2(-m12, m22);\r\n          } else {\r\n            this._y = 0;\r\n            this._z = Math.atan2(m21, m11);\r\n          }\r\n\r\n          break;\r\n\r\n        case 'ZYX':\r\n          this._y = Math.asin(-clamp(m31, -1, 1));\r\n\r\n          if (Math.abs(m31) < 0.9999999) {\r\n            this._x = Math.atan2(m32, m33);\r\n            this._z = Math.atan2(m21, m11);\r\n          } else {\r\n            this._x = 0;\r\n            this._z = Math.atan2(-m12, m22);\r\n          }\r\n\r\n          break;\r\n\r\n        case 'YZX':\r\n          this._z = Math.asin(clamp(m21, -1, 1));\r\n\r\n          if (Math.abs(m21) < 0.9999999) {\r\n            this._x = Math.atan2(-m23, m22);\r\n            this._y = Math.atan2(-m31, m11);\r\n          } else {\r\n            this._x = 0;\r\n            this._y = Math.atan2(m13, m33);\r\n          }\r\n\r\n          break;\r\n\r\n        case 'XZY':\r\n          this._z = Math.asin(-clamp(m12, -1, 1));\r\n\r\n          if (Math.abs(m12) < 0.9999999) {\r\n            this._x = Math.atan2(m32, m22);\r\n            this._y = Math.atan2(m13, m11);\r\n          } else {\r\n            this._x = Math.atan2(-m23, m33);\r\n            this._y = 0;\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          console.warn(\r\n            'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order,\r\n          );\r\n      }\r\n\r\n      this._order = order;\r\n      if (update !== false) this._onChangeCallback();\r\n      return this;\r\n    }\r\n\r\n    setFromQuaternion(q, order, update) {\r\n      _matrix$1.makeRotationFromQuaternion(q);\r\n\r\n      return this.setFromRotationMatrix(_matrix$1, order, update);\r\n    }\r\n\r\n    setFromVector3(v, order) {\r\n      return this.set(v.x, v.y, v.z, order || this._order);\r\n    }\r\n\r\n    reorder(newOrder) {\r\n      // WARNING: this discards revolution information -bhouston\r\n      _quaternion$3.setFromEuler(this);\r\n\r\n      return this.setFromQuaternion(_quaternion$3, newOrder);\r\n    }\r\n\r\n    equals(euler) {\r\n      return (\r\n        euler._x === this._x &&\r\n        euler._y === this._y &&\r\n        euler._z === this._z &&\r\n        euler._order === this._order\r\n      );\r\n    }\r\n\r\n    fromArray(array) {\r\n      this._x = array[0];\r\n      this._y = array[1];\r\n      this._z = array[2];\r\n      if (array[3] !== undefined) this._order = array[3];\r\n\r\n      this._onChangeCallback();\r\n\r\n      return this;\r\n    }\r\n\r\n    toArray(array = [], offset = 0) {\r\n      array[offset] = this._x;\r\n      array[offset + 1] = this._y;\r\n      array[offset + 2] = this._z;\r\n      array[offset + 3] = this._order;\r\n      return array;\r\n    }\r\n\r\n    toVector3(optionalResult) {\r\n      if (optionalResult) {\r\n        return optionalResult.set(this._x, this._y, this._z);\r\n      } else {\r\n        return new Vector3(this._x, this._y, this._z);\r\n      }\r\n    }\r\n\r\n    _onChange(callback) {\r\n      this._onChangeCallback = callback;\r\n      return this;\r\n    }\r\n\r\n    _onChangeCallback() {}\r\n  }\r\n\r\n  Euler.prototype.isEuler = true;\r\n  Euler.DefaultOrder = 'XYZ';\r\n  Euler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\r\n\r\n  class Layers {\r\n    constructor() {\r\n      this.mask = 1 | 0;\r\n    }\r\n\r\n    set(channel) {\r\n      this.mask = (1 << channel) | 0;\r\n    }\r\n\r\n    enable(channel) {\r\n      this.mask |= (1 << channel) | 0;\r\n    }\r\n\r\n    enableAll() {\r\n      this.mask = 0xffffffff | 0;\r\n    }\r\n\r\n    toggle(channel) {\r\n      this.mask ^= (1 << channel) | 0;\r\n    }\r\n\r\n    disable(channel) {\r\n      this.mask &= ~((1 << channel) | 0);\r\n    }\r\n\r\n    disableAll() {\r\n      this.mask = 0;\r\n    }\r\n\r\n    test(layers) {\r\n      return (this.mask & layers.mask) !== 0;\r\n    }\r\n  }\r\n\r\n  let _object3DId = 0;\r\n\r\n  const _v1$4 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _q1 = /*@__PURE__*/ new Quaternion();\r\n\r\n  const _m1$1 = /*@__PURE__*/ new Matrix4();\r\n\r\n  const _target = /*@__PURE__*/ new Vector3();\r\n\r\n  const _position$3 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _scale$2 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _quaternion$2 = /*@__PURE__*/ new Quaternion();\r\n\r\n  const _xAxis = /*@__PURE__*/ new Vector3(1, 0, 0);\r\n\r\n  const _yAxis = /*@__PURE__*/ new Vector3(0, 1, 0);\r\n\r\n  const _zAxis = /*@__PURE__*/ new Vector3(0, 0, 1);\r\n\r\n  const _addedEvent = {\r\n    type: 'added',\r\n  };\r\n  const _removedEvent = {\r\n    type: 'removed',\r\n  };\r\n\r\n  class Object3D extends EventDispatcher {\r\n    constructor() {\r\n      super();\r\n      Object.defineProperty(this, 'id', {\r\n        value: _object3DId++,\r\n      });\r\n      this.uuid = generateUUID();\r\n      this.name = '';\r\n      this.type = 'Object3D';\r\n      this.parent = null;\r\n      this.children = [];\r\n      this.up = Object3D.DefaultUp.clone();\r\n      const position = new Vector3();\r\n      const rotation = new Euler();\r\n      const quaternion = new Quaternion();\r\n      const scale = new Vector3(1, 1, 1);\r\n\r\n      function onRotationChange() {\r\n        quaternion.setFromEuler(rotation, false);\r\n      }\r\n\r\n      function onQuaternionChange() {\r\n        rotation.setFromQuaternion(quaternion, undefined, false);\r\n      }\r\n\r\n      rotation._onChange(onRotationChange);\r\n\r\n      quaternion._onChange(onQuaternionChange);\r\n\r\n      Object.defineProperties(this, {\r\n        position: {\r\n          configurable: true,\r\n          enumerable: true,\r\n          value: position,\r\n        },\r\n        rotation: {\r\n          configurable: true,\r\n          enumerable: true,\r\n          value: rotation,\r\n        },\r\n        quaternion: {\r\n          configurable: true,\r\n          enumerable: true,\r\n          value: quaternion,\r\n        },\r\n        scale: {\r\n          configurable: true,\r\n          enumerable: true,\r\n          value: scale,\r\n        },\r\n        modelViewMatrix: {\r\n          value: new Matrix4(),\r\n        },\r\n        normalMatrix: {\r\n          value: new Matrix3(),\r\n        },\r\n      });\r\n      this.matrix = new Matrix4();\r\n      this.matrixWorld = new Matrix4();\r\n      this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\r\n      this.matrixWorldNeedsUpdate = false;\r\n      this.layers = new Layers();\r\n      this.visible = true;\r\n      this.castShadow = false;\r\n      this.receiveShadow = false;\r\n      this.frustumCulled = true;\r\n      this.renderOrder = 0;\r\n      this.animations = [];\r\n      this.userData = {};\r\n    }\r\n\r\n    onBeforeRender() {}\r\n\r\n    onAfterRender() {}\r\n\r\n    applyMatrix4(matrix) {\r\n      if (this.matrixAutoUpdate) this.updateMatrix();\r\n      this.matrix.premultiply(matrix);\r\n      this.matrix.decompose(this.position, this.quaternion, this.scale);\r\n    }\r\n\r\n    applyQuaternion(q) {\r\n      this.quaternion.premultiply(q);\r\n      return this;\r\n    }\r\n\r\n    setRotationFromAxisAngle(axis, angle) {\r\n      // assumes axis is normalized\r\n      this.quaternion.setFromAxisAngle(axis, angle);\r\n    }\r\n\r\n    setRotationFromEuler(euler) {\r\n      this.quaternion.setFromEuler(euler, true);\r\n    }\r\n\r\n    setRotationFromMatrix(m) {\r\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n      this.quaternion.setFromRotationMatrix(m);\r\n    }\r\n\r\n    setRotationFromQuaternion(q) {\r\n      // assumes q is normalized\r\n      this.quaternion.copy(q);\r\n    }\r\n\r\n    rotateOnAxis(axis, angle) {\r\n      // rotate object on axis in object space\r\n      // axis is assumed to be normalized\r\n      _q1.setFromAxisAngle(axis, angle);\r\n\r\n      this.quaternion.multiply(_q1);\r\n      return this;\r\n    }\r\n\r\n    rotateOnWorldAxis(axis, angle) {\r\n      // rotate object on axis in world space\r\n      // axis is assumed to be normalized\r\n      // method assumes no rotated parent\r\n      _q1.setFromAxisAngle(axis, angle);\r\n\r\n      this.quaternion.premultiply(_q1);\r\n      return this;\r\n    }\r\n\r\n    rotateX(angle) {\r\n      return this.rotateOnAxis(_xAxis, angle);\r\n    }\r\n\r\n    rotateY(angle) {\r\n      return this.rotateOnAxis(_yAxis, angle);\r\n    }\r\n\r\n    rotateZ(angle) {\r\n      return this.rotateOnAxis(_zAxis, angle);\r\n    }\r\n\r\n    translateOnAxis(axis, distance) {\r\n      // translate object by distance along axis in object space\r\n      // axis is assumed to be normalized\r\n      _v1$4.copy(axis).applyQuaternion(this.quaternion);\r\n\r\n      this.position.add(_v1$4.multiplyScalar(distance));\r\n      return this;\r\n    }\r\n\r\n    translateX(distance) {\r\n      return this.translateOnAxis(_xAxis, distance);\r\n    }\r\n\r\n    translateY(distance) {\r\n      return this.translateOnAxis(_yAxis, distance);\r\n    }\r\n\r\n    translateZ(distance) {\r\n      return this.translateOnAxis(_zAxis, distance);\r\n    }\r\n\r\n    localToWorld(vector) {\r\n      return vector.applyMatrix4(this.matrixWorld);\r\n    }\r\n\r\n    worldToLocal(vector) {\r\n      return vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());\r\n    }\r\n\r\n    lookAt(x, y, z) {\r\n      // This method does not support objects having non-uniformly-scaled parent(s)\r\n      if (x.isVector3) {\r\n        _target.copy(x);\r\n      } else {\r\n        _target.set(x, y, z);\r\n      }\r\n\r\n      const parent = this.parent;\r\n      this.updateWorldMatrix(true, false);\r\n\r\n      _position$3.setFromMatrixPosition(this.matrixWorld);\r\n\r\n      if (this.isCamera || this.isLight) {\r\n        _m1$1.lookAt(_position$3, _target, this.up);\r\n      } else {\r\n        _m1$1.lookAt(_target, _position$3, this.up);\r\n      }\r\n\r\n      this.quaternion.setFromRotationMatrix(_m1$1);\r\n\r\n      if (parent) {\r\n        _m1$1.extractRotation(parent.matrixWorld);\r\n\r\n        _q1.setFromRotationMatrix(_m1$1);\r\n\r\n        this.quaternion.premultiply(_q1.invert());\r\n      }\r\n    }\r\n\r\n    add(object) {\r\n      if (arguments.length > 1) {\r\n        for (let i = 0; i < arguments.length; i++) {\r\n          this.add(arguments[i]);\r\n        }\r\n\r\n        return this;\r\n      }\r\n\r\n      if (object === this) {\r\n        console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\", object);\r\n        return this;\r\n      }\r\n\r\n      if (object && object.isObject3D) {\r\n        if (object.parent !== null) {\r\n          object.parent.remove(object);\r\n        }\r\n\r\n        object.parent = this;\r\n        this.children.push(object);\r\n        object.dispatchEvent(_addedEvent);\r\n      } else {\r\n        console.error('THREE.Object3D.add: object not an instance of THREE.Object3D.', object);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    remove(object) {\r\n      if (arguments.length > 1) {\r\n        for (let i = 0; i < arguments.length; i++) {\r\n          this.remove(arguments[i]);\r\n        }\r\n\r\n        return this;\r\n      }\r\n\r\n      const index = this.children.indexOf(object);\r\n\r\n      if (index !== -1) {\r\n        object.parent = null;\r\n        this.children.splice(index, 1);\r\n        object.dispatchEvent(_removedEvent);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    removeFromParent() {\r\n      const parent = this.parent;\r\n\r\n      if (parent !== null) {\r\n        parent.remove(this);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    clear() {\r\n      for (let i = 0; i < this.children.length; i++) {\r\n        const object = this.children[i];\r\n        object.parent = null;\r\n        object.dispatchEvent(_removedEvent);\r\n      }\r\n\r\n      this.children.length = 0;\r\n      return this;\r\n    }\r\n\r\n    attach(object) {\r\n      // adds object as a child of this, while maintaining the object's world transform\r\n      this.updateWorldMatrix(true, false);\r\n\r\n      _m1$1.copy(this.matrixWorld).invert();\r\n\r\n      if (object.parent !== null) {\r\n        object.parent.updateWorldMatrix(true, false);\r\n\r\n        _m1$1.multiply(object.parent.matrixWorld);\r\n      }\r\n\r\n      object.applyMatrix4(_m1$1);\r\n      this.add(object);\r\n      object.updateWorldMatrix(false, true);\r\n      return this;\r\n    }\r\n\r\n    getObjectById(id) {\r\n      return this.getObjectByProperty('id', id);\r\n    }\r\n\r\n    getObjectByName(name) {\r\n      return this.getObjectByProperty('name', name);\r\n    }\r\n\r\n    getObjectByProperty(name, value) {\r\n      if (this[name] === value) return this;\r\n\r\n      for (let i = 0, l = this.children.length; i < l; i++) {\r\n        const child = this.children[i];\r\n        const object = child.getObjectByProperty(name, value);\r\n\r\n        if (object !== undefined) {\r\n          return object;\r\n        }\r\n      }\r\n\r\n      return undefined;\r\n    }\r\n\r\n    getWorldPosition(target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Object3D: .getWorldPosition() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      this.updateWorldMatrix(true, false);\r\n      return target.setFromMatrixPosition(this.matrixWorld);\r\n    }\r\n\r\n    getWorldQuaternion(target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Object3D: .getWorldQuaternion() target is now required');\r\n        target = new Quaternion();\r\n      }\r\n\r\n      this.updateWorldMatrix(true, false);\r\n      this.matrixWorld.decompose(_position$3, target, _scale$2);\r\n      return target;\r\n    }\r\n\r\n    getWorldScale(target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Object3D: .getWorldScale() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      this.updateWorldMatrix(true, false);\r\n      this.matrixWorld.decompose(_position$3, _quaternion$2, target);\r\n      return target;\r\n    }\r\n\r\n    getWorldDirection(target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Object3D: .getWorldDirection() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      this.updateWorldMatrix(true, false);\r\n      const e = this.matrixWorld.elements;\r\n      return target.set(e[8], e[9], e[10]).normalize();\r\n    }\r\n\r\n    raycast() {}\r\n\r\n    traverse(callback) {\r\n      callback(this);\r\n      const children = this.children;\r\n\r\n      for (let i = 0, l = children.length; i < l; i++) {\r\n        children[i].traverse(callback);\r\n      }\r\n    }\r\n\r\n    traverseVisible(callback) {\r\n      if (this.visible === false) return;\r\n      callback(this);\r\n      const children = this.children;\r\n\r\n      for (let i = 0, l = children.length; i < l; i++) {\r\n        children[i].traverseVisible(callback);\r\n      }\r\n    }\r\n\r\n    traverseAncestors(callback) {\r\n      const parent = this.parent;\r\n\r\n      if (parent !== null) {\r\n        callback(parent);\r\n        parent.traverseAncestors(callback);\r\n      }\r\n    }\r\n\r\n    updateMatrix() {\r\n      this.matrix.compose(this.position, this.quaternion, this.scale);\r\n      this.matrixWorldNeedsUpdate = true;\r\n    }\r\n\r\n    updateMatrixWorld(force) {\r\n      if (this.matrixAutoUpdate) this.updateMatrix();\r\n\r\n      if (this.matrixWorldNeedsUpdate || force) {\r\n        if (this.parent === null) {\r\n          this.matrixWorld.copy(this.matrix);\r\n        } else {\r\n          this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\r\n        }\r\n\r\n        this.matrixWorldNeedsUpdate = false;\r\n        force = true;\r\n      } // update children\r\n\r\n      const children = this.children;\r\n\r\n      for (let i = 0, l = children.length; i < l; i++) {\r\n        children[i].updateMatrixWorld(force);\r\n      }\r\n    }\r\n\r\n    updateWorldMatrix(updateParents, updateChildren) {\r\n      const parent = this.parent;\r\n\r\n      if (updateParents === true && parent !== null) {\r\n        parent.updateWorldMatrix(true, false);\r\n      }\r\n\r\n      if (this.matrixAutoUpdate) this.updateMatrix();\r\n\r\n      if (this.parent === null) {\r\n        this.matrixWorld.copy(this.matrix);\r\n      } else {\r\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\r\n      } // update children\r\n\r\n      if (updateChildren === true) {\r\n        const children = this.children;\r\n\r\n        for (let i = 0, l = children.length; i < l; i++) {\r\n          children[i].updateWorldMatrix(false, true);\r\n        }\r\n      }\r\n    }\r\n\r\n    toJSON(meta) {\r\n      // meta is a string when called from JSON.stringify\r\n      const isRootObject = meta === undefined || typeof meta === 'string';\r\n      const output = {}; // meta is a hash used to collect geometries, materials.\r\n      // not providing it implies that this is the root object\r\n      // being serialized.\r\n\r\n      if (isRootObject) {\r\n        // initialize meta obj\r\n        meta = {\r\n          geometries: {},\r\n          materials: {},\r\n          textures: {},\r\n          images: {},\r\n          shapes: {},\r\n          skeletons: {},\r\n          animations: {},\r\n        };\r\n        output.metadata = {\r\n          version: 4.5,\r\n          type: 'Object',\r\n          generator: 'Object3D.toJSON',\r\n        };\r\n      } // standard Object3D serialization\r\n\r\n      const object = {};\r\n      object.uuid = this.uuid;\r\n      object.type = this.type;\r\n      if (this.name !== '') object.name = this.name;\r\n      if (this.castShadow === true) object.castShadow = true;\r\n      if (this.receiveShadow === true) object.receiveShadow = true;\r\n      if (this.visible === false) object.visible = false;\r\n      if (this.frustumCulled === false) object.frustumCulled = false;\r\n      if (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\r\n      if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\r\n      object.layers = this.layers.mask;\r\n      object.matrix = this.matrix.toArray();\r\n      if (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; // object specific properties\r\n\r\n      if (this.isInstancedMesh) {\r\n        object.type = 'InstancedMesh';\r\n        object.count = this.count;\r\n        object.instanceMatrix = this.instanceMatrix.toJSON();\r\n        if (this.instanceColor !== null) object.instanceColor = this.instanceColor.toJSON();\r\n      } //\r\n\r\n      function serialize(library, element) {\r\n        if (library[element.uuid] === undefined) {\r\n          library[element.uuid] = element.toJSON(meta);\r\n        }\r\n\r\n        return element.uuid;\r\n      }\r\n\r\n      if (this.isMesh || this.isLine || this.isPoints) {\r\n        object.geometry = serialize(meta.geometries, this.geometry);\r\n        const parameters = this.geometry.parameters;\r\n\r\n        if (parameters !== undefined && parameters.shapes !== undefined) {\r\n          const shapes = parameters.shapes;\r\n\r\n          if (Array.isArray(shapes)) {\r\n            for (let i = 0, l = shapes.length; i < l; i++) {\r\n              const shape = shapes[i];\r\n              serialize(meta.shapes, shape);\r\n            }\r\n          } else {\r\n            serialize(meta.shapes, shapes);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.isSkinnedMesh) {\r\n        object.bindMode = this.bindMode;\r\n        object.bindMatrix = this.bindMatrix.toArray();\r\n\r\n        if (this.skeleton !== undefined) {\r\n          serialize(meta.skeletons, this.skeleton);\r\n          object.skeleton = this.skeleton.uuid;\r\n        }\r\n      }\r\n\r\n      if (this.material !== undefined) {\r\n        if (Array.isArray(this.material)) {\r\n          const uuids = [];\r\n\r\n          for (let i = 0, l = this.material.length; i < l; i++) {\r\n            uuids.push(serialize(meta.materials, this.material[i]));\r\n          }\r\n\r\n          object.material = uuids;\r\n        } else {\r\n          object.material = serialize(meta.materials, this.material);\r\n        }\r\n      } //\r\n\r\n      if (this.children.length > 0) {\r\n        object.children = [];\r\n\r\n        for (let i = 0; i < this.children.length; i++) {\r\n          object.children.push(this.children[i].toJSON(meta).object);\r\n        }\r\n      } //\r\n\r\n      if (this.animations.length > 0) {\r\n        object.animations = [];\r\n\r\n        for (let i = 0; i < this.animations.length; i++) {\r\n          const animation = this.animations[i];\r\n          object.animations.push(serialize(meta.animations, animation));\r\n        }\r\n      }\r\n\r\n      if (isRootObject) {\r\n        const geometries = extractFromCache(meta.geometries);\r\n        const materials = extractFromCache(meta.materials);\r\n        const textures = extractFromCache(meta.textures);\r\n        const images = extractFromCache(meta.images);\r\n        const shapes = extractFromCache(meta.shapes);\r\n        const skeletons = extractFromCache(meta.skeletons);\r\n        const animations = extractFromCache(meta.animations);\r\n        if (geometries.length > 0) output.geometries = geometries;\r\n        if (materials.length > 0) output.materials = materials;\r\n        if (textures.length > 0) output.textures = textures;\r\n        if (images.length > 0) output.images = images;\r\n        if (shapes.length > 0) output.shapes = shapes;\r\n        if (skeletons.length > 0) output.skeletons = skeletons;\r\n        if (animations.length > 0) output.animations = animations;\r\n      }\r\n\r\n      output.object = object;\r\n      return output; // extract data from the cache hash\r\n      // remove metadata on each item\r\n      // and return as array\r\n\r\n      function extractFromCache(cache) {\r\n        const values = [];\r\n\r\n        for (const key in cache) {\r\n          const data = cache[key];\r\n          delete data.metadata;\r\n          values.push(data);\r\n        }\r\n\r\n        return values;\r\n      }\r\n    }\r\n\r\n    clone(recursive) {\r\n      return new this.constructor().copy(this, recursive);\r\n    }\r\n\r\n    copy(source, recursive = true) {\r\n      this.name = source.name;\r\n      this.up.copy(source.up);\r\n      this.position.copy(source.position);\r\n      this.rotation.order = source.rotation.order;\r\n      this.quaternion.copy(source.quaternion);\r\n      this.scale.copy(source.scale);\r\n      this.matrix.copy(source.matrix);\r\n      this.matrixWorld.copy(source.matrixWorld);\r\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\r\n      this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n      this.layers.mask = source.layers.mask;\r\n      this.visible = source.visible;\r\n      this.castShadow = source.castShadow;\r\n      this.receiveShadow = source.receiveShadow;\r\n      this.frustumCulled = source.frustumCulled;\r\n      this.renderOrder = source.renderOrder;\r\n      this.userData = JSON.parse(JSON.stringify(source.userData));\r\n\r\n      if (recursive === true) {\r\n        for (let i = 0; i < source.children.length; i++) {\r\n          const child = source.children[i];\r\n          this.add(child.clone());\r\n        }\r\n      }\r\n\r\n      return this;\r\n    }\r\n  }\r\n\r\n  Object3D.DefaultUp = new Vector3(0, 1, 0);\r\n  Object3D.DefaultMatrixAutoUpdate = true;\r\n  Object3D.prototype.isObject3D = true;\r\n\r\n  const _vector1 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _vector2$1 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _normalMatrix = /*@__PURE__*/ new Matrix3();\r\n\r\n  class Plane {\r\n    constructor(normal = new Vector3(1, 0, 0), constant = 0) {\r\n      // normal is assumed to be normalized\r\n      this.normal = normal;\r\n      this.constant = constant;\r\n    }\r\n\r\n    set(normal, constant) {\r\n      this.normal.copy(normal);\r\n      this.constant = constant;\r\n      return this;\r\n    }\r\n\r\n    setComponents(x, y, z, w) {\r\n      this.normal.set(x, y, z);\r\n      this.constant = w;\r\n      return this;\r\n    }\r\n\r\n    setFromNormalAndCoplanarPoint(normal, point) {\r\n      this.normal.copy(normal);\r\n      this.constant = -point.dot(this.normal);\r\n      return this;\r\n    }\r\n\r\n    setFromCoplanarPoints(a, b, c) {\r\n      const normal = _vector1.subVectors(c, b).cross(_vector2$1.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n      this.setFromNormalAndCoplanarPoint(normal, a);\r\n      return this;\r\n    }\r\n\r\n    copy(plane) {\r\n      this.normal.copy(plane.normal);\r\n      this.constant = plane.constant;\r\n      return this;\r\n    }\r\n\r\n    normalize() {\r\n      // Note: will lead to a divide by zero if the plane is invalid.\r\n      const inverseNormalLength = 1.0 / this.normal.length();\r\n      this.normal.multiplyScalar(inverseNormalLength);\r\n      this.constant *= inverseNormalLength;\r\n      return this;\r\n    }\r\n\r\n    negate() {\r\n      this.constant *= -1;\r\n      this.normal.negate();\r\n      return this;\r\n    }\r\n\r\n    distanceToPoint(point) {\r\n      return this.normal.dot(point) + this.constant;\r\n    }\r\n\r\n    distanceToSphere(sphere) {\r\n      return this.distanceToPoint(sphere.center) - sphere.radius;\r\n    }\r\n\r\n    projectPoint(point, target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Plane: .projectPoint() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      return target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);\r\n    }\r\n\r\n    intersectLine(line, target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Plane: .intersectLine() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      const direction = line.delta(_vector1);\r\n      const denominator = this.normal.dot(direction);\r\n\r\n      if (denominator === 0) {\r\n        // line is coplanar, return origin\r\n        if (this.distanceToPoint(line.start) === 0) {\r\n          return target.copy(line.start);\r\n        } // Unsure if this is the correct method to handle this case.\r\n\r\n        return null;\r\n      }\r\n\r\n      const t = -(line.start.dot(this.normal) + this.constant) / denominator;\r\n\r\n      if (t < 0 || t > 1) {\r\n        return null;\r\n      }\r\n\r\n      return target.copy(direction).multiplyScalar(t).add(line.start);\r\n    }\r\n\r\n    intersectsLine(line) {\r\n      // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n      const startSign = this.distanceToPoint(line.start);\r\n      const endSign = this.distanceToPoint(line.end);\r\n      return (startSign < 0 && endSign > 0) || (endSign < 0 && startSign > 0);\r\n    }\r\n\r\n    intersectsBox(box) {\r\n      return box.intersectsPlane(this);\r\n    }\r\n\r\n    intersectsSphere(sphere) {\r\n      return sphere.intersectsPlane(this);\r\n    }\r\n\r\n    coplanarPoint(target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Plane: .coplanarPoint() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      return target.copy(this.normal).multiplyScalar(-this.constant);\r\n    }\r\n\r\n    applyMatrix4(matrix, optionalNormalMatrix) {\r\n      const normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix(matrix);\r\n\r\n      const referencePoint = this.coplanarPoint(_vector1).applyMatrix4(matrix);\r\n      const normal = this.normal.applyMatrix3(normalMatrix).normalize();\r\n      this.constant = -referencePoint.dot(normal);\r\n      return this;\r\n    }\r\n\r\n    translate(offset) {\r\n      this.constant -= offset.dot(this.normal);\r\n      return this;\r\n    }\r\n\r\n    equals(plane) {\r\n      return plane.normal.equals(this.normal) && plane.constant === this.constant;\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().copy(this);\r\n    }\r\n  }\r\n\r\n  Plane.prototype.isPlane = true;\r\n\r\n  const _v0$1 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _v1$3 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _v2$2 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _v3$1 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _vab = /*@__PURE__*/ new Vector3();\r\n\r\n  const _vac = /*@__PURE__*/ new Vector3();\r\n\r\n  const _vbc = /*@__PURE__*/ new Vector3();\r\n\r\n  const _vap = /*@__PURE__*/ new Vector3();\r\n\r\n  const _vbp = /*@__PURE__*/ new Vector3();\r\n\r\n  const _vcp = /*@__PURE__*/ new Vector3();\r\n\r\n  class Triangle {\r\n    constructor(a = new Vector3(), b = new Vector3(), c = new Vector3()) {\r\n      this.a = a;\r\n      this.b = b;\r\n      this.c = c;\r\n    }\r\n\r\n    static getNormal(a, b, c, target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Triangle: .getNormal() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      target.subVectors(c, b);\r\n\r\n      _v0$1.subVectors(a, b);\r\n\r\n      target.cross(_v0$1);\r\n      const targetLengthSq = target.lengthSq();\r\n\r\n      if (targetLengthSq > 0) {\r\n        return target.multiplyScalar(1 / Math.sqrt(targetLengthSq));\r\n      }\r\n\r\n      return target.set(0, 0, 0);\r\n    } // static/instance method to calculate barycentric coordinates\r\n    // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\r\n    static getBarycoord(point, a, b, c, target) {\r\n      _v0$1.subVectors(c, a);\r\n\r\n      _v1$3.subVectors(b, a);\r\n\r\n      _v2$2.subVectors(point, a);\r\n\r\n      const dot00 = _v0$1.dot(_v0$1);\r\n\r\n      const dot01 = _v0$1.dot(_v1$3);\r\n\r\n      const dot02 = _v0$1.dot(_v2$2);\r\n\r\n      const dot11 = _v1$3.dot(_v1$3);\r\n\r\n      const dot12 = _v1$3.dot(_v2$2);\r\n\r\n      const denom = dot00 * dot11 - dot01 * dot01;\r\n\r\n      if (target === undefined) {\r\n        console.warn('THREE.Triangle: .getBarycoord() target is now required');\r\n        target = new Vector3();\r\n      } // collinear or singular triangle\r\n\r\n      if (denom === 0) {\r\n        // arbitrary location outside of triangle?\r\n        // not sure if this is the best idea, maybe should be returning undefined\r\n        return target.set(-2, -1, -1);\r\n      }\r\n\r\n      const invDenom = 1 / denom;\r\n      const u = (dot11 * dot02 - dot01 * dot12) * invDenom;\r\n      const v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\r\n\r\n      return target.set(1 - u - v, v, u);\r\n    }\r\n\r\n    static containsPoint(point, a, b, c) {\r\n      this.getBarycoord(point, a, b, c, _v3$1);\r\n      return _v3$1.x >= 0 && _v3$1.y >= 0 && _v3$1.x + _v3$1.y <= 1;\r\n    }\r\n\r\n    static getUV(point, p1, p2, p3, uv1, uv2, uv3, target) {\r\n      this.getBarycoord(point, p1, p2, p3, _v3$1);\r\n      target.set(0, 0);\r\n      target.addScaledVector(uv1, _v3$1.x);\r\n      target.addScaledVector(uv2, _v3$1.y);\r\n      target.addScaledVector(uv3, _v3$1.z);\r\n      return target;\r\n    }\r\n\r\n    static isFrontFacing(a, b, c, direction) {\r\n      _v0$1.subVectors(c, b);\r\n\r\n      _v1$3.subVectors(a, b); // strictly front facing\r\n\r\n      return _v0$1.cross(_v1$3).dot(direction) < 0 ? true : false;\r\n    }\r\n\r\n    set(a, b, c) {\r\n      this.a.copy(a);\r\n      this.b.copy(b);\r\n      this.c.copy(c);\r\n      return this;\r\n    }\r\n\r\n    setFromPointsAndIndices(points, i0, i1, i2) {\r\n      this.a.copy(points[i0]);\r\n      this.b.copy(points[i1]);\r\n      this.c.copy(points[i2]);\r\n      return this;\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().copy(this);\r\n    }\r\n\r\n    copy(triangle) {\r\n      this.a.copy(triangle.a);\r\n      this.b.copy(triangle.b);\r\n      this.c.copy(triangle.c);\r\n      return this;\r\n    }\r\n\r\n    getArea() {\r\n      _v0$1.subVectors(this.c, this.b);\r\n\r\n      _v1$3.subVectors(this.a, this.b);\r\n\r\n      return _v0$1.cross(_v1$3).length() * 0.5;\r\n    }\r\n\r\n    getMidpoint(target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Triangle: .getMidpoint() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      return target\r\n        .addVectors(this.a, this.b)\r\n        .add(this.c)\r\n        .multiplyScalar(1 / 3);\r\n    }\r\n\r\n    getNormal(target) {\r\n      return Triangle.getNormal(this.a, this.b, this.c, target);\r\n    }\r\n\r\n    getPlane(target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Triangle: .getPlane() target is now required');\r\n        target = new Plane();\r\n      }\r\n\r\n      return target.setFromCoplanarPoints(this.a, this.b, this.c);\r\n    }\r\n\r\n    getBarycoord(point, target) {\r\n      return Triangle.getBarycoord(point, this.a, this.b, this.c, target);\r\n    }\r\n\r\n    getUV(point, uv1, uv2, uv3, target) {\r\n      return Triangle.getUV(point, this.a, this.b, this.c, uv1, uv2, uv3, target);\r\n    }\r\n\r\n    containsPoint(point) {\r\n      return Triangle.containsPoint(point, this.a, this.b, this.c);\r\n    }\r\n\r\n    isFrontFacing(direction) {\r\n      return Triangle.isFrontFacing(this.a, this.b, this.c, direction);\r\n    }\r\n\r\n    intersectsBox(box) {\r\n      return box.intersectsTriangle(this);\r\n    }\r\n\r\n    closestPointToPoint(p, target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Triangle: .closestPointToPoint() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      const a = this.a,\r\n        b = this.b,\r\n        c = this.c;\r\n      let v, w; // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\r\n      // published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\r\n      // under the accompanying license; see chapter 5.1.5 for detailed explanation.\r\n      // basically, we're distinguishing which of the voronoi regions of the triangle\r\n      // the point lies in with the minimum amount of redundant computation.\r\n\r\n      _vab.subVectors(b, a);\r\n\r\n      _vac.subVectors(c, a);\r\n\r\n      _vap.subVectors(p, a);\r\n\r\n      const d1 = _vab.dot(_vap);\r\n\r\n      const d2 = _vac.dot(_vap);\r\n\r\n      if (d1 <= 0 && d2 <= 0) {\r\n        // vertex region of A; barycentric coords (1, 0, 0)\r\n        return target.copy(a);\r\n      }\r\n\r\n      _vbp.subVectors(p, b);\r\n\r\n      const d3 = _vab.dot(_vbp);\r\n\r\n      const d4 = _vac.dot(_vbp);\r\n\r\n      if (d3 >= 0 && d4 <= d3) {\r\n        // vertex region of B; barycentric coords (0, 1, 0)\r\n        return target.copy(b);\r\n      }\r\n\r\n      const vc = d1 * d4 - d3 * d2;\r\n\r\n      if (vc <= 0 && d1 >= 0 && d3 <= 0) {\r\n        v = d1 / (d1 - d3); // edge region of AB; barycentric coords (1-v, v, 0)\r\n\r\n        return target.copy(a).addScaledVector(_vab, v);\r\n      }\r\n\r\n      _vcp.subVectors(p, c);\r\n\r\n      const d5 = _vab.dot(_vcp);\r\n\r\n      const d6 = _vac.dot(_vcp);\r\n\r\n      if (d6 >= 0 && d5 <= d6) {\r\n        // vertex region of C; barycentric coords (0, 0, 1)\r\n        return target.copy(c);\r\n      }\r\n\r\n      const vb = d5 * d2 - d1 * d6;\r\n\r\n      if (vb <= 0 && d2 >= 0 && d6 <= 0) {\r\n        w = d2 / (d2 - d6); // edge region of AC; barycentric coords (1-w, 0, w)\r\n\r\n        return target.copy(a).addScaledVector(_vac, w);\r\n      }\r\n\r\n      const va = d3 * d6 - d5 * d4;\r\n\r\n      if (va <= 0 && d4 - d3 >= 0 && d5 - d6 >= 0) {\r\n        _vbc.subVectors(c, b);\r\n\r\n        w = (d4 - d3) / (d4 - d3 + (d5 - d6)); // edge region of BC; barycentric coords (0, 1-w, w)\r\n\r\n        return target.copy(b).addScaledVector(_vbc, w); // edge region of BC\r\n      } // face region\r\n\r\n      const denom = 1 / (va + vb + vc); // u = va * denom\r\n\r\n      v = vb * denom;\r\n      w = vc * denom;\r\n      return target.copy(a).addScaledVector(_vab, v).addScaledVector(_vac, w);\r\n    }\r\n\r\n    equals(triangle) {\r\n      return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\r\n    }\r\n  }\r\n\r\n  let materialId = 0;\r\n\r\n  class Material extends EventDispatcher {\r\n    constructor() {\r\n      super();\r\n      Object.defineProperty(this, 'id', {\r\n        value: materialId++,\r\n      });\r\n      this.uuid = generateUUID();\r\n      this.name = '';\r\n      this.type = 'Material';\r\n      this.fog = true;\r\n      this.blending = NormalBlending;\r\n      this.side = FrontSide;\r\n      this.vertexColors = false;\r\n      this.opacity = 1;\r\n      this.transparent = false;\r\n      this.blendSrc = SrcAlphaFactor;\r\n      this.blendDst = OneMinusSrcAlphaFactor;\r\n      this.blendEquation = AddEquation;\r\n      this.blendSrcAlpha = null;\r\n      this.blendDstAlpha = null;\r\n      this.blendEquationAlpha = null;\r\n      this.depthFunc = LessEqualDepth;\r\n      this.depthTest = true;\r\n      this.depthWrite = true;\r\n      this.stencilWriteMask = 0xff;\r\n      this.stencilFunc = AlwaysStencilFunc;\r\n      this.stencilRef = 0;\r\n      this.stencilFuncMask = 0xff;\r\n      this.stencilFail = KeepStencilOp;\r\n      this.stencilZFail = KeepStencilOp;\r\n      this.stencilZPass = KeepStencilOp;\r\n      this.stencilWrite = false;\r\n      this.clippingPlanes = null;\r\n      this.clipIntersection = false;\r\n      this.clipShadows = false;\r\n      this.shadowSide = null;\r\n      this.colorWrite = true;\r\n      this.precision = null; // override the renderer's default precision for this material\r\n\r\n      this.polygonOffset = false;\r\n      this.polygonOffsetFactor = 0;\r\n      this.polygonOffsetUnits = 0;\r\n      this.dithering = false;\r\n      this.alphaTest = 0;\r\n      this.alphaToCoverage = false;\r\n      this.premultipliedAlpha = false;\r\n      this.visible = true;\r\n      this.toneMapped = true;\r\n      this.userData = {};\r\n      this.version = 0;\r\n    }\r\n\r\n    onBuild() /* shaderobject, renderer */\r\n    {}\r\n\r\n    onBeforeCompile() /* shaderobject, renderer */\r\n    {}\r\n\r\n    customProgramCacheKey() {\r\n      return this.onBeforeCompile.toString();\r\n    }\r\n\r\n    setValues(values) {\r\n      if (values === undefined) return;\r\n\r\n      for (const key in values) {\r\n        const newValue = values[key];\r\n\r\n        if (newValue === undefined) {\r\n          console.warn(\"THREE.Material: '\" + key + \"' parameter is undefined.\");\r\n          continue;\r\n        } // for backward compatability if shading is set in the constructor\r\n\r\n        if (key === 'shading') {\r\n          console.warn(\r\n            'THREE.' +\r\n              this.type +\r\n              ': .shading has been removed. Use the boolean .flatShading instead.',\r\n          );\r\n          this.flatShading = newValue === FlatShading ? true : false;\r\n          continue;\r\n        }\r\n\r\n        const currentValue = this[key];\r\n\r\n        if (currentValue === undefined) {\r\n          console.warn(\r\n            'THREE.' + this.type + \": '\" + key + \"' is not a property of this material.\",\r\n          );\r\n          continue;\r\n        }\r\n\r\n        if (currentValue && currentValue.isColor) {\r\n          currentValue.set(newValue);\r\n        } else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\r\n          currentValue.copy(newValue);\r\n        } else {\r\n          this[key] = newValue;\r\n        }\r\n      }\r\n    }\r\n\r\n    toJSON(meta) {\r\n      const isRoot = meta === undefined || typeof meta === 'string';\r\n\r\n      if (isRoot) {\r\n        meta = {\r\n          textures: {},\r\n          images: {},\r\n        };\r\n      }\r\n\r\n      const data = {\r\n        metadata: {\r\n          version: 4.5,\r\n          type: 'Material',\r\n          generator: 'Material.toJSON',\r\n        },\r\n      }; // standard Material serialization\r\n\r\n      data.uuid = this.uuid;\r\n      data.type = this.type;\r\n      if (this.name !== '') data.name = this.name;\r\n      if (this.color && this.color.isColor) data.color = this.color.getHex();\r\n      if (this.roughness !== undefined) data.roughness = this.roughness;\r\n      if (this.metalness !== undefined) data.metalness = this.metalness;\r\n      if (this.sheen && this.sheen.isColor) data.sheen = this.sheen.getHex();\r\n      if (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\r\n      if (this.emissiveIntensity && this.emissiveIntensity !== 1)\r\n        data.emissiveIntensity = this.emissiveIntensity;\r\n      if (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\r\n      if (this.shininess !== undefined) data.shininess = this.shininess;\r\n      if (this.clearcoat !== undefined) data.clearcoat = this.clearcoat;\r\n      if (this.clearcoatRoughness !== undefined) data.clearcoatRoughness = this.clearcoatRoughness;\r\n\r\n      if (this.clearcoatMap && this.clearcoatMap.isTexture) {\r\n        data.clearcoatMap = this.clearcoatMap.toJSON(meta).uuid;\r\n      }\r\n\r\n      if (this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture) {\r\n        data.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(meta).uuid;\r\n      }\r\n\r\n      if (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {\r\n        data.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;\r\n        data.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\r\n      }\r\n\r\n      if (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\r\n      if (this.matcap && this.matcap.isTexture) data.matcap = this.matcap.toJSON(meta).uuid;\r\n      if (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\r\n\r\n      if (this.lightMap && this.lightMap.isTexture) {\r\n        data.lightMap = this.lightMap.toJSON(meta).uuid;\r\n        data.lightMapIntensity = this.lightMapIntensity;\r\n      }\r\n\r\n      if (this.aoMap && this.aoMap.isTexture) {\r\n        data.aoMap = this.aoMap.toJSON(meta).uuid;\r\n        data.aoMapIntensity = this.aoMapIntensity;\r\n      }\r\n\r\n      if (this.bumpMap && this.bumpMap.isTexture) {\r\n        data.bumpMap = this.bumpMap.toJSON(meta).uuid;\r\n        data.bumpScale = this.bumpScale;\r\n      }\r\n\r\n      if (this.normalMap && this.normalMap.isTexture) {\r\n        data.normalMap = this.normalMap.toJSON(meta).uuid;\r\n        data.normalMapType = this.normalMapType;\r\n        data.normalScale = this.normalScale.toArray();\r\n      }\r\n\r\n      if (this.displacementMap && this.displacementMap.isTexture) {\r\n        data.displacementMap = this.displacementMap.toJSON(meta).uuid;\r\n        data.displacementScale = this.displacementScale;\r\n        data.displacementBias = this.displacementBias;\r\n      }\r\n\r\n      if (this.roughnessMap && this.roughnessMap.isTexture)\r\n        data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\r\n      if (this.metalnessMap && this.metalnessMap.isTexture)\r\n        data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\r\n      if (this.emissiveMap && this.emissiveMap.isTexture)\r\n        data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\r\n      if (this.specularMap && this.specularMap.isTexture)\r\n        data.specularMap = this.specularMap.toJSON(meta).uuid;\r\n\r\n      if (this.envMap && this.envMap.isTexture) {\r\n        data.envMap = this.envMap.toJSON(meta).uuid;\r\n        if (this.combine !== undefined) data.combine = this.combine;\r\n      }\r\n\r\n      if (this.envMapIntensity !== undefined) data.envMapIntensity = this.envMapIntensity;\r\n      if (this.reflectivity !== undefined) data.reflectivity = this.reflectivity;\r\n      if (this.refractionRatio !== undefined) data.refractionRatio = this.refractionRatio;\r\n\r\n      if (this.gradientMap && this.gradientMap.isTexture) {\r\n        data.gradientMap = this.gradientMap.toJSON(meta).uuid;\r\n      }\r\n\r\n      if (this.transmission !== undefined) data.transmission = this.transmission;\r\n      if (this.transmissionMap && this.transmissionMap.isTexture)\r\n        data.transmissionMap = this.transmissionMap.toJSON(meta).uuid;\r\n      if (this.thickness !== undefined) data.thickness = this.thickness;\r\n      if (this.thicknessMap && this.thicknessMap.isTexture)\r\n        data.thicknessMap = this.thicknessMap.toJSON(meta).uuid;\r\n      if (this.attenuationDistance !== undefined)\r\n        data.attenuationDistance = this.attenuationDistance;\r\n      if (this.attenuationColor !== undefined)\r\n        data.attenuationColor = this.attenuationColor.getHex();\r\n      if (this.size !== undefined) data.size = this.size;\r\n      if (this.shadowSide !== null) data.shadowSide = this.shadowSide;\r\n      if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\r\n      if (this.blending !== NormalBlending) data.blending = this.blending;\r\n      if (this.side !== FrontSide) data.side = this.side;\r\n      if (this.vertexColors) data.vertexColors = true;\r\n      if (this.opacity < 1) data.opacity = this.opacity;\r\n      if (this.transparent === true) data.transparent = this.transparent;\r\n      data.depthFunc = this.depthFunc;\r\n      data.depthTest = this.depthTest;\r\n      data.depthWrite = this.depthWrite;\r\n      data.colorWrite = this.colorWrite;\r\n      data.stencilWrite = this.stencilWrite;\r\n      data.stencilWriteMask = this.stencilWriteMask;\r\n      data.stencilFunc = this.stencilFunc;\r\n      data.stencilRef = this.stencilRef;\r\n      data.stencilFuncMask = this.stencilFuncMask;\r\n      data.stencilFail = this.stencilFail;\r\n      data.stencilZFail = this.stencilZFail;\r\n      data.stencilZPass = this.stencilZPass; // rotation (SpriteMaterial)\r\n\r\n      if (this.rotation && this.rotation !== 0) data.rotation = this.rotation;\r\n      if (this.polygonOffset === true) data.polygonOffset = true;\r\n      if (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;\r\n      if (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;\r\n      if (this.linewidth && this.linewidth !== 1) data.linewidth = this.linewidth;\r\n      if (this.dashSize !== undefined) data.dashSize = this.dashSize;\r\n      if (this.gapSize !== undefined) data.gapSize = this.gapSize;\r\n      if (this.scale !== undefined) data.scale = this.scale;\r\n      if (this.dithering === true) data.dithering = true;\r\n      if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\r\n      if (this.alphaToCoverage === true) data.alphaToCoverage = this.alphaToCoverage;\r\n      if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\r\n      if (this.wireframe === true) data.wireframe = this.wireframe;\r\n      if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\r\n      if (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\r\n      if (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\r\n      if (this.morphTargets === true) data.morphTargets = true;\r\n      if (this.morphNormals === true) data.morphNormals = true;\r\n      if (this.flatShading === true) data.flatShading = this.flatShading;\r\n      if (this.visible === false) data.visible = false;\r\n      if (this.toneMapped === false) data.toneMapped = false;\r\n      if (JSON.stringify(this.userData) !== '{}') data.userData = this.userData; // TODO: Copied from Object3D.toJSON\r\n\r\n      function extractFromCache(cache) {\r\n        const values = [];\r\n\r\n        for (const key in cache) {\r\n          const data = cache[key];\r\n          delete data.metadata;\r\n          values.push(data);\r\n        }\r\n\r\n        return values;\r\n      }\r\n\r\n      if (isRoot) {\r\n        const textures = extractFromCache(meta.textures);\r\n        const images = extractFromCache(meta.images);\r\n        if (textures.length > 0) data.textures = textures;\r\n        if (images.length > 0) data.images = images;\r\n      }\r\n\r\n      return data;\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().copy(this);\r\n    }\r\n\r\n    copy(source) {\r\n      this.name = source.name;\r\n      this.fog = source.fog;\r\n      this.blending = source.blending;\r\n      this.side = source.side;\r\n      this.vertexColors = source.vertexColors;\r\n      this.opacity = source.opacity;\r\n      this.transparent = source.transparent;\r\n      this.blendSrc = source.blendSrc;\r\n      this.blendDst = source.blendDst;\r\n      this.blendEquation = source.blendEquation;\r\n      this.blendSrcAlpha = source.blendSrcAlpha;\r\n      this.blendDstAlpha = source.blendDstAlpha;\r\n      this.blendEquationAlpha = source.blendEquationAlpha;\r\n      this.depthFunc = source.depthFunc;\r\n      this.depthTest = source.depthTest;\r\n      this.depthWrite = source.depthWrite;\r\n      this.stencilWriteMask = source.stencilWriteMask;\r\n      this.stencilFunc = source.stencilFunc;\r\n      this.stencilRef = source.stencilRef;\r\n      this.stencilFuncMask = source.stencilFuncMask;\r\n      this.stencilFail = source.stencilFail;\r\n      this.stencilZFail = source.stencilZFail;\r\n      this.stencilZPass = source.stencilZPass;\r\n      this.stencilWrite = source.stencilWrite;\r\n      const srcPlanes = source.clippingPlanes;\r\n      let dstPlanes = null;\r\n\r\n      if (srcPlanes !== null) {\r\n        const n = srcPlanes.length;\r\n        dstPlanes = new Array(n);\r\n\r\n        for (let i = 0; i !== n; ++i) {\r\n          dstPlanes[i] = srcPlanes[i].clone();\r\n        }\r\n      }\r\n\r\n      this.clippingPlanes = dstPlanes;\r\n      this.clipIntersection = source.clipIntersection;\r\n      this.clipShadows = source.clipShadows;\r\n      this.shadowSide = source.shadowSide;\r\n      this.colorWrite = source.colorWrite;\r\n      this.precision = source.precision;\r\n      this.polygonOffset = source.polygonOffset;\r\n      this.polygonOffsetFactor = source.polygonOffsetFactor;\r\n      this.polygonOffsetUnits = source.polygonOffsetUnits;\r\n      this.dithering = source.dithering;\r\n      this.alphaTest = source.alphaTest;\r\n      this.alphaToCoverage = source.alphaToCoverage;\r\n      this.premultipliedAlpha = source.premultipliedAlpha;\r\n      this.visible = source.visible;\r\n      this.toneMapped = source.toneMapped;\r\n      this.userData = JSON.parse(JSON.stringify(source.userData));\r\n      return this;\r\n    }\r\n\r\n    dispose() {\r\n      this.dispatchEvent({\r\n        type: 'dispose',\r\n      });\r\n    }\r\n\r\n    set needsUpdate(value) {\r\n      if (value === true) this.version++;\r\n    }\r\n  }\r\n\r\n  Material.prototype.isMaterial = true;\r\n\r\n  const _colorKeywords = {\r\n    aliceblue: 0xf0f8ff,\r\n    antiquewhite: 0xfaebd7,\r\n    aqua: 0x00ffff,\r\n    aquamarine: 0x7fffd4,\r\n    azure: 0xf0ffff,\r\n    beige: 0xf5f5dc,\r\n    bisque: 0xffe4c4,\r\n    black: 0x000000,\r\n    blanchedalmond: 0xffebcd,\r\n    blue: 0x0000ff,\r\n    blueviolet: 0x8a2be2,\r\n    brown: 0xa52a2a,\r\n    burlywood: 0xdeb887,\r\n    cadetblue: 0x5f9ea0,\r\n    chartreuse: 0x7fff00,\r\n    chocolate: 0xd2691e,\r\n    coral: 0xff7f50,\r\n    cornflowerblue: 0x6495ed,\r\n    cornsilk: 0xfff8dc,\r\n    crimson: 0xdc143c,\r\n    cyan: 0x00ffff,\r\n    darkblue: 0x00008b,\r\n    darkcyan: 0x008b8b,\r\n    darkgoldenrod: 0xb8860b,\r\n    darkgray: 0xa9a9a9,\r\n    darkgreen: 0x006400,\r\n    darkgrey: 0xa9a9a9,\r\n    darkkhaki: 0xbdb76b,\r\n    darkmagenta: 0x8b008b,\r\n    darkolivegreen: 0x556b2f,\r\n    darkorange: 0xff8c00,\r\n    darkorchid: 0x9932cc,\r\n    darkred: 0x8b0000,\r\n    darksalmon: 0xe9967a,\r\n    darkseagreen: 0x8fbc8f,\r\n    darkslateblue: 0x483d8b,\r\n    darkslategray: 0x2f4f4f,\r\n    darkslategrey: 0x2f4f4f,\r\n    darkturquoise: 0x00ced1,\r\n    darkviolet: 0x9400d3,\r\n    deeppink: 0xff1493,\r\n    deepskyblue: 0x00bfff,\r\n    dimgray: 0x696969,\r\n    dimgrey: 0x696969,\r\n    dodgerblue: 0x1e90ff,\r\n    firebrick: 0xb22222,\r\n    floralwhite: 0xfffaf0,\r\n    forestgreen: 0x228b22,\r\n    fuchsia: 0xff00ff,\r\n    gainsboro: 0xdcdcdc,\r\n    ghostwhite: 0xf8f8ff,\r\n    gold: 0xffd700,\r\n    goldenrod: 0xdaa520,\r\n    gray: 0x808080,\r\n    green: 0x008000,\r\n    greenyellow: 0xadff2f,\r\n    grey: 0x808080,\r\n    honeydew: 0xf0fff0,\r\n    hotpink: 0xff69b4,\r\n    indianred: 0xcd5c5c,\r\n    indigo: 0x4b0082,\r\n    ivory: 0xfffff0,\r\n    khaki: 0xf0e68c,\r\n    lavender: 0xe6e6fa,\r\n    lavenderblush: 0xfff0f5,\r\n    lawngreen: 0x7cfc00,\r\n    lemonchiffon: 0xfffacd,\r\n    lightblue: 0xadd8e6,\r\n    lightcoral: 0xf08080,\r\n    lightcyan: 0xe0ffff,\r\n    lightgoldenrodyellow: 0xfafad2,\r\n    lightgray: 0xd3d3d3,\r\n    lightgreen: 0x90ee90,\r\n    lightgrey: 0xd3d3d3,\r\n    lightpink: 0xffb6c1,\r\n    lightsalmon: 0xffa07a,\r\n    lightseagreen: 0x20b2aa,\r\n    lightskyblue: 0x87cefa,\r\n    lightslategray: 0x778899,\r\n    lightslategrey: 0x778899,\r\n    lightsteelblue: 0xb0c4de,\r\n    lightyellow: 0xffffe0,\r\n    lime: 0x00ff00,\r\n    limegreen: 0x32cd32,\r\n    linen: 0xfaf0e6,\r\n    magenta: 0xff00ff,\r\n    maroon: 0x800000,\r\n    mediumaquamarine: 0x66cdaa,\r\n    mediumblue: 0x0000cd,\r\n    mediumorchid: 0xba55d3,\r\n    mediumpurple: 0x9370db,\r\n    mediumseagreen: 0x3cb371,\r\n    mediumslateblue: 0x7b68ee,\r\n    mediumspringgreen: 0x00fa9a,\r\n    mediumturquoise: 0x48d1cc,\r\n    mediumvioletred: 0xc71585,\r\n    midnightblue: 0x191970,\r\n    mintcream: 0xf5fffa,\r\n    mistyrose: 0xffe4e1,\r\n    moccasin: 0xffe4b5,\r\n    navajowhite: 0xffdead,\r\n    navy: 0x000080,\r\n    oldlace: 0xfdf5e6,\r\n    olive: 0x808000,\r\n    olivedrab: 0x6b8e23,\r\n    orange: 0xffa500,\r\n    orangered: 0xff4500,\r\n    orchid: 0xda70d6,\r\n    palegoldenrod: 0xeee8aa,\r\n    palegreen: 0x98fb98,\r\n    paleturquoise: 0xafeeee,\r\n    palevioletred: 0xdb7093,\r\n    papayawhip: 0xffefd5,\r\n    peachpuff: 0xffdab9,\r\n    peru: 0xcd853f,\r\n    pink: 0xffc0cb,\r\n    plum: 0xdda0dd,\r\n    powderblue: 0xb0e0e6,\r\n    purple: 0x800080,\r\n    rebeccapurple: 0x663399,\r\n    red: 0xff0000,\r\n    rosybrown: 0xbc8f8f,\r\n    royalblue: 0x4169e1,\r\n    saddlebrown: 0x8b4513,\r\n    salmon: 0xfa8072,\r\n    sandybrown: 0xf4a460,\r\n    seagreen: 0x2e8b57,\r\n    seashell: 0xfff5ee,\r\n    sienna: 0xa0522d,\r\n    silver: 0xc0c0c0,\r\n    skyblue: 0x87ceeb,\r\n    slateblue: 0x6a5acd,\r\n    slategray: 0x708090,\r\n    slategrey: 0x708090,\r\n    snow: 0xfffafa,\r\n    springgreen: 0x00ff7f,\r\n    steelblue: 0x4682b4,\r\n    tan: 0xd2b48c,\r\n    teal: 0x008080,\r\n    thistle: 0xd8bfd8,\r\n    tomato: 0xff6347,\r\n    turquoise: 0x40e0d0,\r\n    violet: 0xee82ee,\r\n    wheat: 0xf5deb3,\r\n    white: 0xffffff,\r\n    whitesmoke: 0xf5f5f5,\r\n    yellow: 0xffff00,\r\n    yellowgreen: 0x9acd32,\r\n  };\r\n  const _hslA = {\r\n    h: 0,\r\n    s: 0,\r\n    l: 0,\r\n  };\r\n  const _hslB = {\r\n    h: 0,\r\n    s: 0,\r\n    l: 0,\r\n  };\r\n\r\n  function hue2rgb(p, q, t) {\r\n    if (t < 0) t += 1;\r\n    if (t > 1) t -= 1;\r\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n    if (t < 1 / 2) return q;\r\n    if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\r\n    return p;\r\n  }\r\n\r\n  function SRGBToLinear(c) {\r\n    return c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\r\n  }\r\n\r\n  function LinearToSRGB(c) {\r\n    return c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\r\n  }\r\n\r\n  class Color {\r\n    constructor(r, g, b) {\r\n      if (g === undefined && b === undefined) {\r\n        // r is THREE.Color, hex or string\r\n        return this.set(r);\r\n      }\r\n\r\n      return this.setRGB(r, g, b);\r\n    }\r\n\r\n    set(value) {\r\n      if (value && value.isColor) {\r\n        this.copy(value);\r\n      } else if (typeof value === 'number') {\r\n        this.setHex(value);\r\n      } else if (typeof value === 'string') {\r\n        this.setStyle(value);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    setScalar(scalar) {\r\n      this.r = scalar;\r\n      this.g = scalar;\r\n      this.b = scalar;\r\n      return this;\r\n    }\r\n\r\n    setHex(hex) {\r\n      hex = Math.floor(hex);\r\n      this.r = ((hex >> 16) & 255) / 255;\r\n      this.g = ((hex >> 8) & 255) / 255;\r\n      this.b = (hex & 255) / 255;\r\n      return this;\r\n    }\r\n\r\n    setRGB(r, g, b) {\r\n      this.r = r;\r\n      this.g = g;\r\n      this.b = b;\r\n      return this;\r\n    }\r\n\r\n    setHSL(h, s, l) {\r\n      // h,s,l ranges are in 0.0 - 1.0\r\n      h = euclideanModulo(h, 1);\r\n      s = clamp(s, 0, 1);\r\n      l = clamp(l, 0, 1);\r\n\r\n      if (s === 0) {\r\n        this.r = this.g = this.b = l;\r\n      } else {\r\n        const p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\r\n        const q = 2 * l - p;\r\n        this.r = hue2rgb(q, p, h + 1 / 3);\r\n        this.g = hue2rgb(q, p, h);\r\n        this.b = hue2rgb(q, p, h - 1 / 3);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    setStyle(style) {\r\n      function handleAlpha(string) {\r\n        if (string === undefined) return;\r\n\r\n        if (parseFloat(string) < 1) {\r\n          console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\r\n        }\r\n      }\r\n\r\n      let m;\r\n\r\n      if ((m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style))) {\r\n        // rgb / hsl\r\n        let color;\r\n        const name = m[1];\r\n        const components = m[2];\r\n\r\n        switch (name) {\r\n          case 'rgb':\r\n          case 'rgba':\r\n            if (\r\n              (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(\r\n                components,\r\n              ))\r\n            ) {\r\n              // rgb(255,0,0) rgba(255,0,0,0.5)\r\n              this.r = Math.min(255, parseInt(color[1], 10)) / 255;\r\n              this.g = Math.min(255, parseInt(color[2], 10)) / 255;\r\n              this.b = Math.min(255, parseInt(color[3], 10)) / 255;\r\n              handleAlpha(color[4]);\r\n              return this;\r\n            }\r\n\r\n            if (\r\n              (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(\r\n                components,\r\n              ))\r\n            ) {\r\n              // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\r\n              this.r = Math.min(100, parseInt(color[1], 10)) / 100;\r\n              this.g = Math.min(100, parseInt(color[2], 10)) / 100;\r\n              this.b = Math.min(100, parseInt(color[3], 10)) / 100;\r\n              handleAlpha(color[4]);\r\n              return this;\r\n            }\r\n\r\n            break;\r\n\r\n          case 'hsl':\r\n          case 'hsla':\r\n            if (\r\n              (color =\r\n                /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(\r\n                  components,\r\n                ))\r\n            ) {\r\n              // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\r\n              const h = parseFloat(color[1]) / 360;\r\n              const s = parseInt(color[2], 10) / 100;\r\n              const l = parseInt(color[3], 10) / 100;\r\n              handleAlpha(color[4]);\r\n              return this.setHSL(h, s, l);\r\n            }\r\n\r\n            break;\r\n        }\r\n      } else if ((m = /^\\#([A-Fa-f\\d]+)$/.exec(style))) {\r\n        // hex color\r\n        const hex = m[1];\r\n        const size = hex.length;\r\n\r\n        if (size === 3) {\r\n          // #ff0\r\n          this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\r\n          this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\r\n          this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\r\n          return this;\r\n        } else if (size === 6) {\r\n          // #ff0000\r\n          this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\r\n          this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\r\n          this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\r\n          return this;\r\n        }\r\n      }\r\n\r\n      if (style && style.length > 0) {\r\n        return this.setColorName(style);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    setColorName(style) {\r\n      // color keywords\r\n      const hex = _colorKeywords[style.toLowerCase()];\r\n\r\n      if (hex !== undefined) {\r\n        // red\r\n        this.setHex(hex);\r\n      } else {\r\n        // unknown color\r\n        console.warn('THREE.Color: Unknown color ' + style);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor(this.r, this.g, this.b);\r\n    }\r\n\r\n    copy(color) {\r\n      this.r = color.r;\r\n      this.g = color.g;\r\n      this.b = color.b;\r\n      return this;\r\n    }\r\n\r\n    copyGammaToLinear(color, gammaFactor = 2.0) {\r\n      this.r = Math.pow(color.r, gammaFactor);\r\n      this.g = Math.pow(color.g, gammaFactor);\r\n      this.b = Math.pow(color.b, gammaFactor);\r\n      return this;\r\n    }\r\n\r\n    copyLinearToGamma(color, gammaFactor = 2.0) {\r\n      const safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\r\n      this.r = Math.pow(color.r, safeInverse);\r\n      this.g = Math.pow(color.g, safeInverse);\r\n      this.b = Math.pow(color.b, safeInverse);\r\n      return this;\r\n    }\r\n\r\n    convertGammaToLinear(gammaFactor) {\r\n      this.copyGammaToLinear(this, gammaFactor);\r\n      return this;\r\n    }\r\n\r\n    convertLinearToGamma(gammaFactor) {\r\n      this.copyLinearToGamma(this, gammaFactor);\r\n      return this;\r\n    }\r\n\r\n    copySRGBToLinear(color) {\r\n      this.r = SRGBToLinear(color.r);\r\n      this.g = SRGBToLinear(color.g);\r\n      this.b = SRGBToLinear(color.b);\r\n      return this;\r\n    }\r\n\r\n    copyLinearToSRGB(color) {\r\n      this.r = LinearToSRGB(color.r);\r\n      this.g = LinearToSRGB(color.g);\r\n      this.b = LinearToSRGB(color.b);\r\n      return this;\r\n    }\r\n\r\n    convertSRGBToLinear() {\r\n      this.copySRGBToLinear(this);\r\n      return this;\r\n    }\r\n\r\n    convertLinearToSRGB() {\r\n      this.copyLinearToSRGB(this);\r\n      return this;\r\n    }\r\n\r\n    getHex() {\r\n      return ((this.r * 255) << 16) ^ ((this.g * 255) << 8) ^ ((this.b * 255) << 0);\r\n    }\r\n\r\n    getHexString() {\r\n      return ('000000' + this.getHex().toString(16)).slice(-6);\r\n    }\r\n\r\n    getHSL(target) {\r\n      // h,s,l ranges are in 0.0 - 1.0\r\n      if (target === undefined) {\r\n        console.warn('THREE.Color: .getHSL() target is now required');\r\n        target = {\r\n          h: 0,\r\n          s: 0,\r\n          l: 0,\r\n        };\r\n      }\r\n\r\n      const r = this.r,\r\n        g = this.g,\r\n        b = this.b;\r\n      const max = Math.max(r, g, b);\r\n      const min = Math.min(r, g, b);\r\n      let hue, saturation;\r\n      const lightness = (min + max) / 2.0;\r\n\r\n      if (min === max) {\r\n        hue = 0;\r\n        saturation = 0;\r\n      } else {\r\n        const delta = max - min;\r\n        saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\r\n\r\n        switch (max) {\r\n          case r:\r\n            hue = (g - b) / delta + (g < b ? 6 : 0);\r\n            break;\r\n\r\n          case g:\r\n            hue = (b - r) / delta + 2;\r\n            break;\r\n\r\n          case b:\r\n            hue = (r - g) / delta + 4;\r\n            break;\r\n        }\r\n\r\n        hue /= 6;\r\n      }\r\n\r\n      target.h = hue;\r\n      target.s = saturation;\r\n      target.l = lightness;\r\n      return target;\r\n    }\r\n\r\n    getStyle() {\r\n      return (\r\n        'rgb(' +\r\n        ((this.r * 255) | 0) +\r\n        ',' +\r\n        ((this.g * 255) | 0) +\r\n        ',' +\r\n        ((this.b * 255) | 0) +\r\n        ')'\r\n      );\r\n    }\r\n\r\n    offsetHSL(h, s, l) {\r\n      this.getHSL(_hslA);\r\n      _hslA.h += h;\r\n      _hslA.s += s;\r\n      _hslA.l += l;\r\n      this.setHSL(_hslA.h, _hslA.s, _hslA.l);\r\n      return this;\r\n    }\r\n\r\n    add(color) {\r\n      this.r += color.r;\r\n      this.g += color.g;\r\n      this.b += color.b;\r\n      return this;\r\n    }\r\n\r\n    addColors(color1, color2) {\r\n      this.r = color1.r + color2.r;\r\n      this.g = color1.g + color2.g;\r\n      this.b = color1.b + color2.b;\r\n      return this;\r\n    }\r\n\r\n    addScalar(s) {\r\n      this.r += s;\r\n      this.g += s;\r\n      this.b += s;\r\n      return this;\r\n    }\r\n\r\n    sub(color) {\r\n      this.r = Math.max(0, this.r - color.r);\r\n      this.g = Math.max(0, this.g - color.g);\r\n      this.b = Math.max(0, this.b - color.b);\r\n      return this;\r\n    }\r\n\r\n    multiply(color) {\r\n      this.r *= color.r;\r\n      this.g *= color.g;\r\n      this.b *= color.b;\r\n      return this;\r\n    }\r\n\r\n    multiplyScalar(s) {\r\n      this.r *= s;\r\n      this.g *= s;\r\n      this.b *= s;\r\n      return this;\r\n    }\r\n\r\n    lerp(color, alpha) {\r\n      this.r += (color.r - this.r) * alpha;\r\n      this.g += (color.g - this.g) * alpha;\r\n      this.b += (color.b - this.b) * alpha;\r\n      return this;\r\n    }\r\n\r\n    lerpColors(color1, color2, alpha) {\r\n      this.r = color1.r + (color2.r - color1.r) * alpha;\r\n      this.g = color1.g + (color2.g - color1.g) * alpha;\r\n      this.b = color1.b + (color2.b - color1.b) * alpha;\r\n      return this;\r\n    }\r\n\r\n    lerpHSL(color, alpha) {\r\n      this.getHSL(_hslA);\r\n      color.getHSL(_hslB);\r\n      const h = lerp(_hslA.h, _hslB.h, alpha);\r\n      const s = lerp(_hslA.s, _hslB.s, alpha);\r\n      const l = lerp(_hslA.l, _hslB.l, alpha);\r\n      this.setHSL(h, s, l);\r\n      return this;\r\n    }\r\n\r\n    equals(c) {\r\n      return c.r === this.r && c.g === this.g && c.b === this.b;\r\n    }\r\n\r\n    fromArray(array, offset = 0) {\r\n      this.r = array[offset];\r\n      this.g = array[offset + 1];\r\n      this.b = array[offset + 2];\r\n      return this;\r\n    }\r\n\r\n    toArray(array = [], offset = 0) {\r\n      array[offset] = this.r;\r\n      array[offset + 1] = this.g;\r\n      array[offset + 2] = this.b;\r\n      return array;\r\n    }\r\n\r\n    fromBufferAttribute(attribute, index) {\r\n      this.r = attribute.getX(index);\r\n      this.g = attribute.getY(index);\r\n      this.b = attribute.getZ(index);\r\n\r\n      if (attribute.normalized === true) {\r\n        // assuming Uint8Array\r\n        this.r /= 255;\r\n        this.g /= 255;\r\n        this.b /= 255;\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    toJSON() {\r\n      return this.getHex();\r\n    }\r\n  }\r\n\r\n  Color.NAMES = _colorKeywords;\r\n  Color.prototype.isColor = true;\r\n  Color.prototype.r = 1;\r\n  Color.prototype.g = 1;\r\n  Color.prototype.b = 1;\r\n\r\n  /**\r\n   * parameters = {\r\n   *\tcolor: <hex>,\r\n   *\topacity: <float>,\r\n   *\tmap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tlightMap: new THREE.Texture( <Image> ),\r\n   *\tlightMapIntensity: <float>\r\n   *\r\n   *\taoMap: new THREE.Texture( <Image> ),\r\n   *\taoMapIntensity: <float>\r\n   *\r\n   *\tspecularMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\talphaMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n   *\tcombine: THREE.Multiply,\r\n   *\treflectivity: <float>,\r\n   *\trefractionRatio: <float>,\r\n   *\r\n   *\tdepthTest: <bool>,\r\n   *\tdepthWrite: <bool>,\r\n   *\r\n   *\twireframe: <boolean>,\r\n   *\twireframeLinewidth: <float>,\r\n   *\r\n   *\tmorphTargets: <bool>\r\n   * }\r\n   */\r\n\r\n  class MeshBasicMaterial extends Material {\r\n    constructor(parameters) {\r\n      super();\r\n      this.type = 'MeshBasicMaterial';\r\n      this.color = new Color(0xffffff); // emissive\r\n\r\n      this.map = null;\r\n      this.lightMap = null;\r\n      this.lightMapIntensity = 1.0;\r\n      this.aoMap = null;\r\n      this.aoMapIntensity = 1.0;\r\n      this.specularMap = null;\r\n      this.alphaMap = null;\r\n      this.envMap = null;\r\n      this.combine = MultiplyOperation;\r\n      this.reflectivity = 1;\r\n      this.refractionRatio = 0.98;\r\n      this.wireframe = false;\r\n      this.wireframeLinewidth = 1;\r\n      this.wireframeLinecap = 'round';\r\n      this.wireframeLinejoin = 'round';\r\n      this.morphTargets = false;\r\n      this.setValues(parameters);\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.color.copy(source.color);\r\n      this.map = source.map;\r\n      this.lightMap = source.lightMap;\r\n      this.lightMapIntensity = source.lightMapIntensity;\r\n      this.aoMap = source.aoMap;\r\n      this.aoMapIntensity = source.aoMapIntensity;\r\n      this.specularMap = source.specularMap;\r\n      this.alphaMap = source.alphaMap;\r\n      this.envMap = source.envMap;\r\n      this.combine = source.combine;\r\n      this.reflectivity = source.reflectivity;\r\n      this.refractionRatio = source.refractionRatio;\r\n      this.wireframe = source.wireframe;\r\n      this.wireframeLinewidth = source.wireframeLinewidth;\r\n      this.wireframeLinecap = source.wireframeLinecap;\r\n      this.wireframeLinejoin = source.wireframeLinejoin;\r\n      this.morphTargets = source.morphTargets;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  MeshBasicMaterial.prototype.isMeshBasicMaterial = true;\r\n\r\n  const _vector$9 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _vector2 = /*@__PURE__*/ new Vector2();\r\n\r\n  class BufferAttribute {\r\n    constructor(array, itemSize, normalized) {\r\n      if (Array.isArray(array)) {\r\n        throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\r\n      }\r\n\r\n      this.name = '';\r\n      this.array = array;\r\n      this.itemSize = itemSize;\r\n      this.count = array !== undefined ? array.length / itemSize : 0;\r\n      this.normalized = normalized === true;\r\n      this.usage = StaticDrawUsage;\r\n      this.updateRange = {\r\n        offset: 0,\r\n        count: -1,\r\n      };\r\n      this.version = 0;\r\n    }\r\n\r\n    onUploadCallback() {}\r\n\r\n    set needsUpdate(value) {\r\n      if (value === true) this.version++;\r\n    }\r\n\r\n    setUsage(value) {\r\n      this.usage = value;\r\n      return this;\r\n    }\r\n\r\n    copy(source) {\r\n      this.name = source.name;\r\n      this.array = new source.array.constructor(source.array);\r\n      this.itemSize = source.itemSize;\r\n      this.count = source.count;\r\n      this.normalized = source.normalized;\r\n      this.usage = source.usage;\r\n      return this;\r\n    }\r\n\r\n    copyAt(index1, attribute, index2) {\r\n      index1 *= this.itemSize;\r\n      index2 *= attribute.itemSize;\r\n\r\n      for (let i = 0, l = this.itemSize; i < l; i++) {\r\n        this.array[index1 + i] = attribute.array[index2 + i];\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    copyArray(array) {\r\n      this.array.set(array);\r\n      return this;\r\n    }\r\n\r\n    copyColorsArray(colors) {\r\n      const array = this.array;\r\n      let offset = 0;\r\n\r\n      for (let i = 0, l = colors.length; i < l; i++) {\r\n        let color = colors[i];\r\n\r\n        if (color === undefined) {\r\n          console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\r\n          color = new Color();\r\n        }\r\n\r\n        array[offset++] = color.r;\r\n        array[offset++] = color.g;\r\n        array[offset++] = color.b;\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    copyVector2sArray(vectors) {\r\n      const array = this.array;\r\n      let offset = 0;\r\n\r\n      for (let i = 0, l = vectors.length; i < l; i++) {\r\n        let vector = vectors[i];\r\n\r\n        if (vector === undefined) {\r\n          console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\r\n          vector = new Vector2();\r\n        }\r\n\r\n        array[offset++] = vector.x;\r\n        array[offset++] = vector.y;\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    copyVector3sArray(vectors) {\r\n      const array = this.array;\r\n      let offset = 0;\r\n\r\n      for (let i = 0, l = vectors.length; i < l; i++) {\r\n        let vector = vectors[i];\r\n\r\n        if (vector === undefined) {\r\n          console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\r\n          vector = new Vector3();\r\n        }\r\n\r\n        array[offset++] = vector.x;\r\n        array[offset++] = vector.y;\r\n        array[offset++] = vector.z;\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    copyVector4sArray(vectors) {\r\n      const array = this.array;\r\n      let offset = 0;\r\n\r\n      for (let i = 0, l = vectors.length; i < l; i++) {\r\n        let vector = vectors[i];\r\n\r\n        if (vector === undefined) {\r\n          console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\r\n          vector = new Vector4();\r\n        }\r\n\r\n        array[offset++] = vector.x;\r\n        array[offset++] = vector.y;\r\n        array[offset++] = vector.z;\r\n        array[offset++] = vector.w;\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    applyMatrix3(m) {\r\n      if (this.itemSize === 2) {\r\n        for (let i = 0, l = this.count; i < l; i++) {\r\n          _vector2.fromBufferAttribute(this, i);\r\n\r\n          _vector2.applyMatrix3(m);\r\n\r\n          this.setXY(i, _vector2.x, _vector2.y);\r\n        }\r\n      } else if (this.itemSize === 3) {\r\n        for (let i = 0, l = this.count; i < l; i++) {\r\n          _vector$9.fromBufferAttribute(this, i);\r\n\r\n          _vector$9.applyMatrix3(m);\r\n\r\n          this.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\r\n        }\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    applyMatrix4(m) {\r\n      for (let i = 0, l = this.count; i < l; i++) {\r\n        _vector$9.x = this.getX(i);\r\n        _vector$9.y = this.getY(i);\r\n        _vector$9.z = this.getZ(i);\r\n\r\n        _vector$9.applyMatrix4(m);\r\n\r\n        this.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    applyNormalMatrix(m) {\r\n      for (let i = 0, l = this.count; i < l; i++) {\r\n        _vector$9.x = this.getX(i);\r\n        _vector$9.y = this.getY(i);\r\n        _vector$9.z = this.getZ(i);\r\n\r\n        _vector$9.applyNormalMatrix(m);\r\n\r\n        this.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    transformDirection(m) {\r\n      for (let i = 0, l = this.count; i < l; i++) {\r\n        _vector$9.x = this.getX(i);\r\n        _vector$9.y = this.getY(i);\r\n        _vector$9.z = this.getZ(i);\r\n\r\n        _vector$9.transformDirection(m);\r\n\r\n        this.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    set(value, offset = 0) {\r\n      this.array.set(value, offset);\r\n      return this;\r\n    }\r\n\r\n    getX(index) {\r\n      return this.array[index * this.itemSize];\r\n    }\r\n\r\n    setX(index, x) {\r\n      this.array[index * this.itemSize] = x;\r\n      return this;\r\n    }\r\n\r\n    getY(index) {\r\n      return this.array[index * this.itemSize + 1];\r\n    }\r\n\r\n    setY(index, y) {\r\n      this.array[index * this.itemSize + 1] = y;\r\n      return this;\r\n    }\r\n\r\n    getZ(index) {\r\n      return this.array[index * this.itemSize + 2];\r\n    }\r\n\r\n    setZ(index, z) {\r\n      this.array[index * this.itemSize + 2] = z;\r\n      return this;\r\n    }\r\n\r\n    getW(index) {\r\n      return this.array[index * this.itemSize + 3];\r\n    }\r\n\r\n    setW(index, w) {\r\n      this.array[index * this.itemSize + 3] = w;\r\n      return this;\r\n    }\r\n\r\n    setXY(index, x, y) {\r\n      index *= this.itemSize;\r\n      this.array[index + 0] = x;\r\n      this.array[index + 1] = y;\r\n      return this;\r\n    }\r\n\r\n    setXYZ(index, x, y, z) {\r\n      index *= this.itemSize;\r\n      this.array[index + 0] = x;\r\n      this.array[index + 1] = y;\r\n      this.array[index + 2] = z;\r\n      return this;\r\n    }\r\n\r\n    setXYZW(index, x, y, z, w) {\r\n      index *= this.itemSize;\r\n      this.array[index + 0] = x;\r\n      this.array[index + 1] = y;\r\n      this.array[index + 2] = z;\r\n      this.array[index + 3] = w;\r\n      return this;\r\n    }\r\n\r\n    onUpload(callback) {\r\n      this.onUploadCallback = callback;\r\n      return this;\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor(this.array, this.itemSize).copy(this);\r\n    }\r\n\r\n    toJSON() {\r\n      const data = {\r\n        itemSize: this.itemSize,\r\n        type: this.array.constructor.name,\r\n        array: Array.prototype.slice.call(this.array),\r\n        normalized: this.normalized,\r\n      };\r\n      if (this.name !== '') data.name = this.name;\r\n      if (this.usage !== StaticDrawUsage) data.usage = this.usage;\r\n      if (this.updateRange.offset !== 0 || this.updateRange.count !== -1)\r\n        data.updateRange = this.updateRange;\r\n      return data;\r\n    }\r\n  }\r\n\r\n  BufferAttribute.prototype.isBufferAttribute = true; //\r\n\r\n  class Int8BufferAttribute extends BufferAttribute {\r\n    constructor(array, itemSize, normalized) {\r\n      super(new Int8Array(array), itemSize, normalized);\r\n    }\r\n  }\r\n\r\n  class Uint8BufferAttribute extends BufferAttribute {\r\n    constructor(array, itemSize, normalized) {\r\n      super(new Uint8Array(array), itemSize, normalized);\r\n    }\r\n  }\r\n\r\n  class Uint8ClampedBufferAttribute extends BufferAttribute {\r\n    constructor(array, itemSize, normalized) {\r\n      super(new Uint8ClampedArray(array), itemSize, normalized);\r\n    }\r\n  }\r\n\r\n  class Int16BufferAttribute extends BufferAttribute {\r\n    constructor(array, itemSize, normalized) {\r\n      super(new Int16Array(array), itemSize, normalized);\r\n    }\r\n  }\r\n\r\n  class Uint16BufferAttribute extends BufferAttribute {\r\n    constructor(array, itemSize, normalized) {\r\n      super(new Uint16Array(array), itemSize, normalized);\r\n    }\r\n  }\r\n\r\n  class Int32BufferAttribute extends BufferAttribute {\r\n    constructor(array, itemSize, normalized) {\r\n      super(new Int32Array(array), itemSize, normalized);\r\n    }\r\n  }\r\n\r\n  class Uint32BufferAttribute extends BufferAttribute {\r\n    constructor(array, itemSize, normalized) {\r\n      super(new Uint32Array(array), itemSize, normalized);\r\n    }\r\n  }\r\n\r\n  class Float16BufferAttribute extends BufferAttribute {\r\n    constructor(array, itemSize, normalized) {\r\n      super(new Uint16Array(array), itemSize, normalized);\r\n    }\r\n  }\r\n\r\n  Float16BufferAttribute.prototype.isFloat16BufferAttribute = true;\r\n\r\n  class Float32BufferAttribute extends BufferAttribute {\r\n    constructor(array, itemSize, normalized) {\r\n      super(new Float32Array(array), itemSize, normalized);\r\n    }\r\n  }\r\n\r\n  class Float64BufferAttribute extends BufferAttribute {\r\n    constructor(array, itemSize, normalized) {\r\n      super(new Float64Array(array), itemSize, normalized);\r\n    }\r\n  } //\r\n\r\n  function arrayMax(array) {\r\n    if (array.length === 0) return -Infinity;\r\n    let max = array[0];\r\n\r\n    for (let i = 1, l = array.length; i < l; ++i) {\r\n      if (array[i] > max) max = array[i];\r\n    }\r\n\r\n    return max;\r\n  }\r\n\r\n  const TYPED_ARRAYS = {\r\n    Int8Array: Int8Array,\r\n    Uint8Array: Uint8Array,\r\n    Uint8ClampedArray: Uint8ClampedArray,\r\n    Int16Array: Int16Array,\r\n    Uint16Array: Uint16Array,\r\n    Int32Array: Int32Array,\r\n    Uint32Array: Uint32Array,\r\n    Float32Array: Float32Array,\r\n    Float64Array: Float64Array,\r\n  };\r\n\r\n  function getTypedArray(type, buffer) {\r\n    return new TYPED_ARRAYS[type](buffer);\r\n  }\r\n\r\n  let _id = 0;\r\n\r\n  const _m1 = /*@__PURE__*/ new Matrix4();\r\n\r\n  const _obj = /*@__PURE__*/ new Object3D();\r\n\r\n  const _offset = /*@__PURE__*/ new Vector3();\r\n\r\n  const _box$1 = /*@__PURE__*/ new Box3();\r\n\r\n  const _boxMorphTargets = /*@__PURE__*/ new Box3();\r\n\r\n  const _vector$8 = /*@__PURE__*/ new Vector3();\r\n\r\n  class BufferGeometry extends EventDispatcher {\r\n    constructor() {\r\n      super();\r\n      Object.defineProperty(this, 'id', {\r\n        value: _id++,\r\n      });\r\n      this.uuid = generateUUID();\r\n      this.name = '';\r\n      this.type = 'BufferGeometry';\r\n      this.index = null;\r\n      this.attributes = {};\r\n      this.morphAttributes = {};\r\n      this.morphTargetsRelative = false;\r\n      this.groups = [];\r\n      this.boundingBox = null;\r\n      this.boundingSphere = null;\r\n      this.drawRange = {\r\n        start: 0,\r\n        count: Infinity,\r\n      };\r\n      this.userData = {};\r\n    }\r\n\r\n    getIndex() {\r\n      return this.index;\r\n    }\r\n\r\n    setIndex(index) {\r\n      if (Array.isArray(index)) {\r\n        this.index = new (arrayMax(index) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(\r\n          index,\r\n          1,\r\n        );\r\n      } else {\r\n        this.index = index;\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    getAttribute(name) {\r\n      return this.attributes[name];\r\n    }\r\n\r\n    setAttribute(name, attribute) {\r\n      this.attributes[name] = attribute;\r\n      return this;\r\n    }\r\n\r\n    deleteAttribute(name) {\r\n      delete this.attributes[name];\r\n      return this;\r\n    }\r\n\r\n    hasAttribute(name) {\r\n      return this.attributes[name] !== undefined;\r\n    }\r\n\r\n    addGroup(start, count, materialIndex = 0) {\r\n      this.groups.push({\r\n        start: start,\r\n        count: count,\r\n        materialIndex: materialIndex,\r\n      });\r\n    }\r\n\r\n    clearGroups() {\r\n      this.groups = [];\r\n    }\r\n\r\n    setDrawRange(start, count) {\r\n      this.drawRange.start = start;\r\n      this.drawRange.count = count;\r\n    }\r\n\r\n    applyMatrix4(matrix) {\r\n      const position = this.attributes.position;\r\n\r\n      if (position !== undefined) {\r\n        position.applyMatrix4(matrix);\r\n        position.needsUpdate = true;\r\n      }\r\n\r\n      const normal = this.attributes.normal;\r\n\r\n      if (normal !== undefined) {\r\n        const normalMatrix = new Matrix3().getNormalMatrix(matrix);\r\n        normal.applyNormalMatrix(normalMatrix);\r\n        normal.needsUpdate = true;\r\n      }\r\n\r\n      const tangent = this.attributes.tangent;\r\n\r\n      if (tangent !== undefined) {\r\n        tangent.transformDirection(matrix);\r\n        tangent.needsUpdate = true;\r\n      }\r\n\r\n      if (this.boundingBox !== null) {\r\n        this.computeBoundingBox();\r\n      }\r\n\r\n      if (this.boundingSphere !== null) {\r\n        this.computeBoundingSphere();\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    applyQuaternion(q) {\r\n      _m1.makeRotationFromQuaternion(q);\r\n\r\n      this.applyMatrix4(_m1);\r\n      return this;\r\n    }\r\n\r\n    rotateX(angle) {\r\n      // rotate geometry around world x-axis\r\n      _m1.makeRotationX(angle);\r\n\r\n      this.applyMatrix4(_m1);\r\n      return this;\r\n    }\r\n\r\n    rotateY(angle) {\r\n      // rotate geometry around world y-axis\r\n      _m1.makeRotationY(angle);\r\n\r\n      this.applyMatrix4(_m1);\r\n      return this;\r\n    }\r\n\r\n    rotateZ(angle) {\r\n      // rotate geometry around world z-axis\r\n      _m1.makeRotationZ(angle);\r\n\r\n      this.applyMatrix4(_m1);\r\n      return this;\r\n    }\r\n\r\n    translate(x, y, z) {\r\n      // translate geometry\r\n      _m1.makeTranslation(x, y, z);\r\n\r\n      this.applyMatrix4(_m1);\r\n      return this;\r\n    }\r\n\r\n    scale(x, y, z) {\r\n      // scale geometry\r\n      _m1.makeScale(x, y, z);\r\n\r\n      this.applyMatrix4(_m1);\r\n      return this;\r\n    }\r\n\r\n    lookAt(vector) {\r\n      _obj.lookAt(vector);\r\n\r\n      _obj.updateMatrix();\r\n\r\n      this.applyMatrix4(_obj.matrix);\r\n      return this;\r\n    }\r\n\r\n    center() {\r\n      this.computeBoundingBox();\r\n      this.boundingBox.getCenter(_offset).negate();\r\n      this.translate(_offset.x, _offset.y, _offset.z);\r\n      return this;\r\n    }\r\n\r\n    setFromPoints(points) {\r\n      const position = [];\r\n\r\n      for (let i = 0, l = points.length; i < l; i++) {\r\n        const point = points[i];\r\n        position.push(point.x, point.y, point.z || 0);\r\n      }\r\n\r\n      this.setAttribute('position', new Float32BufferAttribute(position, 3));\r\n      return this;\r\n    }\r\n\r\n    computeBoundingBox() {\r\n      if (this.boundingBox === null) {\r\n        this.boundingBox = new Box3();\r\n      }\r\n\r\n      const position = this.attributes.position;\r\n      const morphAttributesPosition = this.morphAttributes.position;\r\n\r\n      if (position && position.isGLBufferAttribute) {\r\n        console.error(\r\n          'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".',\r\n          this,\r\n        );\r\n        this.boundingBox.set(\r\n          new Vector3(-Infinity, -Infinity, -Infinity),\r\n          new Vector3(+Infinity, +Infinity, +Infinity),\r\n        );\r\n        return;\r\n      }\r\n\r\n      if (position !== undefined) {\r\n        this.boundingBox.setFromBufferAttribute(position); // process morph attributes if present\r\n\r\n        if (morphAttributesPosition) {\r\n          for (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\r\n            const morphAttribute = morphAttributesPosition[i];\r\n\r\n            _box$1.setFromBufferAttribute(morphAttribute);\r\n\r\n            if (this.morphTargetsRelative) {\r\n              _vector$8.addVectors(this.boundingBox.min, _box$1.min);\r\n\r\n              this.boundingBox.expandByPoint(_vector$8);\r\n\r\n              _vector$8.addVectors(this.boundingBox.max, _box$1.max);\r\n\r\n              this.boundingBox.expandByPoint(_vector$8);\r\n            } else {\r\n              this.boundingBox.expandByPoint(_box$1.min);\r\n              this.boundingBox.expandByPoint(_box$1.max);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        this.boundingBox.makeEmpty();\r\n      }\r\n\r\n      if (\r\n        isNaN(this.boundingBox.min.x) ||\r\n        isNaN(this.boundingBox.min.y) ||\r\n        isNaN(this.boundingBox.min.z)\r\n      ) {\r\n        console.error(\r\n          'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.',\r\n          this,\r\n        );\r\n      }\r\n    }\r\n\r\n    computeBoundingSphere() {\r\n      if (this.boundingSphere === null) {\r\n        this.boundingSphere = new Sphere();\r\n      }\r\n\r\n      const position = this.attributes.position;\r\n      const morphAttributesPosition = this.morphAttributes.position;\r\n\r\n      if (position && position.isGLBufferAttribute) {\r\n        console.error(\r\n          'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".',\r\n          this,\r\n        );\r\n        this.boundingSphere.set(new Vector3(), Infinity);\r\n        return;\r\n      }\r\n\r\n      if (position) {\r\n        // first, find the center of the bounding sphere\r\n        const center = this.boundingSphere.center;\r\n\r\n        _box$1.setFromBufferAttribute(position); // process morph attributes if present\r\n\r\n        if (morphAttributesPosition) {\r\n          for (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\r\n            const morphAttribute = morphAttributesPosition[i];\r\n\r\n            _boxMorphTargets.setFromBufferAttribute(morphAttribute);\r\n\r\n            if (this.morphTargetsRelative) {\r\n              _vector$8.addVectors(_box$1.min, _boxMorphTargets.min);\r\n\r\n              _box$1.expandByPoint(_vector$8);\r\n\r\n              _vector$8.addVectors(_box$1.max, _boxMorphTargets.max);\r\n\r\n              _box$1.expandByPoint(_vector$8);\r\n            } else {\r\n              _box$1.expandByPoint(_boxMorphTargets.min);\r\n\r\n              _box$1.expandByPoint(_boxMorphTargets.max);\r\n            }\r\n          }\r\n        }\r\n\r\n        _box$1.getCenter(center); // second, try to find a boundingSphere with a radius smaller than the\r\n        // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n        let maxRadiusSq = 0;\r\n\r\n        for (let i = 0, il = position.count; i < il; i++) {\r\n          _vector$8.fromBufferAttribute(position, i);\r\n\r\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\r\n        } // process morph attributes if present\r\n\r\n        if (morphAttributesPosition) {\r\n          for (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\r\n            const morphAttribute = morphAttributesPosition[i];\r\n            const morphTargetsRelative = this.morphTargetsRelative;\r\n\r\n            for (let j = 0, jl = morphAttribute.count; j < jl; j++) {\r\n              _vector$8.fromBufferAttribute(morphAttribute, j);\r\n\r\n              if (morphTargetsRelative) {\r\n                _offset.fromBufferAttribute(position, j);\r\n\r\n                _vector$8.add(_offset);\r\n              }\r\n\r\n              maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\r\n            }\r\n          }\r\n        }\r\n\r\n        this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\r\n\r\n        if (isNaN(this.boundingSphere.radius)) {\r\n          console.error(\r\n            'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.',\r\n            this,\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    computeFaceNormals() {\r\n      // backwards compatibility\r\n    }\r\n\r\n    computeTangents() {\r\n      const index = this.index;\r\n      const attributes = this.attributes; // based on http://www.terathon.com/code/tangent.html\r\n      // (per vertex tangents)\r\n\r\n      if (\r\n        index === null ||\r\n        attributes.position === undefined ||\r\n        attributes.normal === undefined ||\r\n        attributes.uv === undefined\r\n      ) {\r\n        console.error(\r\n          'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)',\r\n        );\r\n        return;\r\n      }\r\n\r\n      const indices = index.array;\r\n      const positions = attributes.position.array;\r\n      const normals = attributes.normal.array;\r\n      const uvs = attributes.uv.array;\r\n      const nVertices = positions.length / 3;\r\n\r\n      if (attributes.tangent === undefined) {\r\n        this.setAttribute('tangent', new BufferAttribute(new Float32Array(4 * nVertices), 4));\r\n      }\r\n\r\n      const tangents = attributes.tangent.array;\r\n      const tan1 = [],\r\n        tan2 = [];\r\n\r\n      for (let i = 0; i < nVertices; i++) {\r\n        tan1[i] = new Vector3();\r\n        tan2[i] = new Vector3();\r\n      }\r\n\r\n      const vA = new Vector3(),\r\n        vB = new Vector3(),\r\n        vC = new Vector3(),\r\n        uvA = new Vector2(),\r\n        uvB = new Vector2(),\r\n        uvC = new Vector2(),\r\n        sdir = new Vector3(),\r\n        tdir = new Vector3();\r\n\r\n      function handleTriangle(a, b, c) {\r\n        vA.fromArray(positions, a * 3);\r\n        vB.fromArray(positions, b * 3);\r\n        vC.fromArray(positions, c * 3);\r\n        uvA.fromArray(uvs, a * 2);\r\n        uvB.fromArray(uvs, b * 2);\r\n        uvC.fromArray(uvs, c * 2);\r\n        vB.sub(vA);\r\n        vC.sub(vA);\r\n        uvB.sub(uvA);\r\n        uvC.sub(uvA);\r\n        const r = 1.0 / (uvB.x * uvC.y - uvC.x * uvB.y); // silently ignore degenerate uv triangles having coincident or colinear vertices\r\n\r\n        if (!isFinite(r)) return;\r\n        sdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC, -uvB.y).multiplyScalar(r);\r\n        tdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB, -uvC.x).multiplyScalar(r);\r\n        tan1[a].add(sdir);\r\n        tan1[b].add(sdir);\r\n        tan1[c].add(sdir);\r\n        tan2[a].add(tdir);\r\n        tan2[b].add(tdir);\r\n        tan2[c].add(tdir);\r\n      }\r\n\r\n      let groups = this.groups;\r\n\r\n      if (groups.length === 0) {\r\n        groups = [\r\n          {\r\n            start: 0,\r\n            count: indices.length,\r\n          },\r\n        ];\r\n      }\r\n\r\n      for (let i = 0, il = groups.length; i < il; ++i) {\r\n        const group = groups[i];\r\n        const start = group.start;\r\n        const count = group.count;\r\n\r\n        for (let j = start, jl = start + count; j < jl; j += 3) {\r\n          handleTriangle(indices[j + 0], indices[j + 1], indices[j + 2]);\r\n        }\r\n      }\r\n\r\n      const tmp = new Vector3(),\r\n        tmp2 = new Vector3();\r\n      const n = new Vector3(),\r\n        n2 = new Vector3();\r\n\r\n      function handleVertex(v) {\r\n        n.fromArray(normals, v * 3);\r\n        n2.copy(n);\r\n        const t = tan1[v]; // Gram-Schmidt orthogonalize\r\n\r\n        tmp.copy(t);\r\n        tmp.sub(n.multiplyScalar(n.dot(t))).normalize(); // Calculate handedness\r\n\r\n        tmp2.crossVectors(n2, t);\r\n        const test = tmp2.dot(tan2[v]);\r\n        const w = test < 0.0 ? -1.0 : 1.0;\r\n        tangents[v * 4] = tmp.x;\r\n        tangents[v * 4 + 1] = tmp.y;\r\n        tangents[v * 4 + 2] = tmp.z;\r\n        tangents[v * 4 + 3] = w;\r\n      }\r\n\r\n      for (let i = 0, il = groups.length; i < il; ++i) {\r\n        const group = groups[i];\r\n        const start = group.start;\r\n        const count = group.count;\r\n\r\n        for (let j = start, jl = start + count; j < jl; j += 3) {\r\n          handleVertex(indices[j + 0]);\r\n          handleVertex(indices[j + 1]);\r\n          handleVertex(indices[j + 2]);\r\n        }\r\n      }\r\n    }\r\n\r\n    computeVertexNormals() {\r\n      const index = this.index;\r\n      const positionAttribute = this.getAttribute('position');\r\n\r\n      if (positionAttribute !== undefined) {\r\n        let normalAttribute = this.getAttribute('normal');\r\n\r\n        if (normalAttribute === undefined) {\r\n          normalAttribute = new BufferAttribute(new Float32Array(positionAttribute.count * 3), 3);\r\n          this.setAttribute('normal', normalAttribute);\r\n        } else {\r\n          // reset existing normals to zero\r\n          for (let i = 0, il = normalAttribute.count; i < il; i++) {\r\n            normalAttribute.setXYZ(i, 0, 0, 0);\r\n          }\r\n        }\r\n\r\n        const pA = new Vector3(),\r\n          pB = new Vector3(),\r\n          pC = new Vector3();\r\n        const nA = new Vector3(),\r\n          nB = new Vector3(),\r\n          nC = new Vector3();\r\n        const cb = new Vector3(),\r\n          ab = new Vector3(); // indexed elements\r\n\r\n        if (index) {\r\n          for (let i = 0, il = index.count; i < il; i += 3) {\r\n            const vA = index.getX(i + 0);\r\n            const vB = index.getX(i + 1);\r\n            const vC = index.getX(i + 2);\r\n            pA.fromBufferAttribute(positionAttribute, vA);\r\n            pB.fromBufferAttribute(positionAttribute, vB);\r\n            pC.fromBufferAttribute(positionAttribute, vC);\r\n            cb.subVectors(pC, pB);\r\n            ab.subVectors(pA, pB);\r\n            cb.cross(ab);\r\n            nA.fromBufferAttribute(normalAttribute, vA);\r\n            nB.fromBufferAttribute(normalAttribute, vB);\r\n            nC.fromBufferAttribute(normalAttribute, vC);\r\n            nA.add(cb);\r\n            nB.add(cb);\r\n            nC.add(cb);\r\n            normalAttribute.setXYZ(vA, nA.x, nA.y, nA.z);\r\n            normalAttribute.setXYZ(vB, nB.x, nB.y, nB.z);\r\n            normalAttribute.setXYZ(vC, nC.x, nC.y, nC.z);\r\n          }\r\n        } else {\r\n          // non-indexed elements (unconnected triangle soup)\r\n          for (let i = 0, il = positionAttribute.count; i < il; i += 3) {\r\n            pA.fromBufferAttribute(positionAttribute, i + 0);\r\n            pB.fromBufferAttribute(positionAttribute, i + 1);\r\n            pC.fromBufferAttribute(positionAttribute, i + 2);\r\n            cb.subVectors(pC, pB);\r\n            ab.subVectors(pA, pB);\r\n            cb.cross(ab);\r\n            normalAttribute.setXYZ(i + 0, cb.x, cb.y, cb.z);\r\n            normalAttribute.setXYZ(i + 1, cb.x, cb.y, cb.z);\r\n            normalAttribute.setXYZ(i + 2, cb.x, cb.y, cb.z);\r\n          }\r\n        }\r\n\r\n        this.normalizeNormals();\r\n        normalAttribute.needsUpdate = true;\r\n      }\r\n    }\r\n\r\n    merge(geometry, offset) {\r\n      if (!(geometry && geometry.isBufferGeometry)) {\r\n        console.error(\r\n          'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.',\r\n          geometry,\r\n        );\r\n        return;\r\n      }\r\n\r\n      if (offset === undefined) {\r\n        offset = 0;\r\n        console.warn(\r\n          'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. ' +\r\n            'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.',\r\n        );\r\n      }\r\n\r\n      const attributes = this.attributes;\r\n\r\n      for (const key in attributes) {\r\n        if (geometry.attributes[key] === undefined) continue;\r\n        const attribute1 = attributes[key];\r\n        const attributeArray1 = attribute1.array;\r\n        const attribute2 = geometry.attributes[key];\r\n        const attributeArray2 = attribute2.array;\r\n        const attributeOffset = attribute2.itemSize * offset;\r\n        const length = Math.min(attributeArray2.length, attributeArray1.length - attributeOffset);\r\n\r\n        for (let i = 0, j = attributeOffset; i < length; i++, j++) {\r\n          attributeArray1[j] = attributeArray2[i];\r\n        }\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    normalizeNormals() {\r\n      const normals = this.attributes.normal;\r\n\r\n      for (let i = 0, il = normals.count; i < il; i++) {\r\n        _vector$8.fromBufferAttribute(normals, i);\r\n\r\n        _vector$8.normalize();\r\n\r\n        normals.setXYZ(i, _vector$8.x, _vector$8.y, _vector$8.z);\r\n      }\r\n    }\r\n\r\n    toNonIndexed() {\r\n      function convertBufferAttribute(attribute, indices) {\r\n        const array = attribute.array;\r\n        const itemSize = attribute.itemSize;\r\n        const normalized = attribute.normalized;\r\n        const array2 = new array.constructor(indices.length * itemSize);\r\n        let index = 0,\r\n          index2 = 0;\r\n\r\n        for (let i = 0, l = indices.length; i < l; i++) {\r\n          index = indices[i] * itemSize;\r\n\r\n          for (let j = 0; j < itemSize; j++) {\r\n            array2[index2++] = array[index++];\r\n          }\r\n        }\r\n\r\n        return new BufferAttribute(array2, itemSize, normalized);\r\n      } //\r\n\r\n      if (this.index === null) {\r\n        console.warn('THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.');\r\n        return this;\r\n      }\r\n\r\n      const geometry2 = new BufferGeometry();\r\n      const indices = this.index.array;\r\n      const attributes = this.attributes; // attributes\r\n\r\n      for (const name in attributes) {\r\n        const attribute = attributes[name];\r\n        const newAttribute = convertBufferAttribute(attribute, indices);\r\n        geometry2.setAttribute(name, newAttribute);\r\n      } // morph attributes\r\n\r\n      const morphAttributes = this.morphAttributes;\r\n\r\n      for (const name in morphAttributes) {\r\n        const morphArray = [];\r\n        const morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\r\n\r\n        for (let i = 0, il = morphAttribute.length; i < il; i++) {\r\n          const attribute = morphAttribute[i];\r\n          const newAttribute = convertBufferAttribute(attribute, indices);\r\n          morphArray.push(newAttribute);\r\n        }\r\n\r\n        geometry2.morphAttributes[name] = morphArray;\r\n      }\r\n\r\n      geometry2.morphTargetsRelative = this.morphTargetsRelative; // groups\r\n\r\n      const groups = this.groups;\r\n\r\n      for (let i = 0, l = groups.length; i < l; i++) {\r\n        const group = groups[i];\r\n        geometry2.addGroup(group.start, group.count, group.materialIndex);\r\n      }\r\n\r\n      return geometry2;\r\n    }\r\n\r\n    toJSON() {\r\n      const data = {\r\n        metadata: {\r\n          version: 4.5,\r\n          type: 'BufferGeometry',\r\n          generator: 'BufferGeometry.toJSON',\r\n        },\r\n      }; // standard BufferGeometry serialization\r\n\r\n      data.uuid = this.uuid;\r\n      data.type = this.type;\r\n      if (this.name !== '') data.name = this.name;\r\n      if (Object.keys(this.userData).length > 0) data.userData = this.userData;\r\n\r\n      if (this.parameters !== undefined) {\r\n        const parameters = this.parameters;\r\n\r\n        for (const key in parameters) {\r\n          if (parameters[key] !== undefined) data[key] = parameters[key];\r\n        }\r\n\r\n        return data;\r\n      } // for simplicity the code assumes attributes are not shared across geometries, see #15811\r\n\r\n      data.data = {\r\n        attributes: {},\r\n      };\r\n      const index = this.index;\r\n\r\n      if (index !== null) {\r\n        data.data.index = {\r\n          type: index.array.constructor.name,\r\n          array: Array.prototype.slice.call(index.array),\r\n        };\r\n      }\r\n\r\n      const attributes = this.attributes;\r\n\r\n      for (const key in attributes) {\r\n        const attribute = attributes[key];\r\n        data.data.attributes[key] = attribute.toJSON(data.data);\r\n      }\r\n\r\n      const morphAttributes = {};\r\n      let hasMorphAttributes = false;\r\n\r\n      for (const key in this.morphAttributes) {\r\n        const attributeArray = this.morphAttributes[key];\r\n        const array = [];\r\n\r\n        for (let i = 0, il = attributeArray.length; i < il; i++) {\r\n          const attribute = attributeArray[i];\r\n          array.push(attribute.toJSON(data.data));\r\n        }\r\n\r\n        if (array.length > 0) {\r\n          morphAttributes[key] = array;\r\n          hasMorphAttributes = true;\r\n        }\r\n      }\r\n\r\n      if (hasMorphAttributes) {\r\n        data.data.morphAttributes = morphAttributes;\r\n        data.data.morphTargetsRelative = this.morphTargetsRelative;\r\n      }\r\n\r\n      const groups = this.groups;\r\n\r\n      if (groups.length > 0) {\r\n        data.data.groups = JSON.parse(JSON.stringify(groups));\r\n      }\r\n\r\n      const boundingSphere = this.boundingSphere;\r\n\r\n      if (boundingSphere !== null) {\r\n        data.data.boundingSphere = {\r\n          center: boundingSphere.center.toArray(),\r\n          radius: boundingSphere.radius,\r\n        };\r\n      }\r\n\r\n      return data;\r\n    }\r\n\r\n    clone() {\r\n      /*\r\n\t\t\t // Handle primitives\r\n\t\t\t\t const parameters = this.parameters;\r\n\t\t\t\t if ( parameters !== undefined ) {\r\n\t\t\t\t const values = [];\r\n\t\t\t\t for ( const key in parameters ) {\r\n\t\t\t\t values.push( parameters[ key ] );\r\n\t\t\t\t }\r\n\t\t\t\t const geometry = Object.create( this.constructor.prototype );\r\n\t\t\t this.constructor.apply( geometry, values );\r\n\t\t\t return geometry;\r\n\t\t\t\t }\r\n\t\t\t\t return new this.constructor().copy( this );\r\n\t\t\t */\r\n      return new BufferGeometry().copy(this);\r\n    }\r\n\r\n    copy(source) {\r\n      // reset\r\n      this.index = null;\r\n      this.attributes = {};\r\n      this.morphAttributes = {};\r\n      this.groups = [];\r\n      this.boundingBox = null;\r\n      this.boundingSphere = null; // used for storing cloned, shared data\r\n\r\n      const data = {}; // name\r\n\r\n      this.name = source.name; // index\r\n\r\n      const index = source.index;\r\n\r\n      if (index !== null) {\r\n        this.setIndex(index.clone(data));\r\n      } // attributes\r\n\r\n      const attributes = source.attributes;\r\n\r\n      for (const name in attributes) {\r\n        const attribute = attributes[name];\r\n        this.setAttribute(name, attribute.clone(data));\r\n      } // morph attributes\r\n\r\n      const morphAttributes = source.morphAttributes;\r\n\r\n      for (const name in morphAttributes) {\r\n        const array = [];\r\n        const morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\r\n\r\n        for (let i = 0, l = morphAttribute.length; i < l; i++) {\r\n          array.push(morphAttribute[i].clone(data));\r\n        }\r\n\r\n        this.morphAttributes[name] = array;\r\n      }\r\n\r\n      this.morphTargetsRelative = source.morphTargetsRelative; // groups\r\n\r\n      const groups = source.groups;\r\n\r\n      for (let i = 0, l = groups.length; i < l; i++) {\r\n        const group = groups[i];\r\n        this.addGroup(group.start, group.count, group.materialIndex);\r\n      } // bounding box\r\n\r\n      const boundingBox = source.boundingBox;\r\n\r\n      if (boundingBox !== null) {\r\n        this.boundingBox = boundingBox.clone();\r\n      } // bounding sphere\r\n\r\n      const boundingSphere = source.boundingSphere;\r\n\r\n      if (boundingSphere !== null) {\r\n        this.boundingSphere = boundingSphere.clone();\r\n      } // draw range\r\n\r\n      this.drawRange.start = source.drawRange.start;\r\n      this.drawRange.count = source.drawRange.count; // user data\r\n\r\n      this.userData = source.userData;\r\n      return this;\r\n    }\r\n\r\n    dispose() {\r\n      this.dispatchEvent({\r\n        type: 'dispose',\r\n      });\r\n    }\r\n  }\r\n\r\n  BufferGeometry.prototype.isBufferGeometry = true;\r\n\r\n  const _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\r\n\r\n  const _ray$2 = /*@__PURE__*/ new Ray();\r\n\r\n  const _sphere$3 = /*@__PURE__*/ new Sphere();\r\n\r\n  const _vA$1 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _vB$1 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _vC$1 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _tempA = /*@__PURE__*/ new Vector3();\r\n\r\n  const _tempB = /*@__PURE__*/ new Vector3();\r\n\r\n  const _tempC = /*@__PURE__*/ new Vector3();\r\n\r\n  const _morphA = /*@__PURE__*/ new Vector3();\r\n\r\n  const _morphB = /*@__PURE__*/ new Vector3();\r\n\r\n  const _morphC = /*@__PURE__*/ new Vector3();\r\n\r\n  const _uvA$1 = /*@__PURE__*/ new Vector2();\r\n\r\n  const _uvB$1 = /*@__PURE__*/ new Vector2();\r\n\r\n  const _uvC$1 = /*@__PURE__*/ new Vector2();\r\n\r\n  const _intersectionPoint = /*@__PURE__*/ new Vector3();\r\n\r\n  const _intersectionPointWorld = /*@__PURE__*/ new Vector3();\r\n\r\n  class Mesh extends Object3D {\r\n    constructor(geometry = new BufferGeometry(), material = new MeshBasicMaterial()) {\r\n      super();\r\n      this.type = 'Mesh';\r\n      this.geometry = geometry;\r\n      this.material = material;\r\n      this.updateMorphTargets();\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n\r\n      if (source.morphTargetInfluences !== undefined) {\r\n        this.morphTargetInfluences = source.morphTargetInfluences.slice();\r\n      }\r\n\r\n      if (source.morphTargetDictionary !== undefined) {\r\n        this.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);\r\n      }\r\n\r\n      this.material = source.material;\r\n      this.geometry = source.geometry;\r\n      return this;\r\n    }\r\n\r\n    updateMorphTargets() {\r\n      const geometry = this.geometry;\r\n\r\n      if (geometry.isBufferGeometry) {\r\n        const morphAttributes = geometry.morphAttributes;\r\n        const keys = Object.keys(morphAttributes);\r\n\r\n        if (keys.length > 0) {\r\n          const morphAttribute = morphAttributes[keys[0]];\r\n\r\n          if (morphAttribute !== undefined) {\r\n            this.morphTargetInfluences = [];\r\n            this.morphTargetDictionary = {};\r\n\r\n            for (let m = 0, ml = morphAttribute.length; m < ml; m++) {\r\n              const name = morphAttribute[m].name || String(m);\r\n              this.morphTargetInfluences.push(0);\r\n              this.morphTargetDictionary[name] = m;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        const morphTargets = geometry.morphTargets;\r\n\r\n        if (morphTargets !== undefined && morphTargets.length > 0) {\r\n          console.error(\r\n            'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.',\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    raycast(raycaster, intersects) {\r\n      const geometry = this.geometry;\r\n      const material = this.material;\r\n      const matrixWorld = this.matrixWorld;\r\n      if (material === undefined) return; // Checking boundingSphere distance to ray\r\n\r\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\r\n\r\n      _sphere$3.copy(geometry.boundingSphere);\r\n\r\n      _sphere$3.applyMatrix4(matrixWorld);\r\n\r\n      if (raycaster.ray.intersectsSphere(_sphere$3) === false) return; //\r\n\r\n      _inverseMatrix$2.copy(matrixWorld).invert();\r\n\r\n      _ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2); // Check boundingBox before continuing\r\n\r\n      if (geometry.boundingBox !== null) {\r\n        if (_ray$2.intersectsBox(geometry.boundingBox) === false) return;\r\n      }\r\n\r\n      let intersection;\r\n\r\n      if (geometry.isBufferGeometry) {\r\n        const index = geometry.index;\r\n        const position = geometry.attributes.position;\r\n        const morphPosition = geometry.morphAttributes.position;\r\n        const morphTargetsRelative = geometry.morphTargetsRelative;\r\n        const uv = geometry.attributes.uv;\r\n        const uv2 = geometry.attributes.uv2;\r\n        const groups = geometry.groups;\r\n        const drawRange = geometry.drawRange;\r\n\r\n        if (index !== null) {\r\n          // indexed buffer geometry\r\n          if (Array.isArray(material)) {\r\n            for (let i = 0, il = groups.length; i < il; i++) {\r\n              const group = groups[i];\r\n              const groupMaterial = material[group.materialIndex];\r\n              const start = Math.max(group.start, drawRange.start);\r\n              const end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\r\n\r\n              for (let j = start, jl = end; j < jl; j += 3) {\r\n                const a = index.getX(j);\r\n                const b = index.getX(j + 1);\r\n                const c = index.getX(j + 2);\r\n                intersection = checkBufferGeometryIntersection(\r\n                  this,\r\n                  groupMaterial,\r\n                  raycaster,\r\n                  _ray$2,\r\n                  position,\r\n                  morphPosition,\r\n                  morphTargetsRelative,\r\n                  uv,\r\n                  uv2,\r\n                  a,\r\n                  b,\r\n                  c,\r\n                );\r\n\r\n                if (intersection) {\r\n                  intersection.faceIndex = Math.floor(j / 3); // triangle number in indexed buffer semantics\r\n\r\n                  intersection.face.materialIndex = group.materialIndex;\r\n                  intersects.push(intersection);\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            const start = Math.max(0, drawRange.start);\r\n            const end = Math.min(index.count, drawRange.start + drawRange.count);\r\n\r\n            for (let i = start, il = end; i < il; i += 3) {\r\n              const a = index.getX(i);\r\n              const b = index.getX(i + 1);\r\n              const c = index.getX(i + 2);\r\n              intersection = checkBufferGeometryIntersection(\r\n                this,\r\n                material,\r\n                raycaster,\r\n                _ray$2,\r\n                position,\r\n                morphPosition,\r\n                morphTargetsRelative,\r\n                uv,\r\n                uv2,\r\n                a,\r\n                b,\r\n                c,\r\n              );\r\n\r\n              if (intersection) {\r\n                intersection.faceIndex = Math.floor(i / 3); // triangle number in indexed buffer semantics\r\n\r\n                intersects.push(intersection);\r\n              }\r\n            }\r\n          }\r\n        } else if (position !== undefined) {\r\n          // non-indexed buffer geometry\r\n          if (Array.isArray(material)) {\r\n            for (let i = 0, il = groups.length; i < il; i++) {\r\n              const group = groups[i];\r\n              const groupMaterial = material[group.materialIndex];\r\n              const start = Math.max(group.start, drawRange.start);\r\n              const end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\r\n\r\n              for (let j = start, jl = end; j < jl; j += 3) {\r\n                const a = j;\r\n                const b = j + 1;\r\n                const c = j + 2;\r\n                intersection = checkBufferGeometryIntersection(\r\n                  this,\r\n                  groupMaterial,\r\n                  raycaster,\r\n                  _ray$2,\r\n                  position,\r\n                  morphPosition,\r\n                  morphTargetsRelative,\r\n                  uv,\r\n                  uv2,\r\n                  a,\r\n                  b,\r\n                  c,\r\n                );\r\n\r\n                if (intersection) {\r\n                  intersection.faceIndex = Math.floor(j / 3); // triangle number in non-indexed buffer semantics\r\n\r\n                  intersection.face.materialIndex = group.materialIndex;\r\n                  intersects.push(intersection);\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            const start = Math.max(0, drawRange.start);\r\n            const end = Math.min(position.count, drawRange.start + drawRange.count);\r\n\r\n            for (let i = start, il = end; i < il; i += 3) {\r\n              const a = i;\r\n              const b = i + 1;\r\n              const c = i + 2;\r\n              intersection = checkBufferGeometryIntersection(\r\n                this,\r\n                material,\r\n                raycaster,\r\n                _ray$2,\r\n                position,\r\n                morphPosition,\r\n                morphTargetsRelative,\r\n                uv,\r\n                uv2,\r\n                a,\r\n                b,\r\n                c,\r\n              );\r\n\r\n              if (intersection) {\r\n                intersection.faceIndex = Math.floor(i / 3); // triangle number in non-indexed buffer semantics\r\n\r\n                intersects.push(intersection);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else if (geometry.isGeometry) {\r\n        console.error(\r\n          'THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.',\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  Mesh.prototype.isMesh = true;\r\n\r\n  function checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\r\n    let intersect;\r\n\r\n    if (material.side === BackSide) {\r\n      intersect = ray.intersectTriangle(pC, pB, pA, true, point);\r\n    } else {\r\n      intersect = ray.intersectTriangle(pA, pB, pC, material.side !== DoubleSide, point);\r\n    }\r\n\r\n    if (intersect === null) return null;\r\n\r\n    _intersectionPointWorld.copy(point);\r\n\r\n    _intersectionPointWorld.applyMatrix4(object.matrixWorld);\r\n\r\n    const distance = raycaster.ray.origin.distanceTo(_intersectionPointWorld);\r\n    if (distance < raycaster.near || distance > raycaster.far) return null;\r\n    return {\r\n      distance: distance,\r\n      point: _intersectionPointWorld.clone(),\r\n      object: object,\r\n    };\r\n  }\r\n\r\n  function checkBufferGeometryIntersection(\r\n    object,\r\n    material,\r\n    raycaster,\r\n    ray,\r\n    position,\r\n    morphPosition,\r\n    morphTargetsRelative,\r\n    uv,\r\n    uv2,\r\n    a,\r\n    b,\r\n    c,\r\n  ) {\r\n    _vA$1.fromBufferAttribute(position, a);\r\n\r\n    _vB$1.fromBufferAttribute(position, b);\r\n\r\n    _vC$1.fromBufferAttribute(position, c);\r\n\r\n    const morphInfluences = object.morphTargetInfluences;\r\n\r\n    if (material.morphTargets && morphPosition && morphInfluences) {\r\n      _morphA.set(0, 0, 0);\r\n\r\n      _morphB.set(0, 0, 0);\r\n\r\n      _morphC.set(0, 0, 0);\r\n\r\n      for (let i = 0, il = morphPosition.length; i < il; i++) {\r\n        const influence = morphInfluences[i];\r\n        const morphAttribute = morphPosition[i];\r\n        if (influence === 0) continue;\r\n\r\n        _tempA.fromBufferAttribute(morphAttribute, a);\r\n\r\n        _tempB.fromBufferAttribute(morphAttribute, b);\r\n\r\n        _tempC.fromBufferAttribute(morphAttribute, c);\r\n\r\n        if (morphTargetsRelative) {\r\n          _morphA.addScaledVector(_tempA, influence);\r\n\r\n          _morphB.addScaledVector(_tempB, influence);\r\n\r\n          _morphC.addScaledVector(_tempC, influence);\r\n        } else {\r\n          _morphA.addScaledVector(_tempA.sub(_vA$1), influence);\r\n\r\n          _morphB.addScaledVector(_tempB.sub(_vB$1), influence);\r\n\r\n          _morphC.addScaledVector(_tempC.sub(_vC$1), influence);\r\n        }\r\n      }\r\n\r\n      _vA$1.add(_morphA);\r\n\r\n      _vB$1.add(_morphB);\r\n\r\n      _vC$1.add(_morphC);\r\n    }\r\n\r\n    if (object.isSkinnedMesh) {\r\n      object.boneTransform(a, _vA$1);\r\n      object.boneTransform(b, _vB$1);\r\n      object.boneTransform(c, _vC$1);\r\n    }\r\n\r\n    const intersection = checkIntersection(\r\n      object,\r\n      material,\r\n      raycaster,\r\n      ray,\r\n      _vA$1,\r\n      _vB$1,\r\n      _vC$1,\r\n      _intersectionPoint,\r\n    );\r\n\r\n    if (intersection) {\r\n      if (uv) {\r\n        _uvA$1.fromBufferAttribute(uv, a);\r\n\r\n        _uvB$1.fromBufferAttribute(uv, b);\r\n\r\n        _uvC$1.fromBufferAttribute(uv, c);\r\n\r\n        intersection.uv = Triangle.getUV(\r\n          _intersectionPoint,\r\n          _vA$1,\r\n          _vB$1,\r\n          _vC$1,\r\n          _uvA$1,\r\n          _uvB$1,\r\n          _uvC$1,\r\n          new Vector2(),\r\n        );\r\n      }\r\n\r\n      if (uv2) {\r\n        _uvA$1.fromBufferAttribute(uv2, a);\r\n\r\n        _uvB$1.fromBufferAttribute(uv2, b);\r\n\r\n        _uvC$1.fromBufferAttribute(uv2, c);\r\n\r\n        intersection.uv2 = Triangle.getUV(\r\n          _intersectionPoint,\r\n          _vA$1,\r\n          _vB$1,\r\n          _vC$1,\r\n          _uvA$1,\r\n          _uvB$1,\r\n          _uvC$1,\r\n          new Vector2(),\r\n        );\r\n      }\r\n\r\n      const face = {\r\n        a: a,\r\n        b: b,\r\n        c: c,\r\n        normal: new Vector3(),\r\n        materialIndex: 0,\r\n      };\r\n      Triangle.getNormal(_vA$1, _vB$1, _vC$1, face.normal);\r\n      intersection.face = face;\r\n    }\r\n\r\n    return intersection;\r\n  }\r\n\r\n  class BoxGeometry extends BufferGeometry {\r\n    constructor(\r\n      width = 1,\r\n      height = 1,\r\n      depth = 1,\r\n      widthSegments = 1,\r\n      heightSegments = 1,\r\n      depthSegments = 1,\r\n    ) {\r\n      super();\r\n      this.type = 'BoxGeometry';\r\n      this.parameters = {\r\n        width: width,\r\n        height: height,\r\n        depth: depth,\r\n        widthSegments: widthSegments,\r\n        heightSegments: heightSegments,\r\n        depthSegments: depthSegments,\r\n      };\r\n      const scope = this; // segments\r\n\r\n      widthSegments = Math.floor(widthSegments);\r\n      heightSegments = Math.floor(heightSegments);\r\n      depthSegments = Math.floor(depthSegments); // buffers\r\n\r\n      const indices = [];\r\n      const vertices = [];\r\n      const normals = [];\r\n      const uvs = []; // helper variables\r\n\r\n      let numberOfVertices = 0;\r\n      let groupStart = 0; // build each side of the box geometry\r\n\r\n      buildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\r\n\r\n      buildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\r\n\r\n      buildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\r\n\r\n      buildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\r\n\r\n      buildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\r\n\r\n      buildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\r\n      // build geometry\r\n\r\n      this.setIndex(indices);\r\n      this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n      this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n      this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n\r\n      function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\r\n        const segmentWidth = width / gridX;\r\n        const segmentHeight = height / gridY;\r\n        const widthHalf = width / 2;\r\n        const heightHalf = height / 2;\r\n        const depthHalf = depth / 2;\r\n        const gridX1 = gridX + 1;\r\n        const gridY1 = gridY + 1;\r\n        let vertexCounter = 0;\r\n        let groupCount = 0;\r\n        const vector = new Vector3(); // generate vertices, normals and uvs\r\n\r\n        for (let iy = 0; iy < gridY1; iy++) {\r\n          const y = iy * segmentHeight - heightHalf;\r\n\r\n          for (let ix = 0; ix < gridX1; ix++) {\r\n            const x = ix * segmentWidth - widthHalf; // set values to correct vector component\r\n\r\n            vector[u] = x * udir;\r\n            vector[v] = y * vdir;\r\n            vector[w] = depthHalf; // now apply vector to vertex buffer\r\n\r\n            vertices.push(vector.x, vector.y, vector.z); // set values to correct vector component\r\n\r\n            vector[u] = 0;\r\n            vector[v] = 0;\r\n            vector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\r\n\r\n            normals.push(vector.x, vector.y, vector.z); // uvs\r\n\r\n            uvs.push(ix / gridX);\r\n            uvs.push(1 - iy / gridY); // counters\r\n\r\n            vertexCounter += 1;\r\n          }\r\n        } // indices\r\n        // 1. you need three indices to draw a single face\r\n        // 2. a single segment consists of two faces\r\n        // 3. so we need to generate six (2*3) indices per segment\r\n\r\n        for (let iy = 0; iy < gridY; iy++) {\r\n          for (let ix = 0; ix < gridX; ix++) {\r\n            const a = numberOfVertices + ix + gridX1 * iy;\r\n            const b = numberOfVertices + ix + gridX1 * (iy + 1);\r\n            const c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\r\n            const d = numberOfVertices + (ix + 1) + gridX1 * iy; // faces\r\n\r\n            indices.push(a, b, d);\r\n            indices.push(b, c, d); // increase counter\r\n\r\n            groupCount += 6;\r\n          }\r\n        } // add a group to the geometry. this will ensure multi material support\r\n\r\n        scope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\r\n\r\n        groupStart += groupCount; // update total number of vertices\r\n\r\n        numberOfVertices += vertexCounter;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Uniform Utilities\r\n   */\r\n  function cloneUniforms(src) {\r\n    const dst = {};\r\n\r\n    for (const u in src) {\r\n      dst[u] = {};\r\n\r\n      for (const p in src[u]) {\r\n        const property = src[u][p];\r\n\r\n        if (\r\n          property &&\r\n          (property.isColor ||\r\n            property.isMatrix3 ||\r\n            property.isMatrix4 ||\r\n            property.isVector2 ||\r\n            property.isVector3 ||\r\n            property.isVector4 ||\r\n            property.isTexture ||\r\n            property.isQuaternion)\r\n        ) {\r\n          dst[u][p] = property.clone();\r\n        } else if (Array.isArray(property)) {\r\n          dst[u][p] = property.slice();\r\n        } else {\r\n          dst[u][p] = property;\r\n        }\r\n      }\r\n    }\r\n\r\n    return dst;\r\n  }\r\n  function mergeUniforms(uniforms) {\r\n    const merged = {};\r\n\r\n    for (let u = 0; u < uniforms.length; u++) {\r\n      const tmp = cloneUniforms(uniforms[u]);\r\n\r\n      for (const p in tmp) {\r\n        merged[p] = tmp[p];\r\n      }\r\n    }\r\n\r\n    return merged;\r\n  } // Legacy\r\n\r\n  const UniformsUtils = {\r\n    clone: cloneUniforms,\r\n    merge: mergeUniforms,\r\n  };\r\n\r\n  var default_vertex =\r\n    'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\r\n  var default_fragment = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\r\n  /**\r\n   * parameters = {\r\n   *\tdefines: { \"label\" : \"value\" },\r\n   *\tuniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\r\n   *\r\n   *\tfragmentShader: <string>,\r\n   *\tvertexShader: <string>,\r\n   *\r\n   *\twireframe: <boolean>,\r\n   *\twireframeLinewidth: <float>,\r\n   *\r\n   *\tlights: <bool>,\r\n   *\r\n   *\tmorphTargets: <bool>,\r\n   *\tmorphNormals: <bool>\r\n   * }\r\n   */\r\n\r\n  class ShaderMaterial extends Material {\r\n    constructor(parameters) {\r\n      super();\r\n      this.type = 'ShaderMaterial';\r\n      this.defines = {};\r\n      this.uniforms = {};\r\n      this.vertexShader = default_vertex;\r\n      this.fragmentShader = default_fragment;\r\n      this.linewidth = 1;\r\n      this.wireframe = false;\r\n      this.wireframeLinewidth = 1;\r\n      this.fog = false; // set to use scene fog\r\n\r\n      this.lights = false; // set to use scene lights\r\n\r\n      this.clipping = false; // set to use user-defined clipping planes\r\n\r\n      this.morphTargets = false; // set to use morph targets\r\n\r\n      this.morphNormals = false; // set to use morph normals\r\n\r\n      this.extensions = {\r\n        derivatives: false,\r\n        // set to use derivatives\r\n        fragDepth: false,\r\n        // set to use fragment depth values\r\n        drawBuffers: false,\r\n        // set to use draw buffers\r\n        shaderTextureLOD: false, // set to use shader texture LOD\r\n      }; // When rendered geometry doesn't include these attributes but the material does,\r\n      // use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\r\n      this.defaultAttributeValues = {\r\n        color: [1, 1, 1],\r\n        uv: [0, 0],\r\n        uv2: [0, 0],\r\n      };\r\n      this.index0AttributeName = undefined;\r\n      this.uniformsNeedUpdate = false;\r\n      this.glslVersion = null;\r\n\r\n      if (parameters !== undefined) {\r\n        if (parameters.attributes !== undefined) {\r\n          console.error(\r\n            'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.',\r\n          );\r\n        }\r\n\r\n        this.setValues(parameters);\r\n      }\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.fragmentShader = source.fragmentShader;\r\n      this.vertexShader = source.vertexShader;\r\n      this.uniforms = cloneUniforms(source.uniforms);\r\n      this.defines = Object.assign({}, source.defines);\r\n      this.wireframe = source.wireframe;\r\n      this.wireframeLinewidth = source.wireframeLinewidth;\r\n      this.lights = source.lights;\r\n      this.clipping = source.clipping;\r\n      this.morphTargets = source.morphTargets;\r\n      this.morphNormals = source.morphNormals;\r\n      this.extensions = Object.assign({}, source.extensions);\r\n      this.glslVersion = source.glslVersion;\r\n      return this;\r\n    }\r\n\r\n    toJSON(meta) {\r\n      const data = super.toJSON(meta);\r\n      data.glslVersion = this.glslVersion;\r\n      data.uniforms = {};\r\n\r\n      for (const name in this.uniforms) {\r\n        const uniform = this.uniforms[name];\r\n        const value = uniform.value;\r\n\r\n        if (value && value.isTexture) {\r\n          data.uniforms[name] = {\r\n            type: 't',\r\n            value: value.toJSON(meta).uuid,\r\n          };\r\n        } else if (value && value.isColor) {\r\n          data.uniforms[name] = {\r\n            type: 'c',\r\n            value: value.getHex(),\r\n          };\r\n        } else if (value && value.isVector2) {\r\n          data.uniforms[name] = {\r\n            type: 'v2',\r\n            value: value.toArray(),\r\n          };\r\n        } else if (value && value.isVector3) {\r\n          data.uniforms[name] = {\r\n            type: 'v3',\r\n            value: value.toArray(),\r\n          };\r\n        } else if (value && value.isVector4) {\r\n          data.uniforms[name] = {\r\n            type: 'v4',\r\n            value: value.toArray(),\r\n          };\r\n        } else if (value && value.isMatrix3) {\r\n          data.uniforms[name] = {\r\n            type: 'm3',\r\n            value: value.toArray(),\r\n          };\r\n        } else if (value && value.isMatrix4) {\r\n          data.uniforms[name] = {\r\n            type: 'm4',\r\n            value: value.toArray(),\r\n          };\r\n        } else {\r\n          data.uniforms[name] = {\r\n            value: value,\r\n          }; // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\r\n        }\r\n      }\r\n\r\n      if (Object.keys(this.defines).length > 0) data.defines = this.defines;\r\n      data.vertexShader = this.vertexShader;\r\n      data.fragmentShader = this.fragmentShader;\r\n      const extensions = {};\r\n\r\n      for (const key in this.extensions) {\r\n        if (this.extensions[key] === true) extensions[key] = true;\r\n      }\r\n\r\n      if (Object.keys(extensions).length > 0) data.extensions = extensions;\r\n      return data;\r\n    }\r\n  }\r\n\r\n  ShaderMaterial.prototype.isShaderMaterial = true;\r\n\r\n  class Camera extends Object3D {\r\n    constructor() {\r\n      super();\r\n      this.type = 'Camera';\r\n      this.matrixWorldInverse = new Matrix4();\r\n      this.projectionMatrix = new Matrix4();\r\n      this.projectionMatrixInverse = new Matrix4();\r\n    }\r\n\r\n    copy(source, recursive) {\r\n      super.copy(source, recursive);\r\n      this.matrixWorldInverse.copy(source.matrixWorldInverse);\r\n      this.projectionMatrix.copy(source.projectionMatrix);\r\n      this.projectionMatrixInverse.copy(source.projectionMatrixInverse);\r\n      return this;\r\n    }\r\n\r\n    getWorldDirection(target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Camera: .getWorldDirection() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      this.updateWorldMatrix(true, false);\r\n      const e = this.matrixWorld.elements;\r\n      return target.set(-e[8], -e[9], -e[10]).normalize();\r\n    }\r\n\r\n    updateMatrixWorld(force) {\r\n      super.updateMatrixWorld(force);\r\n      this.matrixWorldInverse.copy(this.matrixWorld).invert();\r\n    }\r\n\r\n    updateWorldMatrix(updateParents, updateChildren) {\r\n      super.updateWorldMatrix(updateParents, updateChildren);\r\n      this.matrixWorldInverse.copy(this.matrixWorld).invert();\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().copy(this);\r\n    }\r\n  }\r\n\r\n  Camera.prototype.isCamera = true;\r\n\r\n  class PerspectiveCamera extends Camera {\r\n    constructor(fov = 50, aspect = 1, near = 0.1, far = 2000) {\r\n      super();\r\n      this.type = 'PerspectiveCamera';\r\n      this.fov = fov;\r\n      this.zoom = 1;\r\n      this.near = near;\r\n      this.far = far;\r\n      this.focus = 10;\r\n      this.aspect = aspect;\r\n      this.view = null;\r\n      this.filmGauge = 35; // width of the film (default in millimeters)\r\n\r\n      this.filmOffset = 0; // horizontal film offset (same unit as gauge)\r\n\r\n      this.updateProjectionMatrix();\r\n    }\r\n\r\n    copy(source, recursive) {\r\n      super.copy(source, recursive);\r\n      this.fov = source.fov;\r\n      this.zoom = source.zoom;\r\n      this.near = source.near;\r\n      this.far = source.far;\r\n      this.focus = source.focus;\r\n      this.aspect = source.aspect;\r\n      this.view = source.view === null ? null : Object.assign({}, source.view);\r\n      this.filmGauge = source.filmGauge;\r\n      this.filmOffset = source.filmOffset;\r\n      return this;\r\n    }\r\n    /**\r\n     * Sets the FOV by focal length in respect to the current .filmGauge.\r\n     *\r\n     * The default film gauge is 35, so that the focal length can be specified for\r\n     * a 35mm (full frame) camera.\r\n     *\r\n     * Values for focal length and film gauge must have the same unit.\r\n     */\r\n\r\n    setFocalLength(focalLength) {\r\n      /** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\r\n      const vExtentSlope = (0.5 * this.getFilmHeight()) / focalLength;\r\n      this.fov = RAD2DEG * 2 * Math.atan(vExtentSlope);\r\n      this.updateProjectionMatrix();\r\n    }\r\n    /**\r\n     * Calculates the focal length from the current .fov and .filmGauge.\r\n     */\r\n\r\n    getFocalLength() {\r\n      const vExtentSlope = Math.tan(DEG2RAD * 0.5 * this.fov);\r\n      return (0.5 * this.getFilmHeight()) / vExtentSlope;\r\n    }\r\n\r\n    getEffectiveFOV() {\r\n      return RAD2DEG * 2 * Math.atan(Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom);\r\n    }\r\n\r\n    getFilmWidth() {\r\n      // film not completely covered in portrait format (aspect < 1)\r\n      return this.filmGauge * Math.min(this.aspect, 1);\r\n    }\r\n\r\n    getFilmHeight() {\r\n      // film not completely covered in landscape format (aspect > 1)\r\n      return this.filmGauge / Math.max(this.aspect, 1);\r\n    }\r\n    /**\r\n     * Sets an offset in a larger frustum. This is useful for multi-window or\r\n     * multi-monitor/multi-machine setups.\r\n     *\r\n     * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n     * the monitors are in grid like this\r\n     *\r\n     *\t +---+---+---+\r\n     *\t | A | B | C |\r\n     *\t +---+---+---+\r\n     *\t | D | E | F |\r\n     *\t +---+---+---+\r\n     *\r\n     * then for each monitor you would call it like this\r\n     *\r\n     *\t const w = 1920;\r\n     *\t const h = 1080;\r\n     *\t const fullWidth = w * 3;\r\n     *\t const fullHeight = h * 2;\r\n     *\r\n     *\t --A--\r\n     *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n     *\t --B--\r\n     *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n     *\t --C--\r\n     *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n     *\t --D--\r\n     *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n     *\t --E--\r\n     *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n     *\t --F--\r\n     *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n     *\r\n     *\t Note there is no reason monitors have to be the same size or in a grid.\r\n     */\r\n\r\n    setViewOffset(fullWidth, fullHeight, x, y, width, height) {\r\n      this.aspect = fullWidth / fullHeight;\r\n\r\n      if (this.view === null) {\r\n        this.view = {\r\n          enabled: true,\r\n          fullWidth: 1,\r\n          fullHeight: 1,\r\n          offsetX: 0,\r\n          offsetY: 0,\r\n          width: 1,\r\n          height: 1,\r\n        };\r\n      }\r\n\r\n      this.view.enabled = true;\r\n      this.view.fullWidth = fullWidth;\r\n      this.view.fullHeight = fullHeight;\r\n      this.view.offsetX = x;\r\n      this.view.offsetY = y;\r\n      this.view.width = width;\r\n      this.view.height = height;\r\n      this.updateProjectionMatrix();\r\n    }\r\n\r\n    clearViewOffset() {\r\n      if (this.view !== null) {\r\n        this.view.enabled = false;\r\n      }\r\n\r\n      this.updateProjectionMatrix();\r\n    }\r\n\r\n    updateProjectionMatrix() {\r\n      const near = this.near;\r\n      let top = (near * Math.tan(DEG2RAD * 0.5 * this.fov)) / this.zoom;\r\n      let height = 2 * top;\r\n      let width = this.aspect * height;\r\n      let left = -0.5 * width;\r\n      const view = this.view;\r\n\r\n      if (this.view !== null && this.view.enabled) {\r\n        const fullWidth = view.fullWidth,\r\n          fullHeight = view.fullHeight;\r\n        left += (view.offsetX * width) / fullWidth;\r\n        top -= (view.offsetY * height) / fullHeight;\r\n        width *= view.width / fullWidth;\r\n        height *= view.height / fullHeight;\r\n      }\r\n\r\n      const skew = this.filmOffset;\r\n      if (skew !== 0) left += (near * skew) / this.getFilmWidth();\r\n      this.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);\r\n      this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\r\n    }\r\n\r\n    toJSON(meta) {\r\n      const data = super.toJSON(meta);\r\n      data.object.fov = this.fov;\r\n      data.object.zoom = this.zoom;\r\n      data.object.near = this.near;\r\n      data.object.far = this.far;\r\n      data.object.focus = this.focus;\r\n      data.object.aspect = this.aspect;\r\n      if (this.view !== null) data.object.view = Object.assign({}, this.view);\r\n      data.object.filmGauge = this.filmGauge;\r\n      data.object.filmOffset = this.filmOffset;\r\n      return data;\r\n    }\r\n  }\r\n\r\n  PerspectiveCamera.prototype.isPerspectiveCamera = true;\r\n\r\n  const fov = 90,\r\n    aspect = 1;\r\n\r\n  class CubeCamera extends Object3D {\r\n    constructor(near, far, renderTarget) {\r\n      super();\r\n      this.type = 'CubeCamera';\r\n\r\n      if (renderTarget.isWebGLCubeRenderTarget !== true) {\r\n        console.error(\r\n          'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.',\r\n        );\r\n        return;\r\n      }\r\n\r\n      this.renderTarget = renderTarget;\r\n      const cameraPX = new PerspectiveCamera(fov, aspect, near, far);\r\n      cameraPX.layers = this.layers;\r\n      cameraPX.up.set(0, -1, 0);\r\n      cameraPX.lookAt(new Vector3(1, 0, 0));\r\n      this.add(cameraPX);\r\n      const cameraNX = new PerspectiveCamera(fov, aspect, near, far);\r\n      cameraNX.layers = this.layers;\r\n      cameraNX.up.set(0, -1, 0);\r\n      cameraNX.lookAt(new Vector3(-1, 0, 0));\r\n      this.add(cameraNX);\r\n      const cameraPY = new PerspectiveCamera(fov, aspect, near, far);\r\n      cameraPY.layers = this.layers;\r\n      cameraPY.up.set(0, 0, 1);\r\n      cameraPY.lookAt(new Vector3(0, 1, 0));\r\n      this.add(cameraPY);\r\n      const cameraNY = new PerspectiveCamera(fov, aspect, near, far);\r\n      cameraNY.layers = this.layers;\r\n      cameraNY.up.set(0, 0, -1);\r\n      cameraNY.lookAt(new Vector3(0, -1, 0));\r\n      this.add(cameraNY);\r\n      const cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\r\n      cameraPZ.layers = this.layers;\r\n      cameraPZ.up.set(0, -1, 0);\r\n      cameraPZ.lookAt(new Vector3(0, 0, 1));\r\n      this.add(cameraPZ);\r\n      const cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\r\n      cameraNZ.layers = this.layers;\r\n      cameraNZ.up.set(0, -1, 0);\r\n      cameraNZ.lookAt(new Vector3(0, 0, -1));\r\n      this.add(cameraNZ);\r\n    }\r\n\r\n    update(renderer, scene) {\r\n      if (this.parent === null) this.updateMatrixWorld();\r\n      const renderTarget = this.renderTarget;\r\n      const [cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ] = this.children;\r\n      const currentXrEnabled = renderer.xr.enabled;\r\n      const currentRenderTarget = renderer.getRenderTarget();\r\n      renderer.xr.enabled = false;\r\n      const generateMipmaps = renderTarget.texture.generateMipmaps;\r\n      renderTarget.texture.generateMipmaps = false;\r\n      renderer.setRenderTarget(renderTarget, 0);\r\n      renderer.render(scene, cameraPX);\r\n      renderer.setRenderTarget(renderTarget, 1);\r\n      renderer.render(scene, cameraNX);\r\n      renderer.setRenderTarget(renderTarget, 2);\r\n      renderer.render(scene, cameraPY);\r\n      renderer.setRenderTarget(renderTarget, 3);\r\n      renderer.render(scene, cameraNY);\r\n      renderer.setRenderTarget(renderTarget, 4);\r\n      renderer.render(scene, cameraPZ);\r\n      renderTarget.texture.generateMipmaps = generateMipmaps;\r\n      renderer.setRenderTarget(renderTarget, 5);\r\n      renderer.render(scene, cameraNZ);\r\n      renderer.setRenderTarget(currentRenderTarget);\r\n      renderer.xr.enabled = currentXrEnabled;\r\n    }\r\n  }\r\n\r\n  class CubeTexture extends Texture {\r\n    constructor(\r\n      images,\r\n      mapping,\r\n      wrapS,\r\n      wrapT,\r\n      magFilter,\r\n      minFilter,\r\n      format,\r\n      type,\r\n      anisotropy,\r\n      encoding,\r\n    ) {\r\n      images = images !== undefined ? images : [];\r\n      mapping = mapping !== undefined ? mapping : CubeReflectionMapping;\r\n      format = format !== undefined ? format : RGBFormat;\r\n      super(\r\n        images,\r\n        mapping,\r\n        wrapS,\r\n        wrapT,\r\n        magFilter,\r\n        minFilter,\r\n        format,\r\n        type,\r\n        anisotropy,\r\n        encoding,\r\n      ); // Why CubeTexture._needsFlipEnvMap is necessary:\r\n      //\r\n      // By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\r\n      // in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\r\n      // in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\r\n      // three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\r\n      // and the flag _needsFlipEnvMap controls this conversion. The flip is not required (and thus _needsFlipEnvMap is set to false)\r\n      // when using WebGLCubeRenderTarget.texture as a cube texture.\r\n\r\n      this._needsFlipEnvMap = true;\r\n      this.flipY = false;\r\n    }\r\n\r\n    get images() {\r\n      return this.image;\r\n    }\r\n\r\n    set images(value) {\r\n      this.image = value;\r\n    }\r\n  }\r\n\r\n  CubeTexture.prototype.isCubeTexture = true;\r\n\r\n  class WebGLCubeRenderTarget extends WebGLRenderTarget {\r\n    constructor(size, options, dummy) {\r\n      if (Number.isInteger(options)) {\r\n        console.warn(\r\n          'THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )',\r\n        );\r\n        options = dummy;\r\n      }\r\n\r\n      super(size, size, options);\r\n      options = options || {};\r\n      this.texture = new CubeTexture(\r\n        undefined,\r\n        options.mapping,\r\n        options.wrapS,\r\n        options.wrapT,\r\n        options.magFilter,\r\n        options.minFilter,\r\n        options.format,\r\n        options.type,\r\n        options.anisotropy,\r\n        options.encoding,\r\n      );\r\n      this.texture.generateMipmaps =\r\n        options.generateMipmaps !== undefined ? options.generateMipmaps : false;\r\n      this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\r\n      this.texture._needsFlipEnvMap = false;\r\n    }\r\n\r\n    fromEquirectangularTexture(renderer, texture) {\r\n      this.texture.type = texture.type;\r\n      this.texture.format = RGBAFormat; // see #18859\r\n\r\n      this.texture.encoding = texture.encoding;\r\n      this.texture.generateMipmaps = texture.generateMipmaps;\r\n      this.texture.minFilter = texture.minFilter;\r\n      this.texture.magFilter = texture.magFilter;\r\n      const shader = {\r\n        uniforms: {\r\n          tEquirect: {\r\n            value: null,\r\n          },\r\n        },\r\n        vertexShader:\r\n          /* glsl */\r\n          `\r\n\r\n\t\t\t\tvarying vec3 vWorldDirection;\r\n\r\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\r\n\r\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvoid main() {\r\n\r\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\r\n\r\n\t\t\t\t\t#include <begin_vertex>\r\n\t\t\t\t\t#include <project_vertex>\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n        fragmentShader:\r\n          /* glsl */\r\n          `\r\n\r\n\t\t\t\tuniform sampler2D tEquirect;\r\n\r\n\t\t\t\tvarying vec3 vWorldDirection;\r\n\r\n\t\t\t\t#include <common>\r\n\r\n\t\t\t\tvoid main() {\r\n\r\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\r\n\r\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\r\n\r\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n      };\r\n      const geometry = new BoxGeometry(5, 5, 5);\r\n      const material = new ShaderMaterial({\r\n        name: 'CubemapFromEquirect',\r\n        uniforms: cloneUniforms(shader.uniforms),\r\n        vertexShader: shader.vertexShader,\r\n        fragmentShader: shader.fragmentShader,\r\n        side: BackSide,\r\n        blending: NoBlending,\r\n      });\r\n      material.uniforms.tEquirect.value = texture;\r\n      const mesh = new Mesh(geometry, material);\r\n      const currentMinFilter = texture.minFilter; // Avoid blurred poles\r\n\r\n      if (texture.minFilter === LinearMipmapLinearFilter) texture.minFilter = LinearFilter;\r\n      const camera = new CubeCamera(1, 10, this);\r\n      camera.update(renderer, mesh);\r\n      texture.minFilter = currentMinFilter;\r\n      mesh.geometry.dispose();\r\n      mesh.material.dispose();\r\n      return this;\r\n    }\r\n\r\n    clear(renderer, color, depth, stencil) {\r\n      const currentRenderTarget = renderer.getRenderTarget();\r\n\r\n      for (let i = 0; i < 6; i++) {\r\n        renderer.setRenderTarget(this, i);\r\n        renderer.clear(color, depth, stencil);\r\n      }\r\n\r\n      renderer.setRenderTarget(currentRenderTarget);\r\n    }\r\n  }\r\n\r\n  WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\r\n\r\n  const _sphere$2 = /*@__PURE__*/ new Sphere();\r\n\r\n  const _vector$7 = /*@__PURE__*/ new Vector3();\r\n\r\n  class Frustum {\r\n    constructor(\r\n      p0 = new Plane(),\r\n      p1 = new Plane(),\r\n      p2 = new Plane(),\r\n      p3 = new Plane(),\r\n      p4 = new Plane(),\r\n      p5 = new Plane(),\r\n    ) {\r\n      this.planes = [p0, p1, p2, p3, p4, p5];\r\n    }\r\n\r\n    set(p0, p1, p2, p3, p4, p5) {\r\n      const planes = this.planes;\r\n      planes[0].copy(p0);\r\n      planes[1].copy(p1);\r\n      planes[2].copy(p2);\r\n      planes[3].copy(p3);\r\n      planes[4].copy(p4);\r\n      planes[5].copy(p5);\r\n      return this;\r\n    }\r\n\r\n    copy(frustum) {\r\n      const planes = this.planes;\r\n\r\n      for (let i = 0; i < 6; i++) {\r\n        planes[i].copy(frustum.planes[i]);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    setFromProjectionMatrix(m) {\r\n      const planes = this.planes;\r\n      const me = m.elements;\r\n      const me0 = me[0],\r\n        me1 = me[1],\r\n        me2 = me[2],\r\n        me3 = me[3];\r\n      const me4 = me[4],\r\n        me5 = me[5],\r\n        me6 = me[6],\r\n        me7 = me[7];\r\n      const me8 = me[8],\r\n        me9 = me[9],\r\n        me10 = me[10],\r\n        me11 = me[11];\r\n      const me12 = me[12],\r\n        me13 = me[13],\r\n        me14 = me[14],\r\n        me15 = me[15];\r\n      planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\r\n      planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\r\n      planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\r\n      planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\r\n      planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\r\n      planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\r\n      return this;\r\n    }\r\n\r\n    intersectsObject(object) {\r\n      const geometry = object.geometry;\r\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\r\n\r\n      _sphere$2.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\r\n\r\n      return this.intersectsSphere(_sphere$2);\r\n    }\r\n\r\n    intersectsSprite(sprite) {\r\n      _sphere$2.center.set(0, 0, 0);\r\n\r\n      _sphere$2.radius = 0.7071067811865476;\r\n\r\n      _sphere$2.applyMatrix4(sprite.matrixWorld);\r\n\r\n      return this.intersectsSphere(_sphere$2);\r\n    }\r\n\r\n    intersectsSphere(sphere) {\r\n      const planes = this.planes;\r\n      const center = sphere.center;\r\n      const negRadius = -sphere.radius;\r\n\r\n      for (let i = 0; i < 6; i++) {\r\n        const distance = planes[i].distanceToPoint(center);\r\n\r\n        if (distance < negRadius) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    intersectsBox(box) {\r\n      const planes = this.planes;\r\n\r\n      for (let i = 0; i < 6; i++) {\r\n        const plane = planes[i]; // corner at max distance\r\n\r\n        _vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n        _vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n        _vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n        if (plane.distanceToPoint(_vector$7) < 0) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    containsPoint(point) {\r\n      const planes = this.planes;\r\n\r\n      for (let i = 0; i < 6; i++) {\r\n        if (planes[i].distanceToPoint(point) < 0) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().copy(this);\r\n    }\r\n  }\r\n\r\n  function WebGLAnimation() {\r\n    let context = null;\r\n    let isAnimating = false;\r\n    let animationLoop = null;\r\n    let requestId = null;\r\n\r\n    function onAnimationFrame(time, frame) {\r\n      animationLoop(time, frame);\r\n      requestId = context.requestAnimationFrame(onAnimationFrame);\r\n    }\r\n\r\n    return {\r\n      start: function () {\r\n        if (isAnimating === true) return;\r\n        if (animationLoop === null) return;\r\n        requestId = context.requestAnimationFrame(onAnimationFrame);\r\n        isAnimating = true;\r\n      },\r\n      stop: function () {\r\n        context.cancelAnimationFrame(requestId);\r\n        isAnimating = false;\r\n      },\r\n      setAnimationLoop: function (callback) {\r\n        animationLoop = callback;\r\n      },\r\n      setContext: function (value) {\r\n        context = value;\r\n      },\r\n    };\r\n  }\r\n\r\n  function WebGLAttributes(gl, capabilities) {\r\n    const isWebGL2 = capabilities.isWebGL2;\r\n    const buffers = new WeakMap();\r\n\r\n    function createBuffer(attribute, bufferType) {\r\n      const array = attribute.array;\r\n      const usage = attribute.usage;\r\n      const buffer = gl.createBuffer();\r\n      gl.bindBuffer(bufferType, buffer);\r\n      gl.bufferData(bufferType, array, usage);\r\n      attribute.onUploadCallback();\r\n      let type = gl.FLOAT;\r\n\r\n      if (array instanceof Float32Array) {\r\n        type = gl.FLOAT;\r\n      } else if (array instanceof Float64Array) {\r\n        console.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');\r\n      } else if (array instanceof Uint16Array) {\r\n        if (attribute.isFloat16BufferAttribute) {\r\n          if (isWebGL2) {\r\n            type = gl.HALF_FLOAT;\r\n          } else {\r\n            console.warn('THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.');\r\n          }\r\n        } else {\r\n          type = gl.UNSIGNED_SHORT;\r\n        }\r\n      } else if (array instanceof Int16Array) {\r\n        type = gl.SHORT;\r\n      } else if (array instanceof Uint32Array) {\r\n        type = gl.UNSIGNED_INT;\r\n      } else if (array instanceof Int32Array) {\r\n        type = gl.INT;\r\n      } else if (array instanceof Int8Array) {\r\n        type = gl.BYTE;\r\n      } else if (array instanceof Uint8Array) {\r\n        type = gl.UNSIGNED_BYTE;\r\n      } else if (array instanceof Uint8ClampedArray) {\r\n        type = gl.UNSIGNED_BYTE;\r\n      }\r\n\r\n      return {\r\n        buffer: buffer,\r\n        type: type,\r\n        bytesPerElement: array.BYTES_PER_ELEMENT,\r\n        version: attribute.version,\r\n      };\r\n    }\r\n\r\n    function updateBuffer(buffer, attribute, bufferType) {\r\n      const array = attribute.array;\r\n      const updateRange = attribute.updateRange;\r\n      gl.bindBuffer(bufferType, buffer);\r\n\r\n      if (updateRange.count === -1) {\r\n        // Not using update ranges\r\n        gl.bufferSubData(bufferType, 0, array);\r\n      } else {\r\n        if (isWebGL2) {\r\n          gl.bufferSubData(\r\n            bufferType,\r\n            updateRange.offset * array.BYTES_PER_ELEMENT,\r\n            array,\r\n            updateRange.offset,\r\n            updateRange.count,\r\n          );\r\n        } else {\r\n          gl.bufferSubData(\r\n            bufferType,\r\n            updateRange.offset * array.BYTES_PER_ELEMENT,\r\n            array.subarray(updateRange.offset, updateRange.offset + updateRange.count),\r\n          );\r\n        }\r\n\r\n        updateRange.count = -1; // reset range\r\n      }\r\n    } //\r\n\r\n    function get(attribute) {\r\n      if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\r\n      return buffers.get(attribute);\r\n    }\r\n\r\n    function remove(attribute) {\r\n      if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\r\n      const data = buffers.get(attribute);\r\n\r\n      if (data) {\r\n        gl.deleteBuffer(data.buffer);\r\n        buffers.delete(attribute);\r\n      }\r\n    }\r\n\r\n    function update(attribute, bufferType) {\r\n      if (attribute.isGLBufferAttribute) {\r\n        const cached = buffers.get(attribute);\r\n\r\n        if (!cached || cached.version < attribute.version) {\r\n          buffers.set(attribute, {\r\n            buffer: attribute.buffer,\r\n            type: attribute.type,\r\n            bytesPerElement: attribute.elementSize,\r\n            version: attribute.version,\r\n          });\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\r\n      const data = buffers.get(attribute);\r\n\r\n      if (data === undefined) {\r\n        buffers.set(attribute, createBuffer(attribute, bufferType));\r\n      } else if (data.version < attribute.version) {\r\n        updateBuffer(data.buffer, attribute, bufferType);\r\n        data.version = attribute.version;\r\n      }\r\n    }\r\n\r\n    return {\r\n      get: get,\r\n      remove: remove,\r\n      update: update,\r\n    };\r\n  }\r\n\r\n  class PlaneGeometry extends BufferGeometry {\r\n    constructor(width = 1, height = 1, widthSegments = 1, heightSegments = 1) {\r\n      super();\r\n      this.type = 'PlaneGeometry';\r\n      this.parameters = {\r\n        width: width,\r\n        height: height,\r\n        widthSegments: widthSegments,\r\n        heightSegments: heightSegments,\r\n      };\r\n      const width_half = width / 2;\r\n      const height_half = height / 2;\r\n      const gridX = Math.floor(widthSegments);\r\n      const gridY = Math.floor(heightSegments);\r\n      const gridX1 = gridX + 1;\r\n      const gridY1 = gridY + 1;\r\n      const segment_width = width / gridX;\r\n      const segment_height = height / gridY; //\r\n\r\n      const indices = [];\r\n      const vertices = [];\r\n      const normals = [];\r\n      const uvs = [];\r\n\r\n      for (let iy = 0; iy < gridY1; iy++) {\r\n        const y = iy * segment_height - height_half;\r\n\r\n        for (let ix = 0; ix < gridX1; ix++) {\r\n          const x = ix * segment_width - width_half;\r\n          vertices.push(x, -y, 0);\r\n          normals.push(0, 0, 1);\r\n          uvs.push(ix / gridX);\r\n          uvs.push(1 - iy / gridY);\r\n        }\r\n      }\r\n\r\n      for (let iy = 0; iy < gridY; iy++) {\r\n        for (let ix = 0; ix < gridX; ix++) {\r\n          const a = ix + gridX1 * iy;\r\n          const b = ix + gridX1 * (iy + 1);\r\n          const c = ix + 1 + gridX1 * (iy + 1);\r\n          const d = ix + 1 + gridX1 * iy;\r\n          indices.push(a, b, d);\r\n          indices.push(b, c, d);\r\n        }\r\n      }\r\n\r\n      this.setIndex(indices);\r\n      this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n      this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n      this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n    }\r\n  }\r\n\r\n  var alphamap_fragment =\r\n    '#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif';\r\n\r\n  var alphamap_pars_fragment = '#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif';\r\n\r\n  var alphatest_fragment = '#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif';\r\n\r\n  var aomap_fragment =\r\n    '#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif';\r\n\r\n  var aomap_pars_fragment =\r\n    '#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif';\r\n\r\n  var begin_vertex = 'vec3 transformed = vec3( position );';\r\n\r\n  var beginnormal_vertex =\r\n    'vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif';\r\n\r\n  var bsdfs =\r\n    'vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif';\r\n\r\n  var bumpmap_pars_fragment =\r\n    '#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif';\r\n\r\n  var clipping_planes_fragment =\r\n    '#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif';\r\n\r\n  var clipping_planes_pars_fragment =\r\n    '#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif';\r\n\r\n  var clipping_planes_pars_vertex =\r\n    '#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif';\r\n\r\n  var clipping_planes_vertex =\r\n    '#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif';\r\n\r\n  var color_fragment =\r\n    '#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif';\r\n\r\n  var color_pars_fragment =\r\n    '#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif';\r\n\r\n  var color_pars_vertex =\r\n    '#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif';\r\n\r\n  var color_vertex =\r\n    '#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif';\r\n\r\n  var common =\r\n    '#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}';\r\n\r\n  var cube_uv_reflection_fragment =\r\n    '#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif';\r\n\r\n  var defaultnormal_vertex =\r\n    'vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif';\r\n\r\n  var displacementmap_pars_vertex =\r\n    '#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif';\r\n\r\n  var displacementmap_vertex =\r\n    '#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif';\r\n\r\n  var emissivemap_fragment =\r\n    '#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif';\r\n\r\n  var emissivemap_pars_fragment =\r\n    '#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif';\r\n\r\n  var encodings_fragment = 'gl_FragColor = linearToOutputTexel( gl_FragColor );';\r\n\r\n  var encodings_pars_fragment =\r\n    '\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}';\r\n\r\n  var envmap_fragment =\r\n    '#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif';\r\n\r\n  var envmap_common_pars_fragment =\r\n    '#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif';\r\n\r\n  var envmap_pars_fragment =\r\n    '#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif';\r\n\r\n  var envmap_pars_vertex =\r\n    '#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif';\r\n\r\n  var envmap_vertex =\r\n    '#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif';\r\n\r\n  var fog_vertex = '#ifdef USE_FOG\\n\\tfogDepth = - mvPosition.z;\\n#endif';\r\n\r\n  var fog_pars_vertex = '#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif';\r\n\r\n  var fog_fragment =\r\n    '#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif';\r\n\r\n  var fog_pars_fragment =\r\n    '#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif';\r\n\r\n  var gradientmap_pars_fragment =\r\n    '#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}';\r\n\r\n  var lightmap_fragment =\r\n    '#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif';\r\n\r\n  var lightmap_pars_fragment =\r\n    '#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif';\r\n\r\n  var lights_lambert_vertex =\r\n    'vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif';\r\n\r\n  var lights_pars_begin =\r\n    'uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif';\r\n\r\n  var envmap_physical_pars_fragment =\r\n    '#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif';\r\n\r\n  var lights_toon_fragment = 'ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;';\r\n\r\n  var lights_toon_pars_fragment =\r\n    'varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)';\r\n\r\n  var lights_phong_fragment =\r\n    'BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;';\r\n\r\n  var lights_phong_pars_fragment =\r\n    'varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)';\r\n\r\n  var lights_physical_fragment =\r\n    'PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), rawDiffuseColor, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), rawDiffuseColor, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif';\r\n\r\n  var lights_physical_pars_fragment =\r\n    'struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularRoughness;\\n\\tvec3 specularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(\t\t0, 1,\t\t0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}';\r\n\r\n  var lights_fragment_begin =\r\n    '\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif';\r\n\r\n  var lights_fragment_maps =\r\n    '#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif';\r\n\r\n  var lights_fragment_end =\r\n    '#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif';\r\n\r\n  var logdepthbuf_fragment =\r\n    '#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif';\r\n\r\n  var logdepthbuf_pars_fragment =\r\n    '#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif';\r\n\r\n  var logdepthbuf_pars_vertex =\r\n    '#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif';\r\n\r\n  var logdepthbuf_vertex =\r\n    '#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif';\r\n\r\n  var map_fragment =\r\n    '#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif';\r\n\r\n  var map_pars_fragment = '#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif';\r\n\r\n  var map_particle_fragment =\r\n    '#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif';\r\n\r\n  var map_particle_pars_fragment =\r\n    '#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif';\r\n\r\n  var metalnessmap_fragment =\r\n    'float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif';\r\n\r\n  var metalnessmap_pars_fragment =\r\n    '#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif';\r\n\r\n  var morphnormal_vertex =\r\n    '#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif';\r\n\r\n  var morphtarget_pars_vertex =\r\n    '#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif';\r\n\r\n  var morphtarget_vertex =\r\n    '#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif';\r\n\r\n  var normal_fragment_begin =\r\n    'float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;';\r\n\r\n  var normal_fragment_maps =\r\n    '#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif';\r\n\r\n  var normalmap_pars_fragment =\r\n    '#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif';\r\n\r\n  var clearcoat_normal_fragment_begin =\r\n    '#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif';\r\n\r\n  var clearcoat_normal_fragment_maps =\r\n    '#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif';\r\n\r\n  var clearcoat_pars_fragment =\r\n    '#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif';\r\n\r\n  var packing =\r\n    'vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}';\r\n\r\n  var premultiplied_alpha_fragment =\r\n    '#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif';\r\n\r\n  var project_vertex =\r\n    'vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;';\r\n\r\n  var dithering_fragment =\r\n    '#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif';\r\n\r\n  var dithering_pars_fragment =\r\n    '#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif';\r\n\r\n  var roughnessmap_fragment =\r\n    'float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif';\r\n\r\n  var roughnessmap_pars_fragment =\r\n    '#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif';\r\n\r\n  var shadowmap_pars_fragment =\r\n    '#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif';\r\n\r\n  var shadowmap_pars_vertex =\r\n    '#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif';\r\n\r\n  var shadowmap_vertex =\r\n    '#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif';\r\n\r\n  var shadowmask_pars_fragment =\r\n    'float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}';\r\n\r\n  var skinbase_vertex =\r\n    '#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif';\r\n\r\n  var skinning_pars_vertex =\r\n    '#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif';\r\n\r\n  var skinning_vertex =\r\n    '#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif';\r\n\r\n  var skinnormal_vertex =\r\n    '#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif';\r\n\r\n  var specularmap_fragment =\r\n    'float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif';\r\n\r\n  var specularmap_pars_fragment =\r\n    '#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif';\r\n\r\n  var tonemapping_fragment =\r\n    '#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif';\r\n\r\n  var tonemapping_pars_fragment =\r\n    '#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(\t1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,\t1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,\t1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }';\r\n\r\n  var transmission_fragment =\r\n    '#ifdef USE_TRANSMISSION\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSNMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition.xyz / vWorldPosition.w;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n\\tfloat ior = ( 1.0 + 0.4 * reflectivity ) / ( 1.0 - 0.4 * reflectivity );\\n\\tvec3 f0 = vec3( pow( ior - 1.0, 2.0 ) / pow( ior + 1.0, 2.0 ) );\\n\\tvec3 f90 = vec3( 1.0 );\\n\\tvec3 f_transmission = totalTransmission * getIBLVolumeRefraction(\\n\\t\\tnormal, v, viewDir, roughnessFactor, diffuseColor.rgb, f0, f90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance);\\n\\tdiffuseColor.rgb = mix( diffuseColor.rgb, f_transmission, totalTransmission );\\n#endif';\r\n\r\n  var transmission_pars_fragment =\r\n    '#ifdef USE_TRANSMISSION\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec4 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay(vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix) {\\n\\t\\tvec3 refractionVector = refract(-v, normalize(n), 1.0 / ior);\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length(vec3(modelMatrix[0].xyz));\\n\\t\\tmodelScale.y = length(vec3(modelMatrix[1].xyz));\\n\\t\\tmodelScale.z = length(vec3(modelMatrix[2].xyz));\\n\\t\\treturn normalize(refractionVector) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness(float roughness, float ior) {\\n\\t\\treturn roughness * clamp(ior * 2.0 - 2.0, 0.0, 1.0);\\n\\t}\\n\\tvec3 getTransmissionSample(vec2 fragCoord, float roughness, float ior) {\\n\\t\\tfloat framebufferLod = log2(transmissionSamplerSize.x) * applyIorToRoughness(roughness, ior);\\n\\t\\treturn texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod).rgb;\\n\\t}\\n\\tvec3 applyVolumeAttenuation(vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance) {\\n\\t\\tif (attenuationDistance == 0.0) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log(attenuationColor) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp(-attenuationCoefficient * transmissionDistance);\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec3 getIBLVolumeRefraction(vec3 n, vec3 v, vec3 viewDir, float perceptualRoughness, vec3 baseColor, vec3 f0, vec3 f90,\\n\\t\\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness, vec3 attenuationColor, float attenuationDistance) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay(n, v, thickness, ior, modelMatrix);\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4(refractedRayExit, 1.0);\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec3 transmittedLight = getTransmissionSample(refractionCoords, perceptualRoughness, ior);\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation(transmittedLight, length(transmissionRay), attenuationColor, attenuationDistance);\\n\\t\\tfloat NdotV = saturate(dot(n, viewDir));\\n\\t\\tvec2 brdf = integrateSpecularBRDF(NdotV, perceptualRoughness);\\n\\t\\tvec3 specularColor = f0 * brdf.x + f90 * brdf.y;\\n\\t\\treturn (1.0 - specularColor) * attenuatedColor * baseColor;\\n\\t}\\n#endif';\r\n\r\n  var uv_pars_fragment =\r\n    '#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif';\r\n\r\n  var uv_pars_vertex =\r\n    '#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif';\r\n\r\n  var uv_vertex = '#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif';\r\n\r\n  var uv2_pars_fragment =\r\n    '#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif';\r\n\r\n  var uv2_pars_vertex =\r\n    '#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif';\r\n\r\n  var uv2_vertex =\r\n    '#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif';\r\n\r\n  var worldpos_vertex =\r\n    '#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif';\r\n\r\n  var background_frag =\r\n    'uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}';\r\n\r\n  var background_vert =\r\n    'varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}';\r\n\r\n  var cube_frag =\r\n    '#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}';\r\n\r\n  var cube_vert =\r\n    'varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}';\r\n\r\n  var depth_frag =\r\n    '#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}';\r\n\r\n  var depth_vert =\r\n    '#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}';\r\n\r\n  var distanceRGBA_frag =\r\n    '#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}';\r\n\r\n  var distanceRGBA_vert =\r\n    '#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}';\r\n\r\n  var equirect_frag =\r\n    'uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}';\r\n\r\n  var equirect_vert =\r\n    'varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}';\r\n\r\n  var linedashed_frag =\r\n    'uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}';\r\n\r\n  var linedashed_vert =\r\n    'uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}';\r\n\r\n  var meshbasic_frag =\r\n    'uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}';\r\n\r\n  var meshbasic_vert =\r\n    '#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}';\r\n\r\n  var meshlambert_frag =\r\n    'uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}';\r\n\r\n  var meshlambert_vert =\r\n    '#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}';\r\n\r\n  var meshmatcap_frag =\r\n    '#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}';\r\n\r\n  var meshmatcap_vert =\r\n    '#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}';\r\n\r\n  var meshtoon_frag =\r\n    '#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}';\r\n\r\n  var meshtoon_vert =\r\n    '#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}';\r\n\r\n  var meshphong_frag =\r\n    '#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}';\r\n\r\n  var meshphong_vert =\r\n    '#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}';\r\n\r\n  var meshphysical_frag =\r\n    '#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform vec3 attenuationColor;\\n\\tuniform float attenuationDistance;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <transmission_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat totalTransmission = transmission;\\n\\t\\tfloat thicknessFactor = thickness;\\n\\t#endif\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\tvec3 rawDiffuseColor = diffuseColor.rgb;\\n\\t#include <transmission_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}';\r\n\r\n  var meshphysical_vert =\r\n    '#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec4 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition;\\n#endif\\n}';\r\n\r\n  var normal_frag =\r\n    '#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}';\r\n\r\n  var normal_vert =\r\n    '#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}';\r\n\r\n  var points_frag =\r\n    'uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}';\r\n\r\n  var points_vert =\r\n    'uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}';\r\n\r\n  var shadow_frag =\r\n    'uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}';\r\n\r\n  var shadow_vert =\r\n    '#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}';\r\n\r\n  var sprite_frag =\r\n    'uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}';\r\n\r\n  var sprite_vert =\r\n    'uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}';\r\n\r\n  const ShaderChunk = {\r\n    alphamap_fragment: alphamap_fragment,\r\n    alphamap_pars_fragment: alphamap_pars_fragment,\r\n    alphatest_fragment: alphatest_fragment,\r\n    aomap_fragment: aomap_fragment,\r\n    aomap_pars_fragment: aomap_pars_fragment,\r\n    begin_vertex: begin_vertex,\r\n    beginnormal_vertex: beginnormal_vertex,\r\n    bsdfs: bsdfs,\r\n    bumpmap_pars_fragment: bumpmap_pars_fragment,\r\n    clipping_planes_fragment: clipping_planes_fragment,\r\n    clipping_planes_pars_fragment: clipping_planes_pars_fragment,\r\n    clipping_planes_pars_vertex: clipping_planes_pars_vertex,\r\n    clipping_planes_vertex: clipping_planes_vertex,\r\n    color_fragment: color_fragment,\r\n    color_pars_fragment: color_pars_fragment,\r\n    color_pars_vertex: color_pars_vertex,\r\n    color_vertex: color_vertex,\r\n    common: common,\r\n    cube_uv_reflection_fragment: cube_uv_reflection_fragment,\r\n    defaultnormal_vertex: defaultnormal_vertex,\r\n    displacementmap_pars_vertex: displacementmap_pars_vertex,\r\n    displacementmap_vertex: displacementmap_vertex,\r\n    emissivemap_fragment: emissivemap_fragment,\r\n    emissivemap_pars_fragment: emissivemap_pars_fragment,\r\n    encodings_fragment: encodings_fragment,\r\n    encodings_pars_fragment: encodings_pars_fragment,\r\n    envmap_fragment: envmap_fragment,\r\n    envmap_common_pars_fragment: envmap_common_pars_fragment,\r\n    envmap_pars_fragment: envmap_pars_fragment,\r\n    envmap_pars_vertex: envmap_pars_vertex,\r\n    envmap_physical_pars_fragment: envmap_physical_pars_fragment,\r\n    envmap_vertex: envmap_vertex,\r\n    fog_vertex: fog_vertex,\r\n    fog_pars_vertex: fog_pars_vertex,\r\n    fog_fragment: fog_fragment,\r\n    fog_pars_fragment: fog_pars_fragment,\r\n    gradientmap_pars_fragment: gradientmap_pars_fragment,\r\n    lightmap_fragment: lightmap_fragment,\r\n    lightmap_pars_fragment: lightmap_pars_fragment,\r\n    lights_lambert_vertex: lights_lambert_vertex,\r\n    lights_pars_begin: lights_pars_begin,\r\n    lights_toon_fragment: lights_toon_fragment,\r\n    lights_toon_pars_fragment: lights_toon_pars_fragment,\r\n    lights_phong_fragment: lights_phong_fragment,\r\n    lights_phong_pars_fragment: lights_phong_pars_fragment,\r\n    lights_physical_fragment: lights_physical_fragment,\r\n    lights_physical_pars_fragment: lights_physical_pars_fragment,\r\n    lights_fragment_begin: lights_fragment_begin,\r\n    lights_fragment_maps: lights_fragment_maps,\r\n    lights_fragment_end: lights_fragment_end,\r\n    logdepthbuf_fragment: logdepthbuf_fragment,\r\n    logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\r\n    logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\r\n    logdepthbuf_vertex: logdepthbuf_vertex,\r\n    map_fragment: map_fragment,\r\n    map_pars_fragment: map_pars_fragment,\r\n    map_particle_fragment: map_particle_fragment,\r\n    map_particle_pars_fragment: map_particle_pars_fragment,\r\n    metalnessmap_fragment: metalnessmap_fragment,\r\n    metalnessmap_pars_fragment: metalnessmap_pars_fragment,\r\n    morphnormal_vertex: morphnormal_vertex,\r\n    morphtarget_pars_vertex: morphtarget_pars_vertex,\r\n    morphtarget_vertex: morphtarget_vertex,\r\n    normal_fragment_begin: normal_fragment_begin,\r\n    normal_fragment_maps: normal_fragment_maps,\r\n    normalmap_pars_fragment: normalmap_pars_fragment,\r\n    clearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\r\n    clearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\r\n    clearcoat_pars_fragment: clearcoat_pars_fragment,\r\n    packing: packing,\r\n    premultiplied_alpha_fragment: premultiplied_alpha_fragment,\r\n    project_vertex: project_vertex,\r\n    dithering_fragment: dithering_fragment,\r\n    dithering_pars_fragment: dithering_pars_fragment,\r\n    roughnessmap_fragment: roughnessmap_fragment,\r\n    roughnessmap_pars_fragment: roughnessmap_pars_fragment,\r\n    shadowmap_pars_fragment: shadowmap_pars_fragment,\r\n    shadowmap_pars_vertex: shadowmap_pars_vertex,\r\n    shadowmap_vertex: shadowmap_vertex,\r\n    shadowmask_pars_fragment: shadowmask_pars_fragment,\r\n    skinbase_vertex: skinbase_vertex,\r\n    skinning_pars_vertex: skinning_pars_vertex,\r\n    skinning_vertex: skinning_vertex,\r\n    skinnormal_vertex: skinnormal_vertex,\r\n    specularmap_fragment: specularmap_fragment,\r\n    specularmap_pars_fragment: specularmap_pars_fragment,\r\n    tonemapping_fragment: tonemapping_fragment,\r\n    tonemapping_pars_fragment: tonemapping_pars_fragment,\r\n    transmission_fragment: transmission_fragment,\r\n    transmission_pars_fragment: transmission_pars_fragment,\r\n    uv_pars_fragment: uv_pars_fragment,\r\n    uv_pars_vertex: uv_pars_vertex,\r\n    uv_vertex: uv_vertex,\r\n    uv2_pars_fragment: uv2_pars_fragment,\r\n    uv2_pars_vertex: uv2_pars_vertex,\r\n    uv2_vertex: uv2_vertex,\r\n    worldpos_vertex: worldpos_vertex,\r\n    background_frag: background_frag,\r\n    background_vert: background_vert,\r\n    cube_frag: cube_frag,\r\n    cube_vert: cube_vert,\r\n    depth_frag: depth_frag,\r\n    depth_vert: depth_vert,\r\n    distanceRGBA_frag: distanceRGBA_frag,\r\n    distanceRGBA_vert: distanceRGBA_vert,\r\n    equirect_frag: equirect_frag,\r\n    equirect_vert: equirect_vert,\r\n    linedashed_frag: linedashed_frag,\r\n    linedashed_vert: linedashed_vert,\r\n    meshbasic_frag: meshbasic_frag,\r\n    meshbasic_vert: meshbasic_vert,\r\n    meshlambert_frag: meshlambert_frag,\r\n    meshlambert_vert: meshlambert_vert,\r\n    meshmatcap_frag: meshmatcap_frag,\r\n    meshmatcap_vert: meshmatcap_vert,\r\n    meshtoon_frag: meshtoon_frag,\r\n    meshtoon_vert: meshtoon_vert,\r\n    meshphong_frag: meshphong_frag,\r\n    meshphong_vert: meshphong_vert,\r\n    meshphysical_frag: meshphysical_frag,\r\n    meshphysical_vert: meshphysical_vert,\r\n    normal_frag: normal_frag,\r\n    normal_vert: normal_vert,\r\n    points_frag: points_frag,\r\n    points_vert: points_vert,\r\n    shadow_frag: shadow_frag,\r\n    shadow_vert: shadow_vert,\r\n    sprite_frag: sprite_frag,\r\n    sprite_vert: sprite_vert,\r\n  };\r\n\r\n  /**\r\n   * Uniforms library for shared webgl shaders\r\n   */\r\n\r\n  const UniformsLib = {\r\n    common: {\r\n      diffuse: {\r\n        value: new Color(0xffffff),\r\n      },\r\n      opacity: {\r\n        value: 1.0,\r\n      },\r\n      map: {\r\n        value: null,\r\n      },\r\n      uvTransform: {\r\n        value: new Matrix3(),\r\n      },\r\n      uv2Transform: {\r\n        value: new Matrix3(),\r\n      },\r\n      alphaMap: {\r\n        value: null,\r\n      },\r\n    },\r\n    specularmap: {\r\n      specularMap: {\r\n        value: null,\r\n      },\r\n    },\r\n    envmap: {\r\n      envMap: {\r\n        value: null,\r\n      },\r\n      flipEnvMap: {\r\n        value: -1,\r\n      },\r\n      reflectivity: {\r\n        value: 1.0,\r\n      },\r\n      refractionRatio: {\r\n        value: 0.98,\r\n      },\r\n      maxMipLevel: {\r\n        value: 0,\r\n      },\r\n    },\r\n    aomap: {\r\n      aoMap: {\r\n        value: null,\r\n      },\r\n      aoMapIntensity: {\r\n        value: 1,\r\n      },\r\n    },\r\n    lightmap: {\r\n      lightMap: {\r\n        value: null,\r\n      },\r\n      lightMapIntensity: {\r\n        value: 1,\r\n      },\r\n    },\r\n    emissivemap: {\r\n      emissiveMap: {\r\n        value: null,\r\n      },\r\n    },\r\n    bumpmap: {\r\n      bumpMap: {\r\n        value: null,\r\n      },\r\n      bumpScale: {\r\n        value: 1,\r\n      },\r\n    },\r\n    normalmap: {\r\n      normalMap: {\r\n        value: null,\r\n      },\r\n      normalScale: {\r\n        value: new Vector2(1, 1),\r\n      },\r\n    },\r\n    displacementmap: {\r\n      displacementMap: {\r\n        value: null,\r\n      },\r\n      displacementScale: {\r\n        value: 1,\r\n      },\r\n      displacementBias: {\r\n        value: 0,\r\n      },\r\n    },\r\n    roughnessmap: {\r\n      roughnessMap: {\r\n        value: null,\r\n      },\r\n    },\r\n    metalnessmap: {\r\n      metalnessMap: {\r\n        value: null,\r\n      },\r\n    },\r\n    gradientmap: {\r\n      gradientMap: {\r\n        value: null,\r\n      },\r\n    },\r\n    fog: {\r\n      fogDensity: {\r\n        value: 0.00025,\r\n      },\r\n      fogNear: {\r\n        value: 1,\r\n      },\r\n      fogFar: {\r\n        value: 2000,\r\n      },\r\n      fogColor: {\r\n        value: new Color(0xffffff),\r\n      },\r\n    },\r\n    lights: {\r\n      ambientLightColor: {\r\n        value: [],\r\n      },\r\n      lightProbe: {\r\n        value: [],\r\n      },\r\n      directionalLights: {\r\n        value: [],\r\n        properties: {\r\n          direction: {},\r\n          color: {},\r\n        },\r\n      },\r\n      directionalLightShadows: {\r\n        value: [],\r\n        properties: {\r\n          shadowBias: {},\r\n          shadowNormalBias: {},\r\n          shadowRadius: {},\r\n          shadowMapSize: {},\r\n        },\r\n      },\r\n      directionalShadowMap: {\r\n        value: [],\r\n      },\r\n      directionalShadowMatrix: {\r\n        value: [],\r\n      },\r\n      spotLights: {\r\n        value: [],\r\n        properties: {\r\n          color: {},\r\n          position: {},\r\n          direction: {},\r\n          distance: {},\r\n          coneCos: {},\r\n          penumbraCos: {},\r\n          decay: {},\r\n        },\r\n      },\r\n      spotLightShadows: {\r\n        value: [],\r\n        properties: {\r\n          shadowBias: {},\r\n          shadowNormalBias: {},\r\n          shadowRadius: {},\r\n          shadowMapSize: {},\r\n        },\r\n      },\r\n      spotShadowMap: {\r\n        value: [],\r\n      },\r\n      spotShadowMatrix: {\r\n        value: [],\r\n      },\r\n      pointLights: {\r\n        value: [],\r\n        properties: {\r\n          color: {},\r\n          position: {},\r\n          decay: {},\r\n          distance: {},\r\n        },\r\n      },\r\n      pointLightShadows: {\r\n        value: [],\r\n        properties: {\r\n          shadowBias: {},\r\n          shadowNormalBias: {},\r\n          shadowRadius: {},\r\n          shadowMapSize: {},\r\n          shadowCameraNear: {},\r\n          shadowCameraFar: {},\r\n        },\r\n      },\r\n      pointShadowMap: {\r\n        value: [],\r\n      },\r\n      pointShadowMatrix: {\r\n        value: [],\r\n      },\r\n      hemisphereLights: {\r\n        value: [],\r\n        properties: {\r\n          direction: {},\r\n          skyColor: {},\r\n          groundColor: {},\r\n        },\r\n      },\r\n      // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\r\n      rectAreaLights: {\r\n        value: [],\r\n        properties: {\r\n          color: {},\r\n          position: {},\r\n          width: {},\r\n          height: {},\r\n        },\r\n      },\r\n      ltc_1: {\r\n        value: null,\r\n      },\r\n      ltc_2: {\r\n        value: null,\r\n      },\r\n    },\r\n    points: {\r\n      diffuse: {\r\n        value: new Color(0xffffff),\r\n      },\r\n      opacity: {\r\n        value: 1.0,\r\n      },\r\n      size: {\r\n        value: 1.0,\r\n      },\r\n      scale: {\r\n        value: 1.0,\r\n      },\r\n      map: {\r\n        value: null,\r\n      },\r\n      alphaMap: {\r\n        value: null,\r\n      },\r\n      uvTransform: {\r\n        value: new Matrix3(),\r\n      },\r\n    },\r\n    sprite: {\r\n      diffuse: {\r\n        value: new Color(0xffffff),\r\n      },\r\n      opacity: {\r\n        value: 1.0,\r\n      },\r\n      center: {\r\n        value: new Vector2(0.5, 0.5),\r\n      },\r\n      rotation: {\r\n        value: 0.0,\r\n      },\r\n      map: {\r\n        value: null,\r\n      },\r\n      alphaMap: {\r\n        value: null,\r\n      },\r\n      uvTransform: {\r\n        value: new Matrix3(),\r\n      },\r\n    },\r\n  };\r\n\r\n  const ShaderLib = {\r\n    basic: {\r\n      uniforms: mergeUniforms([\r\n        UniformsLib.common,\r\n        UniformsLib.specularmap,\r\n        UniformsLib.envmap,\r\n        UniformsLib.aomap,\r\n        UniformsLib.lightmap,\r\n        UniformsLib.fog,\r\n      ]),\r\n      vertexShader: ShaderChunk.meshbasic_vert,\r\n      fragmentShader: ShaderChunk.meshbasic_frag,\r\n    },\r\n    lambert: {\r\n      uniforms: mergeUniforms([\r\n        UniformsLib.common,\r\n        UniformsLib.specularmap,\r\n        UniformsLib.envmap,\r\n        UniformsLib.aomap,\r\n        UniformsLib.lightmap,\r\n        UniformsLib.emissivemap,\r\n        UniformsLib.fog,\r\n        UniformsLib.lights,\r\n        {\r\n          emissive: {\r\n            value: new Color(0x000000),\r\n          },\r\n        },\r\n      ]),\r\n      vertexShader: ShaderChunk.meshlambert_vert,\r\n      fragmentShader: ShaderChunk.meshlambert_frag,\r\n    },\r\n    phong: {\r\n      uniforms: mergeUniforms([\r\n        UniformsLib.common,\r\n        UniformsLib.specularmap,\r\n        UniformsLib.envmap,\r\n        UniformsLib.aomap,\r\n        UniformsLib.lightmap,\r\n        UniformsLib.emissivemap,\r\n        UniformsLib.bumpmap,\r\n        UniformsLib.normalmap,\r\n        UniformsLib.displacementmap,\r\n        UniformsLib.fog,\r\n        UniformsLib.lights,\r\n        {\r\n          emissive: {\r\n            value: new Color(0x000000),\r\n          },\r\n          specular: {\r\n            value: new Color(0x111111),\r\n          },\r\n          shininess: {\r\n            value: 30,\r\n          },\r\n        },\r\n      ]),\r\n      vertexShader: ShaderChunk.meshphong_vert,\r\n      fragmentShader: ShaderChunk.meshphong_frag,\r\n    },\r\n    standard: {\r\n      uniforms: mergeUniforms([\r\n        UniformsLib.common,\r\n        UniformsLib.envmap,\r\n        UniformsLib.aomap,\r\n        UniformsLib.lightmap,\r\n        UniformsLib.emissivemap,\r\n        UniformsLib.bumpmap,\r\n        UniformsLib.normalmap,\r\n        UniformsLib.displacementmap,\r\n        UniformsLib.roughnessmap,\r\n        UniformsLib.metalnessmap,\r\n        UniformsLib.fog,\r\n        UniformsLib.lights,\r\n        {\r\n          emissive: {\r\n            value: new Color(0x000000),\r\n          },\r\n          roughness: {\r\n            value: 1.0,\r\n          },\r\n          metalness: {\r\n            value: 0.0,\r\n          },\r\n          envMapIntensity: {\r\n            value: 1,\r\n          }, // temporary\r\n        },\r\n      ]),\r\n      vertexShader: ShaderChunk.meshphysical_vert,\r\n      fragmentShader: ShaderChunk.meshphysical_frag,\r\n    },\r\n    toon: {\r\n      uniforms: mergeUniforms([\r\n        UniformsLib.common,\r\n        UniformsLib.aomap,\r\n        UniformsLib.lightmap,\r\n        UniformsLib.emissivemap,\r\n        UniformsLib.bumpmap,\r\n        UniformsLib.normalmap,\r\n        UniformsLib.displacementmap,\r\n        UniformsLib.gradientmap,\r\n        UniformsLib.fog,\r\n        UniformsLib.lights,\r\n        {\r\n          emissive: {\r\n            value: new Color(0x000000),\r\n          },\r\n        },\r\n      ]),\r\n      vertexShader: ShaderChunk.meshtoon_vert,\r\n      fragmentShader: ShaderChunk.meshtoon_frag,\r\n    },\r\n    matcap: {\r\n      uniforms: mergeUniforms([\r\n        UniformsLib.common,\r\n        UniformsLib.bumpmap,\r\n        UniformsLib.normalmap,\r\n        UniformsLib.displacementmap,\r\n        UniformsLib.fog,\r\n        {\r\n          matcap: {\r\n            value: null,\r\n          },\r\n        },\r\n      ]),\r\n      vertexShader: ShaderChunk.meshmatcap_vert,\r\n      fragmentShader: ShaderChunk.meshmatcap_frag,\r\n    },\r\n    points: {\r\n      uniforms: mergeUniforms([UniformsLib.points, UniformsLib.fog]),\r\n      vertexShader: ShaderChunk.points_vert,\r\n      fragmentShader: ShaderChunk.points_frag,\r\n    },\r\n    dashed: {\r\n      uniforms: mergeUniforms([\r\n        UniformsLib.common,\r\n        UniformsLib.fog,\r\n        {\r\n          scale: {\r\n            value: 1,\r\n          },\r\n          dashSize: {\r\n            value: 1,\r\n          },\r\n          totalSize: {\r\n            value: 2,\r\n          },\r\n        },\r\n      ]),\r\n      vertexShader: ShaderChunk.linedashed_vert,\r\n      fragmentShader: ShaderChunk.linedashed_frag,\r\n    },\r\n    depth: {\r\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap]),\r\n      vertexShader: ShaderChunk.depth_vert,\r\n      fragmentShader: ShaderChunk.depth_frag,\r\n    },\r\n    normal: {\r\n      uniforms: mergeUniforms([\r\n        UniformsLib.common,\r\n        UniformsLib.bumpmap,\r\n        UniformsLib.normalmap,\r\n        UniformsLib.displacementmap,\r\n        {\r\n          opacity: {\r\n            value: 1.0,\r\n          },\r\n        },\r\n      ]),\r\n      vertexShader: ShaderChunk.normal_vert,\r\n      fragmentShader: ShaderChunk.normal_frag,\r\n    },\r\n    sprite: {\r\n      uniforms: mergeUniforms([UniformsLib.sprite, UniformsLib.fog]),\r\n      vertexShader: ShaderChunk.sprite_vert,\r\n      fragmentShader: ShaderChunk.sprite_frag,\r\n    },\r\n    background: {\r\n      uniforms: {\r\n        uvTransform: {\r\n          value: new Matrix3(),\r\n        },\r\n        t2D: {\r\n          value: null,\r\n        },\r\n      },\r\n      vertexShader: ShaderChunk.background_vert,\r\n      fragmentShader: ShaderChunk.background_frag,\r\n    },\r\n\r\n    /* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n    cube: {\r\n      uniforms: mergeUniforms([\r\n        UniformsLib.envmap,\r\n        {\r\n          opacity: {\r\n            value: 1.0,\r\n          },\r\n        },\r\n      ]),\r\n      vertexShader: ShaderChunk.cube_vert,\r\n      fragmentShader: ShaderChunk.cube_frag,\r\n    },\r\n    equirect: {\r\n      uniforms: {\r\n        tEquirect: {\r\n          value: null,\r\n        },\r\n      },\r\n      vertexShader: ShaderChunk.equirect_vert,\r\n      fragmentShader: ShaderChunk.equirect_frag,\r\n    },\r\n    distanceRGBA: {\r\n      uniforms: mergeUniforms([\r\n        UniformsLib.common,\r\n        UniformsLib.displacementmap,\r\n        {\r\n          referencePosition: {\r\n            value: new Vector3(),\r\n          },\r\n          nearDistance: {\r\n            value: 1,\r\n          },\r\n          farDistance: {\r\n            value: 1000,\r\n          },\r\n        },\r\n      ]),\r\n      vertexShader: ShaderChunk.distanceRGBA_vert,\r\n      fragmentShader: ShaderChunk.distanceRGBA_frag,\r\n    },\r\n    shadow: {\r\n      uniforms: mergeUniforms([\r\n        UniformsLib.lights,\r\n        UniformsLib.fog,\r\n        {\r\n          color: {\r\n            value: new Color(0x00000),\r\n          },\r\n          opacity: {\r\n            value: 1.0,\r\n          },\r\n        },\r\n      ]),\r\n      vertexShader: ShaderChunk.shadow_vert,\r\n      fragmentShader: ShaderChunk.shadow_frag,\r\n    },\r\n  };\r\n  ShaderLib.physical = {\r\n    uniforms: mergeUniforms([\r\n      ShaderLib.standard.uniforms,\r\n      {\r\n        clearcoat: {\r\n          value: 0,\r\n        },\r\n        clearcoatMap: {\r\n          value: null,\r\n        },\r\n        clearcoatRoughness: {\r\n          value: 0,\r\n        },\r\n        clearcoatRoughnessMap: {\r\n          value: null,\r\n        },\r\n        clearcoatNormalScale: {\r\n          value: new Vector2(1, 1),\r\n        },\r\n        clearcoatNormalMap: {\r\n          value: null,\r\n        },\r\n        sheen: {\r\n          value: new Color(0x000000),\r\n        },\r\n        transmission: {\r\n          value: 0,\r\n        },\r\n        transmissionMap: {\r\n          value: null,\r\n        },\r\n        transmissionSamplerSize: {\r\n          value: new Vector2(),\r\n        },\r\n        transmissionSamplerMap: {\r\n          value: null,\r\n        },\r\n        thickness: {\r\n          value: 0,\r\n        },\r\n        thicknessMap: {\r\n          value: null,\r\n        },\r\n        attenuationDistance: {\r\n          value: 0,\r\n        },\r\n        attenuationColor: {\r\n          value: new Color(0x000000),\r\n        },\r\n      },\r\n    ]),\r\n    vertexShader: ShaderChunk.meshphysical_vert,\r\n    fragmentShader: ShaderChunk.meshphysical_frag,\r\n  };\r\n\r\n  function WebGLBackground(renderer, cubemaps, state, objects, premultipliedAlpha) {\r\n    const clearColor = new Color(0x000000);\r\n    let clearAlpha = 0;\r\n    let planeMesh;\r\n    let boxMesh;\r\n    let currentBackground = null;\r\n    let currentBackgroundVersion = 0;\r\n    let currentTonemapping = null;\r\n\r\n    function render(renderList, scene) {\r\n      let forceClear = false;\r\n      let background = scene.isScene === true ? scene.background : null;\r\n\r\n      if (background && background.isTexture) {\r\n        background = cubemaps.get(background);\r\n      } // Ignore background in AR\r\n      // TODO: Reconsider this.\r\n\r\n      const xr = renderer.xr;\r\n      const session = xr.getSession && xr.getSession();\r\n\r\n      if (session && session.environmentBlendMode === 'additive') {\r\n        background = null;\r\n      }\r\n\r\n      if (background === null) {\r\n        setClear(clearColor, clearAlpha);\r\n      } else if (background && background.isColor) {\r\n        setClear(background, 1);\r\n        forceClear = true;\r\n      }\r\n\r\n      if (renderer.autoClear || forceClear) {\r\n        renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\r\n      }\r\n\r\n      if (\r\n        background &&\r\n        (background.isCubeTexture || background.mapping === CubeUVReflectionMapping)\r\n      ) {\r\n        if (boxMesh === undefined) {\r\n          boxMesh = new Mesh(\r\n            new BoxGeometry(1, 1, 1),\r\n            new ShaderMaterial({\r\n              name: 'BackgroundCubeMaterial',\r\n              uniforms: cloneUniforms(ShaderLib.cube.uniforms),\r\n              vertexShader: ShaderLib.cube.vertexShader,\r\n              fragmentShader: ShaderLib.cube.fragmentShader,\r\n              side: BackSide,\r\n              depthTest: false,\r\n              depthWrite: false,\r\n              fog: false,\r\n            }),\r\n          );\r\n          boxMesh.geometry.deleteAttribute('normal');\r\n          boxMesh.geometry.deleteAttribute('uv');\r\n\r\n          boxMesh.onBeforeRender = function (renderer, scene, camera) {\r\n            this.matrixWorld.copyPosition(camera.matrixWorld);\r\n          }; // enable code injection for non-built-in material\r\n\r\n          Object.defineProperty(boxMesh.material, 'envMap', {\r\n            get: function () {\r\n              return this.uniforms.envMap.value;\r\n            },\r\n          });\r\n          objects.update(boxMesh);\r\n        }\r\n\r\n        boxMesh.material.uniforms.envMap.value = background;\r\n        boxMesh.material.uniforms.flipEnvMap.value =\r\n          background.isCubeTexture && background._needsFlipEnvMap ? -1 : 1;\r\n\r\n        if (\r\n          currentBackground !== background ||\r\n          currentBackgroundVersion !== background.version ||\r\n          currentTonemapping !== renderer.toneMapping\r\n        ) {\r\n          boxMesh.material.needsUpdate = true;\r\n          currentBackground = background;\r\n          currentBackgroundVersion = background.version;\r\n          currentTonemapping = renderer.toneMapping;\r\n        } // push to the pre-sorted opaque render list\r\n\r\n        renderList.unshift(boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null);\r\n      } else if (background && background.isTexture) {\r\n        if (planeMesh === undefined) {\r\n          planeMesh = new Mesh(\r\n            new PlaneGeometry(2, 2),\r\n            new ShaderMaterial({\r\n              name: 'BackgroundMaterial',\r\n              uniforms: cloneUniforms(ShaderLib.background.uniforms),\r\n              vertexShader: ShaderLib.background.vertexShader,\r\n              fragmentShader: ShaderLib.background.fragmentShader,\r\n              side: FrontSide,\r\n              depthTest: false,\r\n              depthWrite: false,\r\n              fog: false,\r\n            }),\r\n          );\r\n          planeMesh.geometry.deleteAttribute('normal'); // enable code injection for non-built-in material\r\n\r\n          Object.defineProperty(planeMesh.material, 'map', {\r\n            get: function () {\r\n              return this.uniforms.t2D.value;\r\n            },\r\n          });\r\n          objects.update(planeMesh);\r\n        }\r\n\r\n        planeMesh.material.uniforms.t2D.value = background;\r\n\r\n        if (background.matrixAutoUpdate === true) {\r\n          background.updateMatrix();\r\n        }\r\n\r\n        planeMesh.material.uniforms.uvTransform.value.copy(background.matrix);\r\n\r\n        if (\r\n          currentBackground !== background ||\r\n          currentBackgroundVersion !== background.version ||\r\n          currentTonemapping !== renderer.toneMapping\r\n        ) {\r\n          planeMesh.material.needsUpdate = true;\r\n          currentBackground = background;\r\n          currentBackgroundVersion = background.version;\r\n          currentTonemapping = renderer.toneMapping;\r\n        } // push to the pre-sorted opaque render list\r\n\r\n        renderList.unshift(planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null);\r\n      }\r\n    }\r\n\r\n    function setClear(color, alpha) {\r\n      state.buffers.color.setClear(color.r, color.g, color.b, alpha, premultipliedAlpha);\r\n    }\r\n\r\n    return {\r\n      getClearColor: function () {\r\n        return clearColor;\r\n      },\r\n      setClearColor: function (color, alpha = 1) {\r\n        clearColor.set(color);\r\n        clearAlpha = alpha;\r\n        setClear(clearColor, clearAlpha);\r\n      },\r\n      getClearAlpha: function () {\r\n        return clearAlpha;\r\n      },\r\n      setClearAlpha: function (alpha) {\r\n        clearAlpha = alpha;\r\n        setClear(clearColor, clearAlpha);\r\n      },\r\n      render: render,\r\n    };\r\n  }\r\n\r\n  function WebGLBindingStates(gl, extensions, attributes, capabilities) {\r\n    const maxVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\r\n    const extension = capabilities.isWebGL2 ? null : extensions.get('OES_vertex_array_object');\r\n    const vaoAvailable = capabilities.isWebGL2 || extension !== null;\r\n    const bindingStates = {};\r\n    const defaultState = createBindingState(null);\r\n    let currentState = defaultState;\r\n\r\n    function setup(object, material, program, geometry, index) {\r\n      let updateBuffers = false;\r\n\r\n      if (vaoAvailable) {\r\n        const state = getBindingState(geometry, program, material);\r\n\r\n        if (currentState !== state) {\r\n          currentState = state;\r\n          bindVertexArrayObject(currentState.object);\r\n        }\r\n\r\n        updateBuffers = needsUpdate(geometry, index);\r\n        if (updateBuffers) saveCache(geometry, index);\r\n      } else {\r\n        const wireframe = material.wireframe === true;\r\n\r\n        if (\r\n          currentState.geometry !== geometry.id ||\r\n          currentState.program !== program.id ||\r\n          currentState.wireframe !== wireframe\r\n        ) {\r\n          currentState.geometry = geometry.id;\r\n          currentState.program = program.id;\r\n          currentState.wireframe = wireframe;\r\n          updateBuffers = true;\r\n        }\r\n      }\r\n\r\n      if (object.isInstancedMesh === true) {\r\n        updateBuffers = true;\r\n      }\r\n\r\n      if (index !== null) {\r\n        attributes.update(index, gl.ELEMENT_ARRAY_BUFFER);\r\n      }\r\n\r\n      if (updateBuffers) {\r\n        setupVertexAttributes(object, material, program, geometry);\r\n\r\n        if (index !== null) {\r\n          gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, attributes.get(index).buffer);\r\n        }\r\n      }\r\n    }\r\n\r\n    function createVertexArrayObject() {\r\n      if (capabilities.isWebGL2) return gl.createVertexArray();\r\n      return extension.createVertexArrayOES();\r\n    }\r\n\r\n    function bindVertexArrayObject(vao) {\r\n      if (capabilities.isWebGL2) return gl.bindVertexArray(vao);\r\n      return extension.bindVertexArrayOES(vao);\r\n    }\r\n\r\n    function deleteVertexArrayObject(vao) {\r\n      if (capabilities.isWebGL2) return gl.deleteVertexArray(vao);\r\n      return extension.deleteVertexArrayOES(vao);\r\n    }\r\n\r\n    function getBindingState(geometry, program, material) {\r\n      const wireframe = material.wireframe === true;\r\n      let programMap = bindingStates[geometry.id];\r\n\r\n      if (programMap === undefined) {\r\n        programMap = {};\r\n        bindingStates[geometry.id] = programMap;\r\n      }\r\n\r\n      let stateMap = programMap[program.id];\r\n\r\n      if (stateMap === undefined) {\r\n        stateMap = {};\r\n        programMap[program.id] = stateMap;\r\n      }\r\n\r\n      let state = stateMap[wireframe];\r\n\r\n      if (state === undefined) {\r\n        state = createBindingState(createVertexArrayObject());\r\n        stateMap[wireframe] = state;\r\n      }\r\n\r\n      return state;\r\n    }\r\n\r\n    function createBindingState(vao) {\r\n      const newAttributes = [];\r\n      const enabledAttributes = [];\r\n      const attributeDivisors = [];\r\n\r\n      for (let i = 0; i < maxVertexAttributes; i++) {\r\n        newAttributes[i] = 0;\r\n        enabledAttributes[i] = 0;\r\n        attributeDivisors[i] = 0;\r\n      }\r\n\r\n      return {\r\n        // for backward compatibility on non-VAO support browser\r\n        geometry: null,\r\n        program: null,\r\n        wireframe: false,\r\n        newAttributes: newAttributes,\r\n        enabledAttributes: enabledAttributes,\r\n        attributeDivisors: attributeDivisors,\r\n        object: vao,\r\n        attributes: {},\r\n        index: null,\r\n      };\r\n    }\r\n\r\n    function needsUpdate(geometry, index) {\r\n      const cachedAttributes = currentState.attributes;\r\n      const geometryAttributes = geometry.attributes;\r\n      let attributesNum = 0;\r\n\r\n      for (const key in geometryAttributes) {\r\n        const cachedAttribute = cachedAttributes[key];\r\n        const geometryAttribute = geometryAttributes[key];\r\n        if (cachedAttribute === undefined) return true;\r\n        if (cachedAttribute.attribute !== geometryAttribute) return true;\r\n        if (cachedAttribute.data !== geometryAttribute.data) return true;\r\n        attributesNum++;\r\n      }\r\n\r\n      if (currentState.attributesNum !== attributesNum) return true;\r\n      if (currentState.index !== index) return true;\r\n      return false;\r\n    }\r\n\r\n    function saveCache(geometry, index) {\r\n      const cache = {};\r\n      const attributes = geometry.attributes;\r\n      let attributesNum = 0;\r\n\r\n      for (const key in attributes) {\r\n        const attribute = attributes[key];\r\n        const data = {};\r\n        data.attribute = attribute;\r\n\r\n        if (attribute.data) {\r\n          data.data = attribute.data;\r\n        }\r\n\r\n        cache[key] = data;\r\n        attributesNum++;\r\n      }\r\n\r\n      currentState.attributes = cache;\r\n      currentState.attributesNum = attributesNum;\r\n      currentState.index = index;\r\n    }\r\n\r\n    function initAttributes() {\r\n      const newAttributes = currentState.newAttributes;\r\n\r\n      for (let i = 0, il = newAttributes.length; i < il; i++) {\r\n        newAttributes[i] = 0;\r\n      }\r\n    }\r\n\r\n    function enableAttribute(attribute) {\r\n      enableAttributeAndDivisor(attribute, 0);\r\n    }\r\n\r\n    function enableAttributeAndDivisor(attribute, meshPerAttribute) {\r\n      const newAttributes = currentState.newAttributes;\r\n      const enabledAttributes = currentState.enabledAttributes;\r\n      const attributeDivisors = currentState.attributeDivisors;\r\n      newAttributes[attribute] = 1;\r\n\r\n      if (enabledAttributes[attribute] === 0) {\r\n        gl.enableVertexAttribArray(attribute);\r\n        enabledAttributes[attribute] = 1;\r\n      }\r\n\r\n      if (attributeDivisors[attribute] !== meshPerAttribute) {\r\n        const extension = capabilities.isWebGL2 ? gl : extensions.get('ANGLE_instanced_arrays');\r\n        extension[capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](\r\n          attribute,\r\n          meshPerAttribute,\r\n        );\r\n        attributeDivisors[attribute] = meshPerAttribute;\r\n      }\r\n    }\r\n\r\n    function disableUnusedAttributes() {\r\n      const newAttributes = currentState.newAttributes;\r\n      const enabledAttributes = currentState.enabledAttributes;\r\n\r\n      for (let i = 0, il = enabledAttributes.length; i < il; i++) {\r\n        if (enabledAttributes[i] !== newAttributes[i]) {\r\n          gl.disableVertexAttribArray(i);\r\n          enabledAttributes[i] = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    function vertexAttribPointer(index, size, type, normalized, stride, offset) {\r\n      if (capabilities.isWebGL2 === true && (type === gl.INT || type === gl.UNSIGNED_INT)) {\r\n        gl.vertexAttribIPointer(index, size, type, stride, offset);\r\n      } else {\r\n        gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\r\n      }\r\n    }\r\n\r\n    function setupVertexAttributes(object, material, program, geometry) {\r\n      if (\r\n        capabilities.isWebGL2 === false &&\r\n        (object.isInstancedMesh || geometry.isInstancedBufferGeometry)\r\n      ) {\r\n        if (extensions.get('ANGLE_instanced_arrays') === null) return;\r\n      }\r\n\r\n      initAttributes();\r\n      const geometryAttributes = geometry.attributes;\r\n      const programAttributes = program.getAttributes();\r\n      const materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n      for (const name in programAttributes) {\r\n        const programAttribute = programAttributes[name];\r\n\r\n        if (programAttribute >= 0) {\r\n          const geometryAttribute = geometryAttributes[name];\r\n\r\n          if (geometryAttribute !== undefined) {\r\n            const normalized = geometryAttribute.normalized;\r\n            const size = geometryAttribute.itemSize;\r\n            const attribute = attributes.get(geometryAttribute); // TODO Attribute may not be available on context restore\r\n\r\n            if (attribute === undefined) continue;\r\n            const buffer = attribute.buffer;\r\n            const type = attribute.type;\r\n            const bytesPerElement = attribute.bytesPerElement;\r\n\r\n            if (geometryAttribute.isInterleavedBufferAttribute) {\r\n              const data = geometryAttribute.data;\r\n              const stride = data.stride;\r\n              const offset = geometryAttribute.offset;\r\n\r\n              if (data && data.isInstancedInterleavedBuffer) {\r\n                enableAttributeAndDivisor(programAttribute, data.meshPerAttribute);\r\n\r\n                if (geometry._maxInstanceCount === undefined) {\r\n                  geometry._maxInstanceCount = data.meshPerAttribute * data.count;\r\n                }\r\n              } else {\r\n                enableAttribute(programAttribute);\r\n              }\r\n\r\n              gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n              vertexAttribPointer(\r\n                programAttribute,\r\n                size,\r\n                type,\r\n                normalized,\r\n                stride * bytesPerElement,\r\n                offset * bytesPerElement,\r\n              );\r\n            } else {\r\n              if (geometryAttribute.isInstancedBufferAttribute) {\r\n                enableAttributeAndDivisor(programAttribute, geometryAttribute.meshPerAttribute);\r\n\r\n                if (geometry._maxInstanceCount === undefined) {\r\n                  geometry._maxInstanceCount =\r\n                    geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n                }\r\n              } else {\r\n                enableAttribute(programAttribute);\r\n              }\r\n\r\n              gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n              vertexAttribPointer(programAttribute, size, type, normalized, 0, 0);\r\n            }\r\n          } else if (name === 'instanceMatrix') {\r\n            const attribute = attributes.get(object.instanceMatrix); // TODO Attribute may not be available on context restore\r\n\r\n            if (attribute === undefined) continue;\r\n            const buffer = attribute.buffer;\r\n            const type = attribute.type;\r\n            enableAttributeAndDivisor(programAttribute + 0, 1);\r\n            enableAttributeAndDivisor(programAttribute + 1, 1);\r\n            enableAttributeAndDivisor(programAttribute + 2, 1);\r\n            enableAttributeAndDivisor(programAttribute + 3, 1);\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n            gl.vertexAttribPointer(programAttribute + 0, 4, type, false, 64, 0);\r\n            gl.vertexAttribPointer(programAttribute + 1, 4, type, false, 64, 16);\r\n            gl.vertexAttribPointer(programAttribute + 2, 4, type, false, 64, 32);\r\n            gl.vertexAttribPointer(programAttribute + 3, 4, type, false, 64, 48);\r\n          } else if (name === 'instanceColor') {\r\n            const attribute = attributes.get(object.instanceColor); // TODO Attribute may not be available on context restore\r\n\r\n            if (attribute === undefined) continue;\r\n            const buffer = attribute.buffer;\r\n            const type = attribute.type;\r\n            enableAttributeAndDivisor(programAttribute, 1);\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n            gl.vertexAttribPointer(programAttribute, 3, type, false, 12, 0);\r\n          } else if (materialDefaultAttributeValues !== undefined) {\r\n            const value = materialDefaultAttributeValues[name];\r\n\r\n            if (value !== undefined) {\r\n              switch (value.length) {\r\n                case 2:\r\n                  gl.vertexAttrib2fv(programAttribute, value);\r\n                  break;\r\n\r\n                case 3:\r\n                  gl.vertexAttrib3fv(programAttribute, value);\r\n                  break;\r\n\r\n                case 4:\r\n                  gl.vertexAttrib4fv(programAttribute, value);\r\n                  break;\r\n\r\n                default:\r\n                  gl.vertexAttrib1fv(programAttribute, value);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      disableUnusedAttributes();\r\n    }\r\n\r\n    function dispose() {\r\n      reset();\r\n\r\n      for (const geometryId in bindingStates) {\r\n        const programMap = bindingStates[geometryId];\r\n\r\n        for (const programId in programMap) {\r\n          const stateMap = programMap[programId];\r\n\r\n          for (const wireframe in stateMap) {\r\n            deleteVertexArrayObject(stateMap[wireframe].object);\r\n            delete stateMap[wireframe];\r\n          }\r\n\r\n          delete programMap[programId];\r\n        }\r\n\r\n        delete bindingStates[geometryId];\r\n      }\r\n    }\r\n\r\n    function releaseStatesOfGeometry(geometry) {\r\n      if (bindingStates[geometry.id] === undefined) return;\r\n      const programMap = bindingStates[geometry.id];\r\n\r\n      for (const programId in programMap) {\r\n        const stateMap = programMap[programId];\r\n\r\n        for (const wireframe in stateMap) {\r\n          deleteVertexArrayObject(stateMap[wireframe].object);\r\n          delete stateMap[wireframe];\r\n        }\r\n\r\n        delete programMap[programId];\r\n      }\r\n\r\n      delete bindingStates[geometry.id];\r\n    }\r\n\r\n    function releaseStatesOfProgram(program) {\r\n      for (const geometryId in bindingStates) {\r\n        const programMap = bindingStates[geometryId];\r\n        if (programMap[program.id] === undefined) continue;\r\n        const stateMap = programMap[program.id];\r\n\r\n        for (const wireframe in stateMap) {\r\n          deleteVertexArrayObject(stateMap[wireframe].object);\r\n          delete stateMap[wireframe];\r\n        }\r\n\r\n        delete programMap[program.id];\r\n      }\r\n    }\r\n\r\n    function reset() {\r\n      resetDefaultState();\r\n      if (currentState === defaultState) return;\r\n      currentState = defaultState;\r\n      bindVertexArrayObject(currentState.object);\r\n    } // for backward-compatilibity\r\n\r\n    function resetDefaultState() {\r\n      defaultState.geometry = null;\r\n      defaultState.program = null;\r\n      defaultState.wireframe = false;\r\n    }\r\n\r\n    return {\r\n      setup: setup,\r\n      reset: reset,\r\n      resetDefaultState: resetDefaultState,\r\n      dispose: dispose,\r\n      releaseStatesOfGeometry: releaseStatesOfGeometry,\r\n      releaseStatesOfProgram: releaseStatesOfProgram,\r\n      initAttributes: initAttributes,\r\n      enableAttribute: enableAttribute,\r\n      disableUnusedAttributes: disableUnusedAttributes,\r\n    };\r\n  }\r\n\r\n  function WebGLBufferRenderer(gl, extensions, info, capabilities) {\r\n    const isWebGL2 = capabilities.isWebGL2;\r\n    let mode;\r\n\r\n    function setMode(value) {\r\n      mode = value;\r\n    }\r\n\r\n    function render(start, count) {\r\n      gl.drawArrays(mode, start, count);\r\n      info.update(count, mode, 1);\r\n    }\r\n\r\n    function renderInstances(start, count, primcount) {\r\n      if (primcount === 0) return;\r\n      let extension, methodName;\r\n\r\n      if (isWebGL2) {\r\n        extension = gl;\r\n        methodName = 'drawArraysInstanced';\r\n      } else {\r\n        extension = extensions.get('ANGLE_instanced_arrays');\r\n        methodName = 'drawArraysInstancedANGLE';\r\n\r\n        if (extension === null) {\r\n          console.error(\r\n            'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.',\r\n          );\r\n          return;\r\n        }\r\n      }\r\n\r\n      extension[methodName](mode, start, count, primcount);\r\n      info.update(count, mode, primcount);\r\n    } //\r\n\r\n    this.setMode = setMode;\r\n    this.render = render;\r\n    this.renderInstances = renderInstances;\r\n  }\r\n\r\n  function WebGLCapabilities(gl, extensions, parameters) {\r\n    let maxAnisotropy;\r\n\r\n    function getMaxAnisotropy() {\r\n      if (maxAnisotropy !== undefined) return maxAnisotropy;\r\n\r\n      if (extensions.has('EXT_texture_filter_anisotropic') === true) {\r\n        const extension = extensions.get('EXT_texture_filter_anisotropic');\r\n        maxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\r\n      } else {\r\n        maxAnisotropy = 0;\r\n      }\r\n\r\n      return maxAnisotropy;\r\n    }\r\n\r\n    function getMaxPrecision(precision) {\r\n      if (precision === 'highp') {\r\n        if (\r\n          gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 &&\r\n          gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0\r\n        ) {\r\n          return 'highp';\r\n        }\r\n\r\n        precision = 'mediump';\r\n      }\r\n\r\n      if (precision === 'mediump') {\r\n        if (\r\n          gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 &&\r\n          gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0\r\n        ) {\r\n          return 'mediump';\r\n        }\r\n      }\r\n\r\n      return 'lowp';\r\n    }\r\n    /* eslint-disable no-undef */\r\n\r\n    const isWebGL2 =\r\n      (typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext) ||\r\n      (typeof WebGL2ComputeRenderingContext !== 'undefined' &&\r\n        gl instanceof WebGL2ComputeRenderingContext);\r\n    /* eslint-enable no-undef */\r\n\r\n    let precision = parameters.precision !== undefined ? parameters.precision : 'highp';\r\n    const maxPrecision = getMaxPrecision(precision);\r\n\r\n    if (maxPrecision !== precision) {\r\n      console.warn(\r\n        'THREE.WebGLRenderer:',\r\n        precision,\r\n        'not supported, using',\r\n        maxPrecision,\r\n        'instead.',\r\n      );\r\n      precision = maxPrecision;\r\n    }\r\n\r\n    const drawBuffers = isWebGL2 || extensions.has('WEBGL_draw_buffers');\r\n    const logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\r\n    const maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\r\n    const maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\r\n    const maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n    const maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\r\n    const maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\r\n    const maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\r\n    const maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\r\n    const maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\r\n    const vertexTextures = maxVertexTextures > 0;\r\n    const floatFragmentTextures = isWebGL2 || extensions.has('OES_texture_float');\r\n    const floatVertexTextures = vertexTextures && floatFragmentTextures;\r\n    const maxSamples = isWebGL2 ? gl.getParameter(gl.MAX_SAMPLES) : 0;\r\n    return {\r\n      isWebGL2: isWebGL2,\r\n      drawBuffers: drawBuffers,\r\n      getMaxAnisotropy: getMaxAnisotropy,\r\n      getMaxPrecision: getMaxPrecision,\r\n      precision: precision,\r\n      logarithmicDepthBuffer: logarithmicDepthBuffer,\r\n      maxTextures: maxTextures,\r\n      maxVertexTextures: maxVertexTextures,\r\n      maxTextureSize: maxTextureSize,\r\n      maxCubemapSize: maxCubemapSize,\r\n      maxAttributes: maxAttributes,\r\n      maxVertexUniforms: maxVertexUniforms,\r\n      maxVaryings: maxVaryings,\r\n      maxFragmentUniforms: maxFragmentUniforms,\r\n      vertexTextures: vertexTextures,\r\n      floatFragmentTextures: floatFragmentTextures,\r\n      floatVertexTextures: floatVertexTextures,\r\n      maxSamples: maxSamples,\r\n    };\r\n  }\r\n\r\n  function WebGLClipping(properties) {\r\n    const scope = this;\r\n    let globalState = null,\r\n      numGlobalPlanes = 0,\r\n      localClippingEnabled = false,\r\n      renderingShadows = false;\r\n    const plane = new Plane(),\r\n      viewNormalMatrix = new Matrix3(),\r\n      uniform = {\r\n        value: null,\r\n        needsUpdate: false,\r\n      };\r\n    this.uniform = uniform;\r\n    this.numPlanes = 0;\r\n    this.numIntersection = 0;\r\n\r\n    this.init = function (planes, enableLocalClipping, camera) {\r\n      const enabled =\r\n        planes.length !== 0 ||\r\n        enableLocalClipping || // enable state of previous frame - the clipping code has to\r\n        // run another frame in order to reset the state:\r\n        numGlobalPlanes !== 0 ||\r\n        localClippingEnabled;\r\n      localClippingEnabled = enableLocalClipping;\r\n      globalState = projectPlanes(planes, camera, 0);\r\n      numGlobalPlanes = planes.length;\r\n      return enabled;\r\n    };\r\n\r\n    this.beginShadows = function () {\r\n      renderingShadows = true;\r\n      projectPlanes(null);\r\n    };\r\n\r\n    this.endShadows = function () {\r\n      renderingShadows = false;\r\n      resetGlobalState();\r\n    };\r\n\r\n    this.setState = function (material, camera, useCache) {\r\n      const planes = material.clippingPlanes,\r\n        clipIntersection = material.clipIntersection,\r\n        clipShadows = material.clipShadows;\r\n      const materialProperties = properties.get(material);\r\n\r\n      if (\r\n        !localClippingEnabled ||\r\n        planes === null ||\r\n        planes.length === 0 ||\r\n        (renderingShadows && !clipShadows)\r\n      ) {\r\n        // there's no local clipping\r\n        if (renderingShadows) {\r\n          // there's no global clipping\r\n          projectPlanes(null);\r\n        } else {\r\n          resetGlobalState();\r\n        }\r\n      } else {\r\n        const nGlobal = renderingShadows ? 0 : numGlobalPlanes,\r\n          lGlobal = nGlobal * 4;\r\n        let dstArray = materialProperties.clippingState || null;\r\n        uniform.value = dstArray; // ensure unique state\r\n\r\n        dstArray = projectPlanes(planes, camera, lGlobal, useCache);\r\n\r\n        for (let i = 0; i !== lGlobal; ++i) {\r\n          dstArray[i] = globalState[i];\r\n        }\r\n\r\n        materialProperties.clippingState = dstArray;\r\n        this.numIntersection = clipIntersection ? this.numPlanes : 0;\r\n        this.numPlanes += nGlobal;\r\n      }\r\n    };\r\n\r\n    function resetGlobalState() {\r\n      if (uniform.value !== globalState) {\r\n        uniform.value = globalState;\r\n        uniform.needsUpdate = numGlobalPlanes > 0;\r\n      }\r\n\r\n      scope.numPlanes = numGlobalPlanes;\r\n      scope.numIntersection = 0;\r\n    }\r\n\r\n    function projectPlanes(planes, camera, dstOffset, skipTransform) {\r\n      const nPlanes = planes !== null ? planes.length : 0;\r\n      let dstArray = null;\r\n\r\n      if (nPlanes !== 0) {\r\n        dstArray = uniform.value;\r\n\r\n        if (skipTransform !== true || dstArray === null) {\r\n          const flatSize = dstOffset + nPlanes * 4,\r\n            viewMatrix = camera.matrixWorldInverse;\r\n          viewNormalMatrix.getNormalMatrix(viewMatrix);\r\n\r\n          if (dstArray === null || dstArray.length < flatSize) {\r\n            dstArray = new Float32Array(flatSize);\r\n          }\r\n\r\n          for (let i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\r\n            plane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\r\n            plane.normal.toArray(dstArray, i4);\r\n            dstArray[i4 + 3] = plane.constant;\r\n          }\r\n        }\r\n\r\n        uniform.value = dstArray;\r\n        uniform.needsUpdate = true;\r\n      }\r\n\r\n      scope.numPlanes = nPlanes;\r\n      scope.numIntersection = 0;\r\n      return dstArray;\r\n    }\r\n  }\r\n\r\n  function WebGLCubeMaps(renderer) {\r\n    let cubemaps = new WeakMap();\r\n\r\n    function mapTextureMapping(texture, mapping) {\r\n      if (mapping === EquirectangularReflectionMapping) {\r\n        texture.mapping = CubeReflectionMapping;\r\n      } else if (mapping === EquirectangularRefractionMapping) {\r\n        texture.mapping = CubeRefractionMapping;\r\n      }\r\n\r\n      return texture;\r\n    }\r\n\r\n    function get(texture) {\r\n      if (texture && texture.isTexture) {\r\n        const mapping = texture.mapping;\r\n\r\n        if (\r\n          mapping === EquirectangularReflectionMapping ||\r\n          mapping === EquirectangularRefractionMapping\r\n        ) {\r\n          if (cubemaps.has(texture)) {\r\n            const cubemap = cubemaps.get(texture).texture;\r\n            return mapTextureMapping(cubemap, texture.mapping);\r\n          } else {\r\n            const image = texture.image;\r\n\r\n            if (image && image.height > 0) {\r\n              const currentRenderTarget = renderer.getRenderTarget();\r\n              const renderTarget = new WebGLCubeRenderTarget(image.height / 2);\r\n              renderTarget.fromEquirectangularTexture(renderer, texture);\r\n              cubemaps.set(texture, renderTarget);\r\n              renderer.setRenderTarget(currentRenderTarget);\r\n              texture.addEventListener('dispose', onTextureDispose);\r\n              return mapTextureMapping(renderTarget.texture, texture.mapping);\r\n            } else {\r\n              // image not yet ready. try the conversion next frame\r\n              return null;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return texture;\r\n    }\r\n\r\n    function onTextureDispose(event) {\r\n      const texture = event.target;\r\n      texture.removeEventListener('dispose', onTextureDispose);\r\n      const cubemap = cubemaps.get(texture);\r\n\r\n      if (cubemap !== undefined) {\r\n        cubemaps.delete(texture);\r\n        cubemap.dispose();\r\n      }\r\n    }\r\n\r\n    function dispose() {\r\n      cubemaps = new WeakMap();\r\n    }\r\n\r\n    return {\r\n      get: get,\r\n      dispose: dispose,\r\n    };\r\n  }\r\n\r\n  function WebGLExtensions(gl) {\r\n    const extensions = {};\r\n\r\n    function getExtension(name) {\r\n      if (extensions[name] !== undefined) {\r\n        return extensions[name];\r\n      }\r\n\r\n      let extension;\r\n\r\n      switch (name) {\r\n        case 'WEBGL_depth_texture':\r\n          extension =\r\n            gl.getExtension('WEBGL_depth_texture') ||\r\n            gl.getExtension('MOZ_WEBGL_depth_texture') ||\r\n            gl.getExtension('WEBKIT_WEBGL_depth_texture');\r\n          break;\r\n\r\n        case 'EXT_texture_filter_anisotropic':\r\n          extension =\r\n            gl.getExtension('EXT_texture_filter_anisotropic') ||\r\n            gl.getExtension('MOZ_EXT_texture_filter_anisotropic') ||\r\n            gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\r\n          break;\r\n\r\n        case 'WEBGL_compressed_texture_s3tc':\r\n          extension =\r\n            gl.getExtension('WEBGL_compressed_texture_s3tc') ||\r\n            gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') ||\r\n            gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\r\n          break;\r\n\r\n        case 'WEBGL_compressed_texture_pvrtc':\r\n          extension =\r\n            gl.getExtension('WEBGL_compressed_texture_pvrtc') ||\r\n            gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\r\n          break;\r\n\r\n        default:\r\n          extension = gl.getExtension(name);\r\n      }\r\n\r\n      extensions[name] = extension;\r\n      return extension;\r\n    }\r\n\r\n    return {\r\n      has: function (name) {\r\n        return getExtension(name) !== null;\r\n      },\r\n      init: function (capabilities) {\r\n        if (capabilities.isWebGL2) {\r\n          getExtension('EXT_color_buffer_float');\r\n        } else {\r\n          getExtension('WEBGL_depth_texture');\r\n          getExtension('OES_texture_float');\r\n          getExtension('OES_texture_half_float');\r\n          getExtension('OES_texture_half_float_linear');\r\n          getExtension('OES_standard_derivatives');\r\n          getExtension('OES_element_index_uint');\r\n          getExtension('OES_vertex_array_object');\r\n          getExtension('ANGLE_instanced_arrays');\r\n        }\r\n\r\n        getExtension('OES_texture_float_linear');\r\n        getExtension('EXT_color_buffer_half_float');\r\n      },\r\n      get: function (name) {\r\n        const extension = getExtension(name);\r\n\r\n        if (extension === null) {\r\n          console.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\r\n        }\r\n\r\n        return extension;\r\n      },\r\n    };\r\n  }\r\n\r\n  function WebGLGeometries(gl, attributes, info, bindingStates) {\r\n    const geometries = {};\r\n    const wireframeAttributes = new WeakMap();\r\n\r\n    function onGeometryDispose(event) {\r\n      const geometry = event.target;\r\n\r\n      if (geometry.index !== null) {\r\n        attributes.remove(geometry.index);\r\n      }\r\n\r\n      for (const name in geometry.attributes) {\r\n        attributes.remove(geometry.attributes[name]);\r\n      }\r\n\r\n      geometry.removeEventListener('dispose', onGeometryDispose);\r\n      delete geometries[geometry.id];\r\n      const attribute = wireframeAttributes.get(geometry);\r\n\r\n      if (attribute) {\r\n        attributes.remove(attribute);\r\n        wireframeAttributes.delete(geometry);\r\n      }\r\n\r\n      bindingStates.releaseStatesOfGeometry(geometry);\r\n\r\n      if (geometry.isInstancedBufferGeometry === true) {\r\n        delete geometry._maxInstanceCount;\r\n      } //\r\n\r\n      info.memory.geometries--;\r\n    }\r\n\r\n    function get(object, geometry) {\r\n      if (geometries[geometry.id] === true) return geometry;\r\n      geometry.addEventListener('dispose', onGeometryDispose);\r\n      geometries[geometry.id] = true;\r\n      info.memory.geometries++;\r\n      return geometry;\r\n    }\r\n\r\n    function update(geometry) {\r\n      const geometryAttributes = geometry.attributes; // Updating index buffer in VAO now. See WebGLBindingStates.\r\n\r\n      for (const name in geometryAttributes) {\r\n        attributes.update(geometryAttributes[name], gl.ARRAY_BUFFER);\r\n      } // morph targets\r\n\r\n      const morphAttributes = geometry.morphAttributes;\r\n\r\n      for (const name in morphAttributes) {\r\n        const array = morphAttributes[name];\r\n\r\n        for (let i = 0, l = array.length; i < l; i++) {\r\n          attributes.update(array[i], gl.ARRAY_BUFFER);\r\n        }\r\n      }\r\n    }\r\n\r\n    function updateWireframeAttribute(geometry) {\r\n      const indices = [];\r\n      const geometryIndex = geometry.index;\r\n      const geometryPosition = geometry.attributes.position;\r\n      let version = 0;\r\n\r\n      if (geometryIndex !== null) {\r\n        const array = geometryIndex.array;\r\n        version = geometryIndex.version;\r\n\r\n        for (let i = 0, l = array.length; i < l; i += 3) {\r\n          const a = array[i + 0];\r\n          const b = array[i + 1];\r\n          const c = array[i + 2];\r\n          indices.push(a, b, b, c, c, a);\r\n        }\r\n      } else {\r\n        const array = geometryPosition.array;\r\n        version = geometryPosition.version;\r\n\r\n        for (let i = 0, l = array.length / 3 - 1; i < l; i += 3) {\r\n          const a = i + 0;\r\n          const b = i + 1;\r\n          const c = i + 2;\r\n          indices.push(a, b, b, c, c, a);\r\n        }\r\n      }\r\n\r\n      const attribute = new (\r\n        arrayMax(indices) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute\r\n      )(indices, 1);\r\n      attribute.version = version; // Updating index buffer in VAO now. See WebGLBindingStates\r\n      //\r\n\r\n      const previousAttribute = wireframeAttributes.get(geometry);\r\n      if (previousAttribute) attributes.remove(previousAttribute); //\r\n\r\n      wireframeAttributes.set(geometry, attribute);\r\n    }\r\n\r\n    function getWireframeAttribute(geometry) {\r\n      const currentAttribute = wireframeAttributes.get(geometry);\r\n\r\n      if (currentAttribute) {\r\n        const geometryIndex = geometry.index;\r\n\r\n        if (geometryIndex !== null) {\r\n          // if the attribute is obsolete, create a new one\r\n          if (currentAttribute.version < geometryIndex.version) {\r\n            updateWireframeAttribute(geometry);\r\n          }\r\n        }\r\n      } else {\r\n        updateWireframeAttribute(geometry);\r\n      }\r\n\r\n      return wireframeAttributes.get(geometry);\r\n    }\r\n\r\n    return {\r\n      get: get,\r\n      update: update,\r\n      getWireframeAttribute: getWireframeAttribute,\r\n    };\r\n  }\r\n\r\n  function WebGLIndexedBufferRenderer(gl, extensions, info, capabilities) {\r\n    const isWebGL2 = capabilities.isWebGL2;\r\n    let mode;\r\n\r\n    function setMode(value) {\r\n      mode = value;\r\n    }\r\n\r\n    let type, bytesPerElement;\r\n\r\n    function setIndex(value) {\r\n      type = value.type;\r\n      bytesPerElement = value.bytesPerElement;\r\n    }\r\n\r\n    function render(start, count) {\r\n      gl.drawElements(mode, count, type, start * bytesPerElement);\r\n      info.update(count, mode, 1);\r\n    }\r\n\r\n    function renderInstances(start, count, primcount) {\r\n      if (primcount === 0) return;\r\n      let extension, methodName;\r\n\r\n      if (isWebGL2) {\r\n        extension = gl;\r\n        methodName = 'drawElementsInstanced';\r\n      } else {\r\n        extension = extensions.get('ANGLE_instanced_arrays');\r\n        methodName = 'drawElementsInstancedANGLE';\r\n\r\n        if (extension === null) {\r\n          console.error(\r\n            'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.',\r\n          );\r\n          return;\r\n        }\r\n      }\r\n\r\n      extension[methodName](mode, count, type, start * bytesPerElement, primcount);\r\n      info.update(count, mode, primcount);\r\n    } //\r\n\r\n    this.setMode = setMode;\r\n    this.setIndex = setIndex;\r\n    this.render = render;\r\n    this.renderInstances = renderInstances;\r\n  }\r\n\r\n  function WebGLInfo(gl) {\r\n    const memory = {\r\n      geometries: 0,\r\n      textures: 0,\r\n    };\r\n    const render = {\r\n      frame: 0,\r\n      calls: 0,\r\n      triangles: 0,\r\n      points: 0,\r\n      lines: 0,\r\n    };\r\n\r\n    function update(count, mode, instanceCount) {\r\n      render.calls++;\r\n\r\n      switch (mode) {\r\n        case gl.TRIANGLES:\r\n          render.triangles += instanceCount * (count / 3);\r\n          break;\r\n\r\n        case gl.LINES:\r\n          render.lines += instanceCount * (count / 2);\r\n          break;\r\n\r\n        case gl.LINE_STRIP:\r\n          render.lines += instanceCount * (count - 1);\r\n          break;\r\n\r\n        case gl.LINE_LOOP:\r\n          render.lines += instanceCount * count;\r\n          break;\r\n\r\n        case gl.POINTS:\r\n          render.points += instanceCount * count;\r\n          break;\r\n\r\n        default:\r\n          console.error('THREE.WebGLInfo: Unknown draw mode:', mode);\r\n          break;\r\n      }\r\n    }\r\n\r\n    function reset() {\r\n      render.frame++;\r\n      render.calls = 0;\r\n      render.triangles = 0;\r\n      render.points = 0;\r\n      render.lines = 0;\r\n    }\r\n\r\n    return {\r\n      memory: memory,\r\n      render: render,\r\n      programs: null,\r\n      autoReset: true,\r\n      reset: reset,\r\n      update: update,\r\n    };\r\n  }\r\n\r\n  function numericalSort(a, b) {\r\n    return a[0] - b[0];\r\n  }\r\n\r\n  function absNumericalSort(a, b) {\r\n    return Math.abs(b[1]) - Math.abs(a[1]);\r\n  }\r\n\r\n  function WebGLMorphtargets(gl) {\r\n    const influencesList = {};\r\n    const morphInfluences = new Float32Array(8);\r\n    const workInfluences = [];\r\n\r\n    for (let i = 0; i < 8; i++) {\r\n      workInfluences[i] = [i, 0];\r\n    }\r\n\r\n    function update(object, geometry, material, program) {\r\n      const objectInfluences = object.morphTargetInfluences; // When object doesn't have morph target influences defined, we treat it as a 0-length array\r\n      // This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\r\n\r\n      const length = objectInfluences === undefined ? 0 : objectInfluences.length;\r\n      let influences = influencesList[geometry.id];\r\n\r\n      if (influences === undefined) {\r\n        // initialise list\r\n        influences = [];\r\n\r\n        for (let i = 0; i < length; i++) {\r\n          influences[i] = [i, 0];\r\n        }\r\n\r\n        influencesList[geometry.id] = influences;\r\n      } // Collect influences\r\n\r\n      for (let i = 0; i < length; i++) {\r\n        const influence = influences[i];\r\n        influence[0] = i;\r\n        influence[1] = objectInfluences[i];\r\n      }\r\n\r\n      influences.sort(absNumericalSort);\r\n\r\n      for (let i = 0; i < 8; i++) {\r\n        if (i < length && influences[i][1]) {\r\n          workInfluences[i][0] = influences[i][0];\r\n          workInfluences[i][1] = influences[i][1];\r\n        } else {\r\n          workInfluences[i][0] = Number.MAX_SAFE_INTEGER;\r\n          workInfluences[i][1] = 0;\r\n        }\r\n      }\r\n\r\n      workInfluences.sort(numericalSort);\r\n      const morphTargets = material.morphTargets && geometry.morphAttributes.position;\r\n      const morphNormals = material.morphNormals && geometry.morphAttributes.normal;\r\n      let morphInfluencesSum = 0;\r\n\r\n      for (let i = 0; i < 8; i++) {\r\n        const influence = workInfluences[i];\r\n        const index = influence[0];\r\n        const value = influence[1];\r\n\r\n        if (index !== Number.MAX_SAFE_INTEGER && value) {\r\n          if (morphTargets && geometry.getAttribute('morphTarget' + i) !== morphTargets[index]) {\r\n            geometry.setAttribute('morphTarget' + i, morphTargets[index]);\r\n          }\r\n\r\n          if (morphNormals && geometry.getAttribute('morphNormal' + i) !== morphNormals[index]) {\r\n            geometry.setAttribute('morphNormal' + i, morphNormals[index]);\r\n          }\r\n\r\n          morphInfluences[i] = value;\r\n          morphInfluencesSum += value;\r\n        } else {\r\n          if (morphTargets && geometry.hasAttribute('morphTarget' + i) === true) {\r\n            geometry.deleteAttribute('morphTarget' + i);\r\n          }\r\n\r\n          if (morphNormals && geometry.hasAttribute('morphNormal' + i) === true) {\r\n            geometry.deleteAttribute('morphNormal' + i);\r\n          }\r\n\r\n          morphInfluences[i] = 0;\r\n        }\r\n      } // GLSL shader uses formula baseinfluence * base + sum(target * influence)\r\n      // This allows us to switch between absolute morphs and relative morphs without changing shader code\r\n      // When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\r\n\r\n      const morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\r\n      program.getUniforms().setValue(gl, 'morphTargetBaseInfluence', morphBaseInfluence);\r\n      program.getUniforms().setValue(gl, 'morphTargetInfluences', morphInfluences);\r\n    }\r\n\r\n    return {\r\n      update: update,\r\n    };\r\n  }\r\n\r\n  function WebGLObjects(gl, geometries, attributes, info) {\r\n    let updateMap = new WeakMap();\r\n\r\n    function update(object) {\r\n      const frame = info.render.frame;\r\n      const geometry = object.geometry;\r\n      const buffergeometry = geometries.get(object, geometry); // Update once per frame\r\n\r\n      if (updateMap.get(buffergeometry) !== frame) {\r\n        geometries.update(buffergeometry);\r\n        updateMap.set(buffergeometry, frame);\r\n      }\r\n\r\n      if (object.isInstancedMesh) {\r\n        if (object.hasEventListener('dispose', onInstancedMeshDispose) === false) {\r\n          object.addEventListener('dispose', onInstancedMeshDispose);\r\n        }\r\n\r\n        attributes.update(object.instanceMatrix, gl.ARRAY_BUFFER);\r\n\r\n        if (object.instanceColor !== null) {\r\n          attributes.update(object.instanceColor, gl.ARRAY_BUFFER);\r\n        }\r\n      }\r\n\r\n      return buffergeometry;\r\n    }\r\n\r\n    function dispose() {\r\n      updateMap = new WeakMap();\r\n    }\r\n\r\n    function onInstancedMeshDispose(event) {\r\n      const instancedMesh = event.target;\r\n      instancedMesh.removeEventListener('dispose', onInstancedMeshDispose);\r\n      attributes.remove(instancedMesh.instanceMatrix);\r\n      if (instancedMesh.instanceColor !== null) attributes.remove(instancedMesh.instanceColor);\r\n    }\r\n\r\n    return {\r\n      update: update,\r\n      dispose: dispose,\r\n    };\r\n  }\r\n\r\n  class DataTexture2DArray extends Texture {\r\n    constructor(data = null, width = 1, height = 1, depth = 1) {\r\n      super(null);\r\n      this.image = {\r\n        data,\r\n        width,\r\n        height,\r\n        depth,\r\n      };\r\n      this.magFilter = NearestFilter;\r\n      this.minFilter = NearestFilter;\r\n      this.wrapR = ClampToEdgeWrapping;\r\n      this.generateMipmaps = false;\r\n      this.flipY = false;\r\n      this.unpackAlignment = 1;\r\n      this.needsUpdate = true;\r\n    }\r\n  }\r\n\r\n  DataTexture2DArray.prototype.isDataTexture2DArray = true;\r\n\r\n  class DataTexture3D extends Texture {\r\n    constructor(data = null, width = 1, height = 1, depth = 1) {\r\n      // We're going to add .setXXX() methods for setting properties later.\r\n      // Users can still set in DataTexture3D directly.\r\n      //\r\n      //\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\r\n      // \ttexture.anisotropy = 16;\r\n      //\r\n      // See #14839\r\n      super(null);\r\n      this.image = {\r\n        data,\r\n        width,\r\n        height,\r\n        depth,\r\n      };\r\n      this.magFilter = NearestFilter;\r\n      this.minFilter = NearestFilter;\r\n      this.wrapR = ClampToEdgeWrapping;\r\n      this.generateMipmaps = false;\r\n      this.flipY = false;\r\n      this.unpackAlignment = 1;\r\n      this.needsUpdate = true;\r\n    }\r\n  }\r\n\r\n  DataTexture3D.prototype.isDataTexture3D = true;\r\n\r\n  /**\r\n   * Uniforms of a program.\r\n   * Those form a tree structure with a special top-level container for the root,\r\n   * which you get by calling 'new WebGLUniforms( gl, program )'.\r\n   *\r\n   *\r\n   * Properties of inner nodes including the top-level container:\r\n   *\r\n   * .seq - array of nested uniforms\r\n   * .map - nested uniforms by name\r\n   *\r\n   *\r\n   * Methods of all nodes except the top-level container:\r\n   *\r\n   * .setValue( gl, value, [textures] )\r\n   *\r\n   * \t\tuploads a uniform value(s)\r\n   *\t\tthe 'textures' parameter is needed for sampler uniforms\r\n   *\r\n   *\r\n   * Static methods of the top-level container (textures factorizations):\r\n   *\r\n   * .upload( gl, seq, values, textures )\r\n   *\r\n   * \t\tsets uniforms in 'seq' to 'values[id].value'\r\n   *\r\n   * .seqWithValue( seq, values ) : filteredSeq\r\n   *\r\n   * \t\tfilters 'seq' entries with corresponding entry in values\r\n   *\r\n   *\r\n   * Methods of the top-level container (textures factorizations):\r\n   *\r\n   * .setValue( gl, name, value, textures )\r\n   *\r\n   * \t\tsets uniform with\tname 'name' to 'value'\r\n   *\r\n   * .setOptional( gl, obj, prop )\r\n   *\r\n   * \t\tlike .set for an optional property of the object\r\n   *\r\n   */\r\n  const emptyTexture = new Texture();\r\n  const emptyTexture2dArray = new DataTexture2DArray();\r\n  const emptyTexture3d = new DataTexture3D();\r\n  const emptyCubeTexture = new CubeTexture(); // --- Utilities ---\r\n  // Array Caches (provide typed arrays for temporary by size)\r\n\r\n  const arrayCacheF32 = [];\r\n  const arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms\r\n\r\n  const mat4array = new Float32Array(16);\r\n  const mat3array = new Float32Array(9);\r\n  const mat2array = new Float32Array(4); // Flattening for arrays of vectors and matrices\r\n\r\n  function flatten(array, nBlocks, blockSize) {\r\n    const firstElem = array[0];\r\n    if (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\r\n    // see http://jacksondunstan.com/articles/983\r\n\r\n    const n = nBlocks * blockSize;\r\n    let r = arrayCacheF32[n];\r\n\r\n    if (r === undefined) {\r\n      r = new Float32Array(n);\r\n      arrayCacheF32[n] = r;\r\n    }\r\n\r\n    if (nBlocks !== 0) {\r\n      firstElem.toArray(r, 0);\r\n\r\n      for (let i = 1, offset = 0; i !== nBlocks; ++i) {\r\n        offset += blockSize;\r\n        array[i].toArray(r, offset);\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n  function arraysEqual(a, b) {\r\n    if (a.length !== b.length) return false;\r\n\r\n    for (let i = 0, l = a.length; i < l; i++) {\r\n      if (a[i] !== b[i]) return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function copyArray(a, b) {\r\n    for (let i = 0, l = b.length; i < l; i++) {\r\n      a[i] = b[i];\r\n    }\r\n  } // Texture unit allocation\r\n\r\n  function allocTexUnits(textures, n) {\r\n    let r = arrayCacheI32[n];\r\n\r\n    if (r === undefined) {\r\n      r = new Int32Array(n);\r\n      arrayCacheI32[n] = r;\r\n    }\r\n\r\n    for (let i = 0; i !== n; ++i) {\r\n      r[i] = textures.allocateTextureUnit();\r\n    }\r\n\r\n    return r;\r\n  } // --- Setters ---\r\n  // Note: Defining these methods externally, because they come in a bunch\r\n  // and this way their names minify.\r\n  // Single scalar\r\n\r\n  function setValueV1f(gl, v) {\r\n    const cache = this.cache;\r\n    if (cache[0] === v) return;\r\n    gl.uniform1f(this.addr, v);\r\n    cache[0] = v;\r\n  } // Single float vector (from flat array or THREE.VectorN)\r\n\r\n  function setValueV2f(gl, v) {\r\n    const cache = this.cache;\r\n\r\n    if (v.x !== undefined) {\r\n      if (cache[0] !== v.x || cache[1] !== v.y) {\r\n        gl.uniform2f(this.addr, v.x, v.y);\r\n        cache[0] = v.x;\r\n        cache[1] = v.y;\r\n      }\r\n    } else {\r\n      if (arraysEqual(cache, v)) return;\r\n      gl.uniform2fv(this.addr, v);\r\n      copyArray(cache, v);\r\n    }\r\n  }\r\n\r\n  function setValueV3f(gl, v) {\r\n    const cache = this.cache;\r\n\r\n    if (v.x !== undefined) {\r\n      if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\r\n        gl.uniform3f(this.addr, v.x, v.y, v.z);\r\n        cache[0] = v.x;\r\n        cache[1] = v.y;\r\n        cache[2] = v.z;\r\n      }\r\n    } else if (v.r !== undefined) {\r\n      if (cache[0] !== v.r || cache[1] !== v.g || cache[2] !== v.b) {\r\n        gl.uniform3f(this.addr, v.r, v.g, v.b);\r\n        cache[0] = v.r;\r\n        cache[1] = v.g;\r\n        cache[2] = v.b;\r\n      }\r\n    } else {\r\n      if (arraysEqual(cache, v)) return;\r\n      gl.uniform3fv(this.addr, v);\r\n      copyArray(cache, v);\r\n    }\r\n  }\r\n\r\n  function setValueV4f(gl, v) {\r\n    const cache = this.cache;\r\n\r\n    if (v.x !== undefined) {\r\n      if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\r\n        gl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\r\n        cache[0] = v.x;\r\n        cache[1] = v.y;\r\n        cache[2] = v.z;\r\n        cache[3] = v.w;\r\n      }\r\n    } else {\r\n      if (arraysEqual(cache, v)) return;\r\n      gl.uniform4fv(this.addr, v);\r\n      copyArray(cache, v);\r\n    }\r\n  } // Single matrix (from flat array or THREE.MatrixN)\r\n\r\n  function setValueM2(gl, v) {\r\n    const cache = this.cache;\r\n    const elements = v.elements;\r\n\r\n    if (elements === undefined) {\r\n      if (arraysEqual(cache, v)) return;\r\n      gl.uniformMatrix2fv(this.addr, false, v);\r\n      copyArray(cache, v);\r\n    } else {\r\n      if (arraysEqual(cache, elements)) return;\r\n      mat2array.set(elements);\r\n      gl.uniformMatrix2fv(this.addr, false, mat2array);\r\n      copyArray(cache, elements);\r\n    }\r\n  }\r\n\r\n  function setValueM3(gl, v) {\r\n    const cache = this.cache;\r\n    const elements = v.elements;\r\n\r\n    if (elements === undefined) {\r\n      if (arraysEqual(cache, v)) return;\r\n      gl.uniformMatrix3fv(this.addr, false, v);\r\n      copyArray(cache, v);\r\n    } else {\r\n      if (arraysEqual(cache, elements)) return;\r\n      mat3array.set(elements);\r\n      gl.uniformMatrix3fv(this.addr, false, mat3array);\r\n      copyArray(cache, elements);\r\n    }\r\n  }\r\n\r\n  function setValueM4(gl, v) {\r\n    const cache = this.cache;\r\n    const elements = v.elements;\r\n\r\n    if (elements === undefined) {\r\n      if (arraysEqual(cache, v)) return;\r\n      gl.uniformMatrix4fv(this.addr, false, v);\r\n      copyArray(cache, v);\r\n    } else {\r\n      if (arraysEqual(cache, elements)) return;\r\n      mat4array.set(elements);\r\n      gl.uniformMatrix4fv(this.addr, false, mat4array);\r\n      copyArray(cache, elements);\r\n    }\r\n  } // Single integer / boolean\r\n\r\n  function setValueV1i(gl, v) {\r\n    const cache = this.cache;\r\n    if (cache[0] === v) return;\r\n    gl.uniform1i(this.addr, v);\r\n    cache[0] = v;\r\n  } // Single integer / boolean vector (from flat array)\r\n\r\n  function setValueV2i(gl, v) {\r\n    const cache = this.cache;\r\n    if (arraysEqual(cache, v)) return;\r\n    gl.uniform2iv(this.addr, v);\r\n    copyArray(cache, v);\r\n  }\r\n\r\n  function setValueV3i(gl, v) {\r\n    const cache = this.cache;\r\n    if (arraysEqual(cache, v)) return;\r\n    gl.uniform3iv(this.addr, v);\r\n    copyArray(cache, v);\r\n  }\r\n\r\n  function setValueV4i(gl, v) {\r\n    const cache = this.cache;\r\n    if (arraysEqual(cache, v)) return;\r\n    gl.uniform4iv(this.addr, v);\r\n    copyArray(cache, v);\r\n  } // Single unsigned integer\r\n\r\n  function setValueV1ui(gl, v) {\r\n    const cache = this.cache;\r\n    if (cache[0] === v) return;\r\n    gl.uniform1ui(this.addr, v);\r\n    cache[0] = v;\r\n  } // Single unsigned integer vector (from flat array)\r\n\r\n  function setValueV2ui(gl, v) {\r\n    const cache = this.cache;\r\n    if (arraysEqual(cache, v)) return;\r\n    gl.uniform2uiv(this.addr, v);\r\n    copyArray(cache, v);\r\n  }\r\n\r\n  function setValueV3ui(gl, v) {\r\n    const cache = this.cache;\r\n    if (arraysEqual(cache, v)) return;\r\n    gl.uniform3uiv(this.addr, v);\r\n    copyArray(cache, v);\r\n  }\r\n\r\n  function setValueV4ui(gl, v) {\r\n    const cache = this.cache;\r\n    if (arraysEqual(cache, v)) return;\r\n    gl.uniform4uiv(this.addr, v);\r\n    copyArray(cache, v);\r\n  } // Single texture (2D / Cube)\r\n\r\n  function setValueT1(gl, v, textures) {\r\n    const cache = this.cache;\r\n    const unit = textures.allocateTextureUnit();\r\n\r\n    if (cache[0] !== unit) {\r\n      gl.uniform1i(this.addr, unit);\r\n      cache[0] = unit;\r\n    }\r\n\r\n    textures.safeSetTexture2D(v || emptyTexture, unit);\r\n  }\r\n\r\n  function setValueT3D1(gl, v, textures) {\r\n    const cache = this.cache;\r\n    const unit = textures.allocateTextureUnit();\r\n\r\n    if (cache[0] !== unit) {\r\n      gl.uniform1i(this.addr, unit);\r\n      cache[0] = unit;\r\n    }\r\n\r\n    textures.setTexture3D(v || emptyTexture3d, unit);\r\n  }\r\n\r\n  function setValueT6(gl, v, textures) {\r\n    const cache = this.cache;\r\n    const unit = textures.allocateTextureUnit();\r\n\r\n    if (cache[0] !== unit) {\r\n      gl.uniform1i(this.addr, unit);\r\n      cache[0] = unit;\r\n    }\r\n\r\n    textures.safeSetTextureCube(v || emptyCubeTexture, unit);\r\n  }\r\n\r\n  function setValueT2DArray1(gl, v, textures) {\r\n    const cache = this.cache;\r\n    const unit = textures.allocateTextureUnit();\r\n\r\n    if (cache[0] !== unit) {\r\n      gl.uniform1i(this.addr, unit);\r\n      cache[0] = unit;\r\n    }\r\n\r\n    textures.setTexture2DArray(v || emptyTexture2dArray, unit);\r\n  } // Helper to pick the right setter for the singular case\r\n\r\n  function getSingularSetter(type) {\r\n    switch (type) {\r\n      case 0x1406:\r\n        return setValueV1f;\r\n      // FLOAT\r\n\r\n      case 0x8b50:\r\n        return setValueV2f;\r\n      // _VEC2\r\n\r\n      case 0x8b51:\r\n        return setValueV3f;\r\n      // _VEC3\r\n\r\n      case 0x8b52:\r\n        return setValueV4f;\r\n      // _VEC4\r\n\r\n      case 0x8b5a:\r\n        return setValueM2;\r\n      // _MAT2\r\n\r\n      case 0x8b5b:\r\n        return setValueM3;\r\n      // _MAT3\r\n\r\n      case 0x8b5c:\r\n        return setValueM4;\r\n      // _MAT4\r\n\r\n      case 0x1404:\r\n      case 0x8b56:\r\n        return setValueV1i;\r\n      // INT, BOOL\r\n\r\n      case 0x8b53:\r\n      case 0x8b57:\r\n        return setValueV2i;\r\n      // _VEC2\r\n\r\n      case 0x8b54:\r\n      case 0x8b58:\r\n        return setValueV3i;\r\n      // _VEC3\r\n\r\n      case 0x8b55:\r\n      case 0x8b59:\r\n        return setValueV4i;\r\n      // _VEC4\r\n\r\n      case 0x1405:\r\n        return setValueV1ui;\r\n      // UINT\r\n\r\n      case 0x8dc6:\r\n        return setValueV2ui;\r\n      // _VEC2\r\n\r\n      case 0x8dc7:\r\n        return setValueV3ui;\r\n      // _VEC3\r\n\r\n      case 0x8dc8:\r\n        return setValueV4ui;\r\n      // _VEC4\r\n\r\n      case 0x8b5e: // SAMPLER_2D\r\n\r\n      case 0x8d66: // SAMPLER_EXTERNAL_OES\r\n\r\n      case 0x8dca: // INT_SAMPLER_2D\r\n\r\n      case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\r\n\r\n      case 0x8b62:\r\n        // SAMPLER_2D_SHADOW\r\n        return setValueT1;\r\n\r\n      case 0x8b5f: // SAMPLER_3D\r\n\r\n      case 0x8dcb: // INT_SAMPLER_3D\r\n\r\n      case 0x8dd3:\r\n        // UNSIGNED_INT_SAMPLER_3D\r\n        return setValueT3D1;\r\n\r\n      case 0x8b60: // SAMPLER_CUBE\r\n\r\n      case 0x8dcc: // INT_SAMPLER_CUBE\r\n\r\n      case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\r\n\r\n      case 0x8dc5:\r\n        // SAMPLER_CUBE_SHADOW\r\n        return setValueT6;\r\n\r\n      case 0x8dc1: // SAMPLER_2D_ARRAY\r\n\r\n      case 0x8dcf: // INT_SAMPLER_2D_ARRAY\r\n\r\n      case 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\r\n\r\n      case 0x8dc4:\r\n        // SAMPLER_2D_ARRAY_SHADOW\r\n        return setValueT2DArray1;\r\n    }\r\n  } // Array of scalars\r\n\r\n  function setValueV1fArray(gl, v) {\r\n    gl.uniform1fv(this.addr, v);\r\n  } // Array of vectors (from flat array or array of THREE.VectorN)\r\n\r\n  function setValueV2fArray(gl, v) {\r\n    const data = flatten(v, this.size, 2);\r\n    gl.uniform2fv(this.addr, data);\r\n  }\r\n\r\n  function setValueV3fArray(gl, v) {\r\n    const data = flatten(v, this.size, 3);\r\n    gl.uniform3fv(this.addr, data);\r\n  }\r\n\r\n  function setValueV4fArray(gl, v) {\r\n    const data = flatten(v, this.size, 4);\r\n    gl.uniform4fv(this.addr, data);\r\n  } // Array of matrices (from flat array or array of THREE.MatrixN)\r\n\r\n  function setValueM2Array(gl, v) {\r\n    const data = flatten(v, this.size, 4);\r\n    gl.uniformMatrix2fv(this.addr, false, data);\r\n  }\r\n\r\n  function setValueM3Array(gl, v) {\r\n    const data = flatten(v, this.size, 9);\r\n    gl.uniformMatrix3fv(this.addr, false, data);\r\n  }\r\n\r\n  function setValueM4Array(gl, v) {\r\n    const data = flatten(v, this.size, 16);\r\n    gl.uniformMatrix4fv(this.addr, false, data);\r\n  } // Array of integer / boolean\r\n\r\n  function setValueV1iArray(gl, v) {\r\n    gl.uniform1iv(this.addr, v);\r\n  } // Array of integer / boolean vectors (from flat array)\r\n\r\n  function setValueV2iArray(gl, v) {\r\n    gl.uniform2iv(this.addr, v);\r\n  }\r\n\r\n  function setValueV3iArray(gl, v) {\r\n    gl.uniform3iv(this.addr, v);\r\n  }\r\n\r\n  function setValueV4iArray(gl, v) {\r\n    gl.uniform4iv(this.addr, v);\r\n  } // Array of unsigned integer\r\n\r\n  function setValueV1uiArray(gl, v) {\r\n    gl.uniform1uiv(this.addr, v);\r\n  } // Array of unsigned integer vectors (from flat array)\r\n\r\n  function setValueV2uiArray(gl, v) {\r\n    gl.uniform2uiv(this.addr, v);\r\n  }\r\n\r\n  function setValueV3uiArray(gl, v) {\r\n    gl.uniform3uiv(this.addr, v);\r\n  }\r\n\r\n  function setValueV4uiArray(gl, v) {\r\n    gl.uniform4uiv(this.addr, v);\r\n  } // Array of textures (2D / Cube)\r\n\r\n  function setValueT1Array(gl, v, textures) {\r\n    const n = v.length;\r\n    const units = allocTexUnits(textures, n);\r\n    gl.uniform1iv(this.addr, units);\r\n\r\n    for (let i = 0; i !== n; ++i) {\r\n      textures.safeSetTexture2D(v[i] || emptyTexture, units[i]);\r\n    }\r\n  }\r\n\r\n  function setValueT6Array(gl, v, textures) {\r\n    const n = v.length;\r\n    const units = allocTexUnits(textures, n);\r\n    gl.uniform1iv(this.addr, units);\r\n\r\n    for (let i = 0; i !== n; ++i) {\r\n      textures.safeSetTextureCube(v[i] || emptyCubeTexture, units[i]);\r\n    }\r\n  } // Helper to pick the right setter for a pure (bottom-level) array\r\n\r\n  function getPureArraySetter(type) {\r\n    switch (type) {\r\n      case 0x1406:\r\n        return setValueV1fArray;\r\n      // FLOAT\r\n\r\n      case 0x8b50:\r\n        return setValueV2fArray;\r\n      // _VEC2\r\n\r\n      case 0x8b51:\r\n        return setValueV3fArray;\r\n      // _VEC3\r\n\r\n      case 0x8b52:\r\n        return setValueV4fArray;\r\n      // _VEC4\r\n\r\n      case 0x8b5a:\r\n        return setValueM2Array;\r\n      // _MAT2\r\n\r\n      case 0x8b5b:\r\n        return setValueM3Array;\r\n      // _MAT3\r\n\r\n      case 0x8b5c:\r\n        return setValueM4Array;\r\n      // _MAT4\r\n\r\n      case 0x1404:\r\n      case 0x8b56:\r\n        return setValueV1iArray;\r\n      // INT, BOOL\r\n\r\n      case 0x8b53:\r\n      case 0x8b57:\r\n        return setValueV2iArray;\r\n      // _VEC2\r\n\r\n      case 0x8b54:\r\n      case 0x8b58:\r\n        return setValueV3iArray;\r\n      // _VEC3\r\n\r\n      case 0x8b55:\r\n      case 0x8b59:\r\n        return setValueV4iArray;\r\n      // _VEC4\r\n\r\n      case 0x1405:\r\n        return setValueV1uiArray;\r\n      // UINT\r\n\r\n      case 0x8dc6:\r\n        return setValueV2uiArray;\r\n      // _VEC2\r\n\r\n      case 0x8dc7:\r\n        return setValueV3uiArray;\r\n      // _VEC3\r\n\r\n      case 0x8dc8:\r\n        return setValueV4uiArray;\r\n      // _VEC4\r\n\r\n      case 0x8b5e: // SAMPLER_2D\r\n\r\n      case 0x8d66: // SAMPLER_EXTERNAL_OES\r\n\r\n      case 0x8dca: // INT_SAMPLER_2D\r\n\r\n      case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\r\n\r\n      case 0x8b62:\r\n        // SAMPLER_2D_SHADOW\r\n        return setValueT1Array;\r\n\r\n      case 0x8b60: // SAMPLER_CUBE\r\n\r\n      case 0x8dcc: // INT_SAMPLER_CUBE\r\n\r\n      case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\r\n\r\n      case 0x8dc5:\r\n        // SAMPLER_CUBE_SHADOW\r\n        return setValueT6Array;\r\n    }\r\n  } // --- Uniform Classes ---\r\n\r\n  function SingleUniform(id, activeInfo, addr) {\r\n    this.id = id;\r\n    this.addr = addr;\r\n    this.cache = [];\r\n    this.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\r\n  }\r\n\r\n  function PureArrayUniform(id, activeInfo, addr) {\r\n    this.id = id;\r\n    this.addr = addr;\r\n    this.cache = [];\r\n    this.size = activeInfo.size;\r\n    this.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\r\n  }\r\n\r\n  PureArrayUniform.prototype.updateCache = function (data) {\r\n    const cache = this.cache;\r\n\r\n    if (data instanceof Float32Array && cache.length !== data.length) {\r\n      this.cache = new Float32Array(data.length);\r\n    }\r\n\r\n    copyArray(cache, data);\r\n  };\r\n\r\n  function StructuredUniform(id) {\r\n    this.id = id;\r\n    this.seq = [];\r\n    this.map = {};\r\n  }\r\n\r\n  StructuredUniform.prototype.setValue = function (gl, value, textures) {\r\n    const seq = this.seq;\r\n\r\n    for (let i = 0, n = seq.length; i !== n; ++i) {\r\n      const u = seq[i];\r\n      u.setValue(gl, value[u.id], textures);\r\n    }\r\n  }; // --- Top-level ---\r\n  // Parser - builds up the property tree from the path strings\r\n\r\n  const RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g; // extracts\r\n  // \t- the identifier (member name or array index)\r\n  //\t- followed by an optional right bracket (found when array index)\r\n  //\t- followed by an optional left bracket or dot (type of subscript)\r\n  //\r\n  // Note: These portions can be read in a non-overlapping fashion and\r\n  // allow straightforward parsing of the hierarchy that WebGL encodes\r\n  // in the uniform names.\r\n\r\n  function addUniform(container, uniformObject) {\r\n    container.seq.push(uniformObject);\r\n    container.map[uniformObject.id] = uniformObject;\r\n  }\r\n\r\n  function parseUniform(activeInfo, addr, container) {\r\n    const path = activeInfo.name,\r\n      pathLength = path.length; // reset RegExp object, because of the early exit of a previous run\r\n\r\n    RePathPart.lastIndex = 0;\r\n\r\n    while (true) {\r\n      const match = RePathPart.exec(path),\r\n        matchEnd = RePathPart.lastIndex;\r\n      let id = match[1];\r\n      const idIsIndex = match[2] === ']',\r\n        subscript = match[3];\r\n      if (idIsIndex) id = id | 0; // convert to integer\r\n\r\n      if (subscript === undefined || (subscript === '[' && matchEnd + 2 === pathLength)) {\r\n        // bare name or \"pure\" bottom-level array \"[0]\" suffix\r\n        addUniform(\r\n          container,\r\n          subscript === undefined\r\n            ? new SingleUniform(id, activeInfo, addr)\r\n            : new PureArrayUniform(id, activeInfo, addr),\r\n        );\r\n        break;\r\n      } else {\r\n        // step into inner node / create it in case it doesn't exist\r\n        const map = container.map;\r\n        let next = map[id];\r\n\r\n        if (next === undefined) {\r\n          next = new StructuredUniform(id);\r\n          addUniform(container, next);\r\n        }\r\n\r\n        container = next;\r\n      }\r\n    }\r\n  } // Root Container\r\n\r\n  function WebGLUniforms(gl, program) {\r\n    this.seq = [];\r\n    this.map = {};\r\n    const n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      const info = gl.getActiveUniform(program, i),\r\n        addr = gl.getUniformLocation(program, info.name);\r\n      parseUniform(info, addr, this);\r\n    }\r\n  }\r\n\r\n  WebGLUniforms.prototype.setValue = function (gl, name, value, textures) {\r\n    const u = this.map[name];\r\n    if (u !== undefined) u.setValue(gl, value, textures);\r\n  };\r\n\r\n  WebGLUniforms.prototype.setOptional = function (gl, object, name) {\r\n    const v = object[name];\r\n    if (v !== undefined) this.setValue(gl, name, v);\r\n  }; // Static interface\r\n\r\n  WebGLUniforms.upload = function (gl, seq, values, textures) {\r\n    for (let i = 0, n = seq.length; i !== n; ++i) {\r\n      const u = seq[i],\r\n        v = values[u.id];\r\n\r\n      if (v.needsUpdate !== false) {\r\n        // note: always updating when .needsUpdate is undefined\r\n        u.setValue(gl, v.value, textures);\r\n      }\r\n    }\r\n  };\r\n\r\n  WebGLUniforms.seqWithValue = function (seq, values) {\r\n    const r = [];\r\n\r\n    for (let i = 0, n = seq.length; i !== n; ++i) {\r\n      const u = seq[i];\r\n      if (u.id in values) r.push(u);\r\n    }\r\n\r\n    return r;\r\n  };\r\n\r\n  function WebGLShader(gl, type, string) {\r\n    const shader = gl.createShader(type);\r\n    gl.shaderSource(shader, string);\r\n    gl.compileShader(shader);\r\n    return shader;\r\n  }\r\n\r\n  let programIdCount = 0;\r\n\r\n  function addLineNumbers(string) {\r\n    const lines = string.split('\\n');\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n      lines[i] = i + 1 + ': ' + lines[i];\r\n    }\r\n\r\n    return lines.join('\\n');\r\n  }\r\n\r\n  function getEncodingComponents(encoding) {\r\n    switch (encoding) {\r\n      case LinearEncoding:\r\n        return ['Linear', '( value )'];\r\n\r\n      case sRGBEncoding:\r\n        return ['sRGB', '( value )'];\r\n\r\n      case RGBEEncoding:\r\n        return ['RGBE', '( value )'];\r\n\r\n      case RGBM7Encoding:\r\n        return ['RGBM', '( value, 7.0 )'];\r\n\r\n      case RGBM16Encoding:\r\n        return ['RGBM', '( value, 16.0 )'];\r\n\r\n      case RGBDEncoding:\r\n        return ['RGBD', '( value, 256.0 )'];\r\n\r\n      case GammaEncoding:\r\n        return ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\r\n\r\n      case LogLuvEncoding:\r\n        return ['LogLuv', '( value )'];\r\n\r\n      default:\r\n        console.warn('THREE.WebGLProgram: Unsupported encoding:', encoding);\r\n        return ['Linear', '( value )'];\r\n    }\r\n  }\r\n\r\n  function getShaderErrors(gl, shader, type) {\r\n    const status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n    const log = gl.getShaderInfoLog(shader).trim();\r\n    if (status && log === '') return ''; // --enable-privileged-webgl-extension\r\n    // console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n    const source = gl.getShaderSource(shader);\r\n    return 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers(source);\r\n  }\r\n\r\n  function getTexelDecodingFunction(functionName, encoding) {\r\n    const components = getEncodingComponents(encoding);\r\n    return (\r\n      'vec4 ' +\r\n      functionName +\r\n      '( vec4 value ) { return ' +\r\n      components[0] +\r\n      'ToLinear' +\r\n      components[1] +\r\n      '; }'\r\n    );\r\n  }\r\n\r\n  function getTexelEncodingFunction(functionName, encoding) {\r\n    const components = getEncodingComponents(encoding);\r\n    return (\r\n      'vec4 ' +\r\n      functionName +\r\n      '( vec4 value ) { return LinearTo' +\r\n      components[0] +\r\n      components[1] +\r\n      '; }'\r\n    );\r\n  }\r\n\r\n  function getToneMappingFunction(functionName, toneMapping) {\r\n    let toneMappingName;\r\n\r\n    switch (toneMapping) {\r\n      case LinearToneMapping:\r\n        toneMappingName = 'Linear';\r\n        break;\r\n\r\n      case ReinhardToneMapping:\r\n        toneMappingName = 'Reinhard';\r\n        break;\r\n\r\n      case CineonToneMapping:\r\n        toneMappingName = 'OptimizedCineon';\r\n        break;\r\n\r\n      case ACESFilmicToneMapping:\r\n        toneMappingName = 'ACESFilmic';\r\n        break;\r\n\r\n      case CustomToneMapping:\r\n        toneMappingName = 'Custom';\r\n        break;\r\n\r\n      default:\r\n        console.warn('THREE.WebGLProgram: Unsupported toneMapping:', toneMapping);\r\n        toneMappingName = 'Linear';\r\n    }\r\n\r\n    return (\r\n      'vec3 ' +\r\n      functionName +\r\n      '( vec3 color ) { return ' +\r\n      toneMappingName +\r\n      'ToneMapping( color ); }'\r\n    );\r\n  }\r\n\r\n  function generateExtensions(parameters) {\r\n    const chunks = [\r\n      parameters.extensionDerivatives ||\r\n      parameters.envMapCubeUV ||\r\n      parameters.bumpMap ||\r\n      parameters.tangentSpaceNormalMap ||\r\n      parameters.clearcoatNormalMap ||\r\n      parameters.flatShading ||\r\n      parameters.shaderID === 'physical'\r\n        ? '#extension GL_OES_standard_derivatives : enable'\r\n        : '',\r\n      (parameters.extensionFragDepth || parameters.logarithmicDepthBuffer) &&\r\n      parameters.rendererExtensionFragDepth\r\n        ? '#extension GL_EXT_frag_depth : enable'\r\n        : '',\r\n      parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers\r\n        ? '#extension GL_EXT_draw_buffers : require'\r\n        : '',\r\n      (parameters.extensionShaderTextureLOD ||\r\n        parameters.envMap ||\r\n        parameters.transmission > 0.0) &&\r\n      parameters.rendererExtensionShaderTextureLod\r\n        ? '#extension GL_EXT_shader_texture_lod : enable'\r\n        : '',\r\n    ];\r\n    return chunks.filter(filterEmptyLine).join('\\n');\r\n  }\r\n\r\n  function generateDefines(defines) {\r\n    const chunks = [];\r\n\r\n    for (const name in defines) {\r\n      const value = defines[name];\r\n      if (value === false) continue;\r\n      chunks.push('#define ' + name + ' ' + value);\r\n    }\r\n\r\n    return chunks.join('\\n');\r\n  }\r\n\r\n  function fetchAttributeLocations(gl, program) {\r\n    const attributes = {};\r\n    const n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n\r\n    for (let i = 0; i < n; i++) {\r\n      const info = gl.getActiveAttrib(program, i);\r\n      const name = info.name; // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\r\n\r\n      attributes[name] = gl.getAttribLocation(program, name);\r\n    }\r\n\r\n    return attributes;\r\n  }\r\n\r\n  function filterEmptyLine(string) {\r\n    return string !== '';\r\n  }\r\n\r\n  function replaceLightNums(string, parameters) {\r\n    return string\r\n      .replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights)\r\n      .replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights)\r\n      .replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights)\r\n      .replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights)\r\n      .replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights)\r\n      .replace(/NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows)\r\n      .replace(/NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows)\r\n      .replace(/NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows);\r\n  }\r\n\r\n  function replaceClippingPlaneNums(string, parameters) {\r\n    return string\r\n      .replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes)\r\n      .replace(\r\n        /UNION_CLIPPING_PLANES/g,\r\n        parameters.numClippingPlanes - parameters.numClipIntersection,\r\n      );\r\n  } // Resolve Includes\r\n\r\n  const includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\r\n\r\n  function resolveIncludes(string) {\r\n    return string.replace(includePattern, includeReplacer);\r\n  }\r\n\r\n  function includeReplacer(match, include) {\r\n    const string = ShaderChunk[include];\r\n\r\n    if (string === undefined) {\r\n      throw new Error('Can not resolve #include <' + include + '>');\r\n    }\r\n\r\n    return resolveIncludes(string);\r\n  } // Unroll Loops\r\n\r\n  const deprecatedUnrollLoopPattern =\r\n    /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\r\n  const unrollLoopPattern =\r\n    /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\r\n\r\n  function unrollLoops(string) {\r\n    return string\r\n      .replace(unrollLoopPattern, loopReplacer)\r\n      .replace(deprecatedUnrollLoopPattern, deprecatedLoopReplacer);\r\n  }\r\n\r\n  function deprecatedLoopReplacer(match, start, end, snippet) {\r\n    console.warn(\r\n      'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.',\r\n    );\r\n    return loopReplacer(match, start, end, snippet);\r\n  }\r\n\r\n  function loopReplacer(match, start, end, snippet) {\r\n    let string = '';\r\n\r\n    for (let i = parseInt(start); i < parseInt(end); i++) {\r\n      string += snippet.replace(/\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]').replace(/UNROLLED_LOOP_INDEX/g, i);\r\n    }\r\n\r\n    return string;\r\n  } //\r\n\r\n  function generatePrecision(parameters) {\r\n    let precisionstring =\r\n      'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\r\n\r\n    if (parameters.precision === 'highp') {\r\n      precisionstring += '\\n#define HIGH_PRECISION';\r\n    } else if (parameters.precision === 'mediump') {\r\n      precisionstring += '\\n#define MEDIUM_PRECISION';\r\n    } else if (parameters.precision === 'lowp') {\r\n      precisionstring += '\\n#define LOW_PRECISION';\r\n    }\r\n\r\n    return precisionstring;\r\n  }\r\n\r\n  function generateShadowMapTypeDefine(parameters) {\r\n    let shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n    if (parameters.shadowMapType === PCFShadowMap) {\r\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n    } else if (parameters.shadowMapType === PCFSoftShadowMap) {\r\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n    } else if (parameters.shadowMapType === VSMShadowMap) {\r\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\r\n    }\r\n\r\n    return shadowMapTypeDefine;\r\n  }\r\n\r\n  function generateEnvMapTypeDefine(parameters) {\r\n    let envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\r\n    if (parameters.envMap) {\r\n      switch (parameters.envMapMode) {\r\n        case CubeReflectionMapping:\r\n        case CubeRefractionMapping:\r\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n          break;\r\n\r\n        case CubeUVReflectionMapping:\r\n        case CubeUVRefractionMapping:\r\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\r\n          break;\r\n      }\r\n    }\r\n\r\n    return envMapTypeDefine;\r\n  }\r\n\r\n  function generateEnvMapModeDefine(parameters) {\r\n    let envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\r\n    if (parameters.envMap) {\r\n      switch (parameters.envMapMode) {\r\n        case CubeRefractionMapping:\r\n        case CubeUVRefractionMapping:\r\n          envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n          break;\r\n      }\r\n    }\r\n\r\n    return envMapModeDefine;\r\n  }\r\n\r\n  function generateEnvMapBlendingDefine(parameters) {\r\n    let envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\r\n\r\n    if (parameters.envMap) {\r\n      switch (parameters.combine) {\r\n        case MultiplyOperation:\r\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n          break;\r\n\r\n        case MixOperation:\r\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n          break;\r\n\r\n        case AddOperation:\r\n          envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n          break;\r\n      }\r\n    }\r\n\r\n    return envMapBlendingDefine;\r\n  }\r\n\r\n  function WebGLProgram(renderer, cacheKey, parameters, bindingStates) {\r\n    const gl = renderer.getContext();\r\n    const defines = parameters.defines;\r\n    let vertexShader = parameters.vertexShader;\r\n    let fragmentShader = parameters.fragmentShader;\r\n    const shadowMapTypeDefine = generateShadowMapTypeDefine(parameters);\r\n    const envMapTypeDefine = generateEnvMapTypeDefine(parameters);\r\n    const envMapModeDefine = generateEnvMapModeDefine(parameters);\r\n    const envMapBlendingDefine = generateEnvMapBlendingDefine(parameters);\r\n    const gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0;\r\n    const customExtensions = parameters.isWebGL2 ? '' : generateExtensions(parameters);\r\n    const customDefines = generateDefines(defines);\r\n    const program = gl.createProgram();\r\n    let prefixVertex, prefixFragment;\r\n    let versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\r\n\r\n    if (parameters.isRawShaderMaterial) {\r\n      prefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\r\n\r\n      if (prefixVertex.length > 0) {\r\n        prefixVertex += '\\n';\r\n      }\r\n\r\n      prefixFragment = [customExtensions, customDefines].filter(filterEmptyLine).join('\\n');\r\n\r\n      if (prefixFragment.length > 0) {\r\n        prefixFragment += '\\n';\r\n      }\r\n    } else {\r\n      prefixVertex = [\r\n        generatePrecision(parameters),\r\n        '#define SHADER_NAME ' + parameters.shaderName,\r\n        customDefines,\r\n        parameters.instancing ? '#define USE_INSTANCING' : '',\r\n        parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\r\n        parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n        '#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n        '#define MAX_BONES ' + parameters.maxBones,\r\n        parameters.useFog && parameters.fog ? '#define USE_FOG' : '',\r\n        parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\r\n        parameters.map ? '#define USE_MAP' : '',\r\n        parameters.envMap ? '#define USE_ENVMAP' : '',\r\n        parameters.envMap ? '#define ' + envMapModeDefine : '',\r\n        parameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n        parameters.aoMap ? '#define USE_AOMAP' : '',\r\n        parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n        parameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n        parameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n        parameters.normalMap && parameters.objectSpaceNormalMap\r\n          ? '#define OBJECTSPACE_NORMALMAP'\r\n          : '',\r\n        parameters.normalMap && parameters.tangentSpaceNormalMap\r\n          ? '#define TANGENTSPACE_NORMALMAP'\r\n          : '',\r\n        parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\r\n        parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\r\n        parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\r\n        parameters.displacementMap && parameters.supportsVertexTextures\r\n          ? '#define USE_DISPLACEMENTMAP'\r\n          : '',\r\n        parameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n        parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n        parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n        parameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n        parameters.transmission ? '#define USE_TRANSMISSION' : '',\r\n        parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\r\n        parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\r\n        parameters.vertexTangents ? '#define USE_TANGENT' : '',\r\n        parameters.vertexColors ? '#define USE_COLOR' : '',\r\n        parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\r\n        parameters.vertexUvs ? '#define USE_UV' : '',\r\n        parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\r\n        parameters.flatShading ? '#define FLAT_SHADED' : '',\r\n        parameters.skinning ? '#define USE_SKINNING' : '',\r\n        parameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n        parameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n        parameters.morphNormals && parameters.flatShading === false\r\n          ? '#define USE_MORPHNORMALS'\r\n          : '',\r\n        parameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n        parameters.flipSided ? '#define FLIP_SIDED' : '',\r\n        parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n        parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n        parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n        parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n        parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth\r\n          ? '#define USE_LOGDEPTHBUF_EXT'\r\n          : '',\r\n        'uniform mat4 modelMatrix;',\r\n        'uniform mat4 modelViewMatrix;',\r\n        'uniform mat4 projectionMatrix;',\r\n        'uniform mat4 viewMatrix;',\r\n        'uniform mat3 normalMatrix;',\r\n        'uniform vec3 cameraPosition;',\r\n        'uniform bool isOrthographic;',\r\n        '#ifdef USE_INSTANCING',\r\n        '\tattribute mat4 instanceMatrix;',\r\n        '#endif',\r\n        '#ifdef USE_INSTANCING_COLOR',\r\n        '\tattribute vec3 instanceColor;',\r\n        '#endif',\r\n        'attribute vec3 position;',\r\n        'attribute vec3 normal;',\r\n        'attribute vec2 uv;',\r\n        '#ifdef USE_TANGENT',\r\n        '\tattribute vec4 tangent;',\r\n        '#endif',\r\n        '#if defined( USE_COLOR_ALPHA )',\r\n        '\tattribute vec4 color;',\r\n        '#elif defined( USE_COLOR )',\r\n        '\tattribute vec3 color;',\r\n        '#endif',\r\n        '#ifdef USE_MORPHTARGETS',\r\n        '\tattribute vec3 morphTarget0;',\r\n        '\tattribute vec3 morphTarget1;',\r\n        '\tattribute vec3 morphTarget2;',\r\n        '\tattribute vec3 morphTarget3;',\r\n        '\t#ifdef USE_MORPHNORMALS',\r\n        '\t\tattribute vec3 morphNormal0;',\r\n        '\t\tattribute vec3 morphNormal1;',\r\n        '\t\tattribute vec3 morphNormal2;',\r\n        '\t\tattribute vec3 morphNormal3;',\r\n        '\t#else',\r\n        '\t\tattribute vec3 morphTarget4;',\r\n        '\t\tattribute vec3 morphTarget5;',\r\n        '\t\tattribute vec3 morphTarget6;',\r\n        '\t\tattribute vec3 morphTarget7;',\r\n        '\t#endif',\r\n        '#endif',\r\n        '#ifdef USE_SKINNING',\r\n        '\tattribute vec4 skinIndex;',\r\n        '\tattribute vec4 skinWeight;',\r\n        '#endif',\r\n        '\\n',\r\n      ]\r\n        .filter(filterEmptyLine)\r\n        .join('\\n');\r\n      prefixFragment = [\r\n        customExtensions,\r\n        generatePrecision(parameters),\r\n        '#define SHADER_NAME ' + parameters.shaderName,\r\n        customDefines,\r\n        parameters.alphaTest\r\n          ? '#define ALPHATEST ' + parameters.alphaTest + (parameters.alphaTest % 1 ? '' : '.0')\r\n          : '', // add '.0' if integer\r\n        '#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n        parameters.useFog && parameters.fog ? '#define USE_FOG' : '',\r\n        parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\r\n        parameters.map ? '#define USE_MAP' : '',\r\n        parameters.matcap ? '#define USE_MATCAP' : '',\r\n        parameters.envMap ? '#define USE_ENVMAP' : '',\r\n        parameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n        parameters.envMap ? '#define ' + envMapModeDefine : '',\r\n        parameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n        parameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n        parameters.aoMap ? '#define USE_AOMAP' : '',\r\n        parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n        parameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n        parameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n        parameters.normalMap && parameters.objectSpaceNormalMap\r\n          ? '#define OBJECTSPACE_NORMALMAP'\r\n          : '',\r\n        parameters.normalMap && parameters.tangentSpaceNormalMap\r\n          ? '#define TANGENTSPACE_NORMALMAP'\r\n          : '',\r\n        parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\r\n        parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\r\n        parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\r\n        parameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n        parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n        parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n        parameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n        parameters.sheen ? '#define USE_SHEEN' : '',\r\n        parameters.transmission ? '#define USE_TRANSMISSION' : '',\r\n        parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\r\n        parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\r\n        parameters.vertexTangents ? '#define USE_TANGENT' : '',\r\n        parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\r\n        parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\r\n        parameters.vertexUvs ? '#define USE_UV' : '',\r\n        parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\r\n        parameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\r\n        parameters.flatShading ? '#define FLAT_SHADED' : '',\r\n        parameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n        parameters.flipSided ? '#define FLIP_SIDED' : '',\r\n        parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n        parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n        parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\r\n        parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\r\n        parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n        parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth\r\n          ? '#define USE_LOGDEPTHBUF_EXT'\r\n          : '',\r\n        (parameters.extensionShaderTextureLOD || parameters.envMap) &&\r\n        parameters.rendererExtensionShaderTextureLod\r\n          ? '#define TEXTURE_LOD_EXT'\r\n          : '',\r\n        'uniform mat4 viewMatrix;',\r\n        'uniform vec3 cameraPosition;',\r\n        'uniform bool isOrthographic;',\r\n        parameters.toneMapping !== NoToneMapping ? '#define TONE_MAPPING' : '',\r\n        parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\r\n        parameters.toneMapping !== NoToneMapping\r\n          ? getToneMappingFunction('toneMapping', parameters.toneMapping)\r\n          : '',\r\n        parameters.dithering ? '#define DITHERING' : '',\r\n        ShaderChunk['encodings_pars_fragment'], // this code is required here because it is used by the various encoding/decoding function defined below\r\n        parameters.map ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '',\r\n        parameters.matcap\r\n          ? getTexelDecodingFunction('matcapTexelToLinear', parameters.matcapEncoding)\r\n          : '',\r\n        parameters.envMap\r\n          ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding)\r\n          : '',\r\n        parameters.emissiveMap\r\n          ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding)\r\n          : '',\r\n        parameters.lightMap\r\n          ? getTexelDecodingFunction('lightMapTexelToLinear', parameters.lightMapEncoding)\r\n          : '',\r\n        getTexelEncodingFunction('linearToOutputTexel', parameters.outputEncoding),\r\n        parameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\r\n        '\\n',\r\n      ]\r\n        .filter(filterEmptyLine)\r\n        .join('\\n');\r\n    }\r\n\r\n    vertexShader = resolveIncludes(vertexShader);\r\n    vertexShader = replaceLightNums(vertexShader, parameters);\r\n    vertexShader = replaceClippingPlaneNums(vertexShader, parameters);\r\n    fragmentShader = resolveIncludes(fragmentShader);\r\n    fragmentShader = replaceLightNums(fragmentShader, parameters);\r\n    fragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\r\n    vertexShader = unrollLoops(vertexShader);\r\n    fragmentShader = unrollLoops(fragmentShader);\r\n\r\n    if (parameters.isWebGL2 && parameters.isRawShaderMaterial !== true) {\r\n      // GLSL 3.0 conversion for built-in materials and ShaderMaterial\r\n      versionString = '#version 300 es\\n';\r\n      prefixVertex =\r\n        ['#define attribute in', '#define varying out', '#define texture2D texture'].join('\\n') +\r\n        '\\n' +\r\n        prefixVertex;\r\n      prefixFragment =\r\n        [\r\n          '#define varying in',\r\n          parameters.glslVersion === GLSL3 ? '' : 'out highp vec4 pc_fragColor;',\r\n          parameters.glslVersion === GLSL3 ? '' : '#define gl_FragColor pc_fragColor',\r\n          '#define gl_FragDepthEXT gl_FragDepth',\r\n          '#define texture2D texture',\r\n          '#define textureCube texture',\r\n          '#define texture2DProj textureProj',\r\n          '#define texture2DLodEXT textureLod',\r\n          '#define texture2DProjLodEXT textureProjLod',\r\n          '#define textureCubeLodEXT textureLod',\r\n          '#define texture2DGradEXT textureGrad',\r\n          '#define texture2DProjGradEXT textureProjGrad',\r\n          '#define textureCubeGradEXT textureGrad',\r\n        ].join('\\n') +\r\n        '\\n' +\r\n        prefixFragment;\r\n    }\r\n\r\n    const vertexGlsl = versionString + prefixVertex + vertexShader;\r\n    const fragmentGlsl = versionString + prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\r\n    // console.log( '*FRAGMENT*', fragmentGlsl );\r\n\r\n    const glVertexShader = WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\r\n    const glFragmentShader = WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\r\n    gl.attachShader(program, glVertexShader);\r\n    gl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\r\n\r\n    if (parameters.index0AttributeName !== undefined) {\r\n      gl.bindAttribLocation(program, 0, parameters.index0AttributeName);\r\n    } else if (parameters.morphTargets === true) {\r\n      // programs with morphTargets displace position out of attribute 0\r\n      gl.bindAttribLocation(program, 0, 'position');\r\n    }\r\n\r\n    gl.linkProgram(program); // check for link errors\r\n\r\n    if (renderer.debug.checkShaderErrors) {\r\n      const programLog = gl.getProgramInfoLog(program).trim();\r\n      const vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\r\n      const fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\r\n      let runnable = true;\r\n      let haveDiagnostics = true;\r\n\r\n      if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\r\n        runnable = false;\r\n        const vertexErrors = getShaderErrors(gl, glVertexShader, 'vertex');\r\n        const fragmentErrors = getShaderErrors(gl, glFragmentShader, 'fragment');\r\n        console.error(\r\n          'THREE.WebGLProgram: shader error: ',\r\n          gl.getError(),\r\n          'gl.VALIDATE_STATUS',\r\n          gl.getProgramParameter(program, gl.VALIDATE_STATUS),\r\n          'gl.getProgramInfoLog',\r\n          programLog,\r\n          vertexErrors,\r\n          fragmentErrors,\r\n        );\r\n      } else if (programLog !== '') {\r\n        console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', programLog);\r\n      } else if (vertexLog === '' || fragmentLog === '') {\r\n        haveDiagnostics = false;\r\n      }\r\n\r\n      if (haveDiagnostics) {\r\n        this.diagnostics = {\r\n          runnable: runnable,\r\n          programLog: programLog,\r\n          vertexShader: {\r\n            log: vertexLog,\r\n            prefix: prefixVertex,\r\n          },\r\n          fragmentShader: {\r\n            log: fragmentLog,\r\n            prefix: prefixFragment,\r\n          },\r\n        };\r\n      }\r\n    } // Clean up\r\n    // Crashes in iOS9 and iOS10. #18402\r\n    // gl.detachShader( program, glVertexShader );\r\n    // gl.detachShader( program, glFragmentShader );\r\n\r\n    gl.deleteShader(glVertexShader);\r\n    gl.deleteShader(glFragmentShader); // set up caching for uniform locations\r\n\r\n    let cachedUniforms;\r\n\r\n    this.getUniforms = function () {\r\n      if (cachedUniforms === undefined) {\r\n        cachedUniforms = new WebGLUniforms(gl, program);\r\n      }\r\n\r\n      return cachedUniforms;\r\n    }; // set up caching for attribute locations\r\n\r\n    let cachedAttributes;\r\n\r\n    this.getAttributes = function () {\r\n      if (cachedAttributes === undefined) {\r\n        cachedAttributes = fetchAttributeLocations(gl, program);\r\n      }\r\n\r\n      return cachedAttributes;\r\n    }; // free resource\r\n\r\n    this.destroy = function () {\r\n      bindingStates.releaseStatesOfProgram(this);\r\n      gl.deleteProgram(program);\r\n      this.program = undefined;\r\n    }; //\r\n\r\n    this.name = parameters.shaderName;\r\n    this.id = programIdCount++;\r\n    this.cacheKey = cacheKey;\r\n    this.usedTimes = 1;\r\n    this.program = program;\r\n    this.vertexShader = glVertexShader;\r\n    this.fragmentShader = glFragmentShader;\r\n    return this;\r\n  }\r\n\r\n  function WebGLPrograms(renderer, cubemaps, extensions, capabilities, bindingStates, clipping) {\r\n    const programs = [];\r\n    const isWebGL2 = capabilities.isWebGL2;\r\n    const logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\r\n    const floatVertexTextures = capabilities.floatVertexTextures;\r\n    const maxVertexUniforms = capabilities.maxVertexUniforms;\r\n    const vertexTextures = capabilities.vertexTextures;\r\n    let precision = capabilities.precision;\r\n    const shaderIDs = {\r\n      MeshDepthMaterial: 'depth',\r\n      MeshDistanceMaterial: 'distanceRGBA',\r\n      MeshNormalMaterial: 'normal',\r\n      MeshBasicMaterial: 'basic',\r\n      MeshLambertMaterial: 'lambert',\r\n      MeshPhongMaterial: 'phong',\r\n      MeshToonMaterial: 'toon',\r\n      MeshStandardMaterial: 'physical',\r\n      MeshPhysicalMaterial: 'physical',\r\n      MeshMatcapMaterial: 'matcap',\r\n      LineBasicMaterial: 'basic',\r\n      LineDashedMaterial: 'dashed',\r\n      PointsMaterial: 'points',\r\n      ShadowMaterial: 'shadow',\r\n      SpriteMaterial: 'sprite',\r\n    };\r\n    const parameterNames = [\r\n      'precision',\r\n      'isWebGL2',\r\n      'supportsVertexTextures',\r\n      'outputEncoding',\r\n      'instancing',\r\n      'instancingColor',\r\n      'map',\r\n      'mapEncoding',\r\n      'matcap',\r\n      'matcapEncoding',\r\n      'envMap',\r\n      'envMapMode',\r\n      'envMapEncoding',\r\n      'envMapCubeUV',\r\n      'lightMap',\r\n      'lightMapEncoding',\r\n      'aoMap',\r\n      'emissiveMap',\r\n      'emissiveMapEncoding',\r\n      'bumpMap',\r\n      'normalMap',\r\n      'objectSpaceNormalMap',\r\n      'tangentSpaceNormalMap',\r\n      'clearcoatMap',\r\n      'clearcoatRoughnessMap',\r\n      'clearcoatNormalMap',\r\n      'displacementMap',\r\n      'specularMap',\r\n      'roughnessMap',\r\n      'metalnessMap',\r\n      'gradientMap',\r\n      'alphaMap',\r\n      'combine',\r\n      'vertexColors',\r\n      'vertexAlphas',\r\n      'vertexTangents',\r\n      'vertexUvs',\r\n      'uvsVertexOnly',\r\n      'fog',\r\n      'useFog',\r\n      'fogExp2',\r\n      'flatShading',\r\n      'sizeAttenuation',\r\n      'logarithmicDepthBuffer',\r\n      'skinning',\r\n      'maxBones',\r\n      'useVertexTexture',\r\n      'morphTargets',\r\n      'morphNormals',\r\n      'premultipliedAlpha',\r\n      'numDirLights',\r\n      'numPointLights',\r\n      'numSpotLights',\r\n      'numHemiLights',\r\n      'numRectAreaLights',\r\n      'numDirLightShadows',\r\n      'numPointLightShadows',\r\n      'numSpotLightShadows',\r\n      'shadowMapEnabled',\r\n      'shadowMapType',\r\n      'toneMapping',\r\n      'physicallyCorrectLights',\r\n      'alphaTest',\r\n      'doubleSided',\r\n      'flipSided',\r\n      'numClippingPlanes',\r\n      'numClipIntersection',\r\n      'depthPacking',\r\n      'dithering',\r\n      'sheen',\r\n      'transmission',\r\n      'transmissionMap',\r\n      'thicknessMap',\r\n    ];\r\n\r\n    function getMaxBones(object) {\r\n      const skeleton = object.skeleton;\r\n      const bones = skeleton.bones;\r\n\r\n      if (floatVertexTextures) {\r\n        return 1024;\r\n      } else {\r\n        // default for when object is not specified\r\n        // ( for example when prebuilding shader to be used with multiple objects )\r\n        //\r\n        //\t- leave some extra space for other uniforms\r\n        //\t- limit here is ANGLE's 254 max uniform vectors\r\n        //\t\t(up to 54 should be safe)\r\n        const nVertexUniforms = maxVertexUniforms;\r\n        const nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\r\n        const maxBones = Math.min(nVertexMatrices, bones.length);\r\n\r\n        if (maxBones < bones.length) {\r\n          console.warn(\r\n            'THREE.WebGLRenderer: Skeleton has ' +\r\n              bones.length +\r\n              ' bones. This GPU supports ' +\r\n              maxBones +\r\n              '.',\r\n          );\r\n          return 0;\r\n        }\r\n\r\n        return maxBones;\r\n      }\r\n    }\r\n\r\n    function getTextureEncodingFromMap(map) {\r\n      let encoding;\r\n\r\n      if (map && map.isTexture) {\r\n        encoding = map.encoding;\r\n      } else if (map && map.isWebGLRenderTarget) {\r\n        console.warn(\r\n          \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\",\r\n        );\r\n        encoding = map.texture.encoding;\r\n      } else {\r\n        encoding = LinearEncoding;\r\n      }\r\n\r\n      return encoding;\r\n    }\r\n\r\n    function getParameters(material, lights, shadows, scene, object) {\r\n      const fog = scene.fog;\r\n      const environment = material.isMeshStandardMaterial ? scene.environment : null;\r\n      const envMap = cubemaps.get(material.envMap || environment);\r\n      const shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\r\n      // (not to blow over maxLights budget)\r\n\r\n      const maxBones = object.isSkinnedMesh ? getMaxBones(object) : 0;\r\n\r\n      if (material.precision !== null) {\r\n        precision = capabilities.getMaxPrecision(material.precision);\r\n\r\n        if (precision !== material.precision) {\r\n          console.warn(\r\n            'THREE.WebGLProgram.getParameters:',\r\n            material.precision,\r\n            'not supported, using',\r\n            precision,\r\n            'instead.',\r\n          );\r\n        }\r\n      }\r\n\r\n      let vertexShader, fragmentShader;\r\n\r\n      if (shaderID) {\r\n        const shader = ShaderLib[shaderID];\r\n        vertexShader = shader.vertexShader;\r\n        fragmentShader = shader.fragmentShader;\r\n      } else {\r\n        vertexShader = material.vertexShader;\r\n        fragmentShader = material.fragmentShader;\r\n      }\r\n\r\n      const currentRenderTarget = renderer.getRenderTarget();\r\n      const parameters = {\r\n        isWebGL2: isWebGL2,\r\n        shaderID: shaderID,\r\n        shaderName: material.type,\r\n        vertexShader: vertexShader,\r\n        fragmentShader: fragmentShader,\r\n        defines: material.defines,\r\n        isRawShaderMaterial: material.isRawShaderMaterial === true,\r\n        glslVersion: material.glslVersion,\r\n        precision: precision,\r\n        instancing: object.isInstancedMesh === true,\r\n        instancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\r\n        supportsVertexTextures: vertexTextures,\r\n        outputEncoding:\r\n          currentRenderTarget !== null\r\n            ? getTextureEncodingFromMap(currentRenderTarget.texture)\r\n            : renderer.outputEncoding,\r\n        map: !!material.map,\r\n        mapEncoding: getTextureEncodingFromMap(material.map),\r\n        matcap: !!material.matcap,\r\n        matcapEncoding: getTextureEncodingFromMap(material.matcap),\r\n        envMap: !!envMap,\r\n        envMapMode: envMap && envMap.mapping,\r\n        envMapEncoding: getTextureEncodingFromMap(envMap),\r\n        envMapCubeUV:\r\n          !!envMap &&\r\n          (envMap.mapping === CubeUVReflectionMapping ||\r\n            envMap.mapping === CubeUVRefractionMapping),\r\n        lightMap: !!material.lightMap,\r\n        lightMapEncoding: getTextureEncodingFromMap(material.lightMap),\r\n        aoMap: !!material.aoMap,\r\n        emissiveMap: !!material.emissiveMap,\r\n        emissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap),\r\n        bumpMap: !!material.bumpMap,\r\n        normalMap: !!material.normalMap,\r\n        objectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\r\n        tangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\r\n        clearcoatMap: !!material.clearcoatMap,\r\n        clearcoatRoughnessMap: !!material.clearcoatRoughnessMap,\r\n        clearcoatNormalMap: !!material.clearcoatNormalMap,\r\n        displacementMap: !!material.displacementMap,\r\n        roughnessMap: !!material.roughnessMap,\r\n        metalnessMap: !!material.metalnessMap,\r\n        specularMap: !!material.specularMap,\r\n        alphaMap: !!material.alphaMap,\r\n        gradientMap: !!material.gradientMap,\r\n        sheen: !!material.sheen,\r\n        transmission: !!material.transmission,\r\n        transmissionMap: !!material.transmissionMap,\r\n        thicknessMap: !!material.thicknessMap,\r\n        combine: material.combine,\r\n        vertexTangents: material.normalMap && material.vertexTangents,\r\n        vertexColors: material.vertexColors,\r\n        vertexAlphas:\r\n          material.vertexColors === true &&\r\n          object.geometry &&\r\n          object.geometry.attributes.color &&\r\n          object.geometry.attributes.color.itemSize === 4,\r\n        vertexUvs:\r\n          !!material.map ||\r\n          !!material.bumpMap ||\r\n          !!material.normalMap ||\r\n          !!material.specularMap ||\r\n          !!material.alphaMap ||\r\n          !!material.emissiveMap ||\r\n          !!material.roughnessMap ||\r\n          !!material.metalnessMap ||\r\n          !!material.clearcoatMap ||\r\n          !!material.clearcoatRoughnessMap ||\r\n          !!material.clearcoatNormalMap ||\r\n          !!material.displacementMap ||\r\n          !!material.transmission ||\r\n          !!material.transmissionMap ||\r\n          !!material.thicknessMap,\r\n        uvsVertexOnly:\r\n          !(\r\n            !!material.map ||\r\n            !!material.bumpMap ||\r\n            !!material.normalMap ||\r\n            !!material.specularMap ||\r\n            !!material.alphaMap ||\r\n            !!material.emissiveMap ||\r\n            !!material.roughnessMap ||\r\n            !!material.metalnessMap ||\r\n            !!material.clearcoatNormalMap ||\r\n            !!material.transmission ||\r\n            !!material.transmissionMap ||\r\n            !!material.thicknessMap\r\n          ) && !!material.displacementMap,\r\n        fog: !!fog,\r\n        useFog: material.fog,\r\n        fogExp2: fog && fog.isFogExp2,\r\n        flatShading: !!material.flatShading,\r\n        sizeAttenuation: material.sizeAttenuation,\r\n        logarithmicDepthBuffer: logarithmicDepthBuffer,\r\n        skinning: object.isSkinnedMesh === true && maxBones > 0,\r\n        maxBones: maxBones,\r\n        useVertexTexture: floatVertexTextures,\r\n        morphTargets: material.morphTargets,\r\n        morphNormals: material.morphNormals,\r\n        numDirLights: lights.directional.length,\r\n        numPointLights: lights.point.length,\r\n        numSpotLights: lights.spot.length,\r\n        numRectAreaLights: lights.rectArea.length,\r\n        numHemiLights: lights.hemi.length,\r\n        numDirLightShadows: lights.directionalShadowMap.length,\r\n        numPointLightShadows: lights.pointShadowMap.length,\r\n        numSpotLightShadows: lights.spotShadowMap.length,\r\n        numClippingPlanes: clipping.numPlanes,\r\n        numClipIntersection: clipping.numIntersection,\r\n        dithering: material.dithering,\r\n        shadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\r\n        shadowMapType: renderer.shadowMap.type,\r\n        toneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\r\n        physicallyCorrectLights: renderer.physicallyCorrectLights,\r\n        premultipliedAlpha: material.premultipliedAlpha,\r\n        alphaTest: material.alphaTest,\r\n        doubleSided: material.side === DoubleSide,\r\n        flipSided: material.side === BackSide,\r\n        depthPacking: material.depthPacking !== undefined ? material.depthPacking : false,\r\n        index0AttributeName: material.index0AttributeName,\r\n        extensionDerivatives: material.extensions && material.extensions.derivatives,\r\n        extensionFragDepth: material.extensions && material.extensions.fragDepth,\r\n        extensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\r\n        extensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\r\n        rendererExtensionFragDepth: isWebGL2 || extensions.has('EXT_frag_depth'),\r\n        rendererExtensionDrawBuffers: isWebGL2 || extensions.has('WEBGL_draw_buffers'),\r\n        rendererExtensionShaderTextureLod: isWebGL2 || extensions.has('EXT_shader_texture_lod'),\r\n        customProgramCacheKey: material.customProgramCacheKey(),\r\n      };\r\n      return parameters;\r\n    }\r\n\r\n    function getProgramCacheKey(parameters) {\r\n      const array = [];\r\n\r\n      if (parameters.shaderID) {\r\n        array.push(parameters.shaderID);\r\n      } else {\r\n        array.push(parameters.fragmentShader);\r\n        array.push(parameters.vertexShader);\r\n      }\r\n\r\n      if (parameters.defines !== undefined) {\r\n        for (const name in parameters.defines) {\r\n          array.push(name);\r\n          array.push(parameters.defines[name]);\r\n        }\r\n      }\r\n\r\n      if (parameters.isRawShaderMaterial === false) {\r\n        for (let i = 0; i < parameterNames.length; i++) {\r\n          array.push(parameters[parameterNames[i]]);\r\n        }\r\n\r\n        array.push(renderer.outputEncoding);\r\n        array.push(renderer.gammaFactor);\r\n      }\r\n\r\n      array.push(parameters.customProgramCacheKey);\r\n      return array.join();\r\n    }\r\n\r\n    function getUniforms(material) {\r\n      const shaderID = shaderIDs[material.type];\r\n      let uniforms;\r\n\r\n      if (shaderID) {\r\n        const shader = ShaderLib[shaderID];\r\n        uniforms = UniformsUtils.clone(shader.uniforms);\r\n      } else {\r\n        uniforms = material.uniforms;\r\n      }\r\n\r\n      return uniforms;\r\n    }\r\n\r\n    function acquireProgram(parameters, cacheKey) {\r\n      let program; // Check if code has been already compiled\r\n\r\n      for (let p = 0, pl = programs.length; p < pl; p++) {\r\n        const preexistingProgram = programs[p];\r\n\r\n        if (preexistingProgram.cacheKey === cacheKey) {\r\n          program = preexistingProgram;\r\n          ++program.usedTimes;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (program === undefined) {\r\n        program = new WebGLProgram(renderer, cacheKey, parameters, bindingStates);\r\n        programs.push(program);\r\n      }\r\n\r\n      return program;\r\n    }\r\n\r\n    function releaseProgram(program) {\r\n      if (--program.usedTimes === 0) {\r\n        // Remove from unordered set\r\n        const i = programs.indexOf(program);\r\n        programs[i] = programs[programs.length - 1];\r\n        programs.pop(); // Free WebGL resources\r\n\r\n        program.destroy();\r\n      }\r\n    }\r\n\r\n    return {\r\n      getParameters: getParameters,\r\n      getProgramCacheKey: getProgramCacheKey,\r\n      getUniforms: getUniforms,\r\n      acquireProgram: acquireProgram,\r\n      releaseProgram: releaseProgram,\r\n      // Exposed for resource monitoring & error feedback via renderer.info:\r\n      programs: programs,\r\n    };\r\n  }\r\n\r\n  function WebGLProperties() {\r\n    let properties = new WeakMap();\r\n\r\n    function get(object) {\r\n      let map = properties.get(object);\r\n\r\n      if (map === undefined) {\r\n        map = {};\r\n        properties.set(object, map);\r\n      }\r\n\r\n      return map;\r\n    }\r\n\r\n    function remove(object) {\r\n      properties.delete(object);\r\n    }\r\n\r\n    function update(object, key, value) {\r\n      properties.get(object)[key] = value;\r\n    }\r\n\r\n    function dispose() {\r\n      properties = new WeakMap();\r\n    }\r\n\r\n    return {\r\n      get: get,\r\n      remove: remove,\r\n      update: update,\r\n      dispose: dispose,\r\n    };\r\n  }\r\n\r\n  function painterSortStable(a, b) {\r\n    if (a.groupOrder !== b.groupOrder) {\r\n      return a.groupOrder - b.groupOrder;\r\n    } else if (a.renderOrder !== b.renderOrder) {\r\n      return a.renderOrder - b.renderOrder;\r\n    } else if (a.program !== b.program) {\r\n      return a.program.id - b.program.id;\r\n    } else if (a.material.id !== b.material.id) {\r\n      return a.material.id - b.material.id;\r\n    } else if (a.z !== b.z) {\r\n      return a.z - b.z;\r\n    } else {\r\n      return a.id - b.id;\r\n    }\r\n  }\r\n\r\n  function reversePainterSortStable(a, b) {\r\n    if (a.groupOrder !== b.groupOrder) {\r\n      return a.groupOrder - b.groupOrder;\r\n    } else if (a.renderOrder !== b.renderOrder) {\r\n      return a.renderOrder - b.renderOrder;\r\n    } else if (a.z !== b.z) {\r\n      return b.z - a.z;\r\n    } else {\r\n      return a.id - b.id;\r\n    }\r\n  }\r\n\r\n  function WebGLRenderList(properties) {\r\n    const renderItems = [];\r\n    let renderItemsIndex = 0;\r\n    const opaque = [];\r\n    const transmissive = [];\r\n    const transparent = [];\r\n    const defaultProgram = {\r\n      id: -1,\r\n    };\r\n\r\n    function init() {\r\n      renderItemsIndex = 0;\r\n      opaque.length = 0;\r\n      transmissive.length = 0;\r\n      transparent.length = 0;\r\n    }\r\n\r\n    function getNextRenderItem(object, geometry, material, groupOrder, z, group) {\r\n      let renderItem = renderItems[renderItemsIndex];\r\n      const materialProperties = properties.get(material);\r\n\r\n      if (renderItem === undefined) {\r\n        renderItem = {\r\n          id: object.id,\r\n          object: object,\r\n          geometry: geometry,\r\n          material: material,\r\n          program: materialProperties.program || defaultProgram,\r\n          groupOrder: groupOrder,\r\n          renderOrder: object.renderOrder,\r\n          z: z,\r\n          group: group,\r\n        };\r\n        renderItems[renderItemsIndex] = renderItem;\r\n      } else {\r\n        renderItem.id = object.id;\r\n        renderItem.object = object;\r\n        renderItem.geometry = geometry;\r\n        renderItem.material = material;\r\n        renderItem.program = materialProperties.program || defaultProgram;\r\n        renderItem.groupOrder = groupOrder;\r\n        renderItem.renderOrder = object.renderOrder;\r\n        renderItem.z = z;\r\n        renderItem.group = group;\r\n      }\r\n\r\n      renderItemsIndex++;\r\n      return renderItem;\r\n    }\r\n\r\n    function push(object, geometry, material, groupOrder, z, group) {\r\n      const renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\r\n\r\n      if (material.transmission > 0.0) {\r\n        transmissive.push(renderItem);\r\n      } else if (material.transparent === true) {\r\n        transparent.push(renderItem);\r\n      } else {\r\n        opaque.push(renderItem);\r\n      }\r\n    }\r\n\r\n    function unshift(object, geometry, material, groupOrder, z, group) {\r\n      const renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\r\n\r\n      if (material.transmission > 0.0) {\r\n        transmissive.unshift(renderItem);\r\n      } else if (material.transparent === true) {\r\n        transparent.unshift(renderItem);\r\n      } else {\r\n        opaque.unshift(renderItem);\r\n      }\r\n    }\r\n\r\n    function sort(customOpaqueSort, customTransparentSort) {\r\n      if (opaque.length > 1) opaque.sort(customOpaqueSort || painterSortStable);\r\n      if (transmissive.length > 1)\r\n        transmissive.sort(customTransparentSort || reversePainterSortStable);\r\n      if (transparent.length > 1)\r\n        transparent.sort(customTransparentSort || reversePainterSortStable);\r\n    }\r\n\r\n    function finish() {\r\n      // Clear references from inactive renderItems in the list\r\n      for (let i = renderItemsIndex, il = renderItems.length; i < il; i++) {\r\n        const renderItem = renderItems[i];\r\n        if (renderItem.id === null) break;\r\n        renderItem.id = null;\r\n        renderItem.object = null;\r\n        renderItem.geometry = null;\r\n        renderItem.material = null;\r\n        renderItem.program = null;\r\n        renderItem.group = null;\r\n      }\r\n    }\r\n\r\n    return {\r\n      opaque: opaque,\r\n      transmissive: transmissive,\r\n      transparent: transparent,\r\n      init: init,\r\n      push: push,\r\n      unshift: unshift,\r\n      finish: finish,\r\n      sort: sort,\r\n    };\r\n  }\r\n\r\n  function WebGLRenderLists(properties) {\r\n    let lists = new WeakMap();\r\n\r\n    function get(scene, renderCallDepth) {\r\n      let list;\r\n\r\n      if (lists.has(scene) === false) {\r\n        list = new WebGLRenderList(properties);\r\n        lists.set(scene, [list]);\r\n      } else {\r\n        if (renderCallDepth >= lists.get(scene).length) {\r\n          list = new WebGLRenderList(properties);\r\n          lists.get(scene).push(list);\r\n        } else {\r\n          list = lists.get(scene)[renderCallDepth];\r\n        }\r\n      }\r\n\r\n      return list;\r\n    }\r\n\r\n    function dispose() {\r\n      lists = new WeakMap();\r\n    }\r\n\r\n    return {\r\n      get: get,\r\n      dispose: dispose,\r\n    };\r\n  }\r\n\r\n  function UniformsCache() {\r\n    const lights = {};\r\n    return {\r\n      get: function (light) {\r\n        if (lights[light.id] !== undefined) {\r\n          return lights[light.id];\r\n        }\r\n\r\n        let uniforms;\r\n\r\n        switch (light.type) {\r\n          case 'DirectionalLight':\r\n            uniforms = {\r\n              direction: new Vector3(),\r\n              color: new Color(),\r\n            };\r\n            break;\r\n\r\n          case 'SpotLight':\r\n            uniforms = {\r\n              position: new Vector3(),\r\n              direction: new Vector3(),\r\n              color: new Color(),\r\n              distance: 0,\r\n              coneCos: 0,\r\n              penumbraCos: 0,\r\n              decay: 0,\r\n            };\r\n            break;\r\n\r\n          case 'PointLight':\r\n            uniforms = {\r\n              position: new Vector3(),\r\n              color: new Color(),\r\n              distance: 0,\r\n              decay: 0,\r\n            };\r\n            break;\r\n\r\n          case 'HemisphereLight':\r\n            uniforms = {\r\n              direction: new Vector3(),\r\n              skyColor: new Color(),\r\n              groundColor: new Color(),\r\n            };\r\n            break;\r\n\r\n          case 'RectAreaLight':\r\n            uniforms = {\r\n              color: new Color(),\r\n              position: new Vector3(),\r\n              halfWidth: new Vector3(),\r\n              halfHeight: new Vector3(),\r\n            };\r\n            break;\r\n        }\r\n\r\n        lights[light.id] = uniforms;\r\n        return uniforms;\r\n      },\r\n    };\r\n  }\r\n\r\n  function ShadowUniformsCache() {\r\n    const lights = {};\r\n    return {\r\n      get: function (light) {\r\n        if (lights[light.id] !== undefined) {\r\n          return lights[light.id];\r\n        }\r\n\r\n        let uniforms;\r\n\r\n        switch (light.type) {\r\n          case 'DirectionalLight':\r\n            uniforms = {\r\n              shadowBias: 0,\r\n              shadowNormalBias: 0,\r\n              shadowRadius: 1,\r\n              shadowMapSize: new Vector2(),\r\n            };\r\n            break;\r\n\r\n          case 'SpotLight':\r\n            uniforms = {\r\n              shadowBias: 0,\r\n              shadowNormalBias: 0,\r\n              shadowRadius: 1,\r\n              shadowMapSize: new Vector2(),\r\n            };\r\n            break;\r\n\r\n          case 'PointLight':\r\n            uniforms = {\r\n              shadowBias: 0,\r\n              shadowNormalBias: 0,\r\n              shadowRadius: 1,\r\n              shadowMapSize: new Vector2(),\r\n              shadowCameraNear: 1,\r\n              shadowCameraFar: 1000,\r\n            };\r\n            break;\r\n          // TODO (abelnation): set RectAreaLight shadow uniforms\r\n        }\r\n\r\n        lights[light.id] = uniforms;\r\n        return uniforms;\r\n      },\r\n    };\r\n  }\r\n\r\n  let nextVersion = 0;\r\n\r\n  function shadowCastingLightsFirst(lightA, lightB) {\r\n    return (lightB.castShadow ? 1 : 0) - (lightA.castShadow ? 1 : 0);\r\n  }\r\n\r\n  function WebGLLights(extensions, capabilities) {\r\n    const cache = new UniformsCache();\r\n    const shadowCache = ShadowUniformsCache();\r\n    const state = {\r\n      version: 0,\r\n      hash: {\r\n        directionalLength: -1,\r\n        pointLength: -1,\r\n        spotLength: -1,\r\n        rectAreaLength: -1,\r\n        hemiLength: -1,\r\n        numDirectionalShadows: -1,\r\n        numPointShadows: -1,\r\n        numSpotShadows: -1,\r\n      },\r\n      ambient: [0, 0, 0],\r\n      probe: [],\r\n      directional: [],\r\n      directionalShadow: [],\r\n      directionalShadowMap: [],\r\n      directionalShadowMatrix: [],\r\n      spot: [],\r\n      spotShadow: [],\r\n      spotShadowMap: [],\r\n      spotShadowMatrix: [],\r\n      rectArea: [],\r\n      rectAreaLTC1: null,\r\n      rectAreaLTC2: null,\r\n      point: [],\r\n      pointShadow: [],\r\n      pointShadowMap: [],\r\n      pointShadowMatrix: [],\r\n      hemi: [],\r\n    };\r\n\r\n    for (let i = 0; i < 9; i++) state.probe.push(new Vector3());\r\n\r\n    const vector3 = new Vector3();\r\n    const matrix4 = new Matrix4();\r\n    const matrix42 = new Matrix4();\r\n\r\n    function setup(lights) {\r\n      let r = 0,\r\n        g = 0,\r\n        b = 0;\r\n\r\n      for (let i = 0; i < 9; i++) state.probe[i].set(0, 0, 0);\r\n\r\n      let directionalLength = 0;\r\n      let pointLength = 0;\r\n      let spotLength = 0;\r\n      let rectAreaLength = 0;\r\n      let hemiLength = 0;\r\n      let numDirectionalShadows = 0;\r\n      let numPointShadows = 0;\r\n      let numSpotShadows = 0;\r\n      lights.sort(shadowCastingLightsFirst);\r\n\r\n      for (let i = 0, l = lights.length; i < l; i++) {\r\n        const light = lights[i];\r\n        const color = light.color;\r\n        const intensity = light.intensity;\r\n        const distance = light.distance;\r\n        const shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\r\n\r\n        if (light.isAmbientLight) {\r\n          r += color.r * intensity;\r\n          g += color.g * intensity;\r\n          b += color.b * intensity;\r\n        } else if (light.isLightProbe) {\r\n          for (let j = 0; j < 9; j++) {\r\n            state.probe[j].addScaledVector(light.sh.coefficients[j], intensity);\r\n          }\r\n        } else if (light.isDirectionalLight) {\r\n          const uniforms = cache.get(light);\r\n          uniforms.color.copy(light.color).multiplyScalar(light.intensity);\r\n\r\n          if (light.castShadow) {\r\n            const shadow = light.shadow;\r\n            const shadowUniforms = shadowCache.get(light);\r\n            shadowUniforms.shadowBias = shadow.bias;\r\n            shadowUniforms.shadowNormalBias = shadow.normalBias;\r\n            shadowUniforms.shadowRadius = shadow.radius;\r\n            shadowUniforms.shadowMapSize = shadow.mapSize;\r\n            state.directionalShadow[directionalLength] = shadowUniforms;\r\n            state.directionalShadowMap[directionalLength] = shadowMap;\r\n            state.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\r\n            numDirectionalShadows++;\r\n          }\r\n\r\n          state.directional[directionalLength] = uniforms;\r\n          directionalLength++;\r\n        } else if (light.isSpotLight) {\r\n          const uniforms = cache.get(light);\r\n          uniforms.position.setFromMatrixPosition(light.matrixWorld);\r\n          uniforms.color.copy(color).multiplyScalar(intensity);\r\n          uniforms.distance = distance;\r\n          uniforms.coneCos = Math.cos(light.angle);\r\n          uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\r\n          uniforms.decay = light.decay;\r\n\r\n          if (light.castShadow) {\r\n            const shadow = light.shadow;\r\n            const shadowUniforms = shadowCache.get(light);\r\n            shadowUniforms.shadowBias = shadow.bias;\r\n            shadowUniforms.shadowNormalBias = shadow.normalBias;\r\n            shadowUniforms.shadowRadius = shadow.radius;\r\n            shadowUniforms.shadowMapSize = shadow.mapSize;\r\n            state.spotShadow[spotLength] = shadowUniforms;\r\n            state.spotShadowMap[spotLength] = shadowMap;\r\n            state.spotShadowMatrix[spotLength] = light.shadow.matrix;\r\n            numSpotShadows++;\r\n          }\r\n\r\n          state.spot[spotLength] = uniforms;\r\n          spotLength++;\r\n        } else if (light.isRectAreaLight) {\r\n          const uniforms = cache.get(light); // (a) intensity is the total visible light emitted\r\n          //uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\r\n          // (b) intensity is the brightness of the light\r\n\r\n          uniforms.color.copy(color).multiplyScalar(intensity);\r\n          uniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\r\n          uniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\r\n          state.rectArea[rectAreaLength] = uniforms;\r\n          rectAreaLength++;\r\n        } else if (light.isPointLight) {\r\n          const uniforms = cache.get(light);\r\n          uniforms.color.copy(light.color).multiplyScalar(light.intensity);\r\n          uniforms.distance = light.distance;\r\n          uniforms.decay = light.decay;\r\n\r\n          if (light.castShadow) {\r\n            const shadow = light.shadow;\r\n            const shadowUniforms = shadowCache.get(light);\r\n            shadowUniforms.shadowBias = shadow.bias;\r\n            shadowUniforms.shadowNormalBias = shadow.normalBias;\r\n            shadowUniforms.shadowRadius = shadow.radius;\r\n            shadowUniforms.shadowMapSize = shadow.mapSize;\r\n            shadowUniforms.shadowCameraNear = shadow.camera.near;\r\n            shadowUniforms.shadowCameraFar = shadow.camera.far;\r\n            state.pointShadow[pointLength] = shadowUniforms;\r\n            state.pointShadowMap[pointLength] = shadowMap;\r\n            state.pointShadowMatrix[pointLength] = light.shadow.matrix;\r\n            numPointShadows++;\r\n          }\r\n\r\n          state.point[pointLength] = uniforms;\r\n          pointLength++;\r\n        } else if (light.isHemisphereLight) {\r\n          const uniforms = cache.get(light);\r\n          uniforms.skyColor.copy(light.color).multiplyScalar(intensity);\r\n          uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);\r\n          state.hemi[hemiLength] = uniforms;\r\n          hemiLength++;\r\n        }\r\n      }\r\n\r\n      if (rectAreaLength > 0) {\r\n        if (capabilities.isWebGL2) {\r\n          // WebGL 2\r\n          state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\r\n          state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\r\n        } else {\r\n          // WebGL 1\r\n          if (extensions.has('OES_texture_float_linear') === true) {\r\n            state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\r\n            state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\r\n          } else if (extensions.has('OES_texture_half_float_linear') === true) {\r\n            state.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\r\n            state.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\r\n          } else {\r\n            console.error(\r\n              'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.',\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      state.ambient[0] = r;\r\n      state.ambient[1] = g;\r\n      state.ambient[2] = b;\r\n      const hash = state.hash;\r\n\r\n      if (\r\n        hash.directionalLength !== directionalLength ||\r\n        hash.pointLength !== pointLength ||\r\n        hash.spotLength !== spotLength ||\r\n        hash.rectAreaLength !== rectAreaLength ||\r\n        hash.hemiLength !== hemiLength ||\r\n        hash.numDirectionalShadows !== numDirectionalShadows ||\r\n        hash.numPointShadows !== numPointShadows ||\r\n        hash.numSpotShadows !== numSpotShadows\r\n      ) {\r\n        state.directional.length = directionalLength;\r\n        state.spot.length = spotLength;\r\n        state.rectArea.length = rectAreaLength;\r\n        state.point.length = pointLength;\r\n        state.hemi.length = hemiLength;\r\n        state.directionalShadow.length = numDirectionalShadows;\r\n        state.directionalShadowMap.length = numDirectionalShadows;\r\n        state.pointShadow.length = numPointShadows;\r\n        state.pointShadowMap.length = numPointShadows;\r\n        state.spotShadow.length = numSpotShadows;\r\n        state.spotShadowMap.length = numSpotShadows;\r\n        state.directionalShadowMatrix.length = numDirectionalShadows;\r\n        state.pointShadowMatrix.length = numPointShadows;\r\n        state.spotShadowMatrix.length = numSpotShadows;\r\n        hash.directionalLength = directionalLength;\r\n        hash.pointLength = pointLength;\r\n        hash.spotLength = spotLength;\r\n        hash.rectAreaLength = rectAreaLength;\r\n        hash.hemiLength = hemiLength;\r\n        hash.numDirectionalShadows = numDirectionalShadows;\r\n        hash.numPointShadows = numPointShadows;\r\n        hash.numSpotShadows = numSpotShadows;\r\n        state.version = nextVersion++;\r\n      }\r\n    }\r\n\r\n    function setupView(lights, camera) {\r\n      let directionalLength = 0;\r\n      let pointLength = 0;\r\n      let spotLength = 0;\r\n      let rectAreaLength = 0;\r\n      let hemiLength = 0;\r\n      const viewMatrix = camera.matrixWorldInverse;\r\n\r\n      for (let i = 0, l = lights.length; i < l; i++) {\r\n        const light = lights[i];\r\n\r\n        if (light.isDirectionalLight) {\r\n          const uniforms = state.directional[directionalLength];\r\n          uniforms.direction.setFromMatrixPosition(light.matrixWorld);\r\n          vector3.setFromMatrixPosition(light.target.matrixWorld);\r\n          uniforms.direction.sub(vector3);\r\n          uniforms.direction.transformDirection(viewMatrix);\r\n          directionalLength++;\r\n        } else if (light.isSpotLight) {\r\n          const uniforms = state.spot[spotLength];\r\n          uniforms.position.setFromMatrixPosition(light.matrixWorld);\r\n          uniforms.position.applyMatrix4(viewMatrix);\r\n          uniforms.direction.setFromMatrixPosition(light.matrixWorld);\r\n          vector3.setFromMatrixPosition(light.target.matrixWorld);\r\n          uniforms.direction.sub(vector3);\r\n          uniforms.direction.transformDirection(viewMatrix);\r\n          spotLength++;\r\n        } else if (light.isRectAreaLight) {\r\n          const uniforms = state.rectArea[rectAreaLength];\r\n          uniforms.position.setFromMatrixPosition(light.matrixWorld);\r\n          uniforms.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\r\n\r\n          matrix42.identity();\r\n          matrix4.copy(light.matrixWorld);\r\n          matrix4.premultiply(viewMatrix);\r\n          matrix42.extractRotation(matrix4);\r\n          uniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\r\n          uniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\r\n          uniforms.halfWidth.applyMatrix4(matrix42);\r\n          uniforms.halfHeight.applyMatrix4(matrix42);\r\n          rectAreaLength++;\r\n        } else if (light.isPointLight) {\r\n          const uniforms = state.point[pointLength];\r\n          uniforms.position.setFromMatrixPosition(light.matrixWorld);\r\n          uniforms.position.applyMatrix4(viewMatrix);\r\n          pointLength++;\r\n        } else if (light.isHemisphereLight) {\r\n          const uniforms = state.hemi[hemiLength];\r\n          uniforms.direction.setFromMatrixPosition(light.matrixWorld);\r\n          uniforms.direction.transformDirection(viewMatrix);\r\n          uniforms.direction.normalize();\r\n          hemiLength++;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      setup: setup,\r\n      setupView: setupView,\r\n      state: state,\r\n    };\r\n  }\r\n\r\n  function WebGLRenderState(extensions, capabilities) {\r\n    const lights = new WebGLLights(extensions, capabilities);\r\n    const lightsArray = [];\r\n    const shadowsArray = [];\r\n\r\n    function init() {\r\n      lightsArray.length = 0;\r\n      shadowsArray.length = 0;\r\n    }\r\n\r\n    function pushLight(light) {\r\n      lightsArray.push(light);\r\n    }\r\n\r\n    function pushShadow(shadowLight) {\r\n      shadowsArray.push(shadowLight);\r\n    }\r\n\r\n    function setupLights() {\r\n      lights.setup(lightsArray);\r\n    }\r\n\r\n    function setupLightsView(camera) {\r\n      lights.setupView(lightsArray, camera);\r\n    }\r\n\r\n    const state = {\r\n      lightsArray: lightsArray,\r\n      shadowsArray: shadowsArray,\r\n      lights: lights,\r\n    };\r\n    return {\r\n      init: init,\r\n      state: state,\r\n      setupLights: setupLights,\r\n      setupLightsView: setupLightsView,\r\n      pushLight: pushLight,\r\n      pushShadow: pushShadow,\r\n    };\r\n  }\r\n\r\n  function WebGLRenderStates(extensions, capabilities) {\r\n    let renderStates = new WeakMap();\r\n\r\n    function get(scene, renderCallDepth = 0) {\r\n      let renderState;\r\n\r\n      if (renderStates.has(scene) === false) {\r\n        renderState = new WebGLRenderState(extensions, capabilities);\r\n        renderStates.set(scene, [renderState]);\r\n      } else {\r\n        if (renderCallDepth >= renderStates.get(scene).length) {\r\n          renderState = new WebGLRenderState(extensions, capabilities);\r\n          renderStates.get(scene).push(renderState);\r\n        } else {\r\n          renderState = renderStates.get(scene)[renderCallDepth];\r\n        }\r\n      }\r\n\r\n      return renderState;\r\n    }\r\n\r\n    function dispose() {\r\n      renderStates = new WeakMap();\r\n    }\r\n\r\n    return {\r\n      get: get,\r\n      dispose: dispose,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * parameters = {\r\n   *\r\n   *\topacity: <float>,\r\n   *\r\n   *\tmap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\talphaMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n   *\tdisplacementScale: <float>,\r\n   *\tdisplacementBias: <float>,\r\n   *\r\n   *\twireframe: <boolean>,\r\n   *\twireframeLinewidth: <float>\r\n   * }\r\n   */\r\n\r\n  class MeshDepthMaterial extends Material {\r\n    constructor(parameters) {\r\n      super();\r\n      this.type = 'MeshDepthMaterial';\r\n      this.depthPacking = BasicDepthPacking;\r\n      this.morphTargets = false;\r\n      this.map = null;\r\n      this.alphaMap = null;\r\n      this.displacementMap = null;\r\n      this.displacementScale = 1;\r\n      this.displacementBias = 0;\r\n      this.wireframe = false;\r\n      this.wireframeLinewidth = 1;\r\n      this.fog = false;\r\n      this.setValues(parameters);\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.depthPacking = source.depthPacking;\r\n      this.morphTargets = source.morphTargets;\r\n      this.map = source.map;\r\n      this.alphaMap = source.alphaMap;\r\n      this.displacementMap = source.displacementMap;\r\n      this.displacementScale = source.displacementScale;\r\n      this.displacementBias = source.displacementBias;\r\n      this.wireframe = source.wireframe;\r\n      this.wireframeLinewidth = source.wireframeLinewidth;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  MeshDepthMaterial.prototype.isMeshDepthMaterial = true;\r\n\r\n  /**\r\n   * parameters = {\r\n   *\r\n   *\treferencePosition: <float>,\r\n   *\tnearDistance: <float>,\r\n   *\tfarDistance: <float>,\r\n   *\r\n   *\tmorphTargets: <bool>,\r\n   *\r\n   *\tmap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\talphaMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n   *\tdisplacementScale: <float>,\r\n   *\tdisplacementBias: <float>\r\n   *\r\n   * }\r\n   */\r\n\r\n  class MeshDistanceMaterial extends Material {\r\n    constructor(parameters) {\r\n      super();\r\n      this.type = 'MeshDistanceMaterial';\r\n      this.referencePosition = new Vector3();\r\n      this.nearDistance = 1;\r\n      this.farDistance = 1000;\r\n      this.morphTargets = false;\r\n      this.map = null;\r\n      this.alphaMap = null;\r\n      this.displacementMap = null;\r\n      this.displacementScale = 1;\r\n      this.displacementBias = 0;\r\n      this.fog = false;\r\n      this.setValues(parameters);\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.referencePosition.copy(source.referencePosition);\r\n      this.nearDistance = source.nearDistance;\r\n      this.farDistance = source.farDistance;\r\n      this.morphTargets = source.morphTargets;\r\n      this.map = source.map;\r\n      this.alphaMap = source.alphaMap;\r\n      this.displacementMap = source.displacementMap;\r\n      this.displacementScale = source.displacementScale;\r\n      this.displacementBias = source.displacementBias;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  MeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\r\n\r\n  var vsm_frag =\r\n    'uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\\n\\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean * HALF_SAMPLE_RATE;\\n\\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}';\r\n\r\n  var vsm_vert = 'void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}';\r\n\r\n  function WebGLShadowMap(_renderer, _objects, _capabilities) {\r\n    let _frustum = new Frustum();\r\n\r\n    const _shadowMapSize = new Vector2(),\r\n      _viewportSize = new Vector2(),\r\n      _viewport = new Vector4(),\r\n      _depthMaterials = [],\r\n      _distanceMaterials = [],\r\n      _materialCache = {},\r\n      _maxTextureSize = _capabilities.maxTextureSize;\r\n\r\n    const shadowSide = {\r\n      0: BackSide,\r\n      1: FrontSide,\r\n      2: DoubleSide,\r\n    };\r\n    const shadowMaterialVertical = new ShaderMaterial({\r\n      defines: {\r\n        SAMPLE_RATE: 2.0 / 8.0,\r\n        HALF_SAMPLE_RATE: 1.0 / 8.0,\r\n      },\r\n      uniforms: {\r\n        shadow_pass: {\r\n          value: null,\r\n        },\r\n        resolution: {\r\n          value: new Vector2(),\r\n        },\r\n        radius: {\r\n          value: 4.0,\r\n        },\r\n      },\r\n      vertexShader: vsm_vert,\r\n      fragmentShader: vsm_frag,\r\n    });\r\n    const shadowMaterialHorizontal = shadowMaterialVertical.clone();\r\n    shadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\r\n    const fullScreenTri = new BufferGeometry();\r\n    fullScreenTri.setAttribute(\r\n      'position',\r\n      new BufferAttribute(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3),\r\n    );\r\n    const fullScreenMesh = new Mesh(fullScreenTri, shadowMaterialVertical);\r\n    const scope = this;\r\n    this.enabled = false;\r\n    this.autoUpdate = true;\r\n    this.needsUpdate = false;\r\n    this.type = PCFShadowMap;\r\n\r\n    this.render = function (lights, scene, camera) {\r\n      if (scope.enabled === false) return;\r\n      if (scope.autoUpdate === false && scope.needsUpdate === false) return;\r\n      if (lights.length === 0) return;\r\n\r\n      const currentRenderTarget = _renderer.getRenderTarget();\r\n\r\n      const activeCubeFace = _renderer.getActiveCubeFace();\r\n\r\n      const activeMipmapLevel = _renderer.getActiveMipmapLevel();\r\n\r\n      const _state = _renderer.state; // Set GL state for depth map.\r\n\r\n      _state.setBlending(NoBlending);\r\n\r\n      _state.buffers.color.setClear(1, 1, 1, 1);\r\n\r\n      _state.buffers.depth.setTest(true);\r\n\r\n      _state.setScissorTest(false); // render depth map\r\n\r\n      for (let i = 0, il = lights.length; i < il; i++) {\r\n        const light = lights[i];\r\n        const shadow = light.shadow;\r\n\r\n        if (shadow === undefined) {\r\n          console.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\r\n          continue;\r\n        }\r\n\r\n        if (shadow.autoUpdate === false && shadow.needsUpdate === false) continue;\r\n\r\n        _shadowMapSize.copy(shadow.mapSize);\r\n\r\n        const shadowFrameExtents = shadow.getFrameExtents();\r\n\r\n        _shadowMapSize.multiply(shadowFrameExtents);\r\n\r\n        _viewportSize.copy(shadow.mapSize);\r\n\r\n        if (_shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize) {\r\n          if (_shadowMapSize.x > _maxTextureSize) {\r\n            _viewportSize.x = Math.floor(_maxTextureSize / shadowFrameExtents.x);\r\n            _shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\r\n            shadow.mapSize.x = _viewportSize.x;\r\n          }\r\n\r\n          if (_shadowMapSize.y > _maxTextureSize) {\r\n            _viewportSize.y = Math.floor(_maxTextureSize / shadowFrameExtents.y);\r\n            _shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\r\n            shadow.mapSize.y = _viewportSize.y;\r\n          }\r\n        }\r\n\r\n        if (shadow.map === null && !shadow.isPointLightShadow && this.type === VSMShadowMap) {\r\n          const pars = {\r\n            minFilter: LinearFilter,\r\n            magFilter: LinearFilter,\r\n            format: RGBAFormat,\r\n          };\r\n          shadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\r\n          shadow.map.texture.name = light.name + '.shadowMap';\r\n          shadow.mapPass = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\r\n          shadow.camera.updateProjectionMatrix();\r\n        }\r\n\r\n        if (shadow.map === null) {\r\n          const pars = {\r\n            minFilter: NearestFilter,\r\n            magFilter: NearestFilter,\r\n            format: RGBAFormat,\r\n          };\r\n          shadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\r\n          shadow.map.texture.name = light.name + '.shadowMap';\r\n          shadow.camera.updateProjectionMatrix();\r\n        }\r\n\r\n        _renderer.setRenderTarget(shadow.map);\r\n\r\n        _renderer.clear();\r\n\r\n        const viewportCount = shadow.getViewportCount();\r\n\r\n        for (let vp = 0; vp < viewportCount; vp++) {\r\n          const viewport = shadow.getViewport(vp);\r\n\r\n          _viewport.set(\r\n            _viewportSize.x * viewport.x,\r\n            _viewportSize.y * viewport.y,\r\n            _viewportSize.x * viewport.z,\r\n            _viewportSize.y * viewport.w,\r\n          );\r\n\r\n          _state.viewport(_viewport);\r\n\r\n          shadow.updateMatrices(light, vp);\r\n          _frustum = shadow.getFrustum();\r\n          renderObject(scene, camera, shadow.camera, light, this.type);\r\n        } // do blur pass for VSM\r\n\r\n        if (!shadow.isPointLightShadow && this.type === VSMShadowMap) {\r\n          VSMPass(shadow, camera);\r\n        }\r\n\r\n        shadow.needsUpdate = false;\r\n      }\r\n\r\n      scope.needsUpdate = false;\r\n\r\n      _renderer.setRenderTarget(currentRenderTarget, activeCubeFace, activeMipmapLevel);\r\n    };\r\n\r\n    function VSMPass(shadow, camera) {\r\n      const geometry = _objects.update(fullScreenMesh); // vertical pass\r\n\r\n      shadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\r\n      shadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\r\n      shadowMaterialVertical.uniforms.radius.value = shadow.radius;\r\n\r\n      _renderer.setRenderTarget(shadow.mapPass);\r\n\r\n      _renderer.clear();\r\n\r\n      _renderer.renderBufferDirect(\r\n        camera,\r\n        null,\r\n        geometry,\r\n        shadowMaterialVertical,\r\n        fullScreenMesh,\r\n        null,\r\n      ); // horizontal pass\r\n\r\n      shadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\r\n      shadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\r\n      shadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\r\n\r\n      _renderer.setRenderTarget(shadow.map);\r\n\r\n      _renderer.clear();\r\n\r\n      _renderer.renderBufferDirect(\r\n        camera,\r\n        null,\r\n        geometry,\r\n        shadowMaterialHorizontal,\r\n        fullScreenMesh,\r\n        null,\r\n      );\r\n    }\r\n\r\n    function getDepthMaterialVariant(useMorphing) {\r\n      const index = useMorphing << 0;\r\n      let material = _depthMaterials[index];\r\n\r\n      if (material === undefined) {\r\n        material = new MeshDepthMaterial({\r\n          depthPacking: RGBADepthPacking,\r\n          morphTargets: useMorphing,\r\n        });\r\n        _depthMaterials[index] = material;\r\n      }\r\n\r\n      return material;\r\n    }\r\n\r\n    function getDistanceMaterialVariant(useMorphing) {\r\n      const index = useMorphing << 0;\r\n      let material = _distanceMaterials[index];\r\n\r\n      if (material === undefined) {\r\n        material = new MeshDistanceMaterial({\r\n          morphTargets: useMorphing,\r\n        });\r\n        _distanceMaterials[index] = material;\r\n      }\r\n\r\n      return material;\r\n    }\r\n\r\n    function getDepthMaterial(\r\n      object,\r\n      geometry,\r\n      material,\r\n      light,\r\n      shadowCameraNear,\r\n      shadowCameraFar,\r\n      type,\r\n    ) {\r\n      let result = null;\r\n      let getMaterialVariant = getDepthMaterialVariant;\r\n      let customMaterial = object.customDepthMaterial;\r\n\r\n      if (light.isPointLight === true) {\r\n        getMaterialVariant = getDistanceMaterialVariant;\r\n        customMaterial = object.customDistanceMaterial;\r\n      }\r\n\r\n      if (customMaterial === undefined) {\r\n        let useMorphing = false;\r\n\r\n        if (material.morphTargets === true) {\r\n          useMorphing =\r\n            geometry.morphAttributes &&\r\n            geometry.morphAttributes.position &&\r\n            geometry.morphAttributes.position.length > 0;\r\n        }\r\n\r\n        result = getMaterialVariant(useMorphing);\r\n      } else {\r\n        result = customMaterial;\r\n      }\r\n\r\n      if (\r\n        _renderer.localClippingEnabled &&\r\n        material.clipShadows === true &&\r\n        material.clippingPlanes.length !== 0\r\n      ) {\r\n        // in this case we need a unique material instance reflecting the\r\n        // appropriate state\r\n        const keyA = result.uuid,\r\n          keyB = material.uuid;\r\n        let materialsForVariant = _materialCache[keyA];\r\n\r\n        if (materialsForVariant === undefined) {\r\n          materialsForVariant = {};\r\n          _materialCache[keyA] = materialsForVariant;\r\n        }\r\n\r\n        let cachedMaterial = materialsForVariant[keyB];\r\n\r\n        if (cachedMaterial === undefined) {\r\n          cachedMaterial = result.clone();\r\n          materialsForVariant[keyB] = cachedMaterial;\r\n        }\r\n\r\n        result = cachedMaterial;\r\n      }\r\n\r\n      result.visible = material.visible;\r\n      result.wireframe = material.wireframe;\r\n\r\n      if (type === VSMShadowMap) {\r\n        result.side = material.shadowSide !== null ? material.shadowSide : material.side;\r\n      } else {\r\n        result.side =\r\n          material.shadowSide !== null ? material.shadowSide : shadowSide[material.side];\r\n      }\r\n\r\n      result.clipShadows = material.clipShadows;\r\n      result.clippingPlanes = material.clippingPlanes;\r\n      result.clipIntersection = material.clipIntersection;\r\n      result.wireframeLinewidth = material.wireframeLinewidth;\r\n      result.linewidth = material.linewidth;\r\n\r\n      if (light.isPointLight === true && result.isMeshDistanceMaterial === true) {\r\n        result.referencePosition.setFromMatrixPosition(light.matrixWorld);\r\n        result.nearDistance = shadowCameraNear;\r\n        result.farDistance = shadowCameraFar;\r\n      }\r\n\r\n      return result;\r\n    }\r\n\r\n    function renderObject(object, camera, shadowCamera, light, type) {\r\n      if (object.visible === false) return;\r\n      const visible = object.layers.test(camera.layers);\r\n\r\n      if (visible && (object.isMesh || object.isLine || object.isPoints)) {\r\n        if (\r\n          (object.castShadow || (object.receiveShadow && type === VSMShadowMap)) &&\r\n          (!object.frustumCulled || _frustum.intersectsObject(object))\r\n        ) {\r\n          object.modelViewMatrix.multiplyMatrices(\r\n            shadowCamera.matrixWorldInverse,\r\n            object.matrixWorld,\r\n          );\r\n\r\n          const geometry = _objects.update(object);\r\n\r\n          const material = object.material;\r\n\r\n          if (Array.isArray(material)) {\r\n            const groups = geometry.groups;\r\n\r\n            for (let k = 0, kl = groups.length; k < kl; k++) {\r\n              const group = groups[k];\r\n              const groupMaterial = material[group.materialIndex];\r\n\r\n              if (groupMaterial && groupMaterial.visible) {\r\n                const depthMaterial = getDepthMaterial(\r\n                  object,\r\n                  geometry,\r\n                  groupMaterial,\r\n                  light,\r\n                  shadowCamera.near,\r\n                  shadowCamera.far,\r\n                  type,\r\n                );\r\n\r\n                _renderer.renderBufferDirect(\r\n                  shadowCamera,\r\n                  null,\r\n                  geometry,\r\n                  depthMaterial,\r\n                  object,\r\n                  group,\r\n                );\r\n              }\r\n            }\r\n          } else if (material.visible) {\r\n            const depthMaterial = getDepthMaterial(\r\n              object,\r\n              geometry,\r\n              material,\r\n              light,\r\n              shadowCamera.near,\r\n              shadowCamera.far,\r\n              type,\r\n            );\r\n\r\n            _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\r\n          }\r\n        }\r\n      }\r\n\r\n      const children = object.children;\r\n\r\n      for (let i = 0, l = children.length; i < l; i++) {\r\n        renderObject(children[i], camera, shadowCamera, light, type);\r\n      }\r\n    }\r\n  }\r\n\r\n  function WebGLState(gl, extensions, capabilities) {\r\n    const isWebGL2 = capabilities.isWebGL2;\r\n\r\n    function ColorBuffer() {\r\n      let locked = false;\r\n      const color = new Vector4();\r\n      let currentColorMask = null;\r\n      const currentColorClear = new Vector4(0, 0, 0, 0);\r\n      return {\r\n        setMask: function (colorMask) {\r\n          if (currentColorMask !== colorMask && !locked) {\r\n            gl.colorMask(colorMask, colorMask, colorMask, colorMask);\r\n            currentColorMask = colorMask;\r\n          }\r\n        },\r\n        setLocked: function (lock) {\r\n          locked = lock;\r\n        },\r\n        setClear: function (r, g, b, a, premultipliedAlpha) {\r\n          if (premultipliedAlpha === true) {\r\n            r *= a;\r\n            g *= a;\r\n            b *= a;\r\n          }\r\n\r\n          color.set(r, g, b, a);\r\n\r\n          if (currentColorClear.equals(color) === false) {\r\n            gl.clearColor(r, g, b, a);\r\n            currentColorClear.copy(color);\r\n          }\r\n        },\r\n        reset: function () {\r\n          locked = false;\r\n          currentColorMask = null;\r\n          currentColorClear.set(-1, 0, 0, 0); // set to invalid state\r\n        },\r\n      };\r\n    }\r\n\r\n    function DepthBuffer() {\r\n      let locked = false;\r\n      let currentDepthMask = null;\r\n      let currentDepthFunc = null;\r\n      let currentDepthClear = null;\r\n      return {\r\n        setTest: function (depthTest) {\r\n          if (depthTest) {\r\n            enable(gl.DEPTH_TEST);\r\n          } else {\r\n            disable(gl.DEPTH_TEST);\r\n          }\r\n        },\r\n        setMask: function (depthMask) {\r\n          if (currentDepthMask !== depthMask && !locked) {\r\n            gl.depthMask(depthMask);\r\n            currentDepthMask = depthMask;\r\n          }\r\n        },\r\n        setFunc: function (depthFunc) {\r\n          if (currentDepthFunc !== depthFunc) {\r\n            if (depthFunc) {\r\n              switch (depthFunc) {\r\n                case NeverDepth:\r\n                  gl.depthFunc(gl.NEVER);\r\n                  break;\r\n\r\n                case AlwaysDepth:\r\n                  gl.depthFunc(gl.ALWAYS);\r\n                  break;\r\n\r\n                case LessDepth:\r\n                  gl.depthFunc(gl.LESS);\r\n                  break;\r\n\r\n                case LessEqualDepth:\r\n                  gl.depthFunc(gl.LEQUAL);\r\n                  break;\r\n\r\n                case EqualDepth:\r\n                  gl.depthFunc(gl.EQUAL);\r\n                  break;\r\n\r\n                case GreaterEqualDepth:\r\n                  gl.depthFunc(gl.GEQUAL);\r\n                  break;\r\n\r\n                case GreaterDepth:\r\n                  gl.depthFunc(gl.GREATER);\r\n                  break;\r\n\r\n                case NotEqualDepth:\r\n                  gl.depthFunc(gl.NOTEQUAL);\r\n                  break;\r\n\r\n                default:\r\n                  gl.depthFunc(gl.LEQUAL);\r\n              }\r\n            } else {\r\n              gl.depthFunc(gl.LEQUAL);\r\n            }\r\n\r\n            currentDepthFunc = depthFunc;\r\n          }\r\n        },\r\n        setLocked: function (lock) {\r\n          locked = lock;\r\n        },\r\n        setClear: function (depth) {\r\n          if (currentDepthClear !== depth) {\r\n            gl.clearDepth(depth);\r\n            currentDepthClear = depth;\r\n          }\r\n        },\r\n        reset: function () {\r\n          locked = false;\r\n          currentDepthMask = null;\r\n          currentDepthFunc = null;\r\n          currentDepthClear = null;\r\n        },\r\n      };\r\n    }\r\n\r\n    function StencilBuffer() {\r\n      let locked = false;\r\n      let currentStencilMask = null;\r\n      let currentStencilFunc = null;\r\n      let currentStencilRef = null;\r\n      let currentStencilFuncMask = null;\r\n      let currentStencilFail = null;\r\n      let currentStencilZFail = null;\r\n      let currentStencilZPass = null;\r\n      let currentStencilClear = null;\r\n      return {\r\n        setTest: function (stencilTest) {\r\n          if (!locked) {\r\n            if (stencilTest) {\r\n              enable(gl.STENCIL_TEST);\r\n            } else {\r\n              disable(gl.STENCIL_TEST);\r\n            }\r\n          }\r\n        },\r\n        setMask: function (stencilMask) {\r\n          if (currentStencilMask !== stencilMask && !locked) {\r\n            gl.stencilMask(stencilMask);\r\n            currentStencilMask = stencilMask;\r\n          }\r\n        },\r\n        setFunc: function (stencilFunc, stencilRef, stencilMask) {\r\n          if (\r\n            currentStencilFunc !== stencilFunc ||\r\n            currentStencilRef !== stencilRef ||\r\n            currentStencilFuncMask !== stencilMask\r\n          ) {\r\n            gl.stencilFunc(stencilFunc, stencilRef, stencilMask);\r\n            currentStencilFunc = stencilFunc;\r\n            currentStencilRef = stencilRef;\r\n            currentStencilFuncMask = stencilMask;\r\n          }\r\n        },\r\n        setOp: function (stencilFail, stencilZFail, stencilZPass) {\r\n          if (\r\n            currentStencilFail !== stencilFail ||\r\n            currentStencilZFail !== stencilZFail ||\r\n            currentStencilZPass !== stencilZPass\r\n          ) {\r\n            gl.stencilOp(stencilFail, stencilZFail, stencilZPass);\r\n            currentStencilFail = stencilFail;\r\n            currentStencilZFail = stencilZFail;\r\n            currentStencilZPass = stencilZPass;\r\n          }\r\n        },\r\n        setLocked: function (lock) {\r\n          locked = lock;\r\n        },\r\n        setClear: function (stencil) {\r\n          if (currentStencilClear !== stencil) {\r\n            gl.clearStencil(stencil);\r\n            currentStencilClear = stencil;\r\n          }\r\n        },\r\n        reset: function () {\r\n          locked = false;\r\n          currentStencilMask = null;\r\n          currentStencilFunc = null;\r\n          currentStencilRef = null;\r\n          currentStencilFuncMask = null;\r\n          currentStencilFail = null;\r\n          currentStencilZFail = null;\r\n          currentStencilZPass = null;\r\n          currentStencilClear = null;\r\n        },\r\n      };\r\n    } //\r\n\r\n    const colorBuffer = new ColorBuffer();\r\n    const depthBuffer = new DepthBuffer();\r\n    const stencilBuffer = new StencilBuffer();\r\n    let enabledCapabilities = {};\r\n    let xrFramebuffer = null;\r\n    let currentBoundFramebuffers = {};\r\n    let currentProgram = null;\r\n    let currentBlendingEnabled = false;\r\n    let currentBlending = null;\r\n    let currentBlendEquation = null;\r\n    let currentBlendSrc = null;\r\n    let currentBlendDst = null;\r\n    let currentBlendEquationAlpha = null;\r\n    let currentBlendSrcAlpha = null;\r\n    let currentBlendDstAlpha = null;\r\n    let currentPremultipledAlpha = false;\r\n    let currentFlipSided = null;\r\n    let currentCullFace = null;\r\n    let currentLineWidth = null;\r\n    let currentPolygonOffsetFactor = null;\r\n    let currentPolygonOffsetUnits = null;\r\n    const maxTextures = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\r\n    let lineWidthAvailable = false;\r\n    let version = 0;\r\n    const glVersion = gl.getParameter(gl.VERSION);\r\n\r\n    if (glVersion.indexOf('WebGL') !== -1) {\r\n      version = parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);\r\n      lineWidthAvailable = version >= 1.0;\r\n    } else if (glVersion.indexOf('OpenGL ES') !== -1) {\r\n      version = parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);\r\n      lineWidthAvailable = version >= 2.0;\r\n    }\r\n\r\n    let currentTextureSlot = null;\r\n    let currentBoundTextures = {};\r\n    const scissorParam = gl.getParameter(gl.SCISSOR_BOX);\r\n    const viewportParam = gl.getParameter(gl.VIEWPORT);\r\n    const currentScissor = new Vector4().fromArray(scissorParam);\r\n    const currentViewport = new Vector4().fromArray(viewportParam);\r\n\r\n    function createTexture(type, target, count) {\r\n      const data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\r\n\r\n      const texture = gl.createTexture();\r\n      gl.bindTexture(type, texture);\r\n      gl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n      gl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        gl.texImage2D(target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\r\n      }\r\n\r\n      return texture;\r\n    }\r\n\r\n    const emptyTextures = {};\r\n    emptyTextures[gl.TEXTURE_2D] = createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\r\n    emptyTextures[gl.TEXTURE_CUBE_MAP] = createTexture(\r\n      gl.TEXTURE_CUBE_MAP,\r\n      gl.TEXTURE_CUBE_MAP_POSITIVE_X,\r\n      6,\r\n    ); // init\r\n\r\n    colorBuffer.setClear(0, 0, 0, 1);\r\n    depthBuffer.setClear(1);\r\n    stencilBuffer.setClear(0);\r\n    enable(gl.DEPTH_TEST);\r\n    depthBuffer.setFunc(LessEqualDepth);\r\n    setFlipSided(false);\r\n    setCullFace(CullFaceBack);\r\n    enable(gl.CULL_FACE);\r\n    setBlending(NoBlending); //\r\n\r\n    function enable(id) {\r\n      if (enabledCapabilities[id] !== true) {\r\n        gl.enable(id);\r\n        enabledCapabilities[id] = true;\r\n      }\r\n    }\r\n\r\n    function disable(id) {\r\n      if (enabledCapabilities[id] !== false) {\r\n        gl.disable(id);\r\n        enabledCapabilities[id] = false;\r\n      }\r\n    }\r\n\r\n    function bindXRFramebuffer(framebuffer) {\r\n      if (framebuffer !== xrFramebuffer) {\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n        xrFramebuffer = framebuffer;\r\n      }\r\n    }\r\n\r\n    function bindFramebuffer(target, framebuffer) {\r\n      if (framebuffer === null && xrFramebuffer !== null) framebuffer = xrFramebuffer; // use active XR framebuffer if available\r\n\r\n      if (currentBoundFramebuffers[target] !== framebuffer) {\r\n        gl.bindFramebuffer(target, framebuffer);\r\n        currentBoundFramebuffers[target] = framebuffer;\r\n\r\n        if (isWebGL2) {\r\n          // gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\r\n          if (target === gl.DRAW_FRAMEBUFFER) {\r\n            currentBoundFramebuffers[gl.FRAMEBUFFER] = framebuffer;\r\n          }\r\n\r\n          if (target === gl.FRAMEBUFFER) {\r\n            currentBoundFramebuffers[gl.DRAW_FRAMEBUFFER] = framebuffer;\r\n          }\r\n        }\r\n\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    function useProgram(program) {\r\n      if (currentProgram !== program) {\r\n        gl.useProgram(program);\r\n        currentProgram = program;\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    const equationToGL = {\r\n      [AddEquation]: gl.FUNC_ADD,\r\n      [SubtractEquation]: gl.FUNC_SUBTRACT,\r\n      [ReverseSubtractEquation]: gl.FUNC_REVERSE_SUBTRACT,\r\n    };\r\n\r\n    if (isWebGL2) {\r\n      equationToGL[MinEquation] = gl.MIN;\r\n      equationToGL[MaxEquation] = gl.MAX;\r\n    } else {\r\n      const extension = extensions.get('EXT_blend_minmax');\r\n\r\n      if (extension !== null) {\r\n        equationToGL[MinEquation] = extension.MIN_EXT;\r\n        equationToGL[MaxEquation] = extension.MAX_EXT;\r\n      }\r\n    }\r\n\r\n    const factorToGL = {\r\n      [ZeroFactor]: gl.ZERO,\r\n      [OneFactor]: gl.ONE,\r\n      [SrcColorFactor]: gl.SRC_COLOR,\r\n      [SrcAlphaFactor]: gl.SRC_ALPHA,\r\n      [SrcAlphaSaturateFactor]: gl.SRC_ALPHA_SATURATE,\r\n      [DstColorFactor]: gl.DST_COLOR,\r\n      [DstAlphaFactor]: gl.DST_ALPHA,\r\n      [OneMinusSrcColorFactor]: gl.ONE_MINUS_SRC_COLOR,\r\n      [OneMinusSrcAlphaFactor]: gl.ONE_MINUS_SRC_ALPHA,\r\n      [OneMinusDstColorFactor]: gl.ONE_MINUS_DST_COLOR,\r\n      [OneMinusDstAlphaFactor]: gl.ONE_MINUS_DST_ALPHA,\r\n    };\r\n\r\n    function setBlending(\r\n      blending,\r\n      blendEquation,\r\n      blendSrc,\r\n      blendDst,\r\n      blendEquationAlpha,\r\n      blendSrcAlpha,\r\n      blendDstAlpha,\r\n      premultipliedAlpha,\r\n    ) {\r\n      if (blending === NoBlending) {\r\n        if (currentBlendingEnabled === true) {\r\n          disable(gl.BLEND);\r\n          currentBlendingEnabled = false;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if (currentBlendingEnabled === false) {\r\n        enable(gl.BLEND);\r\n        currentBlendingEnabled = true;\r\n      }\r\n\r\n      if (blending !== CustomBlending) {\r\n        if (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\r\n          if (currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation) {\r\n            gl.blendEquation(gl.FUNC_ADD);\r\n            currentBlendEquation = AddEquation;\r\n            currentBlendEquationAlpha = AddEquation;\r\n          }\r\n\r\n          if (premultipliedAlpha) {\r\n            switch (blending) {\r\n              case NormalBlending:\r\n                gl.blendFuncSeparate(\r\n                  gl.ONE,\r\n                  gl.ONE_MINUS_SRC_ALPHA,\r\n                  gl.ONE,\r\n                  gl.ONE_MINUS_SRC_ALPHA,\r\n                );\r\n                break;\r\n\r\n              case AdditiveBlending:\r\n                gl.blendFunc(gl.ONE, gl.ONE);\r\n                break;\r\n\r\n              case SubtractiveBlending:\r\n                gl.blendFuncSeparate(\r\n                  gl.ZERO,\r\n                  gl.ZERO,\r\n                  gl.ONE_MINUS_SRC_COLOR,\r\n                  gl.ONE_MINUS_SRC_ALPHA,\r\n                );\r\n                break;\r\n\r\n              case MultiplyBlending:\r\n                gl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\r\n                break;\r\n\r\n              default:\r\n                console.error('THREE.WebGLState: Invalid blending: ', blending);\r\n                break;\r\n            }\r\n          } else {\r\n            switch (blending) {\r\n              case NormalBlending:\r\n                gl.blendFuncSeparate(\r\n                  gl.SRC_ALPHA,\r\n                  gl.ONE_MINUS_SRC_ALPHA,\r\n                  gl.ONE,\r\n                  gl.ONE_MINUS_SRC_ALPHA,\r\n                );\r\n                break;\r\n\r\n              case AdditiveBlending:\r\n                gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\r\n                break;\r\n\r\n              case SubtractiveBlending:\r\n                gl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\r\n                break;\r\n\r\n              case MultiplyBlending:\r\n                gl.blendFunc(gl.ZERO, gl.SRC_COLOR);\r\n                break;\r\n\r\n              default:\r\n                console.error('THREE.WebGLState: Invalid blending: ', blending);\r\n                break;\r\n            }\r\n          }\r\n\r\n          currentBlendSrc = null;\r\n          currentBlendDst = null;\r\n          currentBlendSrcAlpha = null;\r\n          currentBlendDstAlpha = null;\r\n          currentBlending = blending;\r\n          currentPremultipledAlpha = premultipliedAlpha;\r\n        }\r\n\r\n        return;\r\n      } // custom blending\r\n\r\n      blendEquationAlpha = blendEquationAlpha || blendEquation;\r\n      blendSrcAlpha = blendSrcAlpha || blendSrc;\r\n      blendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n      if (\r\n        blendEquation !== currentBlendEquation ||\r\n        blendEquationAlpha !== currentBlendEquationAlpha\r\n      ) {\r\n        gl.blendEquationSeparate(equationToGL[blendEquation], equationToGL[blendEquationAlpha]);\r\n        currentBlendEquation = blendEquation;\r\n        currentBlendEquationAlpha = blendEquationAlpha;\r\n      }\r\n\r\n      if (\r\n        blendSrc !== currentBlendSrc ||\r\n        blendDst !== currentBlendDst ||\r\n        blendSrcAlpha !== currentBlendSrcAlpha ||\r\n        blendDstAlpha !== currentBlendDstAlpha\r\n      ) {\r\n        gl.blendFuncSeparate(\r\n          factorToGL[blendSrc],\r\n          factorToGL[blendDst],\r\n          factorToGL[blendSrcAlpha],\r\n          factorToGL[blendDstAlpha],\r\n        );\r\n        currentBlendSrc = blendSrc;\r\n        currentBlendDst = blendDst;\r\n        currentBlendSrcAlpha = blendSrcAlpha;\r\n        currentBlendDstAlpha = blendDstAlpha;\r\n      }\r\n\r\n      currentBlending = blending;\r\n      currentPremultipledAlpha = null;\r\n    }\r\n\r\n    function setMaterial(material, frontFaceCW) {\r\n      material.side === DoubleSide ? disable(gl.CULL_FACE) : enable(gl.CULL_FACE);\r\n      let flipSided = material.side === BackSide;\r\n      if (frontFaceCW) flipSided = !flipSided;\r\n      setFlipSided(flipSided);\r\n      material.blending === NormalBlending && material.transparent === false\r\n        ? setBlending(NoBlending)\r\n        : setBlending(\r\n            material.blending,\r\n            material.blendEquation,\r\n            material.blendSrc,\r\n            material.blendDst,\r\n            material.blendEquationAlpha,\r\n            material.blendSrcAlpha,\r\n            material.blendDstAlpha,\r\n            material.premultipliedAlpha,\r\n          );\r\n      depthBuffer.setFunc(material.depthFunc);\r\n      depthBuffer.setTest(material.depthTest);\r\n      depthBuffer.setMask(material.depthWrite);\r\n      colorBuffer.setMask(material.colorWrite);\r\n      const stencilWrite = material.stencilWrite;\r\n      stencilBuffer.setTest(stencilWrite);\r\n\r\n      if (stencilWrite) {\r\n        stencilBuffer.setMask(material.stencilWriteMask);\r\n        stencilBuffer.setFunc(material.stencilFunc, material.stencilRef, material.stencilFuncMask);\r\n        stencilBuffer.setOp(material.stencilFail, material.stencilZFail, material.stencilZPass);\r\n      }\r\n\r\n      setPolygonOffset(\r\n        material.polygonOffset,\r\n        material.polygonOffsetFactor,\r\n        material.polygonOffsetUnits,\r\n      );\r\n      material.alphaToCoverage === true\r\n        ? enable(gl.SAMPLE_ALPHA_TO_COVERAGE)\r\n        : disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\r\n    } //\r\n\r\n    function setFlipSided(flipSided) {\r\n      if (currentFlipSided !== flipSided) {\r\n        if (flipSided) {\r\n          gl.frontFace(gl.CW);\r\n        } else {\r\n          gl.frontFace(gl.CCW);\r\n        }\r\n\r\n        currentFlipSided = flipSided;\r\n      }\r\n    }\r\n\r\n    function setCullFace(cullFace) {\r\n      if (cullFace !== CullFaceNone) {\r\n        enable(gl.CULL_FACE);\r\n\r\n        if (cullFace !== currentCullFace) {\r\n          if (cullFace === CullFaceBack) {\r\n            gl.cullFace(gl.BACK);\r\n          } else if (cullFace === CullFaceFront) {\r\n            gl.cullFace(gl.FRONT);\r\n          } else {\r\n            gl.cullFace(gl.FRONT_AND_BACK);\r\n          }\r\n        }\r\n      } else {\r\n        disable(gl.CULL_FACE);\r\n      }\r\n\r\n      currentCullFace = cullFace;\r\n    }\r\n\r\n    function setLineWidth(width) {\r\n      if (width !== currentLineWidth) {\r\n        if (lineWidthAvailable) gl.lineWidth(width);\r\n        currentLineWidth = width;\r\n      }\r\n    }\r\n\r\n    function setPolygonOffset(polygonOffset, factor, units) {\r\n      if (polygonOffset) {\r\n        enable(gl.POLYGON_OFFSET_FILL);\r\n\r\n        if (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\r\n          gl.polygonOffset(factor, units);\r\n          currentPolygonOffsetFactor = factor;\r\n          currentPolygonOffsetUnits = units;\r\n        }\r\n      } else {\r\n        disable(gl.POLYGON_OFFSET_FILL);\r\n      }\r\n    }\r\n\r\n    function setScissorTest(scissorTest) {\r\n      if (scissorTest) {\r\n        enable(gl.SCISSOR_TEST);\r\n      } else {\r\n        disable(gl.SCISSOR_TEST);\r\n      }\r\n    } // texture\r\n\r\n    function activeTexture(webglSlot) {\r\n      if (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n      if (currentTextureSlot !== webglSlot) {\r\n        gl.activeTexture(webglSlot);\r\n        currentTextureSlot = webglSlot;\r\n      }\r\n    }\r\n\r\n    function bindTexture(webglType, webglTexture) {\r\n      if (currentTextureSlot === null) {\r\n        activeTexture();\r\n      }\r\n\r\n      let boundTexture = currentBoundTextures[currentTextureSlot];\r\n\r\n      if (boundTexture === undefined) {\r\n        boundTexture = {\r\n          type: undefined,\r\n          texture: undefined,\r\n        };\r\n        currentBoundTextures[currentTextureSlot] = boundTexture;\r\n      }\r\n\r\n      if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\r\n        gl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\r\n        boundTexture.type = webglType;\r\n        boundTexture.texture = webglTexture;\r\n      }\r\n    }\r\n\r\n    function unbindTexture() {\r\n      const boundTexture = currentBoundTextures[currentTextureSlot];\r\n\r\n      if (boundTexture !== undefined && boundTexture.type !== undefined) {\r\n        gl.bindTexture(boundTexture.type, null);\r\n        boundTexture.type = undefined;\r\n        boundTexture.texture = undefined;\r\n      }\r\n    }\r\n\r\n    function compressedTexImage2D() {\r\n      try {\r\n        gl.compressedTexImage2D.apply(gl, arguments);\r\n      } catch (error) {\r\n        console.error('THREE.WebGLState:', error);\r\n      }\r\n    }\r\n\r\n    function texImage2D() {\r\n      try {\r\n        gl.texImage2D.apply(gl, arguments);\r\n      } catch (error) {\r\n        console.error('THREE.WebGLState:', error);\r\n      }\r\n    }\r\n\r\n    function texImage3D() {\r\n      try {\r\n        gl.texImage3D.apply(gl, arguments);\r\n      } catch (error) {\r\n        console.error('THREE.WebGLState:', error);\r\n      }\r\n    } //\r\n\r\n    function scissor(scissor) {\r\n      if (currentScissor.equals(scissor) === false) {\r\n        gl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\r\n        currentScissor.copy(scissor);\r\n      }\r\n    }\r\n\r\n    function viewport(viewport) {\r\n      if (currentViewport.equals(viewport) === false) {\r\n        gl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\r\n        currentViewport.copy(viewport);\r\n      }\r\n    } //\r\n\r\n    function reset() {\r\n      // reset state\r\n      gl.disable(gl.BLEND);\r\n      gl.disable(gl.CULL_FACE);\r\n      gl.disable(gl.DEPTH_TEST);\r\n      gl.disable(gl.POLYGON_OFFSET_FILL);\r\n      gl.disable(gl.SCISSOR_TEST);\r\n      gl.disable(gl.STENCIL_TEST);\r\n      gl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\r\n      gl.blendEquation(gl.FUNC_ADD);\r\n      gl.blendFunc(gl.ONE, gl.ZERO);\r\n      gl.blendFuncSeparate(gl.ONE, gl.ZERO, gl.ONE, gl.ZERO);\r\n      gl.colorMask(true, true, true, true);\r\n      gl.clearColor(0, 0, 0, 0);\r\n      gl.depthMask(true);\r\n      gl.depthFunc(gl.LESS);\r\n      gl.clearDepth(1);\r\n      gl.stencilMask(0xffffffff);\r\n      gl.stencilFunc(gl.ALWAYS, 0, 0xffffffff);\r\n      gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\r\n      gl.clearStencil(0);\r\n      gl.cullFace(gl.BACK);\r\n      gl.frontFace(gl.CCW);\r\n      gl.polygonOffset(0, 0);\r\n      gl.activeTexture(gl.TEXTURE0);\r\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n      if (isWebGL2 === true) {\r\n        gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\r\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\r\n      }\r\n\r\n      gl.useProgram(null);\r\n      gl.lineWidth(1);\r\n      gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\r\n      gl.viewport(0, 0, gl.canvas.width, gl.canvas.height); // reset internals\r\n\r\n      enabledCapabilities = {};\r\n      currentTextureSlot = null;\r\n      currentBoundTextures = {};\r\n      xrFramebuffer = null;\r\n      currentBoundFramebuffers = {};\r\n      currentProgram = null;\r\n      currentBlendingEnabled = false;\r\n      currentBlending = null;\r\n      currentBlendEquation = null;\r\n      currentBlendSrc = null;\r\n      currentBlendDst = null;\r\n      currentBlendEquationAlpha = null;\r\n      currentBlendSrcAlpha = null;\r\n      currentBlendDstAlpha = null;\r\n      currentPremultipledAlpha = false;\r\n      currentFlipSided = null;\r\n      currentCullFace = null;\r\n      currentLineWidth = null;\r\n      currentPolygonOffsetFactor = null;\r\n      currentPolygonOffsetUnits = null;\r\n      currentScissor.set(0, 0, gl.canvas.width, gl.canvas.height);\r\n      currentViewport.set(0, 0, gl.canvas.width, gl.canvas.height);\r\n      colorBuffer.reset();\r\n      depthBuffer.reset();\r\n      stencilBuffer.reset();\r\n    }\r\n\r\n    return {\r\n      buffers: {\r\n        color: colorBuffer,\r\n        depth: depthBuffer,\r\n        stencil: stencilBuffer,\r\n      },\r\n      enable: enable,\r\n      disable: disable,\r\n      bindFramebuffer: bindFramebuffer,\r\n      bindXRFramebuffer: bindXRFramebuffer,\r\n      useProgram: useProgram,\r\n      setBlending: setBlending,\r\n      setMaterial: setMaterial,\r\n      setFlipSided: setFlipSided,\r\n      setCullFace: setCullFace,\r\n      setLineWidth: setLineWidth,\r\n      setPolygonOffset: setPolygonOffset,\r\n      setScissorTest: setScissorTest,\r\n      activeTexture: activeTexture,\r\n      bindTexture: bindTexture,\r\n      unbindTexture: unbindTexture,\r\n      compressedTexImage2D: compressedTexImage2D,\r\n      texImage2D: texImage2D,\r\n      texImage3D: texImage3D,\r\n      scissor: scissor,\r\n      viewport: viewport,\r\n      reset: reset,\r\n    };\r\n  }\r\n\r\n  function WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info) {\r\n    const isWebGL2 = capabilities.isWebGL2;\r\n    const maxTextures = capabilities.maxTextures;\r\n    const maxCubemapSize = capabilities.maxCubemapSize;\r\n    const maxTextureSize = capabilities.maxTextureSize;\r\n    const maxSamples = capabilities.maxSamples;\r\n\r\n    const _videoTextures = new WeakMap();\r\n\r\n    let _canvas; // cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\r\n    // also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\r\n    // Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\r\n\r\n    let useOffscreenCanvas = false;\r\n\r\n    try {\r\n      useOffscreenCanvas =\r\n        typeof OffscreenCanvas !== 'undefined' &&\r\n        new OffscreenCanvas(1, 1).getContext('2d') !== null;\r\n    } catch (err) {\r\n      // Ignore any errors\r\n    }\r\n\r\n    function createCanvas(width, height) {\r\n      // Use OffscreenCanvas when available. Specially needed in web workers\r\n      return useOffscreenCanvas\r\n        ? new OffscreenCanvas(width, height)\r\n        : document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\r\n    }\r\n\r\n    function resizeImage(image, needsPowerOfTwo, needsNewCanvas, maxSize) {\r\n      let scale = 1; // handle case if texture exceeds max size\r\n\r\n      if (image.width > maxSize || image.height > maxSize) {\r\n        scale = maxSize / Math.max(image.width, image.height);\r\n      } // only perform resize if necessary\r\n\r\n      if (scale < 1 || needsPowerOfTwo === true) {\r\n        // only perform resize for certain image types\r\n        if (\r\n          (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement) ||\r\n          (typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement) ||\r\n          (typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap)\r\n        ) {\r\n          const floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\r\n          const width = floor(scale * image.width);\r\n          const height = floor(scale * image.height);\r\n          if (_canvas === undefined) _canvas = createCanvas(width, height); // cube textures can't reuse the same canvas\r\n\r\n          const canvas = needsNewCanvas ? createCanvas(width, height) : _canvas;\r\n          canvas.width = width;\r\n          canvas.height = height;\r\n          const context = canvas.getContext('2d');\r\n          context.drawImage(image, 0, 0, width, height);\r\n          console.warn(\r\n            'THREE.WebGLRenderer: Texture has been resized from (' +\r\n              image.width +\r\n              'x' +\r\n              image.height +\r\n              ') to (' +\r\n              width +\r\n              'x' +\r\n              height +\r\n              ').',\r\n          );\r\n          return canvas;\r\n        } else {\r\n          if ('data' in image) {\r\n            console.warn(\r\n              'THREE.WebGLRenderer: Image in DataTexture is too big (' +\r\n                image.width +\r\n                'x' +\r\n                image.height +\r\n                ').',\r\n            );\r\n          }\r\n\r\n          return image;\r\n        }\r\n      }\r\n\r\n      return image;\r\n    }\r\n\r\n    function isPowerOfTwo$1(image) {\r\n      return isPowerOfTwo(image.width) && isPowerOfTwo(image.height);\r\n    }\r\n\r\n    function textureNeedsPowerOfTwo(texture) {\r\n      if (isWebGL2) return false;\r\n      return (\r\n        texture.wrapS !== ClampToEdgeWrapping ||\r\n        texture.wrapT !== ClampToEdgeWrapping ||\r\n        (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter)\r\n      );\r\n    }\r\n\r\n    function textureNeedsGenerateMipmaps(texture, supportsMips) {\r\n      return (\r\n        texture.generateMipmaps &&\r\n        supportsMips &&\r\n        texture.minFilter !== NearestFilter &&\r\n        texture.minFilter !== LinearFilter\r\n      );\r\n    }\r\n\r\n    function generateMipmap(target, texture, width, height) {\r\n      _gl.generateMipmap(target);\r\n\r\n      const textureProperties = properties.get(texture);\r\n      textureProperties.__maxMipLevel = Math.log2(Math.max(width, height));\r\n    }\r\n\r\n    function getInternalFormat(internalFormatName, glFormat, glType) {\r\n      if (isWebGL2 === false) return glFormat;\r\n\r\n      if (internalFormatName !== null) {\r\n        if (_gl[internalFormatName] !== undefined) return _gl[internalFormatName];\r\n        console.warn(\r\n          \"THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '\" +\r\n            internalFormatName +\r\n            \"'\",\r\n        );\r\n      }\r\n\r\n      let internalFormat = glFormat;\r\n\r\n      if (glFormat === _gl.RED) {\r\n        if (glType === _gl.FLOAT) internalFormat = _gl.R32F;\r\n        if (glType === _gl.HALF_FLOAT) internalFormat = _gl.R16F;\r\n        if (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.R8;\r\n      }\r\n\r\n      if (glFormat === _gl.RGB) {\r\n        if (glType === _gl.FLOAT) internalFormat = _gl.RGB32F;\r\n        if (glType === _gl.HALF_FLOAT) internalFormat = _gl.RGB16F;\r\n        if (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.RGB8;\r\n      }\r\n\r\n      if (glFormat === _gl.RGBA) {\r\n        if (glType === _gl.FLOAT) internalFormat = _gl.RGBA32F;\r\n        if (glType === _gl.HALF_FLOAT) internalFormat = _gl.RGBA16F;\r\n        if (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.RGBA8;\r\n      }\r\n\r\n      if (\r\n        internalFormat === _gl.R16F ||\r\n        internalFormat === _gl.R32F ||\r\n        internalFormat === _gl.RGBA16F ||\r\n        internalFormat === _gl.RGBA32F\r\n      ) {\r\n        extensions.get('EXT_color_buffer_float');\r\n      }\r\n\r\n      return internalFormat;\r\n    } // Fallback filters for non-power-of-2 textures\r\n\r\n    function filterFallback(f) {\r\n      if (\r\n        f === NearestFilter ||\r\n        f === NearestMipmapNearestFilter ||\r\n        f === NearestMipmapLinearFilter\r\n      ) {\r\n        return _gl.NEAREST;\r\n      }\r\n\r\n      return _gl.LINEAR;\r\n    } //\r\n\r\n    function onTextureDispose(event) {\r\n      const texture = event.target;\r\n      texture.removeEventListener('dispose', onTextureDispose);\r\n      deallocateTexture(texture);\r\n\r\n      if (texture.isVideoTexture) {\r\n        _videoTextures.delete(texture);\r\n      }\r\n\r\n      info.memory.textures--;\r\n    }\r\n\r\n    function onRenderTargetDispose(event) {\r\n      const renderTarget = event.target;\r\n      renderTarget.removeEventListener('dispose', onRenderTargetDispose);\r\n      deallocateRenderTarget(renderTarget);\r\n    } //\r\n\r\n    function deallocateTexture(texture) {\r\n      const textureProperties = properties.get(texture);\r\n      if (textureProperties.__webglInit === undefined) return;\r\n\r\n      _gl.deleteTexture(textureProperties.__webglTexture);\r\n\r\n      properties.remove(texture);\r\n    }\r\n\r\n    function deallocateRenderTarget(renderTarget) {\r\n      const texture = renderTarget.texture;\r\n      const renderTargetProperties = properties.get(renderTarget);\r\n      const textureProperties = properties.get(texture);\r\n      if (!renderTarget) return;\r\n\r\n      if (textureProperties.__webglTexture !== undefined) {\r\n        _gl.deleteTexture(textureProperties.__webglTexture);\r\n\r\n        info.memory.textures--;\r\n      }\r\n\r\n      if (renderTarget.depthTexture) {\r\n        renderTarget.depthTexture.dispose();\r\n      }\r\n\r\n      if (renderTarget.isWebGLCubeRenderTarget) {\r\n        for (let i = 0; i < 6; i++) {\r\n          _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\r\n\r\n          if (renderTargetProperties.__webglDepthbuffer)\r\n            _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\r\n        }\r\n      } else {\r\n        _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\r\n\r\n        if (renderTargetProperties.__webglDepthbuffer)\r\n          _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\r\n        if (renderTargetProperties.__webglMultisampledFramebuffer)\r\n          _gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);\r\n        if (renderTargetProperties.__webglColorRenderbuffer)\r\n          _gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer);\r\n        if (renderTargetProperties.__webglDepthRenderbuffer)\r\n          _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);\r\n      }\r\n\r\n      if (renderTarget.isWebGLMultipleRenderTargets) {\r\n        for (let i = 0, il = texture.length; i < il; i++) {\r\n          const attachmentProperties = properties.get(texture[i]);\r\n\r\n          if (attachmentProperties.__webglTexture) {\r\n            _gl.deleteTexture(attachmentProperties.__webglTexture);\r\n\r\n            info.memory.textures--;\r\n          }\r\n\r\n          properties.remove(texture[i]);\r\n        }\r\n      }\r\n\r\n      properties.remove(texture);\r\n      properties.remove(renderTarget);\r\n    } //\r\n\r\n    let textureUnits = 0;\r\n\r\n    function resetTextureUnits() {\r\n      textureUnits = 0;\r\n    }\r\n\r\n    function allocateTextureUnit() {\r\n      const textureUnit = textureUnits;\r\n\r\n      if (textureUnit >= maxTextures) {\r\n        console.warn(\r\n          'THREE.WebGLTextures: Trying to use ' +\r\n            textureUnit +\r\n            ' texture units while this GPU supports only ' +\r\n            maxTextures,\r\n        );\r\n      }\r\n\r\n      textureUnits += 1;\r\n      return textureUnit;\r\n    } //\r\n\r\n    function setTexture2D(texture, slot) {\r\n      const textureProperties = properties.get(texture);\r\n      if (texture.isVideoTexture) updateVideoTexture(texture);\r\n\r\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\r\n        const image = texture.image;\r\n\r\n        if (image === undefined) {\r\n          console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');\r\n        } else if (image.complete === false) {\r\n          console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');\r\n        } else {\r\n          uploadTexture(textureProperties, texture, slot);\r\n          return;\r\n        }\r\n      }\r\n\r\n      state.activeTexture(_gl.TEXTURE0 + slot);\r\n      state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\r\n    }\r\n\r\n    function setTexture2DArray(texture, slot) {\r\n      const textureProperties = properties.get(texture);\r\n\r\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\r\n        uploadTexture(textureProperties, texture, slot);\r\n        return;\r\n      }\r\n\r\n      state.activeTexture(_gl.TEXTURE0 + slot);\r\n      state.bindTexture(_gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture);\r\n    }\r\n\r\n    function setTexture3D(texture, slot) {\r\n      const textureProperties = properties.get(texture);\r\n\r\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\r\n        uploadTexture(textureProperties, texture, slot);\r\n        return;\r\n      }\r\n\r\n      state.activeTexture(_gl.TEXTURE0 + slot);\r\n      state.bindTexture(_gl.TEXTURE_3D, textureProperties.__webglTexture);\r\n    }\r\n\r\n    function setTextureCube(texture, slot) {\r\n      const textureProperties = properties.get(texture);\r\n\r\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\r\n        uploadCubeTexture(textureProperties, texture, slot);\r\n        return;\r\n      }\r\n\r\n      state.activeTexture(_gl.TEXTURE0 + slot);\r\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\r\n    }\r\n\r\n    const wrappingToGL = {\r\n      [RepeatWrapping]: _gl.REPEAT,\r\n      [ClampToEdgeWrapping]: _gl.CLAMP_TO_EDGE,\r\n      [MirroredRepeatWrapping]: _gl.MIRRORED_REPEAT,\r\n    };\r\n    const filterToGL = {\r\n      [NearestFilter]: _gl.NEAREST,\r\n      [NearestMipmapNearestFilter]: _gl.NEAREST_MIPMAP_NEAREST,\r\n      [NearestMipmapLinearFilter]: _gl.NEAREST_MIPMAP_LINEAR,\r\n      [LinearFilter]: _gl.LINEAR,\r\n      [LinearMipmapNearestFilter]: _gl.LINEAR_MIPMAP_NEAREST,\r\n      [LinearMipmapLinearFilter]: _gl.LINEAR_MIPMAP_LINEAR,\r\n    };\r\n\r\n    function setTextureParameters(textureType, texture, supportsMips) {\r\n      if (supportsMips) {\r\n        _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[texture.wrapS]);\r\n\r\n        _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[texture.wrapT]);\r\n\r\n        if (textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY) {\r\n          _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[texture.wrapR]);\r\n        }\r\n\r\n        _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[texture.magFilter]);\r\n\r\n        _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[texture.minFilter]);\r\n      } else {\r\n        _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\r\n\r\n        _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\r\n\r\n        if (textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY) {\r\n          _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE);\r\n        }\r\n\r\n        if (texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping) {\r\n          console.warn(\r\n            'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.',\r\n          );\r\n        }\r\n\r\n        _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\r\n\r\n        _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\r\n\r\n        if (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\r\n          console.warn(\r\n            'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.',\r\n          );\r\n        }\r\n      }\r\n\r\n      if (extensions.has('EXT_texture_filter_anisotropic') === true) {\r\n        const extension = extensions.get('EXT_texture_filter_anisotropic');\r\n        if (texture.type === FloatType && extensions.has('OES_texture_float_linear') === false)\r\n          return; // verify extension for WebGL 1 and WebGL 2\r\n\r\n        if (\r\n          isWebGL2 === false &&\r\n          texture.type === HalfFloatType &&\r\n          extensions.has('OES_texture_half_float_linear') === false\r\n        )\r\n          return; // verify extension for WebGL 1 only\r\n\r\n        if (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\r\n          _gl.texParameterf(\r\n            textureType,\r\n            extension.TEXTURE_MAX_ANISOTROPY_EXT,\r\n            Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()),\r\n          );\r\n\r\n          properties.get(texture).__currentAnisotropy = texture.anisotropy;\r\n        }\r\n      }\r\n    }\r\n\r\n    function initTexture(textureProperties, texture) {\r\n      if (textureProperties.__webglInit === undefined) {\r\n        textureProperties.__webglInit = true;\r\n        texture.addEventListener('dispose', onTextureDispose);\r\n        textureProperties.__webglTexture = _gl.createTexture();\r\n        info.memory.textures++;\r\n      }\r\n    }\r\n\r\n    function uploadTexture(textureProperties, texture, slot) {\r\n      let textureType = _gl.TEXTURE_2D;\r\n      if (texture.isDataTexture2DArray) textureType = _gl.TEXTURE_2D_ARRAY;\r\n      if (texture.isDataTexture3D) textureType = _gl.TEXTURE_3D;\r\n      initTexture(textureProperties, texture);\r\n      state.activeTexture(_gl.TEXTURE0 + slot);\r\n      state.bindTexture(textureType, textureProperties.__webglTexture);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE);\r\n\r\n      const needsPowerOfTwo =\r\n        textureNeedsPowerOfTwo(texture) && isPowerOfTwo$1(texture.image) === false;\r\n      const image = resizeImage(texture.image, needsPowerOfTwo, false, maxTextureSize);\r\n      const supportsMips = isPowerOfTwo$1(image) || isWebGL2,\r\n        glFormat = utils.convert(texture.format);\r\n      let glType = utils.convert(texture.type),\r\n        glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\r\n      setTextureParameters(textureType, texture, supportsMips);\r\n      let mipmap;\r\n      const mipmaps = texture.mipmaps;\r\n\r\n      if (texture.isDepthTexture) {\r\n        // populate depth texture with dummy data\r\n        glInternalFormat = _gl.DEPTH_COMPONENT;\r\n\r\n        if (isWebGL2) {\r\n          if (texture.type === FloatType) {\r\n            glInternalFormat = _gl.DEPTH_COMPONENT32F;\r\n          } else if (texture.type === UnsignedIntType) {\r\n            glInternalFormat = _gl.DEPTH_COMPONENT24;\r\n          } else if (texture.type === UnsignedInt248Type) {\r\n            glInternalFormat = _gl.DEPTH24_STENCIL8;\r\n          } else {\r\n            glInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\r\n          }\r\n        } else {\r\n          if (texture.type === FloatType) {\r\n            console.error('WebGLRenderer: Floating point depth texture requires WebGL2.');\r\n          }\r\n        } // validation checks for WebGL 1\r\n\r\n        if (texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\r\n          // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\r\n          // DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\r\n          // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n          if (texture.type !== UnsignedShortType && texture.type !== UnsignedIntType) {\r\n            console.warn(\r\n              'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.',\r\n            );\r\n            texture.type = UnsignedShortType;\r\n            glType = utils.convert(texture.type);\r\n          }\r\n        }\r\n\r\n        if (texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\r\n          // Depth stencil textures need the DEPTH_STENCIL internal format\r\n          // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n          glInternalFormat = _gl.DEPTH_STENCIL; // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\r\n          // DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\r\n          // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n\r\n          if (texture.type !== UnsignedInt248Type) {\r\n            console.warn(\r\n              'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.',\r\n            );\r\n            texture.type = UnsignedInt248Type;\r\n            glType = utils.convert(texture.type);\r\n          }\r\n        } //\r\n\r\n        state.texImage2D(\r\n          _gl.TEXTURE_2D,\r\n          0,\r\n          glInternalFormat,\r\n          image.width,\r\n          image.height,\r\n          0,\r\n          glFormat,\r\n          glType,\r\n          null,\r\n        );\r\n      } else if (texture.isDataTexture) {\r\n        // use manually created mipmaps if available\r\n        // if there are no manual mipmaps\r\n        // set 0 level mipmap and then use GL to generate other mipmap levels\r\n        if (mipmaps.length > 0 && supportsMips) {\r\n          for (let i = 0, il = mipmaps.length; i < il; i++) {\r\n            mipmap = mipmaps[i];\r\n            state.texImage2D(\r\n              _gl.TEXTURE_2D,\r\n              i,\r\n              glInternalFormat,\r\n              mipmap.width,\r\n              mipmap.height,\r\n              0,\r\n              glFormat,\r\n              glType,\r\n              mipmap.data,\r\n            );\r\n          }\r\n\r\n          texture.generateMipmaps = false;\r\n          textureProperties.__maxMipLevel = mipmaps.length - 1;\r\n        } else {\r\n          state.texImage2D(\r\n            _gl.TEXTURE_2D,\r\n            0,\r\n            glInternalFormat,\r\n            image.width,\r\n            image.height,\r\n            0,\r\n            glFormat,\r\n            glType,\r\n            image.data,\r\n          );\r\n          textureProperties.__maxMipLevel = 0;\r\n        }\r\n      } else if (texture.isCompressedTexture) {\r\n        for (let i = 0, il = mipmaps.length; i < il; i++) {\r\n          mipmap = mipmaps[i];\r\n\r\n          if (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\r\n            if (glFormat !== null) {\r\n              state.compressedTexImage2D(\r\n                _gl.TEXTURE_2D,\r\n                i,\r\n                glInternalFormat,\r\n                mipmap.width,\r\n                mipmap.height,\r\n                0,\r\n                mipmap.data,\r\n              );\r\n            } else {\r\n              console.warn(\r\n                'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()',\r\n              );\r\n            }\r\n          } else {\r\n            state.texImage2D(\r\n              _gl.TEXTURE_2D,\r\n              i,\r\n              glInternalFormat,\r\n              mipmap.width,\r\n              mipmap.height,\r\n              0,\r\n              glFormat,\r\n              glType,\r\n              mipmap.data,\r\n            );\r\n          }\r\n        }\r\n\r\n        textureProperties.__maxMipLevel = mipmaps.length - 1;\r\n      } else if (texture.isDataTexture2DArray) {\r\n        state.texImage3D(\r\n          _gl.TEXTURE_2D_ARRAY,\r\n          0,\r\n          glInternalFormat,\r\n          image.width,\r\n          image.height,\r\n          image.depth,\r\n          0,\r\n          glFormat,\r\n          glType,\r\n          image.data,\r\n        );\r\n        textureProperties.__maxMipLevel = 0;\r\n      } else if (texture.isDataTexture3D) {\r\n        state.texImage3D(\r\n          _gl.TEXTURE_3D,\r\n          0,\r\n          glInternalFormat,\r\n          image.width,\r\n          image.height,\r\n          image.depth,\r\n          0,\r\n          glFormat,\r\n          glType,\r\n          image.data,\r\n        );\r\n        textureProperties.__maxMipLevel = 0;\r\n      } else {\r\n        // regular Texture (image, video, canvas)\r\n        // use manually created mipmaps if available\r\n        // if there are no manual mipmaps\r\n        // set 0 level mipmap and then use GL to generate other mipmap levels\r\n        if (mipmaps.length > 0 && supportsMips) {\r\n          for (let i = 0, il = mipmaps.length; i < il; i++) {\r\n            mipmap = mipmaps[i];\r\n            state.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap);\r\n          }\r\n\r\n          texture.generateMipmaps = false;\r\n          textureProperties.__maxMipLevel = mipmaps.length - 1;\r\n        } else {\r\n          state.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image);\r\n          textureProperties.__maxMipLevel = 0;\r\n        }\r\n      }\r\n\r\n      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\r\n        generateMipmap(textureType, texture, image.width, image.height);\r\n      }\r\n\r\n      textureProperties.__version = texture.version;\r\n      if (texture.onUpdate) texture.onUpdate(texture);\r\n    }\r\n\r\n    function uploadCubeTexture(textureProperties, texture, slot) {\r\n      if (texture.image.length !== 6) return;\r\n      initTexture(textureProperties, texture);\r\n      state.activeTexture(_gl.TEXTURE0 + slot);\r\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE);\r\n\r\n      const isCompressed =\r\n        texture && (texture.isCompressedTexture || texture.image[0].isCompressedTexture);\r\n      const isDataTexture = texture.image[0] && texture.image[0].isDataTexture;\r\n      const cubeImage = [];\r\n\r\n      for (let i = 0; i < 6; i++) {\r\n        if (!isCompressed && !isDataTexture) {\r\n          cubeImage[i] = resizeImage(texture.image[i], false, true, maxCubemapSize);\r\n        } else {\r\n          cubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\r\n        }\r\n      }\r\n\r\n      const image = cubeImage[0],\r\n        supportsMips = isPowerOfTwo$1(image) || isWebGL2,\r\n        glFormat = utils.convert(texture.format),\r\n        glType = utils.convert(texture.type),\r\n        glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\r\n      setTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, supportsMips);\r\n      let mipmaps;\r\n\r\n      if (isCompressed) {\r\n        for (let i = 0; i < 6; i++) {\r\n          mipmaps = cubeImage[i].mipmaps;\r\n\r\n          for (let j = 0; j < mipmaps.length; j++) {\r\n            const mipmap = mipmaps[j];\r\n\r\n            if (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\r\n              if (glFormat !== null) {\r\n                state.compressedTexImage2D(\r\n                  _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\r\n                  j,\r\n                  glInternalFormat,\r\n                  mipmap.width,\r\n                  mipmap.height,\r\n                  0,\r\n                  mipmap.data,\r\n                );\r\n              } else {\r\n                console.warn(\r\n                  'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()',\r\n                );\r\n              }\r\n            } else {\r\n              state.texImage2D(\r\n                _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\r\n                j,\r\n                glInternalFormat,\r\n                mipmap.width,\r\n                mipmap.height,\r\n                0,\r\n                glFormat,\r\n                glType,\r\n                mipmap.data,\r\n              );\r\n            }\r\n          }\r\n        }\r\n\r\n        textureProperties.__maxMipLevel = mipmaps.length - 1;\r\n      } else {\r\n        mipmaps = texture.mipmaps;\r\n\r\n        for (let i = 0; i < 6; i++) {\r\n          if (isDataTexture) {\r\n            state.texImage2D(\r\n              _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\r\n              0,\r\n              glInternalFormat,\r\n              cubeImage[i].width,\r\n              cubeImage[i].height,\r\n              0,\r\n              glFormat,\r\n              glType,\r\n              cubeImage[i].data,\r\n            );\r\n\r\n            for (let j = 0; j < mipmaps.length; j++) {\r\n              const mipmap = mipmaps[j];\r\n              const mipmapImage = mipmap.image[i].image;\r\n              state.texImage2D(\r\n                _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\r\n                j + 1,\r\n                glInternalFormat,\r\n                mipmapImage.width,\r\n                mipmapImage.height,\r\n                0,\r\n                glFormat,\r\n                glType,\r\n                mipmapImage.data,\r\n              );\r\n            }\r\n          } else {\r\n            state.texImage2D(\r\n              _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\r\n              0,\r\n              glInternalFormat,\r\n              glFormat,\r\n              glType,\r\n              cubeImage[i],\r\n            );\r\n\r\n            for (let j = 0; j < mipmaps.length; j++) {\r\n              const mipmap = mipmaps[j];\r\n              state.texImage2D(\r\n                _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\r\n                j + 1,\r\n                glInternalFormat,\r\n                glFormat,\r\n                glType,\r\n                mipmap.image[i],\r\n              );\r\n            }\r\n          }\r\n        }\r\n\r\n        textureProperties.__maxMipLevel = mipmaps.length;\r\n      }\r\n\r\n      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\r\n        // We assume images for cube map have the same size.\r\n        generateMipmap(_gl.TEXTURE_CUBE_MAP, texture, image.width, image.height);\r\n      }\r\n\r\n      textureProperties.__version = texture.version;\r\n      if (texture.onUpdate) texture.onUpdate(texture);\r\n    } // Render targets\r\n    // Setup storage for target texture and bind it to correct framebuffer\r\n\r\n    function setupFrameBufferTexture(\r\n      framebuffer,\r\n      renderTarget,\r\n      texture,\r\n      attachment,\r\n      textureTarget,\r\n    ) {\r\n      const glFormat = utils.convert(texture.format);\r\n      const glType = utils.convert(texture.type);\r\n      const glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\r\n\r\n      if (textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY) {\r\n        state.texImage3D(\r\n          textureTarget,\r\n          0,\r\n          glInternalFormat,\r\n          renderTarget.width,\r\n          renderTarget.height,\r\n          renderTarget.depth,\r\n          0,\r\n          glFormat,\r\n          glType,\r\n          null,\r\n        );\r\n      } else {\r\n        state.texImage2D(\r\n          textureTarget,\r\n          0,\r\n          glInternalFormat,\r\n          renderTarget.width,\r\n          renderTarget.height,\r\n          0,\r\n          glFormat,\r\n          glType,\r\n          null,\r\n        );\r\n      }\r\n\r\n      state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\r\n\r\n      _gl.framebufferTexture2D(\r\n        _gl.FRAMEBUFFER,\r\n        attachment,\r\n        textureTarget,\r\n        properties.get(texture).__webglTexture,\r\n        0,\r\n      );\r\n\r\n      state.bindFramebuffer(_gl.FRAMEBUFFER, null);\r\n    } // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\r\n\r\n    function setupRenderBufferStorage(renderbuffer, renderTarget, isMultisample) {\r\n      _gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\r\n\r\n      if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\r\n        let glInternalFormat = _gl.DEPTH_COMPONENT16;\r\n\r\n        if (isMultisample) {\r\n          const depthTexture = renderTarget.depthTexture;\r\n\r\n          if (depthTexture && depthTexture.isDepthTexture) {\r\n            if (depthTexture.type === FloatType) {\r\n              glInternalFormat = _gl.DEPTH_COMPONENT32F;\r\n            } else if (depthTexture.type === UnsignedIntType) {\r\n              glInternalFormat = _gl.DEPTH_COMPONENT24;\r\n            }\r\n          }\r\n\r\n          const samples = getRenderTargetSamples(renderTarget);\r\n\r\n          _gl.renderbufferStorageMultisample(\r\n            _gl.RENDERBUFFER,\r\n            samples,\r\n            glInternalFormat,\r\n            renderTarget.width,\r\n            renderTarget.height,\r\n          );\r\n        } else {\r\n          _gl.renderbufferStorage(\r\n            _gl.RENDERBUFFER,\r\n            glInternalFormat,\r\n            renderTarget.width,\r\n            renderTarget.height,\r\n          );\r\n        }\r\n\r\n        _gl.framebufferRenderbuffer(\r\n          _gl.FRAMEBUFFER,\r\n          _gl.DEPTH_ATTACHMENT,\r\n          _gl.RENDERBUFFER,\r\n          renderbuffer,\r\n        );\r\n      } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\r\n        if (isMultisample) {\r\n          const samples = getRenderTargetSamples(renderTarget);\r\n\r\n          _gl.renderbufferStorageMultisample(\r\n            _gl.RENDERBUFFER,\r\n            samples,\r\n            _gl.DEPTH24_STENCIL8,\r\n            renderTarget.width,\r\n            renderTarget.height,\r\n          );\r\n        } else {\r\n          _gl.renderbufferStorage(\r\n            _gl.RENDERBUFFER,\r\n            _gl.DEPTH_STENCIL,\r\n            renderTarget.width,\r\n            renderTarget.height,\r\n          );\r\n        }\r\n\r\n        _gl.framebufferRenderbuffer(\r\n          _gl.FRAMEBUFFER,\r\n          _gl.DEPTH_STENCIL_ATTACHMENT,\r\n          _gl.RENDERBUFFER,\r\n          renderbuffer,\r\n        );\r\n      } else {\r\n        // Use the first texture for MRT so far\r\n        const texture =\r\n          renderTarget.isWebGLMultipleRenderTargets === true\r\n            ? renderTarget.texture[0]\r\n            : renderTarget.texture;\r\n        const glFormat = utils.convert(texture.format);\r\n        const glType = utils.convert(texture.type);\r\n        const glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\r\n\r\n        if (isMultisample) {\r\n          const samples = getRenderTargetSamples(renderTarget);\r\n\r\n          _gl.renderbufferStorageMultisample(\r\n            _gl.RENDERBUFFER,\r\n            samples,\r\n            glInternalFormat,\r\n            renderTarget.width,\r\n            renderTarget.height,\r\n          );\r\n        } else {\r\n          _gl.renderbufferStorage(\r\n            _gl.RENDERBUFFER,\r\n            glInternalFormat,\r\n            renderTarget.width,\r\n            renderTarget.height,\r\n          );\r\n        }\r\n      }\r\n\r\n      _gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\r\n    } // Setup resources for a Depth Texture for a FBO (needs an extension)\r\n\r\n    function setupDepthTexture(framebuffer, renderTarget) {\r\n      const isCube = renderTarget && renderTarget.isWebGLCubeRenderTarget;\r\n      if (isCube) throw new Error('Depth Texture with cube render targets is not supported');\r\n      state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\r\n\r\n      if (!(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)) {\r\n        throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\r\n      } // upload an empty depth texture with framebuffer size\r\n\r\n      if (\r\n        !properties.get(renderTarget.depthTexture).__webglTexture ||\r\n        renderTarget.depthTexture.image.width !== renderTarget.width ||\r\n        renderTarget.depthTexture.image.height !== renderTarget.height\r\n      ) {\r\n        renderTarget.depthTexture.image.width = renderTarget.width;\r\n        renderTarget.depthTexture.image.height = renderTarget.height;\r\n        renderTarget.depthTexture.needsUpdate = true;\r\n      }\r\n\r\n      setTexture2D(renderTarget.depthTexture, 0);\r\n\r\n      const webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\r\n\r\n      if (renderTarget.depthTexture.format === DepthFormat) {\r\n        _gl.framebufferTexture2D(\r\n          _gl.FRAMEBUFFER,\r\n          _gl.DEPTH_ATTACHMENT,\r\n          _gl.TEXTURE_2D,\r\n          webglDepthTexture,\r\n          0,\r\n        );\r\n      } else if (renderTarget.depthTexture.format === DepthStencilFormat) {\r\n        _gl.framebufferTexture2D(\r\n          _gl.FRAMEBUFFER,\r\n          _gl.DEPTH_STENCIL_ATTACHMENT,\r\n          _gl.TEXTURE_2D,\r\n          webglDepthTexture,\r\n          0,\r\n        );\r\n      } else {\r\n        throw new Error('Unknown depthTexture format');\r\n      }\r\n    } // Setup GL resources for a non-texture depth buffer\r\n\r\n    function setupDepthRenderbuffer(renderTarget) {\r\n      const renderTargetProperties = properties.get(renderTarget);\r\n      const isCube = renderTarget.isWebGLCubeRenderTarget === true;\r\n\r\n      if (renderTarget.depthTexture) {\r\n        if (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\r\n        setupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\r\n      } else {\r\n        if (isCube) {\r\n          renderTargetProperties.__webglDepthbuffer = [];\r\n\r\n          for (let i = 0; i < 6; i++) {\r\n            state.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[i]);\r\n            renderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\r\n            setupRenderBufferStorage(\r\n              renderTargetProperties.__webglDepthbuffer[i],\r\n              renderTarget,\r\n              false,\r\n            );\r\n          }\r\n        } else {\r\n          state.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\r\n          renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\r\n          setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget, false);\r\n        }\r\n      }\r\n\r\n      state.bindFramebuffer(_gl.FRAMEBUFFER, null);\r\n    } // Set up GL resources for the render target\r\n\r\n    function setupRenderTarget(renderTarget) {\r\n      const texture = renderTarget.texture;\r\n      const renderTargetProperties = properties.get(renderTarget);\r\n      const textureProperties = properties.get(texture);\r\n      renderTarget.addEventListener('dispose', onRenderTargetDispose);\r\n\r\n      if (renderTarget.isWebGLMultipleRenderTargets !== true) {\r\n        textureProperties.__webglTexture = _gl.createTexture();\r\n        textureProperties.__version = texture.version;\r\n        info.memory.textures++;\r\n      }\r\n\r\n      const isCube = renderTarget.isWebGLCubeRenderTarget === true;\r\n      const isMultipleRenderTargets = renderTarget.isWebGLMultipleRenderTargets === true;\r\n      const isMultisample = renderTarget.isWebGLMultisampleRenderTarget === true;\r\n      const isRenderTarget3D = texture.isDataTexture3D || texture.isDataTexture2DArray;\r\n      const supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2; // Handles WebGL2 RGBFormat fallback - #18858\r\n\r\n      if (\r\n        isWebGL2 &&\r\n        texture.format === RGBFormat &&\r\n        (texture.type === FloatType || texture.type === HalfFloatType)\r\n      ) {\r\n        texture.format = RGBAFormat;\r\n        console.warn(\r\n          'THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.',\r\n        );\r\n      } // Setup framebuffer\r\n\r\n      if (isCube) {\r\n        renderTargetProperties.__webglFramebuffer = [];\r\n\r\n        for (let i = 0; i < 6; i++) {\r\n          renderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\r\n        }\r\n      } else {\r\n        renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n        if (isMultipleRenderTargets) {\r\n          if (capabilities.drawBuffers) {\r\n            const textures = renderTarget.texture;\r\n\r\n            for (let i = 0, il = textures.length; i < il; i++) {\r\n              const attachmentProperties = properties.get(textures[i]);\r\n\r\n              if (attachmentProperties.__webglTexture === undefined) {\r\n                attachmentProperties.__webglTexture = _gl.createTexture();\r\n                info.memory.textures++;\r\n              }\r\n            }\r\n          } else {\r\n            console.warn(\r\n              'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.',\r\n            );\r\n          }\r\n        } else if (isMultisample) {\r\n          if (isWebGL2) {\r\n            renderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\r\n            renderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\r\n\r\n            _gl.bindRenderbuffer(_gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer);\r\n\r\n            const glFormat = utils.convert(texture.format);\r\n            const glType = utils.convert(texture.type);\r\n            const glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\r\n            const samples = getRenderTargetSamples(renderTarget);\r\n\r\n            _gl.renderbufferStorageMultisample(\r\n              _gl.RENDERBUFFER,\r\n              samples,\r\n              glInternalFormat,\r\n              renderTarget.width,\r\n              renderTarget.height,\r\n            );\r\n\r\n            state.bindFramebuffer(\r\n              _gl.FRAMEBUFFER,\r\n              renderTargetProperties.__webglMultisampledFramebuffer,\r\n            );\r\n\r\n            _gl.framebufferRenderbuffer(\r\n              _gl.FRAMEBUFFER,\r\n              _gl.COLOR_ATTACHMENT0,\r\n              _gl.RENDERBUFFER,\r\n              renderTargetProperties.__webglColorRenderbuffer,\r\n            );\r\n\r\n            _gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\r\n\r\n            if (renderTarget.depthBuffer) {\r\n              renderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\r\n              setupRenderBufferStorage(\r\n                renderTargetProperties.__webglDepthRenderbuffer,\r\n                renderTarget,\r\n                true,\r\n              );\r\n            }\r\n\r\n            state.bindFramebuffer(_gl.FRAMEBUFFER, null);\r\n          } else {\r\n            console.warn(\r\n              'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.',\r\n            );\r\n          }\r\n        }\r\n      } // Setup color buffer\r\n\r\n      if (isCube) {\r\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\r\n        setTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, supportsMips);\r\n\r\n        for (let i = 0; i < 6; i++) {\r\n          setupFrameBufferTexture(\r\n            renderTargetProperties.__webglFramebuffer[i],\r\n            renderTarget,\r\n            texture,\r\n            _gl.COLOR_ATTACHMENT0,\r\n            _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\r\n          );\r\n        }\r\n\r\n        if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\r\n          generateMipmap(_gl.TEXTURE_CUBE_MAP, texture, renderTarget.width, renderTarget.height);\r\n        }\r\n\r\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\r\n      } else if (isMultipleRenderTargets) {\r\n        const textures = renderTarget.texture;\r\n\r\n        for (let i = 0, il = textures.length; i < il; i++) {\r\n          const attachment = textures[i];\r\n          const attachmentProperties = properties.get(attachment);\r\n          state.bindTexture(_gl.TEXTURE_2D, attachmentProperties.__webglTexture);\r\n          setTextureParameters(_gl.TEXTURE_2D, attachment, supportsMips);\r\n          setupFrameBufferTexture(\r\n            renderTargetProperties.__webglFramebuffer,\r\n            renderTarget,\r\n            attachment,\r\n            _gl.COLOR_ATTACHMENT0 + i,\r\n            _gl.TEXTURE_2D,\r\n          );\r\n\r\n          if (textureNeedsGenerateMipmaps(attachment, supportsMips)) {\r\n            generateMipmap(_gl.TEXTURE_2D, attachment, renderTarget.width, renderTarget.height);\r\n          }\r\n        }\r\n\r\n        state.bindTexture(_gl.TEXTURE_2D, null);\r\n      } else {\r\n        let glTextureType = _gl.TEXTURE_2D;\r\n\r\n        if (isRenderTarget3D) {\r\n          // Render targets containing layers, i.e: Texture 3D and 2d arrays\r\n          if (isWebGL2) {\r\n            const isTexture3D = texture.isDataTexture3D;\r\n            glTextureType = isTexture3D ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\r\n          } else {\r\n            console.warn(\r\n              'THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.',\r\n            );\r\n          }\r\n        }\r\n\r\n        state.bindTexture(glTextureType, textureProperties.__webglTexture);\r\n        setTextureParameters(glTextureType, texture, supportsMips);\r\n        setupFrameBufferTexture(\r\n          renderTargetProperties.__webglFramebuffer,\r\n          renderTarget,\r\n          texture,\r\n          _gl.COLOR_ATTACHMENT0,\r\n          glTextureType,\r\n        );\r\n\r\n        if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\r\n          generateMipmap(_gl.TEXTURE_2D, texture, renderTarget.width, renderTarget.height);\r\n        }\r\n\r\n        state.bindTexture(_gl.TEXTURE_2D, null);\r\n      } // Setup depth and stencil buffers\r\n\r\n      if (renderTarget.depthBuffer) {\r\n        setupDepthRenderbuffer(renderTarget);\r\n      }\r\n    }\r\n\r\n    function updateRenderTargetMipmap(renderTarget) {\r\n      const supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2;\r\n      const textures =\r\n        renderTarget.isWebGLMultipleRenderTargets === true\r\n          ? renderTarget.texture\r\n          : [renderTarget.texture];\r\n\r\n      for (let i = 0, il = textures.length; i < il; i++) {\r\n        const texture = textures[i];\r\n\r\n        if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\r\n          const target = renderTarget.isWebGLCubeRenderTarget\r\n            ? _gl.TEXTURE_CUBE_MAP\r\n            : _gl.TEXTURE_2D;\r\n\r\n          const webglTexture = properties.get(texture).__webglTexture;\r\n\r\n          state.bindTexture(target, webglTexture);\r\n          generateMipmap(target, texture, renderTarget.width, renderTarget.height);\r\n          state.bindTexture(target, null);\r\n        }\r\n      }\r\n    }\r\n\r\n    function updateMultisampleRenderTarget(renderTarget) {\r\n      if (renderTarget.isWebGLMultisampleRenderTarget) {\r\n        if (isWebGL2) {\r\n          const width = renderTarget.width;\r\n          const height = renderTarget.height;\r\n          let mask = _gl.COLOR_BUFFER_BIT;\r\n          if (renderTarget.depthBuffer) mask |= _gl.DEPTH_BUFFER_BIT;\r\n          if (renderTarget.stencilBuffer) mask |= _gl.STENCIL_BUFFER_BIT;\r\n          const renderTargetProperties = properties.get(renderTarget);\r\n          state.bindFramebuffer(\r\n            _gl.READ_FRAMEBUFFER,\r\n            renderTargetProperties.__webglMultisampledFramebuffer,\r\n          );\r\n          state.bindFramebuffer(_gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\r\n\r\n          _gl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST);\r\n\r\n          state.bindFramebuffer(_gl.READ_FRAMEBUFFER, null);\r\n          state.bindFramebuffer(\r\n            _gl.DRAW_FRAMEBUFFER,\r\n            renderTargetProperties.__webglMultisampledFramebuffer,\r\n          );\r\n        } else {\r\n          console.warn(\r\n            'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.',\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    function getRenderTargetSamples(renderTarget) {\r\n      return isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget\r\n        ? Math.min(maxSamples, renderTarget.samples)\r\n        : 0;\r\n    }\r\n\r\n    function updateVideoTexture(texture) {\r\n      const frame = info.render.frame; // Check the last frame we updated the VideoTexture\r\n\r\n      if (_videoTextures.get(texture) !== frame) {\r\n        _videoTextures.set(texture, frame);\r\n\r\n        texture.update();\r\n      }\r\n    } // backwards compatibility\r\n\r\n    let warnedTexture2D = false;\r\n    let warnedTextureCube = false;\r\n\r\n    function safeSetTexture2D(texture, slot) {\r\n      if (texture && texture.isWebGLRenderTarget) {\r\n        if (warnedTexture2D === false) {\r\n          console.warn(\r\n            \"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\",\r\n          );\r\n          warnedTexture2D = true;\r\n        }\r\n\r\n        texture = texture.texture;\r\n      }\r\n\r\n      setTexture2D(texture, slot);\r\n    }\r\n\r\n    function safeSetTextureCube(texture, slot) {\r\n      if (texture && texture.isWebGLCubeRenderTarget) {\r\n        if (warnedTextureCube === false) {\r\n          console.warn(\r\n            \"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\",\r\n          );\r\n          warnedTextureCube = true;\r\n        }\r\n\r\n        texture = texture.texture;\r\n      }\r\n\r\n      setTextureCube(texture, slot);\r\n    } //\r\n\r\n    this.allocateTextureUnit = allocateTextureUnit;\r\n    this.resetTextureUnits = resetTextureUnits;\r\n    this.setTexture2D = setTexture2D;\r\n    this.setTexture2DArray = setTexture2DArray;\r\n    this.setTexture3D = setTexture3D;\r\n    this.setTextureCube = setTextureCube;\r\n    this.setupRenderTarget = setupRenderTarget;\r\n    this.updateRenderTargetMipmap = updateRenderTargetMipmap;\r\n    this.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\r\n    this.safeSetTexture2D = safeSetTexture2D;\r\n    this.safeSetTextureCube = safeSetTextureCube;\r\n  }\r\n\r\n  function WebGLUtils(gl, extensions, capabilities) {\r\n    const isWebGL2 = capabilities.isWebGL2;\r\n\r\n    function convert(p) {\r\n      let extension;\r\n      if (p === UnsignedByteType) return gl.UNSIGNED_BYTE;\r\n      if (p === UnsignedShort4444Type) return gl.UNSIGNED_SHORT_4_4_4_4;\r\n      if (p === UnsignedShort5551Type) return gl.UNSIGNED_SHORT_5_5_5_1;\r\n      if (p === UnsignedShort565Type) return gl.UNSIGNED_SHORT_5_6_5;\r\n      if (p === ByteType) return gl.BYTE;\r\n      if (p === ShortType) return gl.SHORT;\r\n      if (p === UnsignedShortType) return gl.UNSIGNED_SHORT;\r\n      if (p === IntType) return gl.INT;\r\n      if (p === UnsignedIntType) return gl.UNSIGNED_INT;\r\n      if (p === FloatType) return gl.FLOAT;\r\n\r\n      if (p === HalfFloatType) {\r\n        if (isWebGL2) return gl.HALF_FLOAT;\r\n        extension = extensions.get('OES_texture_half_float');\r\n\r\n        if (extension !== null) {\r\n          return extension.HALF_FLOAT_OES;\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n\r\n      if (p === AlphaFormat) return gl.ALPHA;\r\n      if (p === RGBFormat) return gl.RGB;\r\n      if (p === RGBAFormat) return gl.RGBA;\r\n      if (p === LuminanceFormat) return gl.LUMINANCE;\r\n      if (p === LuminanceAlphaFormat) return gl.LUMINANCE_ALPHA;\r\n      if (p === DepthFormat) return gl.DEPTH_COMPONENT;\r\n      if (p === DepthStencilFormat) return gl.DEPTH_STENCIL;\r\n      if (p === RedFormat) return gl.RED; // WebGL2 formats.\r\n\r\n      if (p === RedIntegerFormat) return gl.RED_INTEGER;\r\n      if (p === RGFormat) return gl.RG;\r\n      if (p === RGIntegerFormat) return gl.RG_INTEGER;\r\n      if (p === RGBIntegerFormat) return gl.RGB_INTEGER;\r\n      if (p === RGBAIntegerFormat) return gl.RGBA_INTEGER;\r\n\r\n      if (\r\n        p === RGB_S3TC_DXT1_Format ||\r\n        p === RGBA_S3TC_DXT1_Format ||\r\n        p === RGBA_S3TC_DXT3_Format ||\r\n        p === RGBA_S3TC_DXT5_Format\r\n      ) {\r\n        extension = extensions.get('WEBGL_compressed_texture_s3tc');\r\n\r\n        if (extension !== null) {\r\n          if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n          if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n          if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n          if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n\r\n      if (\r\n        p === RGB_PVRTC_4BPPV1_Format ||\r\n        p === RGB_PVRTC_2BPPV1_Format ||\r\n        p === RGBA_PVRTC_4BPPV1_Format ||\r\n        p === RGBA_PVRTC_2BPPV1_Format\r\n      ) {\r\n        extension = extensions.get('WEBGL_compressed_texture_pvrtc');\r\n\r\n        if (extension !== null) {\r\n          if (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n          if (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n          if (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n          if (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n\r\n      if (p === RGB_ETC1_Format) {\r\n        extension = extensions.get('WEBGL_compressed_texture_etc1');\r\n\r\n        if (extension !== null) {\r\n          return extension.COMPRESSED_RGB_ETC1_WEBGL;\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n\r\n      if (p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format) {\r\n        extension = extensions.get('WEBGL_compressed_texture_etc');\r\n\r\n        if (extension !== null) {\r\n          if (p === RGB_ETC2_Format) return extension.COMPRESSED_RGB8_ETC2;\r\n          if (p === RGBA_ETC2_EAC_Format) return extension.COMPRESSED_RGBA8_ETC2_EAC;\r\n        }\r\n      }\r\n\r\n      if (\r\n        p === RGBA_ASTC_4x4_Format ||\r\n        p === RGBA_ASTC_5x4_Format ||\r\n        p === RGBA_ASTC_5x5_Format ||\r\n        p === RGBA_ASTC_6x5_Format ||\r\n        p === RGBA_ASTC_6x6_Format ||\r\n        p === RGBA_ASTC_8x5_Format ||\r\n        p === RGBA_ASTC_8x6_Format ||\r\n        p === RGBA_ASTC_8x8_Format ||\r\n        p === RGBA_ASTC_10x5_Format ||\r\n        p === RGBA_ASTC_10x6_Format ||\r\n        p === RGBA_ASTC_10x8_Format ||\r\n        p === RGBA_ASTC_10x10_Format ||\r\n        p === RGBA_ASTC_12x10_Format ||\r\n        p === RGBA_ASTC_12x12_Format ||\r\n        p === SRGB8_ALPHA8_ASTC_4x4_Format ||\r\n        p === SRGB8_ALPHA8_ASTC_5x4_Format ||\r\n        p === SRGB8_ALPHA8_ASTC_5x5_Format ||\r\n        p === SRGB8_ALPHA8_ASTC_6x5_Format ||\r\n        p === SRGB8_ALPHA8_ASTC_6x6_Format ||\r\n        p === SRGB8_ALPHA8_ASTC_8x5_Format ||\r\n        p === SRGB8_ALPHA8_ASTC_8x6_Format ||\r\n        p === SRGB8_ALPHA8_ASTC_8x8_Format ||\r\n        p === SRGB8_ALPHA8_ASTC_10x5_Format ||\r\n        p === SRGB8_ALPHA8_ASTC_10x6_Format ||\r\n        p === SRGB8_ALPHA8_ASTC_10x8_Format ||\r\n        p === SRGB8_ALPHA8_ASTC_10x10_Format ||\r\n        p === SRGB8_ALPHA8_ASTC_12x10_Format ||\r\n        p === SRGB8_ALPHA8_ASTC_12x12_Format\r\n      ) {\r\n        extension = extensions.get('WEBGL_compressed_texture_astc');\r\n\r\n        if (extension !== null) {\r\n          // TODO Complete?\r\n          return p;\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n\r\n      if (p === RGBA_BPTC_Format) {\r\n        extension = extensions.get('EXT_texture_compression_bptc');\r\n\r\n        if (extension !== null) {\r\n          // TODO Complete?\r\n          return p;\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n\r\n      if (p === UnsignedInt248Type) {\r\n        if (isWebGL2) return gl.UNSIGNED_INT_24_8;\r\n        extension = extensions.get('WEBGL_depth_texture');\r\n\r\n        if (extension !== null) {\r\n          return extension.UNSIGNED_INT_24_8_WEBGL;\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      convert: convert,\r\n    };\r\n  }\r\n\r\n  class ArrayCamera extends PerspectiveCamera {\r\n    constructor(array = []) {\r\n      super();\r\n      this.cameras = array;\r\n    }\r\n  }\r\n\r\n  ArrayCamera.prototype.isArrayCamera = true;\r\n\r\n  class Group extends Object3D {\r\n    constructor() {\r\n      super();\r\n      this.type = 'Group';\r\n    }\r\n  }\r\n\r\n  Group.prototype.isGroup = true;\r\n\r\n  const _moveEvent = {\r\n    type: 'move',\r\n  };\r\n\r\n  class WebXRController {\r\n    constructor() {\r\n      this._targetRay = null;\r\n      this._grip = null;\r\n      this._hand = null;\r\n    }\r\n\r\n    getHandSpace() {\r\n      if (this._hand === null) {\r\n        this._hand = new Group();\r\n        this._hand.matrixAutoUpdate = false;\r\n        this._hand.visible = false;\r\n        this._hand.joints = {};\r\n        this._hand.inputState = {\r\n          pinching: false,\r\n        };\r\n      }\r\n\r\n      return this._hand;\r\n    }\r\n\r\n    getTargetRaySpace() {\r\n      if (this._targetRay === null) {\r\n        this._targetRay = new Group();\r\n        this._targetRay.matrixAutoUpdate = false;\r\n        this._targetRay.visible = false;\r\n        this._targetRay.hasLinearVelocity = false;\r\n        this._targetRay.linearVelocity = new Vector3();\r\n        this._targetRay.hasAngularVelocity = false;\r\n        this._targetRay.angularVelocity = new Vector3();\r\n      }\r\n\r\n      return this._targetRay;\r\n    }\r\n\r\n    getGripSpace() {\r\n      if (this._grip === null) {\r\n        this._grip = new Group();\r\n        this._grip.matrixAutoUpdate = false;\r\n        this._grip.visible = false;\r\n        this._grip.hasLinearVelocity = false;\r\n        this._grip.linearVelocity = new Vector3();\r\n        this._grip.hasAngularVelocity = false;\r\n        this._grip.angularVelocity = new Vector3();\r\n      }\r\n\r\n      return this._grip;\r\n    }\r\n\r\n    dispatchEvent(event) {\r\n      if (this._targetRay !== null) {\r\n        this._targetRay.dispatchEvent(event);\r\n      }\r\n\r\n      if (this._grip !== null) {\r\n        this._grip.dispatchEvent(event);\r\n      }\r\n\r\n      if (this._hand !== null) {\r\n        this._hand.dispatchEvent(event);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    disconnect(inputSource) {\r\n      this.dispatchEvent({\r\n        type: 'disconnected',\r\n        data: inputSource,\r\n      });\r\n\r\n      if (this._targetRay !== null) {\r\n        this._targetRay.visible = false;\r\n      }\r\n\r\n      if (this._grip !== null) {\r\n        this._grip.visible = false;\r\n      }\r\n\r\n      if (this._hand !== null) {\r\n        this._hand.visible = false;\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    update(inputSource, frame, referenceSpace) {\r\n      let inputPose = null;\r\n      let gripPose = null;\r\n      let handPose = null;\r\n      const targetRay = this._targetRay;\r\n      const grip = this._grip;\r\n      const hand = this._hand;\r\n\r\n      if (inputSource && frame.session.visibilityState !== 'visible-blurred') {\r\n        if (targetRay !== null) {\r\n          inputPose = frame.getPose(inputSource.targetRaySpace, referenceSpace);\r\n\r\n          if (inputPose !== null) {\r\n            targetRay.matrix.fromArray(inputPose.transform.matrix);\r\n            targetRay.matrix.decompose(targetRay.position, targetRay.rotation, targetRay.scale);\r\n\r\n            if (inputPose.linearVelocity) {\r\n              targetRay.hasLinearVelocity = true;\r\n              targetRay.linearVelocity.copy(inputPose.linearVelocity);\r\n            } else {\r\n              targetRay.hasLinearVelocity = false;\r\n            }\r\n\r\n            if (inputPose.angularVelocity) {\r\n              targetRay.hasAngularVelocity = true;\r\n              targetRay.angularVelocity.copy(inputPose.angularVelocity);\r\n            } else {\r\n              targetRay.hasAngularVelocity = false;\r\n            }\r\n\r\n            this.dispatchEvent(_moveEvent);\r\n          }\r\n        }\r\n\r\n        if (hand && inputSource.hand) {\r\n          handPose = true;\r\n\r\n          for (const inputjoint of inputSource.hand.values()) {\r\n            // Update the joints groups with the XRJoint poses\r\n            const jointPose = frame.getJointPose(inputjoint, referenceSpace);\r\n\r\n            if (hand.joints[inputjoint.jointName] === undefined) {\r\n              // The transform of this joint will be updated with the joint pose on each frame\r\n              const joint = new Group();\r\n              joint.matrixAutoUpdate = false;\r\n              joint.visible = false;\r\n              hand.joints[inputjoint.jointName] = joint; // ??\r\n\r\n              hand.add(joint);\r\n            }\r\n\r\n            const joint = hand.joints[inputjoint.jointName];\r\n\r\n            if (jointPose !== null) {\r\n              joint.matrix.fromArray(jointPose.transform.matrix);\r\n              joint.matrix.decompose(joint.position, joint.rotation, joint.scale);\r\n              joint.jointRadius = jointPose.radius;\r\n            }\r\n\r\n            joint.visible = jointPose !== null;\r\n          } // Custom events\r\n          // Check pinchz\r\n\r\n          const indexTip = hand.joints['index-finger-tip'];\r\n          const thumbTip = hand.joints['thumb-tip'];\r\n          const distance = indexTip.position.distanceTo(thumbTip.position);\r\n          const distanceToPinch = 0.02;\r\n          const threshold = 0.005;\r\n\r\n          if (hand.inputState.pinching && distance > distanceToPinch + threshold) {\r\n            hand.inputState.pinching = false;\r\n            this.dispatchEvent({\r\n              type: 'pinchend',\r\n              handedness: inputSource.handedness,\r\n              target: this,\r\n            });\r\n          } else if (!hand.inputState.pinching && distance <= distanceToPinch - threshold) {\r\n            hand.inputState.pinching = true;\r\n            this.dispatchEvent({\r\n              type: 'pinchstart',\r\n              handedness: inputSource.handedness,\r\n              target: this,\r\n            });\r\n          }\r\n        } else {\r\n          if (grip !== null && inputSource.gripSpace) {\r\n            gripPose = frame.getPose(inputSource.gripSpace, referenceSpace);\r\n\r\n            if (gripPose !== null) {\r\n              grip.matrix.fromArray(gripPose.transform.matrix);\r\n              grip.matrix.decompose(grip.position, grip.rotation, grip.scale);\r\n\r\n              if (gripPose.linearVelocity) {\r\n                grip.hasLinearVelocity = true;\r\n                grip.linearVelocity.copy(gripPose.linearVelocity);\r\n              } else {\r\n                grip.hasLinearVelocity = false;\r\n              }\r\n\r\n              if (gripPose.angularVelocity) {\r\n                grip.hasAngularVelocity = true;\r\n                grip.angularVelocity.copy(gripPose.angularVelocity);\r\n              } else {\r\n                grip.hasAngularVelocity = false;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (targetRay !== null) {\r\n        targetRay.visible = inputPose !== null;\r\n      }\r\n\r\n      if (grip !== null) {\r\n        grip.visible = gripPose !== null;\r\n      }\r\n\r\n      if (hand !== null) {\r\n        hand.visible = handPose !== null;\r\n      }\r\n\r\n      return this;\r\n    }\r\n  }\r\n\r\n  class WebXRManager extends EventDispatcher {\r\n    constructor(renderer, gl) {\r\n      super();\r\n      const scope = this;\r\n      const state = renderer.state;\r\n      let session = null;\r\n      let framebufferScaleFactor = 1.0;\r\n      let referenceSpace = null;\r\n      let referenceSpaceType = 'local-floor';\r\n      let pose = null;\r\n      const controllers = [];\r\n      const inputSourcesMap = new Map(); //\r\n\r\n      const cameraL = new PerspectiveCamera();\r\n      cameraL.layers.enable(1);\r\n      cameraL.viewport = new Vector4();\r\n      const cameraR = new PerspectiveCamera();\r\n      cameraR.layers.enable(2);\r\n      cameraR.viewport = new Vector4();\r\n      const cameras = [cameraL, cameraR];\r\n      const cameraVR = new ArrayCamera();\r\n      cameraVR.layers.enable(1);\r\n      cameraVR.layers.enable(2);\r\n      let _currentDepthNear = null;\r\n      let _currentDepthFar = null; //\r\n\r\n      this.cameraAutoUpdate = true;\r\n      this.enabled = false;\r\n      this.isPresenting = false;\r\n\r\n      this.getController = function (index) {\r\n        let controller = controllers[index];\r\n\r\n        if (controller === undefined) {\r\n          controller = new WebXRController();\r\n          controllers[index] = controller;\r\n        }\r\n\r\n        return controller.getTargetRaySpace();\r\n      };\r\n\r\n      this.getControllerGrip = function (index) {\r\n        let controller = controllers[index];\r\n\r\n        if (controller === undefined) {\r\n          controller = new WebXRController();\r\n          controllers[index] = controller;\r\n        }\r\n\r\n        return controller.getGripSpace();\r\n      };\r\n\r\n      this.getHand = function (index) {\r\n        let controller = controllers[index];\r\n\r\n        if (controller === undefined) {\r\n          controller = new WebXRController();\r\n          controllers[index] = controller;\r\n        }\r\n\r\n        return controller.getHandSpace();\r\n      }; //\r\n\r\n      function onSessionEvent(event) {\r\n        const controller = inputSourcesMap.get(event.inputSource);\r\n\r\n        if (controller) {\r\n          controller.dispatchEvent({\r\n            type: event.type,\r\n            data: event.inputSource,\r\n          });\r\n        }\r\n      }\r\n\r\n      function onSessionEnd() {\r\n        inputSourcesMap.forEach(function (controller, inputSource) {\r\n          controller.disconnect(inputSource);\r\n        });\r\n        inputSourcesMap.clear();\r\n        _currentDepthNear = null;\r\n        _currentDepthFar = null; // restore framebuffer/rendering state\r\n\r\n        state.bindXRFramebuffer(null);\r\n        renderer.setRenderTarget(renderer.getRenderTarget()); //\r\n\r\n        animation.stop();\r\n        scope.isPresenting = false;\r\n        scope.dispatchEvent({\r\n          type: 'sessionend',\r\n        });\r\n      }\r\n\r\n      this.setFramebufferScaleFactor = function (value) {\r\n        framebufferScaleFactor = value;\r\n\r\n        if (scope.isPresenting === true) {\r\n          console.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');\r\n        }\r\n      };\r\n\r\n      this.setReferenceSpaceType = function (value) {\r\n        referenceSpaceType = value;\r\n\r\n        if (scope.isPresenting === true) {\r\n          console.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');\r\n        }\r\n      };\r\n\r\n      this.getReferenceSpace = function () {\r\n        return referenceSpace;\r\n      };\r\n\r\n      this.getSession = function () {\r\n        return session;\r\n      };\r\n\r\n      this.setSession = async function (value) {\r\n        session = value;\r\n\r\n        if (session !== null) {\r\n          session.addEventListener('select', onSessionEvent);\r\n          session.addEventListener('selectstart', onSessionEvent);\r\n          session.addEventListener('selectend', onSessionEvent);\r\n          session.addEventListener('squeeze', onSessionEvent);\r\n          session.addEventListener('squeezestart', onSessionEvent);\r\n          session.addEventListener('squeezeend', onSessionEvent);\r\n          session.addEventListener('end', onSessionEnd);\r\n          session.addEventListener('inputsourceschange', onInputSourcesChange);\r\n          const attributes = gl.getContextAttributes();\r\n\r\n          if (attributes.xrCompatible !== true) {\r\n            await gl.makeXRCompatible();\r\n          }\r\n\r\n          const layerInit = {\r\n            antialias: attributes.antialias,\r\n            alpha: attributes.alpha,\r\n            depth: attributes.depth,\r\n            stencil: attributes.stencil,\r\n            framebufferScaleFactor: framebufferScaleFactor,\r\n          }; // eslint-disable-next-line no-undef\r\n\r\n          const baseLayer = new XRWebGLLayer(session, gl, layerInit);\r\n          session.updateRenderState({\r\n            baseLayer: baseLayer,\r\n          });\r\n          referenceSpace = await session.requestReferenceSpace(referenceSpaceType);\r\n          animation.setContext(session);\r\n          animation.start();\r\n          scope.isPresenting = true;\r\n          scope.dispatchEvent({\r\n            type: 'sessionstart',\r\n          });\r\n        }\r\n      };\r\n\r\n      function onInputSourcesChange(event) {\r\n        const inputSources = session.inputSources; // Assign inputSources to available controllers\r\n\r\n        for (let i = 0; i < controllers.length; i++) {\r\n          inputSourcesMap.set(inputSources[i], controllers[i]);\r\n        } // Notify disconnected\r\n\r\n        for (let i = 0; i < event.removed.length; i++) {\r\n          const inputSource = event.removed[i];\r\n          const controller = inputSourcesMap.get(inputSource);\r\n\r\n          if (controller) {\r\n            controller.dispatchEvent({\r\n              type: 'disconnected',\r\n              data: inputSource,\r\n            });\r\n            inputSourcesMap.delete(inputSource);\r\n          }\r\n        } // Notify connected\r\n\r\n        for (let i = 0; i < event.added.length; i++) {\r\n          const inputSource = event.added[i];\r\n          const controller = inputSourcesMap.get(inputSource);\r\n\r\n          if (controller) {\r\n            controller.dispatchEvent({\r\n              type: 'connected',\r\n              data: inputSource,\r\n            });\r\n          }\r\n        }\r\n      } //\r\n\r\n      const cameraLPos = new Vector3();\r\n      const cameraRPos = new Vector3();\r\n      /**\r\n       * Assumes 2 cameras that are parallel and share an X-axis, and that\r\n       * the cameras' projection and world matrices have already been set.\r\n       * And that near and far planes are identical for both cameras.\r\n       * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\r\n       */\r\n\r\n      function setProjectionFromUnion(camera, cameraL, cameraR) {\r\n        cameraLPos.setFromMatrixPosition(cameraL.matrixWorld);\r\n        cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);\r\n        const ipd = cameraLPos.distanceTo(cameraRPos);\r\n        const projL = cameraL.projectionMatrix.elements;\r\n        const projR = cameraR.projectionMatrix.elements; // VR systems will have identical far and near planes, and\r\n        // most likely identical top and bottom frustum extents.\r\n        // Use the left camera for these values.\r\n\r\n        const near = projL[14] / (projL[10] - 1);\r\n        const far = projL[14] / (projL[10] + 1);\r\n        const topFov = (projL[9] + 1) / projL[5];\r\n        const bottomFov = (projL[9] - 1) / projL[5];\r\n        const leftFov = (projL[8] - 1) / projL[0];\r\n        const rightFov = (projR[8] + 1) / projR[0];\r\n        const left = near * leftFov;\r\n        const right = near * rightFov; // Calculate the new camera's position offset from the\r\n        // left camera. xOffset should be roughly half `ipd`.\r\n\r\n        const zOffset = ipd / (-leftFov + rightFov);\r\n        const xOffset = zOffset * -leftFov; // TODO: Better way to apply this offset?\r\n\r\n        cameraL.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);\r\n        camera.translateX(xOffset);\r\n        camera.translateZ(zOffset);\r\n        camera.matrixWorld.compose(camera.position, camera.quaternion, camera.scale);\r\n        camera.matrixWorldInverse.copy(camera.matrixWorld).invert(); // Find the union of the frustum values of the cameras and scale\r\n        // the values so that the near plane's position does not change in world space,\r\n        // although must now be relative to the new union camera.\r\n\r\n        const near2 = near + zOffset;\r\n        const far2 = far + zOffset;\r\n        const left2 = left - xOffset;\r\n        const right2 = right + (ipd - xOffset);\r\n        const top2 = ((topFov * far) / far2) * near2;\r\n        const bottom2 = ((bottomFov * far) / far2) * near2;\r\n        camera.projectionMatrix.makePerspective(left2, right2, top2, bottom2, near2, far2);\r\n      }\r\n\r\n      function updateCamera(camera, parent) {\r\n        if (parent === null) {\r\n          camera.matrixWorld.copy(camera.matrix);\r\n        } else {\r\n          camera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\r\n        }\r\n\r\n        camera.matrixWorldInverse.copy(camera.matrixWorld).invert();\r\n      }\r\n\r\n      this.updateCamera = function (camera) {\r\n        if (session === null) return;\r\n        cameraVR.near = cameraR.near = cameraL.near = camera.near;\r\n        cameraVR.far = cameraR.far = cameraL.far = camera.far;\r\n\r\n        if (_currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far) {\r\n          // Note that the new renderState won't apply until the next frame. See #18320\r\n          session.updateRenderState({\r\n            depthNear: cameraVR.near,\r\n            depthFar: cameraVR.far,\r\n          });\r\n          _currentDepthNear = cameraVR.near;\r\n          _currentDepthFar = cameraVR.far;\r\n        }\r\n\r\n        const parent = camera.parent;\r\n        const cameras = cameraVR.cameras;\r\n        updateCamera(cameraVR, parent);\r\n\r\n        for (let i = 0; i < cameras.length; i++) {\r\n          updateCamera(cameras[i], parent);\r\n        } // update camera and its children\r\n\r\n        camera.matrixWorld.copy(cameraVR.matrixWorld);\r\n        camera.matrix.copy(cameraVR.matrix);\r\n        camera.matrix.decompose(camera.position, camera.quaternion, camera.scale);\r\n        const children = camera.children;\r\n\r\n        for (let i = 0, l = children.length; i < l; i++) {\r\n          children[i].updateMatrixWorld(true);\r\n        } // update projection matrix for proper view frustum culling\r\n\r\n        if (cameras.length === 2) {\r\n          setProjectionFromUnion(cameraVR, cameraL, cameraR);\r\n        } else {\r\n          // assume single camera setup (AR)\r\n          cameraVR.projectionMatrix.copy(cameraL.projectionMatrix);\r\n        }\r\n      };\r\n\r\n      this.getCamera = function () {\r\n        return cameraVR;\r\n      }; // Animation Loop\r\n\r\n      let onAnimationFrameCallback = null;\r\n\r\n      function onAnimationFrame(time, frame) {\r\n        pose = frame.getViewerPose(referenceSpace);\r\n\r\n        if (pose !== null) {\r\n          const views = pose.views;\r\n          const baseLayer = session.renderState.baseLayer;\r\n          state.bindXRFramebuffer(baseLayer.framebuffer);\r\n          let cameraVRNeedsUpdate = false; // check if it's necessary to rebuild cameraVR's camera list\r\n\r\n          if (views.length !== cameraVR.cameras.length) {\r\n            cameraVR.cameras.length = 0;\r\n            cameraVRNeedsUpdate = true;\r\n          }\r\n\r\n          for (let i = 0; i < views.length; i++) {\r\n            const view = views[i];\r\n            const viewport = baseLayer.getViewport(view);\r\n            const camera = cameras[i];\r\n            camera.matrix.fromArray(view.transform.matrix);\r\n            camera.projectionMatrix.fromArray(view.projectionMatrix);\r\n            camera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);\r\n\r\n            if (i === 0) {\r\n              cameraVR.matrix.copy(camera.matrix);\r\n            }\r\n\r\n            if (cameraVRNeedsUpdate === true) {\r\n              cameraVR.cameras.push(camera);\r\n            }\r\n          }\r\n        } //\r\n\r\n        const inputSources = session.inputSources;\r\n\r\n        for (let i = 0; i < controllers.length; i++) {\r\n          const controller = controllers[i];\r\n          const inputSource = inputSources[i];\r\n          controller.update(inputSource, frame, referenceSpace);\r\n        }\r\n\r\n        if (onAnimationFrameCallback) onAnimationFrameCallback(time, frame);\r\n      }\r\n\r\n      const animation = new WebGLAnimation();\r\n      animation.setAnimationLoop(onAnimationFrame);\r\n\r\n      this.setAnimationLoop = function (callback) {\r\n        onAnimationFrameCallback = callback;\r\n      };\r\n\r\n      this.dispose = function () {};\r\n    }\r\n  }\r\n\r\n  function WebGLMaterials(properties) {\r\n    function refreshFogUniforms(uniforms, fog) {\r\n      uniforms.fogColor.value.copy(fog.color);\r\n\r\n      if (fog.isFog) {\r\n        uniforms.fogNear.value = fog.near;\r\n        uniforms.fogFar.value = fog.far;\r\n      } else if (fog.isFogExp2) {\r\n        uniforms.fogDensity.value = fog.density;\r\n      }\r\n    }\r\n\r\n    function refreshMaterialUniforms(\r\n      uniforms,\r\n      material,\r\n      pixelRatio,\r\n      height,\r\n      transmissionRenderTarget,\r\n    ) {\r\n      if (material.isMeshBasicMaterial) {\r\n        refreshUniformsCommon(uniforms, material);\r\n      } else if (material.isMeshLambertMaterial) {\r\n        refreshUniformsCommon(uniforms, material);\r\n        refreshUniformsLambert(uniforms, material);\r\n      } else if (material.isMeshToonMaterial) {\r\n        refreshUniformsCommon(uniforms, material);\r\n        refreshUniformsToon(uniforms, material);\r\n      } else if (material.isMeshPhongMaterial) {\r\n        refreshUniformsCommon(uniforms, material);\r\n        refreshUniformsPhong(uniforms, material);\r\n      } else if (material.isMeshStandardMaterial) {\r\n        refreshUniformsCommon(uniforms, material);\r\n\r\n        if (material.isMeshPhysicalMaterial) {\r\n          refreshUniformsPhysical(uniforms, material, transmissionRenderTarget);\r\n        } else {\r\n          refreshUniformsStandard(uniforms, material);\r\n        }\r\n      } else if (material.isMeshMatcapMaterial) {\r\n        refreshUniformsCommon(uniforms, material);\r\n        refreshUniformsMatcap(uniforms, material);\r\n      } else if (material.isMeshDepthMaterial) {\r\n        refreshUniformsCommon(uniforms, material);\r\n        refreshUniformsDepth(uniforms, material);\r\n      } else if (material.isMeshDistanceMaterial) {\r\n        refreshUniformsCommon(uniforms, material);\r\n        refreshUniformsDistance(uniforms, material);\r\n      } else if (material.isMeshNormalMaterial) {\r\n        refreshUniformsCommon(uniforms, material);\r\n        refreshUniformsNormal(uniforms, material);\r\n      } else if (material.isLineBasicMaterial) {\r\n        refreshUniformsLine(uniforms, material);\r\n\r\n        if (material.isLineDashedMaterial) {\r\n          refreshUniformsDash(uniforms, material);\r\n        }\r\n      } else if (material.isPointsMaterial) {\r\n        refreshUniformsPoints(uniforms, material, pixelRatio, height);\r\n      } else if (material.isSpriteMaterial) {\r\n        refreshUniformsSprites(uniforms, material);\r\n      } else if (material.isShadowMaterial) {\r\n        uniforms.color.value.copy(material.color);\r\n        uniforms.opacity.value = material.opacity;\r\n      } else if (material.isShaderMaterial) {\r\n        material.uniformsNeedUpdate = false; // #15581\r\n      }\r\n    }\r\n\r\n    function refreshUniformsCommon(uniforms, material) {\r\n      uniforms.opacity.value = material.opacity;\r\n\r\n      if (material.color) {\r\n        uniforms.diffuse.value.copy(material.color);\r\n      }\r\n\r\n      if (material.emissive) {\r\n        uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\r\n      }\r\n\r\n      if (material.map) {\r\n        uniforms.map.value = material.map;\r\n      }\r\n\r\n      if (material.alphaMap) {\r\n        uniforms.alphaMap.value = material.alphaMap;\r\n      }\r\n\r\n      if (material.specularMap) {\r\n        uniforms.specularMap.value = material.specularMap;\r\n      }\r\n\r\n      const envMap = properties.get(material).envMap;\r\n\r\n      if (envMap) {\r\n        uniforms.envMap.value = envMap;\r\n        uniforms.flipEnvMap.value = envMap.isCubeTexture && envMap._needsFlipEnvMap ? -1 : 1;\r\n        uniforms.reflectivity.value = material.reflectivity;\r\n        uniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n        const maxMipLevel = properties.get(envMap).__maxMipLevel;\r\n\r\n        if (maxMipLevel !== undefined) {\r\n          uniforms.maxMipLevel.value = maxMipLevel;\r\n        }\r\n      }\r\n\r\n      if (material.lightMap) {\r\n        uniforms.lightMap.value = material.lightMap;\r\n        uniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n      }\r\n\r\n      if (material.aoMap) {\r\n        uniforms.aoMap.value = material.aoMap;\r\n        uniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n      } // uv repeat and offset setting priorities\r\n      // 1. color map\r\n      // 2. specular map\r\n      // 3. displacementMap map\r\n      // 4. normal map\r\n      // 5. bump map\r\n      // 6. roughnessMap map\r\n      // 7. metalnessMap map\r\n      // 8. alphaMap map\r\n      // 9. emissiveMap map\r\n      // 10. clearcoat map\r\n      // 11. clearcoat normal map\r\n      // 12. clearcoat roughnessMap map\r\n\r\n      let uvScaleMap;\r\n\r\n      if (material.map) {\r\n        uvScaleMap = material.map;\r\n      } else if (material.specularMap) {\r\n        uvScaleMap = material.specularMap;\r\n      } else if (material.displacementMap) {\r\n        uvScaleMap = material.displacementMap;\r\n      } else if (material.normalMap) {\r\n        uvScaleMap = material.normalMap;\r\n      } else if (material.bumpMap) {\r\n        uvScaleMap = material.bumpMap;\r\n      } else if (material.roughnessMap) {\r\n        uvScaleMap = material.roughnessMap;\r\n      } else if (material.metalnessMap) {\r\n        uvScaleMap = material.metalnessMap;\r\n      } else if (material.alphaMap) {\r\n        uvScaleMap = material.alphaMap;\r\n      } else if (material.emissiveMap) {\r\n        uvScaleMap = material.emissiveMap;\r\n      } else if (material.clearcoatMap) {\r\n        uvScaleMap = material.clearcoatMap;\r\n      } else if (material.clearcoatNormalMap) {\r\n        uvScaleMap = material.clearcoatNormalMap;\r\n      } else if (material.clearcoatRoughnessMap) {\r\n        uvScaleMap = material.clearcoatRoughnessMap;\r\n      }\r\n\r\n      if (uvScaleMap !== undefined) {\r\n        // backwards compatibility\r\n        if (uvScaleMap.isWebGLRenderTarget) {\r\n          uvScaleMap = uvScaleMap.texture;\r\n        }\r\n\r\n        if (uvScaleMap.matrixAutoUpdate === true) {\r\n          uvScaleMap.updateMatrix();\r\n        }\r\n\r\n        uniforms.uvTransform.value.copy(uvScaleMap.matrix);\r\n      } // uv repeat and offset setting priorities for uv2\r\n      // 1. ao map\r\n      // 2. light map\r\n\r\n      let uv2ScaleMap;\r\n\r\n      if (material.aoMap) {\r\n        uv2ScaleMap = material.aoMap;\r\n      } else if (material.lightMap) {\r\n        uv2ScaleMap = material.lightMap;\r\n      }\r\n\r\n      if (uv2ScaleMap !== undefined) {\r\n        // backwards compatibility\r\n        if (uv2ScaleMap.isWebGLRenderTarget) {\r\n          uv2ScaleMap = uv2ScaleMap.texture;\r\n        }\r\n\r\n        if (uv2ScaleMap.matrixAutoUpdate === true) {\r\n          uv2ScaleMap.updateMatrix();\r\n        }\r\n\r\n        uniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);\r\n      }\r\n    }\r\n\r\n    function refreshUniformsLine(uniforms, material) {\r\n      uniforms.diffuse.value.copy(material.color);\r\n      uniforms.opacity.value = material.opacity;\r\n    }\r\n\r\n    function refreshUniformsDash(uniforms, material) {\r\n      uniforms.dashSize.value = material.dashSize;\r\n      uniforms.totalSize.value = material.dashSize + material.gapSize;\r\n      uniforms.scale.value = material.scale;\r\n    }\r\n\r\n    function refreshUniformsPoints(uniforms, material, pixelRatio, height) {\r\n      uniforms.diffuse.value.copy(material.color);\r\n      uniforms.opacity.value = material.opacity;\r\n      uniforms.size.value = material.size * pixelRatio;\r\n      uniforms.scale.value = height * 0.5;\r\n\r\n      if (material.map) {\r\n        uniforms.map.value = material.map;\r\n      }\r\n\r\n      if (material.alphaMap) {\r\n        uniforms.alphaMap.value = material.alphaMap;\r\n      } // uv repeat and offset setting priorities\r\n      // 1. color map\r\n      // 2. alpha map\r\n\r\n      let uvScaleMap;\r\n\r\n      if (material.map) {\r\n        uvScaleMap = material.map;\r\n      } else if (material.alphaMap) {\r\n        uvScaleMap = material.alphaMap;\r\n      }\r\n\r\n      if (uvScaleMap !== undefined) {\r\n        if (uvScaleMap.matrixAutoUpdate === true) {\r\n          uvScaleMap.updateMatrix();\r\n        }\r\n\r\n        uniforms.uvTransform.value.copy(uvScaleMap.matrix);\r\n      }\r\n    }\r\n\r\n    function refreshUniformsSprites(uniforms, material) {\r\n      uniforms.diffuse.value.copy(material.color);\r\n      uniforms.opacity.value = material.opacity;\r\n      uniforms.rotation.value = material.rotation;\r\n\r\n      if (material.map) {\r\n        uniforms.map.value = material.map;\r\n      }\r\n\r\n      if (material.alphaMap) {\r\n        uniforms.alphaMap.value = material.alphaMap;\r\n      } // uv repeat and offset setting priorities\r\n      // 1. color map\r\n      // 2. alpha map\r\n\r\n      let uvScaleMap;\r\n\r\n      if (material.map) {\r\n        uvScaleMap = material.map;\r\n      } else if (material.alphaMap) {\r\n        uvScaleMap = material.alphaMap;\r\n      }\r\n\r\n      if (uvScaleMap !== undefined) {\r\n        if (uvScaleMap.matrixAutoUpdate === true) {\r\n          uvScaleMap.updateMatrix();\r\n        }\r\n\r\n        uniforms.uvTransform.value.copy(uvScaleMap.matrix);\r\n      }\r\n    }\r\n\r\n    function refreshUniformsLambert(uniforms, material) {\r\n      if (material.emissiveMap) {\r\n        uniforms.emissiveMap.value = material.emissiveMap;\r\n      }\r\n    }\r\n\r\n    function refreshUniformsPhong(uniforms, material) {\r\n      uniforms.specular.value.copy(material.specular);\r\n      uniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\r\n\r\n      if (material.emissiveMap) {\r\n        uniforms.emissiveMap.value = material.emissiveMap;\r\n      }\r\n\r\n      if (material.bumpMap) {\r\n        uniforms.bumpMap.value = material.bumpMap;\r\n        uniforms.bumpScale.value = material.bumpScale;\r\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\r\n      }\r\n\r\n      if (material.normalMap) {\r\n        uniforms.normalMap.value = material.normalMap;\r\n        uniforms.normalScale.value.copy(material.normalScale);\r\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\r\n      }\r\n\r\n      if (material.displacementMap) {\r\n        uniforms.displacementMap.value = material.displacementMap;\r\n        uniforms.displacementScale.value = material.displacementScale;\r\n        uniforms.displacementBias.value = material.displacementBias;\r\n      }\r\n    }\r\n\r\n    function refreshUniformsToon(uniforms, material) {\r\n      if (material.gradientMap) {\r\n        uniforms.gradientMap.value = material.gradientMap;\r\n      }\r\n\r\n      if (material.emissiveMap) {\r\n        uniforms.emissiveMap.value = material.emissiveMap;\r\n      }\r\n\r\n      if (material.bumpMap) {\r\n        uniforms.bumpMap.value = material.bumpMap;\r\n        uniforms.bumpScale.value = material.bumpScale;\r\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\r\n      }\r\n\r\n      if (material.normalMap) {\r\n        uniforms.normalMap.value = material.normalMap;\r\n        uniforms.normalScale.value.copy(material.normalScale);\r\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\r\n      }\r\n\r\n      if (material.displacementMap) {\r\n        uniforms.displacementMap.value = material.displacementMap;\r\n        uniforms.displacementScale.value = material.displacementScale;\r\n        uniforms.displacementBias.value = material.displacementBias;\r\n      }\r\n    }\r\n\r\n    function refreshUniformsStandard(uniforms, material) {\r\n      uniforms.roughness.value = material.roughness;\r\n      uniforms.metalness.value = material.metalness;\r\n\r\n      if (material.roughnessMap) {\r\n        uniforms.roughnessMap.value = material.roughnessMap;\r\n      }\r\n\r\n      if (material.metalnessMap) {\r\n        uniforms.metalnessMap.value = material.metalnessMap;\r\n      }\r\n\r\n      if (material.emissiveMap) {\r\n        uniforms.emissiveMap.value = material.emissiveMap;\r\n      }\r\n\r\n      if (material.bumpMap) {\r\n        uniforms.bumpMap.value = material.bumpMap;\r\n        uniforms.bumpScale.value = material.bumpScale;\r\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\r\n      }\r\n\r\n      if (material.normalMap) {\r\n        uniforms.normalMap.value = material.normalMap;\r\n        uniforms.normalScale.value.copy(material.normalScale);\r\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\r\n      }\r\n\r\n      if (material.displacementMap) {\r\n        uniforms.displacementMap.value = material.displacementMap;\r\n        uniforms.displacementScale.value = material.displacementScale;\r\n        uniforms.displacementBias.value = material.displacementBias;\r\n      }\r\n\r\n      const envMap = properties.get(material).envMap;\r\n\r\n      if (envMap) {\r\n        //uniforms.envMap.value = material.envMap; // part of uniforms common\r\n        uniforms.envMapIntensity.value = material.envMapIntensity;\r\n      }\r\n    }\r\n\r\n    function refreshUniformsPhysical(uniforms, material, transmissionRenderTarget) {\r\n      refreshUniformsStandard(uniforms, material);\r\n      uniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\r\n\r\n      uniforms.clearcoat.value = material.clearcoat;\r\n      uniforms.clearcoatRoughness.value = material.clearcoatRoughness;\r\n      if (material.sheen) uniforms.sheen.value.copy(material.sheen);\r\n\r\n      if (material.clearcoatMap) {\r\n        uniforms.clearcoatMap.value = material.clearcoatMap;\r\n      }\r\n\r\n      if (material.clearcoatRoughnessMap) {\r\n        uniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\r\n      }\r\n\r\n      if (material.clearcoatNormalMap) {\r\n        uniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);\r\n        uniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\r\n\r\n        if (material.side === BackSide) {\r\n          uniforms.clearcoatNormalScale.value.negate();\r\n        }\r\n      }\r\n\r\n      uniforms.transmission.value = material.transmission;\r\n\r\n      if (material.transmissionMap) {\r\n        uniforms.transmissionMap.value = material.transmissionMap;\r\n      }\r\n\r\n      if (material.transmission > 0.0) {\r\n        uniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\r\n        uniforms.transmissionSamplerSize.value.set(\r\n          transmissionRenderTarget.width,\r\n          transmissionRenderTarget.height,\r\n        );\r\n      }\r\n\r\n      uniforms.thickness.value = material.thickness;\r\n\r\n      if (material.thicknessMap) {\r\n        uniforms.thicknessMap.value = material.thicknessMap;\r\n      }\r\n\r\n      uniforms.attenuationDistance.value = material.attenuationDistance;\r\n      uniforms.attenuationColor.value.copy(material.attenuationColor);\r\n    }\r\n\r\n    function refreshUniformsMatcap(uniforms, material) {\r\n      if (material.matcap) {\r\n        uniforms.matcap.value = material.matcap;\r\n      }\r\n\r\n      if (material.bumpMap) {\r\n        uniforms.bumpMap.value = material.bumpMap;\r\n        uniforms.bumpScale.value = material.bumpScale;\r\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\r\n      }\r\n\r\n      if (material.normalMap) {\r\n        uniforms.normalMap.value = material.normalMap;\r\n        uniforms.normalScale.value.copy(material.normalScale);\r\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\r\n      }\r\n\r\n      if (material.displacementMap) {\r\n        uniforms.displacementMap.value = material.displacementMap;\r\n        uniforms.displacementScale.value = material.displacementScale;\r\n        uniforms.displacementBias.value = material.displacementBias;\r\n      }\r\n    }\r\n\r\n    function refreshUniformsDepth(uniforms, material) {\r\n      if (material.displacementMap) {\r\n        uniforms.displacementMap.value = material.displacementMap;\r\n        uniforms.displacementScale.value = material.displacementScale;\r\n        uniforms.displacementBias.value = material.displacementBias;\r\n      }\r\n    }\r\n\r\n    function refreshUniformsDistance(uniforms, material) {\r\n      if (material.displacementMap) {\r\n        uniforms.displacementMap.value = material.displacementMap;\r\n        uniforms.displacementScale.value = material.displacementScale;\r\n        uniforms.displacementBias.value = material.displacementBias;\r\n      }\r\n\r\n      uniforms.referencePosition.value.copy(material.referencePosition);\r\n      uniforms.nearDistance.value = material.nearDistance;\r\n      uniforms.farDistance.value = material.farDistance;\r\n    }\r\n\r\n    function refreshUniformsNormal(uniforms, material) {\r\n      if (material.bumpMap) {\r\n        uniforms.bumpMap.value = material.bumpMap;\r\n        uniforms.bumpScale.value = material.bumpScale;\r\n        if (material.side === BackSide) uniforms.bumpScale.value *= -1;\r\n      }\r\n\r\n      if (material.normalMap) {\r\n        uniforms.normalMap.value = material.normalMap;\r\n        uniforms.normalScale.value.copy(material.normalScale);\r\n        if (material.side === BackSide) uniforms.normalScale.value.negate();\r\n      }\r\n\r\n      if (material.displacementMap) {\r\n        uniforms.displacementMap.value = material.displacementMap;\r\n        uniforms.displacementScale.value = material.displacementScale;\r\n        uniforms.displacementBias.value = material.displacementBias;\r\n      }\r\n    }\r\n\r\n    return {\r\n      refreshFogUniforms: refreshFogUniforms,\r\n      refreshMaterialUniforms: refreshMaterialUniforms,\r\n    };\r\n  }\r\n\r\n  function createCanvasElement() {\r\n    const canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\r\n    canvas.style.display = 'block';\r\n    return canvas;\r\n  }\r\n\r\n  function WebGLRenderer(parameters) {\r\n    parameters = parameters || {};\r\n\r\n    const _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\r\n      _context = parameters.context !== undefined ? parameters.context : null,\r\n      _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n      _depth = parameters.depth !== undefined ? parameters.depth : true,\r\n      _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n      _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n      _premultipliedAlpha =\r\n        parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n      _preserveDrawingBuffer =\r\n        parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n      _powerPreference =\r\n        parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\r\n      _failIfMajorPerformanceCaveat =\r\n        parameters.failIfMajorPerformanceCaveat !== undefined\r\n          ? parameters.failIfMajorPerformanceCaveat\r\n          : false;\r\n\r\n    let currentRenderList = null;\r\n    let currentRenderState = null; // render() can be called from within a callback triggered by another render.\r\n    // We track this so that the nested render call gets its list and state isolated from the parent render call.\r\n\r\n    const renderListStack = [];\r\n    const renderStateStack = []; // public properties\r\n\r\n    this.domElement = _canvas; // Debug configuration container\r\n\r\n    this.debug = {\r\n      /**\r\n       * Enables error checking and reporting when shader programs are being compiled\r\n       * @type {boolean}\r\n       */\r\n      checkShaderErrors: true,\r\n    }; // clearing\r\n\r\n    this.autoClear = true;\r\n    this.autoClearColor = true;\r\n    this.autoClearDepth = true;\r\n    this.autoClearStencil = true; // scene graph\r\n\r\n    this.sortObjects = true; // user-defined clipping\r\n\r\n    this.clippingPlanes = [];\r\n    this.localClippingEnabled = false; // physically based shading\r\n\r\n    this.gammaFactor = 2.0; // for backwards compatibility\r\n\r\n    this.outputEncoding = LinearEncoding; // physical lights\r\n\r\n    this.physicallyCorrectLights = false; // tone mapping\r\n\r\n    this.toneMapping = NoToneMapping;\r\n    this.toneMappingExposure = 1.0; // internal properties\r\n\r\n    const _this = this;\r\n\r\n    let _isContextLost = false; // internal state cache\r\n\r\n    let _currentActiveCubeFace = 0;\r\n    let _currentActiveMipmapLevel = 0;\r\n    let _currentRenderTarget = null;\r\n\r\n    let _currentMaterialId = -1;\r\n\r\n    let _currentCamera = null;\r\n\r\n    const _currentViewport = new Vector4();\r\n\r\n    const _currentScissor = new Vector4();\r\n\r\n    let _currentScissorTest = null; //\r\n\r\n    let _width = _canvas.width;\r\n    let _height = _canvas.height;\r\n    let _pixelRatio = 1;\r\n    let _opaqueSort = null;\r\n    let _transparentSort = null;\r\n\r\n    const _viewport = new Vector4(0, 0, _width, _height);\r\n\r\n    const _scissor = new Vector4(0, 0, _width, _height);\r\n\r\n    let _scissorTest = false; //\r\n\r\n    const _currentDrawBuffers = []; // frustum\r\n\r\n    const _frustum = new Frustum(); // clipping\r\n\r\n    let _clippingEnabled = false;\r\n    let _localClippingEnabled = false; // transmission\r\n\r\n    let _transmissionRenderTarget = null; // camera matrices cache\r\n\r\n    const _projScreenMatrix = new Matrix4();\r\n\r\n    const _vector3 = new Vector3();\r\n\r\n    const _emptyScene = {\r\n      background: null,\r\n      fog: null,\r\n      environment: null,\r\n      overrideMaterial: null,\r\n      isScene: true,\r\n    };\r\n\r\n    function getTargetPixelRatio() {\r\n      return _currentRenderTarget === null ? _pixelRatio : 1;\r\n    } // initialize\r\n\r\n    let _gl = _context;\r\n\r\n    function getContext(contextNames, contextAttributes) {\r\n      for (let i = 0; i < contextNames.length; i++) {\r\n        const contextName = contextNames[i];\r\n\r\n        const context = _canvas.getContext(contextName, contextAttributes);\r\n\r\n        if (context !== null) return context;\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      const contextAttributes = {\r\n        alpha: _alpha,\r\n        depth: _depth,\r\n        stencil: _stencil,\r\n        antialias: _antialias,\r\n        premultipliedAlpha: _premultipliedAlpha,\r\n        preserveDrawingBuffer: _preserveDrawingBuffer,\r\n        powerPreference: _powerPreference,\r\n        failIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat,\r\n      }; // event listeners must be registered before WebGL context is created, see #12753\r\n\r\n      _canvas.addEventListener('webglcontextlost', onContextLost, false);\r\n\r\n      _canvas.addEventListener('webglcontextrestored', onContextRestore, false);\r\n\r\n      if (_gl === null) {\r\n        const contextNames = ['webgl2', 'webgl', 'experimental-webgl'];\r\n\r\n        if (_this.isWebGL1Renderer === true) {\r\n          contextNames.shift();\r\n        }\r\n\r\n        _gl = getContext(contextNames, contextAttributes);\r\n\r\n        if (_gl === null) {\r\n          if (getContext(contextNames)) {\r\n            throw new Error('Error creating WebGL context with your selected attributes.');\r\n          } else {\r\n            throw new Error('Error creating WebGL context.');\r\n          }\r\n        }\r\n      } // Some experimental-webgl implementations do not have getShaderPrecisionFormat\r\n\r\n      if (_gl.getShaderPrecisionFormat === undefined) {\r\n        _gl.getShaderPrecisionFormat = function () {\r\n          return {\r\n            rangeMin: 1,\r\n            rangeMax: 1,\r\n            precision: 1,\r\n          };\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('THREE.WebGLRenderer: ' + error.message);\r\n      throw error;\r\n    }\r\n\r\n    let extensions, capabilities, state, info;\r\n    let properties, textures, cubemaps, attributes, geometries, objects;\r\n    let programCache, materials, renderLists, renderStates, clipping, shadowMap;\r\n    let background, morphtargets, bufferRenderer, indexedBufferRenderer;\r\n    let utils, bindingStates;\r\n\r\n    function initGLContext() {\r\n      extensions = new WebGLExtensions(_gl);\r\n      capabilities = new WebGLCapabilities(_gl, extensions, parameters);\r\n      extensions.init(capabilities);\r\n      utils = new WebGLUtils(_gl, extensions, capabilities);\r\n      state = new WebGLState(_gl, extensions, capabilities);\r\n      _currentDrawBuffers[0] = _gl.BACK;\r\n      info = new WebGLInfo(_gl);\r\n      properties = new WebGLProperties();\r\n      textures = new WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info);\r\n      cubemaps = new WebGLCubeMaps(_this);\r\n      attributes = new WebGLAttributes(_gl, capabilities);\r\n      bindingStates = new WebGLBindingStates(_gl, extensions, attributes, capabilities);\r\n      geometries = new WebGLGeometries(_gl, attributes, info, bindingStates);\r\n      objects = new WebGLObjects(_gl, geometries, attributes, info);\r\n      morphtargets = new WebGLMorphtargets(_gl);\r\n      clipping = new WebGLClipping(properties);\r\n      programCache = new WebGLPrograms(\r\n        _this,\r\n        cubemaps,\r\n        extensions,\r\n        capabilities,\r\n        bindingStates,\r\n        clipping,\r\n      );\r\n      materials = new WebGLMaterials(properties);\r\n      renderLists = new WebGLRenderLists(properties);\r\n      renderStates = new WebGLRenderStates(extensions, capabilities);\r\n      background = new WebGLBackground(_this, cubemaps, state, objects, _premultipliedAlpha);\r\n      shadowMap = new WebGLShadowMap(_this, objects, capabilities);\r\n      bufferRenderer = new WebGLBufferRenderer(_gl, extensions, info, capabilities);\r\n      indexedBufferRenderer = new WebGLIndexedBufferRenderer(_gl, extensions, info, capabilities);\r\n      info.programs = programCache.programs;\r\n      _this.capabilities = capabilities;\r\n      _this.extensions = extensions;\r\n      _this.properties = properties;\r\n      _this.renderLists = renderLists;\r\n      _this.shadowMap = shadowMap;\r\n      _this.state = state;\r\n      _this.info = info;\r\n    }\r\n\r\n    initGLContext(); // xr\r\n\r\n    const xr = new WebXRManager(_this, _gl);\r\n    this.xr = xr; // API\r\n\r\n    this.getContext = function () {\r\n      return _gl;\r\n    };\r\n\r\n    this.getContextAttributes = function () {\r\n      return _gl.getContextAttributes();\r\n    };\r\n\r\n    this.forceContextLoss = function () {\r\n      const extension = extensions.get('WEBGL_lose_context');\r\n      if (extension) extension.loseContext();\r\n    };\r\n\r\n    this.forceContextRestore = function () {\r\n      const extension = extensions.get('WEBGL_lose_context');\r\n      if (extension) extension.restoreContext();\r\n    };\r\n\r\n    this.getPixelRatio = function () {\r\n      return _pixelRatio;\r\n    };\r\n\r\n    this.setPixelRatio = function (value) {\r\n      if (value === undefined) return;\r\n      _pixelRatio = value;\r\n      this.setSize(_width, _height, false);\r\n    };\r\n\r\n    this.getSize = function (target) {\r\n      if (target === undefined) {\r\n        console.warn('WebGLRenderer: .getsize() now requires a Vector2 as an argument');\r\n        target = new Vector2();\r\n      }\r\n\r\n      return target.set(_width, _height);\r\n    };\r\n\r\n    this.setSize = function (width, height, updateStyle) {\r\n      if (xr.isPresenting) {\r\n        console.warn(\"THREE.WebGLRenderer: Can't change size while VR device is presenting.\");\r\n        return;\r\n      }\r\n\r\n      _width = width;\r\n      _height = height;\r\n      _canvas.width = Math.floor(width * _pixelRatio);\r\n      _canvas.height = Math.floor(height * _pixelRatio);\r\n\r\n      if (updateStyle !== false) {\r\n        _canvas.style.width = width + 'px';\r\n        _canvas.style.height = height + 'px';\r\n      }\r\n\r\n      this.setViewport(0, 0, width, height);\r\n    };\r\n\r\n    this.getDrawingBufferSize = function (target) {\r\n      if (target === undefined) {\r\n        console.warn(\r\n          'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument',\r\n        );\r\n        target = new Vector2();\r\n      }\r\n\r\n      return target.set(_width * _pixelRatio, _height * _pixelRatio).floor();\r\n    };\r\n\r\n    this.setDrawingBufferSize = function (width, height, pixelRatio) {\r\n      _width = width;\r\n      _height = height;\r\n      _pixelRatio = pixelRatio;\r\n      _canvas.width = Math.floor(width * pixelRatio);\r\n      _canvas.height = Math.floor(height * pixelRatio);\r\n      this.setViewport(0, 0, width, height);\r\n    };\r\n\r\n    this.getCurrentViewport = function (target) {\r\n      if (target === undefined) {\r\n        console.warn('WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument');\r\n        target = new Vector4();\r\n      }\r\n\r\n      return target.copy(_currentViewport);\r\n    };\r\n\r\n    this.getViewport = function (target) {\r\n      return target.copy(_viewport);\r\n    };\r\n\r\n    this.setViewport = function (x, y, width, height) {\r\n      if (x.isVector4) {\r\n        _viewport.set(x.x, x.y, x.z, x.w);\r\n      } else {\r\n        _viewport.set(x, y, width, height);\r\n      }\r\n\r\n      state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());\r\n    };\r\n\r\n    this.getScissor = function (target) {\r\n      return target.copy(_scissor);\r\n    };\r\n\r\n    this.setScissor = function (x, y, width, height) {\r\n      if (x.isVector4) {\r\n        _scissor.set(x.x, x.y, x.z, x.w);\r\n      } else {\r\n        _scissor.set(x, y, width, height);\r\n      }\r\n\r\n      state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());\r\n    };\r\n\r\n    this.getScissorTest = function () {\r\n      return _scissorTest;\r\n    };\r\n\r\n    this.setScissorTest = function (boolean) {\r\n      state.setScissorTest((_scissorTest = boolean));\r\n    };\r\n\r\n    this.setOpaqueSort = function (method) {\r\n      _opaqueSort = method;\r\n    };\r\n\r\n    this.setTransparentSort = function (method) {\r\n      _transparentSort = method;\r\n    }; // Clearing\r\n\r\n    this.getClearColor = function (target) {\r\n      if (target === undefined) {\r\n        console.warn('WebGLRenderer: .getClearColor() now requires a Color as an argument');\r\n        target = new Color();\r\n      }\r\n\r\n      return target.copy(background.getClearColor());\r\n    };\r\n\r\n    this.setClearColor = function () {\r\n      background.setClearColor.apply(background, arguments);\r\n    };\r\n\r\n    this.getClearAlpha = function () {\r\n      return background.getClearAlpha();\r\n    };\r\n\r\n    this.setClearAlpha = function () {\r\n      background.setClearAlpha.apply(background, arguments);\r\n    };\r\n\r\n    this.clear = function (color, depth, stencil) {\r\n      let bits = 0;\r\n      if (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\r\n      if (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\r\n      if (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n      _gl.clear(bits);\r\n    };\r\n\r\n    this.clearColor = function () {\r\n      this.clear(true, false, false);\r\n    };\r\n\r\n    this.clearDepth = function () {\r\n      this.clear(false, true, false);\r\n    };\r\n\r\n    this.clearStencil = function () {\r\n      this.clear(false, false, true);\r\n    }; //\r\n\r\n    this.dispose = function () {\r\n      _canvas.removeEventListener('webglcontextlost', onContextLost, false);\r\n\r\n      _canvas.removeEventListener('webglcontextrestored', onContextRestore, false);\r\n\r\n      renderLists.dispose();\r\n      renderStates.dispose();\r\n      properties.dispose();\r\n      cubemaps.dispose();\r\n      objects.dispose();\r\n      bindingStates.dispose();\r\n      xr.dispose();\r\n      xr.removeEventListener('sessionstart', onXRSessionStart);\r\n      xr.removeEventListener('sessionend', onXRSessionEnd);\r\n\r\n      if (_transmissionRenderTarget) {\r\n        _transmissionRenderTarget.dispose();\r\n\r\n        _transmissionRenderTarget = null;\r\n      }\r\n\r\n      animation.stop();\r\n    }; // Events\r\n\r\n    function onContextLost(event) {\r\n      event.preventDefault();\r\n      console.log('THREE.WebGLRenderer: Context Lost.');\r\n      _isContextLost = true;\r\n    }\r\n\r\n    function onContextRestore() {\r\n      /* event */\r\n      console.log('THREE.WebGLRenderer: Context Restored.');\r\n      _isContextLost = false;\r\n      const infoAutoReset = info.autoReset;\r\n      const shadowMapEnabled = shadowMap.enabled;\r\n      const shadowMapAutoUpdate = shadowMap.autoUpdate;\r\n      const shadowMapNeedsUpdate = shadowMap.needsUpdate;\r\n      const shadowMapType = shadowMap.type;\r\n      initGLContext();\r\n      info.autoReset = infoAutoReset;\r\n      shadowMap.enabled = shadowMapEnabled;\r\n      shadowMap.autoUpdate = shadowMapAutoUpdate;\r\n      shadowMap.needsUpdate = shadowMapNeedsUpdate;\r\n      shadowMap.type = shadowMapType;\r\n    }\r\n\r\n    function onMaterialDispose(event) {\r\n      const material = event.target;\r\n      material.removeEventListener('dispose', onMaterialDispose);\r\n      deallocateMaterial(material);\r\n    } // Buffer deallocation\r\n\r\n    function deallocateMaterial(material) {\r\n      releaseMaterialProgramReferences(material);\r\n      properties.remove(material);\r\n    }\r\n\r\n    function releaseMaterialProgramReferences(material) {\r\n      const programs = properties.get(material).programs;\r\n\r\n      if (programs !== undefined) {\r\n        programs.forEach(function (program) {\r\n          programCache.releaseProgram(program);\r\n        });\r\n      }\r\n    } // Buffer rendering\r\n\r\n    function renderObjectImmediate(object, program) {\r\n      object.render(function (object) {\r\n        _this.renderBufferImmediate(object, program);\r\n      });\r\n    }\r\n\r\n    this.renderBufferImmediate = function (object, program) {\r\n      bindingStates.initAttributes();\r\n      const buffers = properties.get(object);\r\n      if (object.hasPositions && !buffers.position) buffers.position = _gl.createBuffer();\r\n      if (object.hasNormals && !buffers.normal) buffers.normal = _gl.createBuffer();\r\n      if (object.hasUvs && !buffers.uv) buffers.uv = _gl.createBuffer();\r\n      if (object.hasColors && !buffers.color) buffers.color = _gl.createBuffer();\r\n      const programAttributes = program.getAttributes();\r\n\r\n      if (object.hasPositions) {\r\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.position);\r\n\r\n        _gl.bufferData(_gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW);\r\n\r\n        bindingStates.enableAttribute(programAttributes.position);\r\n\r\n        _gl.vertexAttribPointer(programAttributes.position, 3, _gl.FLOAT, false, 0, 0);\r\n      }\r\n\r\n      if (object.hasNormals) {\r\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.normal);\r\n\r\n        _gl.bufferData(_gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW);\r\n\r\n        bindingStates.enableAttribute(programAttributes.normal);\r\n\r\n        _gl.vertexAttribPointer(programAttributes.normal, 3, _gl.FLOAT, false, 0, 0);\r\n      }\r\n\r\n      if (object.hasUvs) {\r\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.uv);\r\n\r\n        _gl.bufferData(_gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW);\r\n\r\n        bindingStates.enableAttribute(programAttributes.uv);\r\n\r\n        _gl.vertexAttribPointer(programAttributes.uv, 2, _gl.FLOAT, false, 0, 0);\r\n      }\r\n\r\n      if (object.hasColors) {\r\n        _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.color);\r\n\r\n        _gl.bufferData(_gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW);\r\n\r\n        bindingStates.enableAttribute(programAttributes.color);\r\n\r\n        _gl.vertexAttribPointer(programAttributes.color, 3, _gl.FLOAT, false, 0, 0);\r\n      }\r\n\r\n      bindingStates.disableUnusedAttributes();\r\n\r\n      _gl.drawArrays(_gl.TRIANGLES, 0, object.count);\r\n\r\n      object.count = 0;\r\n    };\r\n\r\n    this.renderBufferDirect = function (camera, scene, geometry, material, object, group) {\r\n      if (scene === null) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\r\n\r\n      const frontFaceCW = object.isMesh && object.matrixWorld.determinant() < 0;\r\n      const program = setProgram(camera, scene, material, object);\r\n      state.setMaterial(material, frontFaceCW); //\r\n\r\n      let index = geometry.index;\r\n      const position = geometry.attributes.position; //\r\n\r\n      if (index === null) {\r\n        if (position === undefined || position.count === 0) return;\r\n      } else if (index.count === 0) {\r\n        return;\r\n      } //\r\n\r\n      let rangeFactor = 1;\r\n\r\n      if (material.wireframe === true) {\r\n        index = geometries.getWireframeAttribute(geometry);\r\n        rangeFactor = 2;\r\n      }\r\n\r\n      if (material.morphTargets || material.morphNormals) {\r\n        morphtargets.update(object, geometry, material, program);\r\n      }\r\n\r\n      bindingStates.setup(object, material, program, geometry, index);\r\n      let attribute;\r\n      let renderer = bufferRenderer;\r\n\r\n      if (index !== null) {\r\n        attribute = attributes.get(index);\r\n        renderer = indexedBufferRenderer;\r\n        renderer.setIndex(attribute);\r\n      } //\r\n\r\n      const dataCount = index !== null ? index.count : position.count;\r\n      const rangeStart = geometry.drawRange.start * rangeFactor;\r\n      const rangeCount = geometry.drawRange.count * rangeFactor;\r\n      const groupStart = group !== null ? group.start * rangeFactor : 0;\r\n      const groupCount = group !== null ? group.count * rangeFactor : Infinity;\r\n      const drawStart = Math.max(rangeStart, groupStart);\r\n      const drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\r\n      const drawCount = Math.max(0, drawEnd - drawStart + 1);\r\n      if (drawCount === 0) return; //\r\n\r\n      if (object.isMesh) {\r\n        if (material.wireframe === true) {\r\n          state.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\r\n          renderer.setMode(_gl.LINES);\r\n        } else {\r\n          renderer.setMode(_gl.TRIANGLES);\r\n        }\r\n      } else if (object.isLine) {\r\n        let lineWidth = material.linewidth;\r\n        if (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\r\n\r\n        state.setLineWidth(lineWidth * getTargetPixelRatio());\r\n\r\n        if (object.isLineSegments) {\r\n          renderer.setMode(_gl.LINES);\r\n        } else if (object.isLineLoop) {\r\n          renderer.setMode(_gl.LINE_LOOP);\r\n        } else {\r\n          renderer.setMode(_gl.LINE_STRIP);\r\n        }\r\n      } else if (object.isPoints) {\r\n        renderer.setMode(_gl.POINTS);\r\n      } else if (object.isSprite) {\r\n        renderer.setMode(_gl.TRIANGLES);\r\n      }\r\n\r\n      if (object.isInstancedMesh) {\r\n        renderer.renderInstances(drawStart, drawCount, object.count);\r\n      } else if (geometry.isInstancedBufferGeometry) {\r\n        const instanceCount = Math.min(geometry.instanceCount, geometry._maxInstanceCount);\r\n        renderer.renderInstances(drawStart, drawCount, instanceCount);\r\n      } else {\r\n        renderer.render(drawStart, drawCount);\r\n      }\r\n    }; // Compile\r\n\r\n    this.compile = function (scene, camera) {\r\n      currentRenderState = renderStates.get(scene);\r\n      currentRenderState.init();\r\n      scene.traverseVisible(function (object) {\r\n        if (object.isLight && object.layers.test(camera.layers)) {\r\n          currentRenderState.pushLight(object);\r\n\r\n          if (object.castShadow) {\r\n            currentRenderState.pushShadow(object);\r\n          }\r\n        }\r\n      });\r\n      currentRenderState.setupLights();\r\n      scene.traverse(function (object) {\r\n        const material = object.material;\r\n\r\n        if (material) {\r\n          if (Array.isArray(material)) {\r\n            for (let i = 0; i < material.length; i++) {\r\n              const material2 = material[i];\r\n              getProgram(material2, scene, object);\r\n            }\r\n          } else {\r\n            getProgram(material, scene, object);\r\n          }\r\n        }\r\n      });\r\n    }; // Animation Loop\r\n\r\n    let onAnimationFrameCallback = null;\r\n\r\n    function onAnimationFrame(time) {\r\n      if (onAnimationFrameCallback) onAnimationFrameCallback(time);\r\n    }\r\n\r\n    function onXRSessionStart() {\r\n      animation.stop();\r\n    }\r\n\r\n    function onXRSessionEnd() {\r\n      animation.start();\r\n    }\r\n\r\n    const animation = new WebGLAnimation();\r\n    animation.setAnimationLoop(onAnimationFrame);\r\n    if (typeof window !== 'undefined') animation.setContext(window);\r\n\r\n    this.setAnimationLoop = function (callback) {\r\n      onAnimationFrameCallback = callback;\r\n      xr.setAnimationLoop(callback);\r\n      callback === null ? animation.stop() : animation.start();\r\n    };\r\n\r\n    xr.addEventListener('sessionstart', onXRSessionStart);\r\n    xr.addEventListener('sessionend', onXRSessionEnd); // Rendering\r\n\r\n    this.render = function (scene, camera) {\r\n      if (camera !== undefined && camera.isCamera !== true) {\r\n        console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\r\n        return;\r\n      }\r\n\r\n      if (_isContextLost === true) return; // update scene graph\r\n\r\n      if (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\r\n\r\n      if (camera.parent === null) camera.updateMatrixWorld();\r\n\r\n      if (xr.enabled === true && xr.isPresenting === true) {\r\n        if (xr.cameraAutoUpdate === true) xr.updateCamera(camera);\r\n        camera = xr.getCamera(); // use XR camera for rendering\r\n      } //\r\n\r\n      if (scene.isScene === true) scene.onBeforeRender(_this, scene, camera, _currentRenderTarget);\r\n      currentRenderState = renderStates.get(scene, renderStateStack.length);\r\n      currentRenderState.init();\r\n      renderStateStack.push(currentRenderState);\r\n\r\n      _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\r\n\r\n      _frustum.setFromProjectionMatrix(_projScreenMatrix);\r\n\r\n      _localClippingEnabled = this.localClippingEnabled;\r\n      _clippingEnabled = clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\r\n      currentRenderList = renderLists.get(scene, renderListStack.length);\r\n      currentRenderList.init();\r\n      renderListStack.push(currentRenderList);\r\n      projectObject(scene, camera, 0, _this.sortObjects);\r\n      currentRenderList.finish();\r\n\r\n      if (_this.sortObjects === true) {\r\n        currentRenderList.sort(_opaqueSort, _transparentSort);\r\n      } //\r\n\r\n      if (_clippingEnabled === true) clipping.beginShadows();\r\n      const shadowsArray = currentRenderState.state.shadowsArray;\r\n      shadowMap.render(shadowsArray, scene, camera);\r\n      currentRenderState.setupLights();\r\n      currentRenderState.setupLightsView(camera);\r\n      if (_clippingEnabled === true) clipping.endShadows(); //\r\n\r\n      if (this.info.autoReset === true) this.info.reset(); //\r\n\r\n      background.render(currentRenderList, scene); // render scene\r\n\r\n      const opaqueObjects = currentRenderList.opaque;\r\n      const transmissiveObjects = currentRenderList.transmissive;\r\n      const transparentObjects = currentRenderList.transparent;\r\n      if (opaqueObjects.length > 0) renderObjects(opaqueObjects, scene, camera);\r\n      if (transmissiveObjects.length > 0)\r\n        renderTransmissiveObjects(opaqueObjects, transmissiveObjects, scene, camera);\r\n      if (transparentObjects.length > 0) renderObjects(transparentObjects, scene, camera); //\r\n\r\n      if (_currentRenderTarget !== null) {\r\n        // Generate mipmap if we're using any kind of mipmap filtering\r\n        textures.updateRenderTargetMipmap(_currentRenderTarget); // resolve multisample renderbuffers to a single-sample texture if necessary\r\n\r\n        textures.updateMultisampleRenderTarget(_currentRenderTarget);\r\n      } //\r\n\r\n      if (scene.isScene === true) scene.onAfterRender(_this, scene, camera); // Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n      state.buffers.depth.setTest(true);\r\n      state.buffers.depth.setMask(true);\r\n      state.buffers.color.setMask(true);\r\n      state.setPolygonOffset(false); // _gl.finish();\r\n\r\n      bindingStates.resetDefaultState();\r\n      _currentMaterialId = -1;\r\n      _currentCamera = null;\r\n      renderStateStack.pop();\r\n\r\n      if (renderStateStack.length > 0) {\r\n        currentRenderState = renderStateStack[renderStateStack.length - 1];\r\n      } else {\r\n        currentRenderState = null;\r\n      }\r\n\r\n      renderListStack.pop();\r\n\r\n      if (renderListStack.length > 0) {\r\n        currentRenderList = renderListStack[renderListStack.length - 1];\r\n      } else {\r\n        currentRenderList = null;\r\n      }\r\n    };\r\n\r\n    function projectObject(object, camera, groupOrder, sortObjects) {\r\n      if (object.visible === false) return;\r\n      const visible = object.layers.test(camera.layers);\r\n\r\n      if (visible) {\r\n        if (object.isGroup) {\r\n          groupOrder = object.renderOrder;\r\n        } else if (object.isLOD) {\r\n          if (object.autoUpdate === true) object.update(camera);\r\n        } else if (object.isLight) {\r\n          currentRenderState.pushLight(object);\r\n\r\n          if (object.castShadow) {\r\n            currentRenderState.pushShadow(object);\r\n          }\r\n        } else if (object.isSprite) {\r\n          if (!object.frustumCulled || _frustum.intersectsSprite(object)) {\r\n            if (sortObjects) {\r\n              _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\r\n            }\r\n\r\n            const geometry = objects.update(object);\r\n            const material = object.material;\r\n\r\n            if (material.visible) {\r\n              currentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\r\n            }\r\n          }\r\n        } else if (object.isImmediateRenderObject) {\r\n          if (sortObjects) {\r\n            _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\r\n          }\r\n\r\n          currentRenderList.push(object, null, object.material, groupOrder, _vector3.z, null);\r\n        } else if (object.isMesh || object.isLine || object.isPoints) {\r\n          if (object.isSkinnedMesh) {\r\n            // update skeleton only once in a frame\r\n            if (object.skeleton.frame !== info.render.frame) {\r\n              object.skeleton.update();\r\n              object.skeleton.frame = info.render.frame;\r\n            }\r\n          }\r\n\r\n          if (!object.frustumCulled || _frustum.intersectsObject(object)) {\r\n            if (sortObjects) {\r\n              _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\r\n            }\r\n\r\n            const geometry = objects.update(object);\r\n            const material = object.material;\r\n\r\n            if (Array.isArray(material)) {\r\n              const groups = geometry.groups;\r\n\r\n              for (let i = 0, l = groups.length; i < l; i++) {\r\n                const group = groups[i];\r\n                const groupMaterial = material[group.materialIndex];\r\n\r\n                if (groupMaterial && groupMaterial.visible) {\r\n                  currentRenderList.push(\r\n                    object,\r\n                    geometry,\r\n                    groupMaterial,\r\n                    groupOrder,\r\n                    _vector3.z,\r\n                    group,\r\n                  );\r\n                }\r\n              }\r\n            } else if (material.visible) {\r\n              currentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      const children = object.children;\r\n\r\n      for (let i = 0, l = children.length; i < l; i++) {\r\n        projectObject(children[i], camera, groupOrder, sortObjects);\r\n      }\r\n    }\r\n\r\n    function renderTransmissiveObjects(opaqueObjects, transmissiveObjects, scene, camera) {\r\n      if (_transmissionRenderTarget === null) {\r\n        _transmissionRenderTarget = new WebGLRenderTarget(1024, 1024, {\r\n          generateMipmaps: true,\r\n          minFilter: LinearMipmapLinearFilter,\r\n          magFilter: NearestFilter,\r\n          wrapS: ClampToEdgeWrapping,\r\n          wrapT: ClampToEdgeWrapping,\r\n        });\r\n      }\r\n\r\n      const currentRenderTarget = _this.getRenderTarget();\r\n\r\n      _this.setRenderTarget(_transmissionRenderTarget);\r\n\r\n      _this.clear();\r\n\r\n      renderObjects(opaqueObjects, scene, camera);\r\n      textures.updateRenderTargetMipmap(_transmissionRenderTarget);\r\n\r\n      _this.setRenderTarget(currentRenderTarget);\r\n\r\n      renderObjects(transmissiveObjects, scene, camera);\r\n    }\r\n\r\n    function renderObjects(renderList, scene, camera) {\r\n      const overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\r\n\r\n      for (let i = 0, l = renderList.length; i < l; i++) {\r\n        const renderItem = renderList[i];\r\n        const object = renderItem.object;\r\n        const geometry = renderItem.geometry;\r\n        const material = overrideMaterial === null ? renderItem.material : overrideMaterial;\r\n        const group = renderItem.group;\r\n\r\n        if (camera.isArrayCamera) {\r\n          const cameras = camera.cameras;\r\n\r\n          for (let j = 0, jl = cameras.length; j < jl; j++) {\r\n            const camera2 = cameras[j];\r\n\r\n            if (object.layers.test(camera2.layers)) {\r\n              state.viewport(_currentViewport.copy(camera2.viewport));\r\n              currentRenderState.setupLightsView(camera2);\r\n              renderObject(object, scene, camera2, geometry, material, group);\r\n            }\r\n          }\r\n        } else {\r\n          renderObject(object, scene, camera, geometry, material, group);\r\n        }\r\n      }\r\n    }\r\n\r\n    function renderObject(object, scene, camera, geometry, material, group) {\r\n      object.onBeforeRender(_this, scene, camera, geometry, material, group);\r\n      object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\r\n      object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\r\n\r\n      if (object.isImmediateRenderObject) {\r\n        const program = setProgram(camera, scene, material, object);\r\n        state.setMaterial(material);\r\n        bindingStates.reset();\r\n        renderObjectImmediate(object, program);\r\n      } else {\r\n        _this.renderBufferDirect(camera, scene, geometry, material, object, group);\r\n      }\r\n\r\n      object.onAfterRender(_this, scene, camera, geometry, material, group);\r\n    }\r\n\r\n    function getProgram(material, scene, object) {\r\n      if (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\r\n\r\n      const materialProperties = properties.get(material);\r\n      const lights = currentRenderState.state.lights;\r\n      const shadowsArray = currentRenderState.state.shadowsArray;\r\n      const lightsStateVersion = lights.state.version;\r\n      const parameters = programCache.getParameters(\r\n        material,\r\n        lights.state,\r\n        shadowsArray,\r\n        scene,\r\n        object,\r\n      );\r\n      const programCacheKey = programCache.getProgramCacheKey(parameters);\r\n      let programs = materialProperties.programs; // always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\r\n\r\n      materialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\r\n      materialProperties.fog = scene.fog;\r\n      materialProperties.envMap = cubemaps.get(material.envMap || materialProperties.environment);\r\n\r\n      if (programs === undefined) {\r\n        // new material\r\n        material.addEventListener('dispose', onMaterialDispose);\r\n        programs = new Map();\r\n        materialProperties.programs = programs;\r\n      }\r\n\r\n      let program = programs.get(programCacheKey);\r\n\r\n      if (program !== undefined) {\r\n        // early out if program and light state is identical\r\n        if (\r\n          materialProperties.currentProgram === program &&\r\n          materialProperties.lightsStateVersion === lightsStateVersion\r\n        ) {\r\n          updateCommonMaterialProperties(material, parameters);\r\n          return program;\r\n        }\r\n      } else {\r\n        parameters.uniforms = programCache.getUniforms(material);\r\n        material.onBuild(parameters, _this);\r\n        material.onBeforeCompile(parameters, _this);\r\n        program = programCache.acquireProgram(parameters, programCacheKey);\r\n        programs.set(programCacheKey, program);\r\n        materialProperties.uniforms = parameters.uniforms;\r\n      }\r\n\r\n      const uniforms = materialProperties.uniforms;\r\n\r\n      if (\r\n        (!material.isShaderMaterial && !material.isRawShaderMaterial) ||\r\n        material.clipping === true\r\n      ) {\r\n        uniforms.clippingPlanes = clipping.uniform;\r\n      }\r\n\r\n      updateCommonMaterialProperties(material, parameters); // store the light setup it was created for\r\n\r\n      materialProperties.needsLights = materialNeedsLights(material);\r\n      materialProperties.lightsStateVersion = lightsStateVersion;\r\n\r\n      if (materialProperties.needsLights) {\r\n        // wire up the material to this renderer's lighting state\r\n        uniforms.ambientLightColor.value = lights.state.ambient;\r\n        uniforms.lightProbe.value = lights.state.probe;\r\n        uniforms.directionalLights.value = lights.state.directional;\r\n        uniforms.directionalLightShadows.value = lights.state.directionalShadow;\r\n        uniforms.spotLights.value = lights.state.spot;\r\n        uniforms.spotLightShadows.value = lights.state.spotShadow;\r\n        uniforms.rectAreaLights.value = lights.state.rectArea;\r\n        uniforms.ltc_1.value = lights.state.rectAreaLTC1;\r\n        uniforms.ltc_2.value = lights.state.rectAreaLTC2;\r\n        uniforms.pointLights.value = lights.state.point;\r\n        uniforms.pointLightShadows.value = lights.state.pointShadow;\r\n        uniforms.hemisphereLights.value = lights.state.hemi;\r\n        uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\r\n        uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\r\n        uniforms.spotShadowMap.value = lights.state.spotShadowMap;\r\n        uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\r\n        uniforms.pointShadowMap.value = lights.state.pointShadowMap;\r\n        uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\r\n      }\r\n\r\n      const progUniforms = program.getUniforms();\r\n      const uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\r\n      materialProperties.currentProgram = program;\r\n      materialProperties.uniformsList = uniformsList;\r\n      return program;\r\n    }\r\n\r\n    function updateCommonMaterialProperties(material, parameters) {\r\n      const materialProperties = properties.get(material);\r\n      materialProperties.outputEncoding = parameters.outputEncoding;\r\n      materialProperties.instancing = parameters.instancing;\r\n      materialProperties.skinning = parameters.skinning;\r\n      materialProperties.numClippingPlanes = parameters.numClippingPlanes;\r\n      materialProperties.numIntersection = parameters.numClipIntersection;\r\n      materialProperties.vertexAlphas = parameters.vertexAlphas;\r\n    }\r\n\r\n    function setProgram(camera, scene, material, object) {\r\n      if (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\r\n\r\n      textures.resetTextureUnits();\r\n      const fog = scene.fog;\r\n      const environment = material.isMeshStandardMaterial ? scene.environment : null;\r\n      const encoding =\r\n        _currentRenderTarget === null\r\n          ? _this.outputEncoding\r\n          : _currentRenderTarget.texture.encoding;\r\n      const envMap = cubemaps.get(material.envMap || environment);\r\n      const vertexAlphas =\r\n        material.vertexColors === true &&\r\n        object.geometry &&\r\n        object.geometry.attributes.color &&\r\n        object.geometry.attributes.color.itemSize === 4;\r\n      const materialProperties = properties.get(material);\r\n      const lights = currentRenderState.state.lights;\r\n\r\n      if (_clippingEnabled === true) {\r\n        if (_localClippingEnabled === true || camera !== _currentCamera) {\r\n          const useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\r\n          // object instead of the material, once it becomes feasible\r\n          // (#8465, #8379)\r\n\r\n          clipping.setState(material, camera, useCache);\r\n        }\r\n      } //\r\n\r\n      let needsProgramChange = false;\r\n\r\n      if (material.version === materialProperties.__version) {\r\n        if (\r\n          materialProperties.needsLights &&\r\n          materialProperties.lightsStateVersion !== lights.state.version\r\n        ) {\r\n          needsProgramChange = true;\r\n        } else if (materialProperties.outputEncoding !== encoding) {\r\n          needsProgramChange = true;\r\n        } else if (object.isInstancedMesh && materialProperties.instancing === false) {\r\n          needsProgramChange = true;\r\n        } else if (!object.isInstancedMesh && materialProperties.instancing === true) {\r\n          needsProgramChange = true;\r\n        } else if (object.isSkinnedMesh && materialProperties.skinning === false) {\r\n          needsProgramChange = true;\r\n        } else if (!object.isSkinnedMesh && materialProperties.skinning === true) {\r\n          needsProgramChange = true;\r\n        } else if (materialProperties.envMap !== envMap) {\r\n          needsProgramChange = true;\r\n        } else if (material.fog && materialProperties.fog !== fog) {\r\n          needsProgramChange = true;\r\n        } else if (\r\n          materialProperties.numClippingPlanes !== undefined &&\r\n          (materialProperties.numClippingPlanes !== clipping.numPlanes ||\r\n            materialProperties.numIntersection !== clipping.numIntersection)\r\n        ) {\r\n          needsProgramChange = true;\r\n        } else if (materialProperties.vertexAlphas !== vertexAlphas) {\r\n          needsProgramChange = true;\r\n        }\r\n      } else {\r\n        needsProgramChange = true;\r\n        materialProperties.__version = material.version;\r\n      } //\r\n\r\n      let program = materialProperties.currentProgram;\r\n\r\n      if (needsProgramChange === true) {\r\n        program = getProgram(material, scene, object);\r\n      }\r\n\r\n      let refreshProgram = false;\r\n      let refreshMaterial = false;\r\n      let refreshLights = false;\r\n      const p_uniforms = program.getUniforms(),\r\n        m_uniforms = materialProperties.uniforms;\r\n\r\n      if (state.useProgram(program.program)) {\r\n        refreshProgram = true;\r\n        refreshMaterial = true;\r\n        refreshLights = true;\r\n      }\r\n\r\n      if (material.id !== _currentMaterialId) {\r\n        _currentMaterialId = material.id;\r\n        refreshMaterial = true;\r\n      }\r\n\r\n      if (refreshProgram || _currentCamera !== camera) {\r\n        p_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\r\n\r\n        if (capabilities.logarithmicDepthBuffer) {\r\n          p_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\r\n        }\r\n\r\n        if (_currentCamera !== camera) {\r\n          _currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\r\n          // now, in case this material supports lights - or later, when\r\n          // the next material that does gets activated:\r\n\r\n          refreshMaterial = true; // set to true on material change\r\n\r\n          refreshLights = true; // remains set until update done\r\n        } // load material specific uniforms\r\n        // (shader material also gets them for the sake of genericity)\r\n\r\n        if (\r\n          material.isShaderMaterial ||\r\n          material.isMeshPhongMaterial ||\r\n          material.isMeshToonMaterial ||\r\n          material.isMeshStandardMaterial ||\r\n          material.envMap\r\n        ) {\r\n          const uCamPos = p_uniforms.map.cameraPosition;\r\n\r\n          if (uCamPos !== undefined) {\r\n            uCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\r\n          }\r\n        }\r\n\r\n        if (\r\n          material.isMeshPhongMaterial ||\r\n          material.isMeshToonMaterial ||\r\n          material.isMeshLambertMaterial ||\r\n          material.isMeshBasicMaterial ||\r\n          material.isMeshStandardMaterial ||\r\n          material.isShaderMaterial\r\n        ) {\r\n          p_uniforms.setValue(_gl, 'isOrthographic', camera.isOrthographicCamera === true);\r\n        }\r\n\r\n        if (\r\n          material.isMeshPhongMaterial ||\r\n          material.isMeshToonMaterial ||\r\n          material.isMeshLambertMaterial ||\r\n          material.isMeshBasicMaterial ||\r\n          material.isMeshStandardMaterial ||\r\n          material.isShaderMaterial ||\r\n          material.isShadowMaterial ||\r\n          object.isSkinnedMesh\r\n        ) {\r\n          p_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\r\n        }\r\n      } // skinning uniforms must be set even if material didn't change\r\n      // auto-setting of texture unit for bone texture must go before other textures\r\n      // otherwise textures used for skinning can take over texture units reserved for other material textures\r\n\r\n      if (object.isSkinnedMesh) {\r\n        p_uniforms.setOptional(_gl, object, 'bindMatrix');\r\n        p_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\r\n        const skeleton = object.skeleton;\r\n\r\n        if (skeleton) {\r\n          if (capabilities.floatVertexTextures) {\r\n            if (skeleton.boneTexture === null) skeleton.computeBoneTexture();\r\n            p_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture, textures);\r\n            p_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\r\n          } else {\r\n            p_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\r\n          }\r\n        }\r\n      }\r\n\r\n      if (refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow) {\r\n        materialProperties.receiveShadow = object.receiveShadow;\r\n        p_uniforms.setValue(_gl, 'receiveShadow', object.receiveShadow);\r\n      }\r\n\r\n      if (refreshMaterial) {\r\n        p_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\r\n\r\n        if (materialProperties.needsLights) {\r\n          // the current material requires lighting info\r\n          // note: all lighting uniforms are always set correctly\r\n          // they simply reference the renderer's state for their\r\n          // values\r\n          //\r\n          // use the current material's .needsUpdate flags to set\r\n          // the GL state when required\r\n          markUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\r\n        } // refresh uniforms common to several materials\r\n\r\n        if (fog && material.fog) {\r\n          materials.refreshFogUniforms(m_uniforms, fog);\r\n        }\r\n\r\n        materials.refreshMaterialUniforms(\r\n          m_uniforms,\r\n          material,\r\n          _pixelRatio,\r\n          _height,\r\n          _transmissionRenderTarget,\r\n        );\r\n        WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\r\n      }\r\n\r\n      if (material.isShaderMaterial && material.uniformsNeedUpdate === true) {\r\n        WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\r\n        material.uniformsNeedUpdate = false;\r\n      }\r\n\r\n      if (material.isSpriteMaterial) {\r\n        p_uniforms.setValue(_gl, 'center', object.center);\r\n      } // common matrices\r\n\r\n      p_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\r\n      p_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\r\n      p_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld);\r\n      return program;\r\n    } // If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n    function markUniformsLightsNeedsUpdate(uniforms, value) {\r\n      uniforms.ambientLightColor.needsUpdate = value;\r\n      uniforms.lightProbe.needsUpdate = value;\r\n      uniforms.directionalLights.needsUpdate = value;\r\n      uniforms.directionalLightShadows.needsUpdate = value;\r\n      uniforms.pointLights.needsUpdate = value;\r\n      uniforms.pointLightShadows.needsUpdate = value;\r\n      uniforms.spotLights.needsUpdate = value;\r\n      uniforms.spotLightShadows.needsUpdate = value;\r\n      uniforms.rectAreaLights.needsUpdate = value;\r\n      uniforms.hemisphereLights.needsUpdate = value;\r\n    }\r\n\r\n    function materialNeedsLights(material) {\r\n      return (\r\n        material.isMeshLambertMaterial ||\r\n        material.isMeshToonMaterial ||\r\n        material.isMeshPhongMaterial ||\r\n        material.isMeshStandardMaterial ||\r\n        material.isShadowMaterial ||\r\n        (material.isShaderMaterial && material.lights === true)\r\n      );\r\n    }\r\n\r\n    this.getActiveCubeFace = function () {\r\n      return _currentActiveCubeFace;\r\n    };\r\n\r\n    this.getActiveMipmapLevel = function () {\r\n      return _currentActiveMipmapLevel;\r\n    };\r\n\r\n    this.getRenderTarget = function () {\r\n      return _currentRenderTarget;\r\n    };\r\n\r\n    this.setRenderTarget = function (renderTarget, activeCubeFace = 0, activeMipmapLevel = 0) {\r\n      _currentRenderTarget = renderTarget;\r\n      _currentActiveCubeFace = activeCubeFace;\r\n      _currentActiveMipmapLevel = activeMipmapLevel;\r\n\r\n      if (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\r\n        textures.setupRenderTarget(renderTarget);\r\n      }\r\n\r\n      let framebuffer = null;\r\n      let isCube = false;\r\n      let isRenderTarget3D = false;\r\n\r\n      if (renderTarget) {\r\n        const texture = renderTarget.texture;\r\n\r\n        if (texture.isDataTexture3D || texture.isDataTexture2DArray) {\r\n          isRenderTarget3D = true;\r\n        }\r\n\r\n        const __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;\r\n\r\n        if (renderTarget.isWebGLCubeRenderTarget) {\r\n          framebuffer = __webglFramebuffer[activeCubeFace];\r\n          isCube = true;\r\n        } else if (renderTarget.isWebGLMultisampleRenderTarget) {\r\n          framebuffer = properties.get(renderTarget).__webglMultisampledFramebuffer;\r\n        } else {\r\n          framebuffer = __webglFramebuffer;\r\n        }\r\n\r\n        _currentViewport.copy(renderTarget.viewport);\r\n\r\n        _currentScissor.copy(renderTarget.scissor);\r\n\r\n        _currentScissorTest = renderTarget.scissorTest;\r\n      } else {\r\n        _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();\r\n\r\n        _currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();\r\n\r\n        _currentScissorTest = _scissorTest;\r\n      }\r\n\r\n      const framebufferBound = state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\r\n\r\n      if (framebufferBound && capabilities.drawBuffers) {\r\n        let needsUpdate = false;\r\n\r\n        if (renderTarget) {\r\n          if (renderTarget.isWebGLMultipleRenderTargets) {\r\n            const textures = renderTarget.texture;\r\n\r\n            if (\r\n              _currentDrawBuffers.length !== textures.length ||\r\n              _currentDrawBuffers[0] !== _gl.COLOR_ATTACHMENT0\r\n            ) {\r\n              for (let i = 0, il = textures.length; i < il; i++) {\r\n                _currentDrawBuffers[i] = _gl.COLOR_ATTACHMENT0 + i;\r\n              }\r\n\r\n              _currentDrawBuffers.length = textures.length;\r\n              needsUpdate = true;\r\n            }\r\n          } else {\r\n            if (\r\n              _currentDrawBuffers.length !== 1 ||\r\n              _currentDrawBuffers[0] !== _gl.COLOR_ATTACHMENT0\r\n            ) {\r\n              _currentDrawBuffers[0] = _gl.COLOR_ATTACHMENT0;\r\n              _currentDrawBuffers.length = 1;\r\n              needsUpdate = true;\r\n            }\r\n          }\r\n        } else {\r\n          if (_currentDrawBuffers.length !== 1 || _currentDrawBuffers[0] !== _gl.BACK) {\r\n            _currentDrawBuffers[0] = _gl.BACK;\r\n            _currentDrawBuffers.length = 1;\r\n            needsUpdate = true;\r\n          }\r\n        }\r\n\r\n        if (needsUpdate) {\r\n          if (capabilities.isWebGL2) {\r\n            _gl.drawBuffers(_currentDrawBuffers);\r\n          } else {\r\n            extensions.get('WEBGL_draw_buffers').drawBuffersWEBGL(_currentDrawBuffers);\r\n          }\r\n        }\r\n      }\r\n\r\n      state.viewport(_currentViewport);\r\n      state.scissor(_currentScissor);\r\n      state.setScissorTest(_currentScissorTest);\r\n\r\n      if (isCube) {\r\n        const textureProperties = properties.get(renderTarget.texture);\r\n\r\n        _gl.framebufferTexture2D(\r\n          _gl.FRAMEBUFFER,\r\n          _gl.COLOR_ATTACHMENT0,\r\n          _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace,\r\n          textureProperties.__webglTexture,\r\n          activeMipmapLevel,\r\n        );\r\n      } else if (isRenderTarget3D) {\r\n        const textureProperties = properties.get(renderTarget.texture);\r\n        const layer = activeCubeFace || 0;\r\n\r\n        _gl.framebufferTextureLayer(\r\n          _gl.FRAMEBUFFER,\r\n          _gl.COLOR_ATTACHMENT0,\r\n          textureProperties.__webglTexture,\r\n          activeMipmapLevel || 0,\r\n          layer,\r\n        );\r\n      }\r\n    };\r\n\r\n    this.readRenderTargetPixels = function (\r\n      renderTarget,\r\n      x,\r\n      y,\r\n      width,\r\n      height,\r\n      buffer,\r\n      activeCubeFaceIndex,\r\n    ) {\r\n      if (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\r\n        console.error(\r\n          'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.',\r\n        );\r\n        return;\r\n      }\r\n\r\n      let framebuffer = properties.get(renderTarget).__webglFramebuffer;\r\n\r\n      if (renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined) {\r\n        framebuffer = framebuffer[activeCubeFaceIndex];\r\n      }\r\n\r\n      if (framebuffer) {\r\n        state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\r\n\r\n        try {\r\n          const texture = renderTarget.texture;\r\n          const textureFormat = texture.format;\r\n          const textureType = texture.type;\r\n\r\n          if (\r\n            textureFormat !== RGBAFormat &&\r\n            utils.convert(textureFormat) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)\r\n          ) {\r\n            console.error(\r\n              'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.',\r\n            );\r\n            return;\r\n          }\r\n\r\n          const halfFloatSupportedByExt =\r\n            textureType === HalfFloatType &&\r\n            (extensions.has('EXT_color_buffer_half_float') ||\r\n              (capabilities.isWebGL2 && extensions.has('EXT_color_buffer_float')));\r\n\r\n          if (\r\n            textureType !== UnsignedByteType &&\r\n            utils.convert(textureType) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && // Edge and Chrome Mac < 52 (#9513)\r\n            !(\r\n              textureType === FloatType &&\r\n              (capabilities.isWebGL2 ||\r\n                extensions.has('OES_texture_float') ||\r\n                extensions.has('WEBGL_color_buffer_float'))\r\n            ) && // Chrome Mac >= 52 and Firefox\r\n            !halfFloatSupportedByExt\r\n          ) {\r\n            console.error(\r\n              'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.',\r\n            );\r\n            return;\r\n          }\r\n\r\n          if (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\r\n            // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\r\n            if (\r\n              x >= 0 &&\r\n              x <= renderTarget.width - width &&\r\n              y >= 0 &&\r\n              y <= renderTarget.height - height\r\n            ) {\r\n              _gl.readPixels(\r\n                x,\r\n                y,\r\n                width,\r\n                height,\r\n                utils.convert(textureFormat),\r\n                utils.convert(textureType),\r\n                buffer,\r\n              );\r\n            }\r\n          } else {\r\n            console.error(\r\n              'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.',\r\n            );\r\n          }\r\n        } finally {\r\n          // restore framebuffer of current render target if necessary\r\n          const framebuffer =\r\n            _currentRenderTarget !== null\r\n              ? properties.get(_currentRenderTarget).__webglFramebuffer\r\n              : null;\r\n          state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\r\n        }\r\n      }\r\n    };\r\n\r\n    this.copyFramebufferToTexture = function (position, texture, level = 0) {\r\n      const levelScale = Math.pow(2, -level);\r\n      const width = Math.floor(texture.image.width * levelScale);\r\n      const height = Math.floor(texture.image.height * levelScale);\r\n      let glFormat = utils.convert(texture.format);\r\n\r\n      if (capabilities.isWebGL2) {\r\n        // Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1120100\r\n        if (glFormat === _gl.RGB) glFormat = _gl.RGB8;\r\n        if (glFormat === _gl.RGBA) glFormat = _gl.RGBA8;\r\n      }\r\n\r\n      textures.setTexture2D(texture, 0);\r\n\r\n      _gl.copyTexImage2D(_gl.TEXTURE_2D, level, glFormat, position.x, position.y, width, height, 0);\r\n\r\n      state.unbindTexture();\r\n    };\r\n\r\n    this.copyTextureToTexture = function (position, srcTexture, dstTexture, level = 0) {\r\n      const width = srcTexture.image.width;\r\n      const height = srcTexture.image.height;\r\n      const glFormat = utils.convert(dstTexture.format);\r\n      const glType = utils.convert(dstTexture.type);\r\n      textures.setTexture2D(dstTexture, 0); // As another texture upload may have changed pixelStorei\r\n      // parameters, make sure they are correct for the dstTexture\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\r\n\r\n      if (srcTexture.isDataTexture) {\r\n        _gl.texSubImage2D(\r\n          _gl.TEXTURE_2D,\r\n          level,\r\n          position.x,\r\n          position.y,\r\n          width,\r\n          height,\r\n          glFormat,\r\n          glType,\r\n          srcTexture.image.data,\r\n        );\r\n      } else {\r\n        if (srcTexture.isCompressedTexture) {\r\n          _gl.compressedTexSubImage2D(\r\n            _gl.TEXTURE_2D,\r\n            level,\r\n            position.x,\r\n            position.y,\r\n            srcTexture.mipmaps[0].width,\r\n            srcTexture.mipmaps[0].height,\r\n            glFormat,\r\n            srcTexture.mipmaps[0].data,\r\n          );\r\n        } else {\r\n          _gl.texSubImage2D(\r\n            _gl.TEXTURE_2D,\r\n            level,\r\n            position.x,\r\n            position.y,\r\n            glFormat,\r\n            glType,\r\n            srcTexture.image,\r\n          );\r\n        }\r\n      } // Generate mipmaps only when copying level 0\r\n\r\n      if (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(_gl.TEXTURE_2D);\r\n      state.unbindTexture();\r\n    };\r\n\r\n    this.copyTextureToTexture3D = function (\r\n      sourceBox,\r\n      position,\r\n      srcTexture,\r\n      dstTexture,\r\n      level = 0,\r\n    ) {\r\n      if (_this.isWebGL1Renderer) {\r\n        console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.');\r\n        return;\r\n      }\r\n\r\n      const { width, height, data } = srcTexture.image;\r\n      const glFormat = utils.convert(dstTexture.format);\r\n      const glType = utils.convert(dstTexture.type);\r\n      let glTarget;\r\n\r\n      if (dstTexture.isDataTexture3D) {\r\n        textures.setTexture3D(dstTexture, 0);\r\n        glTarget = _gl.TEXTURE_3D;\r\n      } else if (dstTexture.isDataTexture2DArray) {\r\n        textures.setTexture2DArray(dstTexture, 0);\r\n        glTarget = _gl.TEXTURE_2D_ARRAY;\r\n      } else {\r\n        console.warn(\r\n          'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.',\r\n        );\r\n        return;\r\n      }\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\r\n\r\n      const unpackRowLen = _gl.getParameter(_gl.UNPACK_ROW_LENGTH);\r\n\r\n      const unpackImageHeight = _gl.getParameter(_gl.UNPACK_IMAGE_HEIGHT);\r\n\r\n      const unpackSkipPixels = _gl.getParameter(_gl.UNPACK_SKIP_PIXELS);\r\n\r\n      const unpackSkipRows = _gl.getParameter(_gl.UNPACK_SKIP_ROWS);\r\n\r\n      const unpackSkipImages = _gl.getParameter(_gl.UNPACK_SKIP_IMAGES);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, width);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, height);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, sourceBox.min.x);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, sourceBox.min.y);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, sourceBox.min.z);\r\n\r\n      _gl.texSubImage3D(\r\n        glTarget,\r\n        level,\r\n        position.x,\r\n        position.y,\r\n        position.z,\r\n        sourceBox.max.x - sourceBox.min.x + 1,\r\n        sourceBox.max.y - sourceBox.min.y + 1,\r\n        sourceBox.max.z - sourceBox.min.z + 1,\r\n        glFormat,\r\n        glType,\r\n        data,\r\n      );\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, unpackRowLen);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, unpackSkipPixels);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, unpackSkipRows);\r\n\r\n      _gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, unpackSkipImages); // Generate mipmaps only when copying level 0\r\n\r\n      if (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(glTarget);\r\n      state.unbindTexture();\r\n    };\r\n\r\n    this.initTexture = function (texture) {\r\n      textures.setTexture2D(texture, 0);\r\n      state.unbindTexture();\r\n    };\r\n\r\n    this.resetState = function () {\r\n      _currentActiveCubeFace = 0;\r\n      _currentActiveMipmapLevel = 0;\r\n      _currentRenderTarget = null;\r\n      state.reset();\r\n      bindingStates.reset();\r\n    };\r\n\r\n    if (typeof __THREE_DEVTOOLS__ !== 'undefined') {\r\n      __THREE_DEVTOOLS__.dispatchEvent(\r\n        new CustomEvent('observe', {\r\n          detail: this,\r\n        }),\r\n      ); // eslint-disable-line no-undef\r\n    }\r\n  }\r\n\r\n  class WebGL1Renderer extends WebGLRenderer {}\r\n\r\n  WebGL1Renderer.prototype.isWebGL1Renderer = true;\r\n\r\n  class FogExp2 {\r\n    constructor(color, density = 0.00025) {\r\n      this.name = '';\r\n      this.color = new Color(color);\r\n      this.density = density;\r\n    }\r\n\r\n    clone() {\r\n      return new FogExp2(this.color, this.density);\r\n    }\r\n\r\n    toJSON() /* meta */\r\n    {\r\n      return {\r\n        type: 'FogExp2',\r\n        color: this.color.getHex(),\r\n        density: this.density,\r\n      };\r\n    }\r\n  }\r\n\r\n  FogExp2.prototype.isFogExp2 = true;\r\n\r\n  class Fog {\r\n    constructor(color, near = 1, far = 1000) {\r\n      this.name = '';\r\n      this.color = new Color(color);\r\n      this.near = near;\r\n      this.far = far;\r\n    }\r\n\r\n    clone() {\r\n      return new Fog(this.color, this.near, this.far);\r\n    }\r\n\r\n    toJSON() /* meta */\r\n    {\r\n      return {\r\n        type: 'Fog',\r\n        color: this.color.getHex(),\r\n        near: this.near,\r\n        far: this.far,\r\n      };\r\n    }\r\n  }\r\n\r\n  Fog.prototype.isFog = true;\r\n\r\n  class Scene extends Object3D {\r\n    constructor() {\r\n      super();\r\n      this.type = 'Scene';\r\n      this.background = null;\r\n      this.environment = null;\r\n      this.fog = null;\r\n      this.overrideMaterial = null;\r\n      this.autoUpdate = true; // checked by the renderer\r\n\r\n      if (typeof __THREE_DEVTOOLS__ !== 'undefined') {\r\n        __THREE_DEVTOOLS__.dispatchEvent(\r\n          new CustomEvent('observe', {\r\n            detail: this,\r\n          }),\r\n        ); // eslint-disable-line no-undef\r\n      }\r\n    }\r\n\r\n    copy(source, recursive) {\r\n      super.copy(source, recursive);\r\n      if (source.background !== null) this.background = source.background.clone();\r\n      if (source.environment !== null) this.environment = source.environment.clone();\r\n      if (source.fog !== null) this.fog = source.fog.clone();\r\n      if (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\r\n      this.autoUpdate = source.autoUpdate;\r\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\r\n      return this;\r\n    }\r\n\r\n    toJSON(meta) {\r\n      const data = super.toJSON(meta);\r\n      if (this.background !== null) data.object.background = this.background.toJSON(meta);\r\n      if (this.environment !== null) data.object.environment = this.environment.toJSON(meta);\r\n      if (this.fog !== null) data.object.fog = this.fog.toJSON();\r\n      return data;\r\n    }\r\n  }\r\n\r\n  Scene.prototype.isScene = true;\r\n\r\n  class InterleavedBuffer {\r\n    constructor(array, stride) {\r\n      this.array = array;\r\n      this.stride = stride;\r\n      this.count = array !== undefined ? array.length / stride : 0;\r\n      this.usage = StaticDrawUsage;\r\n      this.updateRange = {\r\n        offset: 0,\r\n        count: -1,\r\n      };\r\n      this.version = 0;\r\n      this.uuid = generateUUID();\r\n    }\r\n\r\n    onUploadCallback() {}\r\n\r\n    set needsUpdate(value) {\r\n      if (value === true) this.version++;\r\n    }\r\n\r\n    setUsage(value) {\r\n      this.usage = value;\r\n      return this;\r\n    }\r\n\r\n    copy(source) {\r\n      this.array = new source.array.constructor(source.array);\r\n      this.count = source.count;\r\n      this.stride = source.stride;\r\n      this.usage = source.usage;\r\n      return this;\r\n    }\r\n\r\n    copyAt(index1, attribute, index2) {\r\n      index1 *= this.stride;\r\n      index2 *= attribute.stride;\r\n\r\n      for (let i = 0, l = this.stride; i < l; i++) {\r\n        this.array[index1 + i] = attribute.array[index2 + i];\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    set(value, offset = 0) {\r\n      this.array.set(value, offset);\r\n      return this;\r\n    }\r\n\r\n    clone(data) {\r\n      if (data.arrayBuffers === undefined) {\r\n        data.arrayBuffers = {};\r\n      }\r\n\r\n      if (this.array.buffer._uuid === undefined) {\r\n        this.array.buffer._uuid = generateUUID();\r\n      }\r\n\r\n      if (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\r\n        data.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer;\r\n      }\r\n\r\n      const array = new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);\r\n      const ib = new this.constructor(array, this.stride);\r\n      ib.setUsage(this.usage);\r\n      return ib;\r\n    }\r\n\r\n    onUpload(callback) {\r\n      this.onUploadCallback = callback;\r\n      return this;\r\n    }\r\n\r\n    toJSON(data) {\r\n      if (data.arrayBuffers === undefined) {\r\n        data.arrayBuffers = {};\r\n      } // generate UUID for array buffer if necessary\r\n\r\n      if (this.array.buffer._uuid === undefined) {\r\n        this.array.buffer._uuid = generateUUID();\r\n      }\r\n\r\n      if (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\r\n        data.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(\r\n          new Uint32Array(this.array.buffer),\r\n        );\r\n      } //\r\n\r\n      return {\r\n        uuid: this.uuid,\r\n        buffer: this.array.buffer._uuid,\r\n        type: this.array.constructor.name,\r\n        stride: this.stride,\r\n      };\r\n    }\r\n  }\r\n\r\n  InterleavedBuffer.prototype.isInterleavedBuffer = true;\r\n\r\n  const _vector$6 = /*@__PURE__*/ new Vector3();\r\n\r\n  class InterleavedBufferAttribute {\r\n    constructor(interleavedBuffer, itemSize, offset, normalized) {\r\n      this.name = '';\r\n      this.data = interleavedBuffer;\r\n      this.itemSize = itemSize;\r\n      this.offset = offset;\r\n      this.normalized = normalized === true;\r\n    }\r\n\r\n    get count() {\r\n      return this.data.count;\r\n    }\r\n\r\n    get array() {\r\n      return this.data.array;\r\n    }\r\n\r\n    set needsUpdate(value) {\r\n      this.data.needsUpdate = value;\r\n    }\r\n\r\n    applyMatrix4(m) {\r\n      for (let i = 0, l = this.data.count; i < l; i++) {\r\n        _vector$6.x = this.getX(i);\r\n        _vector$6.y = this.getY(i);\r\n        _vector$6.z = this.getZ(i);\r\n\r\n        _vector$6.applyMatrix4(m);\r\n\r\n        this.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    applyNormalMatrix(m) {\r\n      for (let i = 0, l = this.count; i < l; i++) {\r\n        _vector$6.x = this.getX(i);\r\n        _vector$6.y = this.getY(i);\r\n        _vector$6.z = this.getZ(i);\r\n\r\n        _vector$6.applyNormalMatrix(m);\r\n\r\n        this.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    transformDirection(m) {\r\n      for (let i = 0, l = this.count; i < l; i++) {\r\n        _vector$6.x = this.getX(i);\r\n        _vector$6.y = this.getY(i);\r\n        _vector$6.z = this.getZ(i);\r\n\r\n        _vector$6.transformDirection(m);\r\n\r\n        this.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    setX(index, x) {\r\n      this.data.array[index * this.data.stride + this.offset] = x;\r\n      return this;\r\n    }\r\n\r\n    setY(index, y) {\r\n      this.data.array[index * this.data.stride + this.offset + 1] = y;\r\n      return this;\r\n    }\r\n\r\n    setZ(index, z) {\r\n      this.data.array[index * this.data.stride + this.offset + 2] = z;\r\n      return this;\r\n    }\r\n\r\n    setW(index, w) {\r\n      this.data.array[index * this.data.stride + this.offset + 3] = w;\r\n      return this;\r\n    }\r\n\r\n    getX(index) {\r\n      return this.data.array[index * this.data.stride + this.offset];\r\n    }\r\n\r\n    getY(index) {\r\n      return this.data.array[index * this.data.stride + this.offset + 1];\r\n    }\r\n\r\n    getZ(index) {\r\n      return this.data.array[index * this.data.stride + this.offset + 2];\r\n    }\r\n\r\n    getW(index) {\r\n      return this.data.array[index * this.data.stride + this.offset + 3];\r\n    }\r\n\r\n    setXY(index, x, y) {\r\n      index = index * this.data.stride + this.offset;\r\n      this.data.array[index + 0] = x;\r\n      this.data.array[index + 1] = y;\r\n      return this;\r\n    }\r\n\r\n    setXYZ(index, x, y, z) {\r\n      index = index * this.data.stride + this.offset;\r\n      this.data.array[index + 0] = x;\r\n      this.data.array[index + 1] = y;\r\n      this.data.array[index + 2] = z;\r\n      return this;\r\n    }\r\n\r\n    setXYZW(index, x, y, z, w) {\r\n      index = index * this.data.stride + this.offset;\r\n      this.data.array[index + 0] = x;\r\n      this.data.array[index + 1] = y;\r\n      this.data.array[index + 2] = z;\r\n      this.data.array[index + 3] = w;\r\n      return this;\r\n    }\r\n\r\n    clone(data) {\r\n      if (data === undefined) {\r\n        console.log(\r\n          'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.',\r\n        );\r\n        const array = [];\r\n\r\n        for (let i = 0; i < this.count; i++) {\r\n          const index = i * this.data.stride + this.offset;\r\n\r\n          for (let j = 0; j < this.itemSize; j++) {\r\n            array.push(this.data.array[index + j]);\r\n          }\r\n        }\r\n\r\n        return new BufferAttribute(\r\n          new this.array.constructor(array),\r\n          this.itemSize,\r\n          this.normalized,\r\n        );\r\n      } else {\r\n        if (data.interleavedBuffers === undefined) {\r\n          data.interleavedBuffers = {};\r\n        }\r\n\r\n        if (data.interleavedBuffers[this.data.uuid] === undefined) {\r\n          data.interleavedBuffers[this.data.uuid] = this.data.clone(data);\r\n        }\r\n\r\n        return new InterleavedBufferAttribute(\r\n          data.interleavedBuffers[this.data.uuid],\r\n          this.itemSize,\r\n          this.offset,\r\n          this.normalized,\r\n        );\r\n      }\r\n    }\r\n\r\n    toJSON(data) {\r\n      if (data === undefined) {\r\n        console.log(\r\n          'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.',\r\n        );\r\n        const array = [];\r\n\r\n        for (let i = 0; i < this.count; i++) {\r\n          const index = i * this.data.stride + this.offset;\r\n\r\n          for (let j = 0; j < this.itemSize; j++) {\r\n            array.push(this.data.array[index + j]);\r\n          }\r\n        } // deinterleave data and save it as an ordinary buffer attribute for now\r\n\r\n        return {\r\n          itemSize: this.itemSize,\r\n          type: this.array.constructor.name,\r\n          array: array,\r\n          normalized: this.normalized,\r\n        };\r\n      } else {\r\n        // save as true interlaved attribtue\r\n        if (data.interleavedBuffers === undefined) {\r\n          data.interleavedBuffers = {};\r\n        }\r\n\r\n        if (data.interleavedBuffers[this.data.uuid] === undefined) {\r\n          data.interleavedBuffers[this.data.uuid] = this.data.toJSON(data);\r\n        }\r\n\r\n        return {\r\n          isInterleavedBufferAttribute: true,\r\n          itemSize: this.itemSize,\r\n          data: this.data.uuid,\r\n          offset: this.offset,\r\n          normalized: this.normalized,\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  InterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\r\n\r\n  /**\r\n   * parameters = {\r\n   *\tcolor: <hex>,\r\n   *\tmap: new THREE.Texture( <Image> ),\r\n   *\talphaMap: new THREE.Texture( <Image> ),\r\n   *\trotation: <float>,\r\n   *\tsizeAttenuation: <bool>\r\n   * }\r\n   */\r\n\r\n  class SpriteMaterial extends Material {\r\n    constructor(parameters) {\r\n      super();\r\n      this.type = 'SpriteMaterial';\r\n      this.color = new Color(0xffffff);\r\n      this.map = null;\r\n      this.alphaMap = null;\r\n      this.rotation = 0;\r\n      this.sizeAttenuation = true;\r\n      this.transparent = true;\r\n      this.setValues(parameters);\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.color.copy(source.color);\r\n      this.map = source.map;\r\n      this.alphaMap = source.alphaMap;\r\n      this.rotation = source.rotation;\r\n      this.sizeAttenuation = source.sizeAttenuation;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  SpriteMaterial.prototype.isSpriteMaterial = true;\r\n\r\n  let _geometry;\r\n\r\n  const _intersectPoint = /*@__PURE__*/ new Vector3();\r\n\r\n  const _worldScale = /*@__PURE__*/ new Vector3();\r\n\r\n  const _mvPosition = /*@__PURE__*/ new Vector3();\r\n\r\n  const _alignedPosition = /*@__PURE__*/ new Vector2();\r\n\r\n  const _rotatedPosition = /*@__PURE__*/ new Vector2();\r\n\r\n  const _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\r\n\r\n  const _vA = /*@__PURE__*/ new Vector3();\r\n\r\n  const _vB = /*@__PURE__*/ new Vector3();\r\n\r\n  const _vC = /*@__PURE__*/ new Vector3();\r\n\r\n  const _uvA = /*@__PURE__*/ new Vector2();\r\n\r\n  const _uvB = /*@__PURE__*/ new Vector2();\r\n\r\n  const _uvC = /*@__PURE__*/ new Vector2();\r\n\r\n  class Sprite extends Object3D {\r\n    constructor(material) {\r\n      super();\r\n      this.type = 'Sprite';\r\n\r\n      if (_geometry === undefined) {\r\n        _geometry = new BufferGeometry();\r\n        const float32Array = new Float32Array([\r\n          -0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1,\r\n        ]);\r\n        const interleavedBuffer = new InterleavedBuffer(float32Array, 5);\r\n\r\n        _geometry.setIndex([0, 1, 2, 0, 2, 3]);\r\n\r\n        _geometry.setAttribute(\r\n          'position',\r\n          new InterleavedBufferAttribute(interleavedBuffer, 3, 0, false),\r\n        );\r\n\r\n        _geometry.setAttribute(\r\n          'uv',\r\n          new InterleavedBufferAttribute(interleavedBuffer, 2, 3, false),\r\n        );\r\n      }\r\n\r\n      this.geometry = _geometry;\r\n      this.material = material !== undefined ? material : new SpriteMaterial();\r\n      this.center = new Vector2(0.5, 0.5);\r\n    }\r\n\r\n    raycast(raycaster, intersects) {\r\n      if (raycaster.camera === null) {\r\n        console.error(\r\n          'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.',\r\n        );\r\n      }\r\n\r\n      _worldScale.setFromMatrixScale(this.matrixWorld);\r\n\r\n      _viewWorldMatrix.copy(raycaster.camera.matrixWorld);\r\n\r\n      this.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse, this.matrixWorld);\r\n\r\n      _mvPosition.setFromMatrixPosition(this.modelViewMatrix);\r\n\r\n      if (raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false) {\r\n        _worldScale.multiplyScalar(-_mvPosition.z);\r\n      }\r\n\r\n      const rotation = this.material.rotation;\r\n      let sin, cos;\r\n\r\n      if (rotation !== 0) {\r\n        cos = Math.cos(rotation);\r\n        sin = Math.sin(rotation);\r\n      }\r\n\r\n      const center = this.center;\r\n      transformVertex(_vA.set(-0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\r\n      transformVertex(_vB.set(0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\r\n      transformVertex(_vC.set(0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\r\n\r\n      _uvA.set(0, 0);\r\n\r\n      _uvB.set(1, 0);\r\n\r\n      _uvC.set(1, 1); // check first triangle\r\n\r\n      let intersect = raycaster.ray.intersectTriangle(_vA, _vB, _vC, false, _intersectPoint);\r\n\r\n      if (intersect === null) {\r\n        // check second triangle\r\n        transformVertex(_vB.set(-0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\r\n\r\n        _uvB.set(0, 1);\r\n\r\n        intersect = raycaster.ray.intersectTriangle(_vA, _vC, _vB, false, _intersectPoint);\r\n\r\n        if (intersect === null) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      const distance = raycaster.ray.origin.distanceTo(_intersectPoint);\r\n      if (distance < raycaster.near || distance > raycaster.far) return;\r\n      intersects.push({\r\n        distance: distance,\r\n        point: _intersectPoint.clone(),\r\n        uv: Triangle.getUV(_intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2()),\r\n        face: null,\r\n        object: this,\r\n      });\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      if (source.center !== undefined) this.center.copy(source.center);\r\n      this.material = source.material;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  Sprite.prototype.isSprite = true;\r\n\r\n  function transformVertex(vertexPosition, mvPosition, center, scale, sin, cos) {\r\n    // compute position in camera space\r\n    _alignedPosition.subVectors(vertexPosition, center).addScalar(0.5).multiply(scale); // to check if rotation is not zero\r\n\r\n    if (sin !== undefined) {\r\n      _rotatedPosition.x = cos * _alignedPosition.x - sin * _alignedPosition.y;\r\n      _rotatedPosition.y = sin * _alignedPosition.x + cos * _alignedPosition.y;\r\n    } else {\r\n      _rotatedPosition.copy(_alignedPosition);\r\n    }\r\n\r\n    vertexPosition.copy(mvPosition);\r\n    vertexPosition.x += _rotatedPosition.x;\r\n    vertexPosition.y += _rotatedPosition.y; // transform to world space\r\n\r\n    vertexPosition.applyMatrix4(_viewWorldMatrix);\r\n  }\r\n\r\n  const _v1$2 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _v2$1 = /*@__PURE__*/ new Vector3();\r\n\r\n  class LOD extends Object3D {\r\n    constructor() {\r\n      super();\r\n      this._currentLevel = 0;\r\n      this.type = 'LOD';\r\n      Object.defineProperties(this, {\r\n        levels: {\r\n          enumerable: true,\r\n          value: [],\r\n        },\r\n        isLOD: {\r\n          value: true,\r\n        },\r\n      });\r\n      this.autoUpdate = true;\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source, false);\r\n      const levels = source.levels;\r\n\r\n      for (let i = 0, l = levels.length; i < l; i++) {\r\n        const level = levels[i];\r\n        this.addLevel(level.object.clone(), level.distance);\r\n      }\r\n\r\n      this.autoUpdate = source.autoUpdate;\r\n      return this;\r\n    }\r\n\r\n    addLevel(object, distance = 0) {\r\n      distance = Math.abs(distance);\r\n      const levels = this.levels;\r\n      let l;\r\n\r\n      for (l = 0; l < levels.length; l++) {\r\n        if (distance < levels[l].distance) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      levels.splice(l, 0, {\r\n        distance: distance,\r\n        object: object,\r\n      });\r\n      this.add(object);\r\n      return this;\r\n    }\r\n\r\n    getCurrentLevel() {\r\n      return this._currentLevel;\r\n    }\r\n\r\n    getObjectForDistance(distance) {\r\n      const levels = this.levels;\r\n\r\n      if (levels.length > 0) {\r\n        let i, l;\r\n\r\n        for (i = 1, l = levels.length; i < l; i++) {\r\n          if (distance < levels[i].distance) {\r\n            break;\r\n          }\r\n        }\r\n\r\n        return levels[i - 1].object;\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    raycast(raycaster, intersects) {\r\n      const levels = this.levels;\r\n\r\n      if (levels.length > 0) {\r\n        _v1$2.setFromMatrixPosition(this.matrixWorld);\r\n\r\n        const distance = raycaster.ray.origin.distanceTo(_v1$2);\r\n        this.getObjectForDistance(distance).raycast(raycaster, intersects);\r\n      }\r\n    }\r\n\r\n    update(camera) {\r\n      const levels = this.levels;\r\n\r\n      if (levels.length > 1) {\r\n        _v1$2.setFromMatrixPosition(camera.matrixWorld);\r\n\r\n        _v2$1.setFromMatrixPosition(this.matrixWorld);\r\n\r\n        const distance = _v1$2.distanceTo(_v2$1) / camera.zoom;\r\n        levels[0].object.visible = true;\r\n        let i, l;\r\n\r\n        for (i = 1, l = levels.length; i < l; i++) {\r\n          if (distance >= levels[i].distance) {\r\n            levels[i - 1].object.visible = false;\r\n            levels[i].object.visible = true;\r\n          } else {\r\n            break;\r\n          }\r\n        }\r\n\r\n        this._currentLevel = i - 1;\r\n\r\n        for (; i < l; i++) {\r\n          levels[i].object.visible = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    toJSON(meta) {\r\n      const data = super.toJSON(meta);\r\n      if (this.autoUpdate === false) data.object.autoUpdate = false;\r\n      data.object.levels = [];\r\n      const levels = this.levels;\r\n\r\n      for (let i = 0, l = levels.length; i < l; i++) {\r\n        const level = levels[i];\r\n        data.object.levels.push({\r\n          object: level.object.uuid,\r\n          distance: level.distance,\r\n        });\r\n      }\r\n\r\n      return data;\r\n    }\r\n  }\r\n\r\n  const _basePosition = /*@__PURE__*/ new Vector3();\r\n\r\n  const _skinIndex = /*@__PURE__*/ new Vector4();\r\n\r\n  const _skinWeight = /*@__PURE__*/ new Vector4();\r\n\r\n  const _vector$5 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _matrix = /*@__PURE__*/ new Matrix4();\r\n\r\n  class SkinnedMesh extends Mesh {\r\n    constructor(geometry, material) {\r\n      super(geometry, material);\r\n      this.type = 'SkinnedMesh';\r\n      this.bindMode = 'attached';\r\n      this.bindMatrix = new Matrix4();\r\n      this.bindMatrixInverse = new Matrix4();\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.bindMode = source.bindMode;\r\n      this.bindMatrix.copy(source.bindMatrix);\r\n      this.bindMatrixInverse.copy(source.bindMatrixInverse);\r\n      this.skeleton = source.skeleton;\r\n      return this;\r\n    }\r\n\r\n    bind(skeleton, bindMatrix) {\r\n      this.skeleton = skeleton;\r\n\r\n      if (bindMatrix === undefined) {\r\n        this.updateMatrixWorld(true);\r\n        this.skeleton.calculateInverses();\r\n        bindMatrix = this.matrixWorld;\r\n      }\r\n\r\n      this.bindMatrix.copy(bindMatrix);\r\n      this.bindMatrixInverse.copy(bindMatrix).invert();\r\n    }\r\n\r\n    pose() {\r\n      this.skeleton.pose();\r\n    }\r\n\r\n    normalizeSkinWeights() {\r\n      const vector = new Vector4();\r\n      const skinWeight = this.geometry.attributes.skinWeight;\r\n\r\n      for (let i = 0, l = skinWeight.count; i < l; i++) {\r\n        vector.x = skinWeight.getX(i);\r\n        vector.y = skinWeight.getY(i);\r\n        vector.z = skinWeight.getZ(i);\r\n        vector.w = skinWeight.getW(i);\r\n        const scale = 1.0 / vector.manhattanLength();\r\n\r\n        if (scale !== Infinity) {\r\n          vector.multiplyScalar(scale);\r\n        } else {\r\n          vector.set(1, 0, 0, 0); // do something reasonable\r\n        }\r\n\r\n        skinWeight.setXYZW(i, vector.x, vector.y, vector.z, vector.w);\r\n      }\r\n    }\r\n\r\n    updateMatrixWorld(force) {\r\n      super.updateMatrixWorld(force);\r\n\r\n      if (this.bindMode === 'attached') {\r\n        this.bindMatrixInverse.copy(this.matrixWorld).invert();\r\n      } else if (this.bindMode === 'detached') {\r\n        this.bindMatrixInverse.copy(this.bindMatrix).invert();\r\n      } else {\r\n        console.warn('THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode);\r\n      }\r\n    }\r\n\r\n    boneTransform(index, target) {\r\n      const skeleton = this.skeleton;\r\n      const geometry = this.geometry;\r\n\r\n      _skinIndex.fromBufferAttribute(geometry.attributes.skinIndex, index);\r\n\r\n      _skinWeight.fromBufferAttribute(geometry.attributes.skinWeight, index);\r\n\r\n      _basePosition\r\n        .fromBufferAttribute(geometry.attributes.position, index)\r\n        .applyMatrix4(this.bindMatrix);\r\n\r\n      target.set(0, 0, 0);\r\n\r\n      for (let i = 0; i < 4; i++) {\r\n        const weight = _skinWeight.getComponent(i);\r\n\r\n        if (weight !== 0) {\r\n          const boneIndex = _skinIndex.getComponent(i);\r\n\r\n          _matrix.multiplyMatrices(\r\n            skeleton.bones[boneIndex].matrixWorld,\r\n            skeleton.boneInverses[boneIndex],\r\n          );\r\n\r\n          target.addScaledVector(_vector$5.copy(_basePosition).applyMatrix4(_matrix), weight);\r\n        }\r\n      }\r\n\r\n      return target.applyMatrix4(this.bindMatrixInverse);\r\n    }\r\n  }\r\n\r\n  SkinnedMesh.prototype.isSkinnedMesh = true;\r\n\r\n  class Bone extends Object3D {\r\n    constructor() {\r\n      super();\r\n      this.type = 'Bone';\r\n    }\r\n  }\r\n\r\n  Bone.prototype.isBone = true;\r\n\r\n  class DataTexture extends Texture {\r\n    constructor(\r\n      data,\r\n      width,\r\n      height,\r\n      format,\r\n      type,\r\n      mapping,\r\n      wrapS,\r\n      wrapT,\r\n      magFilter,\r\n      minFilter,\r\n      anisotropy,\r\n      encoding,\r\n    ) {\r\n      super(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\r\n      this.image = {\r\n        data: data || null,\r\n        width: width || 1,\r\n        height: height || 1,\r\n      };\r\n      this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\r\n      this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\r\n      this.generateMipmaps = false;\r\n      this.flipY = false;\r\n      this.unpackAlignment = 1;\r\n      this.needsUpdate = true;\r\n    }\r\n  }\r\n\r\n  DataTexture.prototype.isDataTexture = true;\r\n\r\n  const _offsetMatrix = /*@__PURE__*/ new Matrix4();\r\n\r\n  const _identityMatrix = /*@__PURE__*/ new Matrix4();\r\n\r\n  class Skeleton {\r\n    constructor(bones = [], boneInverses = []) {\r\n      this.uuid = generateUUID();\r\n      this.bones = bones.slice(0);\r\n      this.boneInverses = boneInverses;\r\n      this.boneMatrices = null;\r\n      this.boneTexture = null;\r\n      this.boneTextureSize = 0;\r\n      this.frame = -1;\r\n      this.init();\r\n    }\r\n\r\n    init() {\r\n      const bones = this.bones;\r\n      const boneInverses = this.boneInverses;\r\n      this.boneMatrices = new Float32Array(bones.length * 16); // calculate inverse bone matrices if necessary\r\n\r\n      if (boneInverses.length === 0) {\r\n        this.calculateInverses();\r\n      } else {\r\n        // handle special case\r\n        if (bones.length !== boneInverses.length) {\r\n          console.warn(\r\n            'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.',\r\n          );\r\n          this.boneInverses = [];\r\n\r\n          for (let i = 0, il = this.bones.length; i < il; i++) {\r\n            this.boneInverses.push(new Matrix4());\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    calculateInverses() {\r\n      this.boneInverses.length = 0;\r\n\r\n      for (let i = 0, il = this.bones.length; i < il; i++) {\r\n        const inverse = new Matrix4();\r\n\r\n        if (this.bones[i]) {\r\n          inverse.copy(this.bones[i].matrixWorld).invert();\r\n        }\r\n\r\n        this.boneInverses.push(inverse);\r\n      }\r\n    }\r\n\r\n    pose() {\r\n      // recover the bind-time world matrices\r\n      for (let i = 0, il = this.bones.length; i < il; i++) {\r\n        const bone = this.bones[i];\r\n\r\n        if (bone) {\r\n          bone.matrixWorld.copy(this.boneInverses[i]).invert();\r\n        }\r\n      } // compute the local matrices, positions, rotations and scales\r\n\r\n      for (let i = 0, il = this.bones.length; i < il; i++) {\r\n        const bone = this.bones[i];\r\n\r\n        if (bone) {\r\n          if (bone.parent && bone.parent.isBone) {\r\n            bone.matrix.copy(bone.parent.matrixWorld).invert();\r\n            bone.matrix.multiply(bone.matrixWorld);\r\n          } else {\r\n            bone.matrix.copy(bone.matrixWorld);\r\n          }\r\n\r\n          bone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\r\n        }\r\n      }\r\n    }\r\n\r\n    update() {\r\n      const bones = this.bones;\r\n      const boneInverses = this.boneInverses;\r\n      const boneMatrices = this.boneMatrices;\r\n      const boneTexture = this.boneTexture; // flatten bone matrices to array\r\n\r\n      for (let i = 0, il = bones.length; i < il; i++) {\r\n        // compute the offset between the current and the original transform\r\n        const matrix = bones[i] ? bones[i].matrixWorld : _identityMatrix;\r\n\r\n        _offsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\r\n\r\n        _offsetMatrix.toArray(boneMatrices, i * 16);\r\n      }\r\n\r\n      if (boneTexture !== null) {\r\n        boneTexture.needsUpdate = true;\r\n      }\r\n    }\r\n\r\n    clone() {\r\n      return new Skeleton(this.bones, this.boneInverses);\r\n    }\r\n\r\n    computeBoneTexture() {\r\n      // layout (1 matrix = 4 pixels)\r\n      //\t\t\tRGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n      //\twith\t8x8\tpixel texture max\t 16 bones * 4 pixels =\t(8 * 8)\r\n      //\t\t\t 16x16 pixel texture max\t 64 bones * 4 pixels = (16 * 16)\r\n      //\t\t\t 32x32 pixel texture max\t256 bones * 4 pixels = (32 * 32)\r\n      //\t\t\t 64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n      let size = Math.sqrt(this.bones.length * 4); // 4 pixels needed for 1 matrix\r\n\r\n      size = ceilPowerOfTwo(size);\r\n      size = Math.max(size, 4);\r\n      const boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\r\n\r\n      boneMatrices.set(this.boneMatrices); // copy current values\r\n\r\n      const boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\r\n      this.boneMatrices = boneMatrices;\r\n      this.boneTexture = boneTexture;\r\n      this.boneTextureSize = size;\r\n      return this;\r\n    }\r\n\r\n    getBoneByName(name) {\r\n      for (let i = 0, il = this.bones.length; i < il; i++) {\r\n        const bone = this.bones[i];\r\n\r\n        if (bone.name === name) {\r\n          return bone;\r\n        }\r\n      }\r\n\r\n      return undefined;\r\n    }\r\n\r\n    dispose() {\r\n      if (this.boneTexture !== null) {\r\n        this.boneTexture.dispose();\r\n        this.boneTexture = null;\r\n      }\r\n    }\r\n\r\n    fromJSON(json, bones) {\r\n      this.uuid = json.uuid;\r\n\r\n      for (let i = 0, l = json.bones.length; i < l; i++) {\r\n        const uuid = json.bones[i];\r\n        let bone = bones[uuid];\r\n\r\n        if (bone === undefined) {\r\n          console.warn('THREE.Skeleton: No bone found with UUID:', uuid);\r\n          bone = new Bone();\r\n        }\r\n\r\n        this.bones.push(bone);\r\n        this.boneInverses.push(new Matrix4().fromArray(json.boneInverses[i]));\r\n      }\r\n\r\n      this.init();\r\n      return this;\r\n    }\r\n\r\n    toJSON() {\r\n      const data = {\r\n        metadata: {\r\n          version: 4.5,\r\n          type: 'Skeleton',\r\n          generator: 'Skeleton.toJSON',\r\n        },\r\n        bones: [],\r\n        boneInverses: [],\r\n      };\r\n      data.uuid = this.uuid;\r\n      const bones = this.bones;\r\n      const boneInverses = this.boneInverses;\r\n\r\n      for (let i = 0, l = bones.length; i < l; i++) {\r\n        const bone = bones[i];\r\n        data.bones.push(bone.uuid);\r\n        const boneInverse = boneInverses[i];\r\n        data.boneInverses.push(boneInverse.toArray());\r\n      }\r\n\r\n      return data;\r\n    }\r\n  }\r\n\r\n  const _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\r\n\r\n  const _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\r\n\r\n  const _instanceIntersects = [];\r\n\r\n  const _mesh = /*@__PURE__*/ new Mesh();\r\n\r\n  class InstancedMesh extends Mesh {\r\n    constructor(geometry, material, count) {\r\n      super(geometry, material);\r\n      this.instanceMatrix = new BufferAttribute(new Float32Array(count * 16), 16);\r\n      this.instanceColor = null;\r\n      this.count = count;\r\n      this.frustumCulled = false;\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.instanceMatrix.copy(source.instanceMatrix);\r\n      if (source.instanceColor !== null) this.instanceColor = source.instanceColor.clone();\r\n      this.count = source.count;\r\n      return this;\r\n    }\r\n\r\n    getColorAt(index, color) {\r\n      color.fromArray(this.instanceColor.array, index * 3);\r\n    }\r\n\r\n    getMatrixAt(index, matrix) {\r\n      matrix.fromArray(this.instanceMatrix.array, index * 16);\r\n    }\r\n\r\n    raycast(raycaster, intersects) {\r\n      const matrixWorld = this.matrixWorld;\r\n      const raycastTimes = this.count;\r\n      _mesh.geometry = this.geometry;\r\n      _mesh.material = this.material;\r\n      if (_mesh.material === undefined) return;\r\n\r\n      for (let instanceId = 0; instanceId < raycastTimes; instanceId++) {\r\n        // calculate the world matrix for each instance\r\n        this.getMatrixAt(instanceId, _instanceLocalMatrix);\r\n\r\n        _instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix); // the mesh represents this single instance\r\n\r\n        _mesh.matrixWorld = _instanceWorldMatrix;\r\n\r\n        _mesh.raycast(raycaster, _instanceIntersects); // process the result of raycast\r\n\r\n        for (let i = 0, l = _instanceIntersects.length; i < l; i++) {\r\n          const intersect = _instanceIntersects[i];\r\n          intersect.instanceId = instanceId;\r\n          intersect.object = this;\r\n          intersects.push(intersect);\r\n        }\r\n\r\n        _instanceIntersects.length = 0;\r\n      }\r\n    }\r\n\r\n    setColorAt(index, color) {\r\n      if (this.instanceColor === null) {\r\n        this.instanceColor = new BufferAttribute(new Float32Array(this.count * 3), 3);\r\n      }\r\n\r\n      color.toArray(this.instanceColor.array, index * 3);\r\n    }\r\n\r\n    setMatrixAt(index, matrix) {\r\n      matrix.toArray(this.instanceMatrix.array, index * 16);\r\n    }\r\n\r\n    updateMorphTargets() {}\r\n\r\n    dispose() {\r\n      this.dispatchEvent({\r\n        type: 'dispose',\r\n      });\r\n    }\r\n  }\r\n\r\n  InstancedMesh.prototype.isInstancedMesh = true;\r\n\r\n  /**\r\n   * parameters = {\r\n   *\tcolor: <hex>,\r\n   *\topacity: <float>,\r\n   *\r\n   *\tlinewidth: <float>,\r\n   *\tlinecap: \"round\",\r\n   *\tlinejoin: \"round\"\r\n   * }\r\n   */\r\n\r\n  class LineBasicMaterial extends Material {\r\n    constructor(parameters) {\r\n      super();\r\n      this.type = 'LineBasicMaterial';\r\n      this.color = new Color(0xffffff);\r\n      this.linewidth = 1;\r\n      this.linecap = 'round';\r\n      this.linejoin = 'round';\r\n      this.morphTargets = false;\r\n      this.setValues(parameters);\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.color.copy(source.color);\r\n      this.linewidth = source.linewidth;\r\n      this.linecap = source.linecap;\r\n      this.linejoin = source.linejoin;\r\n      this.morphTargets = source.morphTargets;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  LineBasicMaterial.prototype.isLineBasicMaterial = true;\r\n\r\n  const _start$1 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _end$1 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\r\n\r\n  const _ray$1 = /*@__PURE__*/ new Ray();\r\n\r\n  const _sphere$1 = /*@__PURE__*/ new Sphere();\r\n\r\n  class Line extends Object3D {\r\n    constructor(geometry = new BufferGeometry(), material = new LineBasicMaterial()) {\r\n      super();\r\n      this.type = 'Line';\r\n      this.geometry = geometry;\r\n      this.material = material;\r\n      this.updateMorphTargets();\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.material = source.material;\r\n      this.geometry = source.geometry;\r\n      return this;\r\n    }\r\n\r\n    computeLineDistances() {\r\n      const geometry = this.geometry;\r\n\r\n      if (geometry.isBufferGeometry) {\r\n        // we assume non-indexed geometry\r\n        if (geometry.index === null) {\r\n          const positionAttribute = geometry.attributes.position;\r\n          const lineDistances = [0];\r\n\r\n          for (let i = 1, l = positionAttribute.count; i < l; i++) {\r\n            _start$1.fromBufferAttribute(positionAttribute, i - 1);\r\n\r\n            _end$1.fromBufferAttribute(positionAttribute, i);\r\n\r\n            lineDistances[i] = lineDistances[i - 1];\r\n            lineDistances[i] += _start$1.distanceTo(_end$1);\r\n          }\r\n\r\n          geometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\r\n        } else {\r\n          console.warn(\r\n            'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.',\r\n          );\r\n        }\r\n      } else if (geometry.isGeometry) {\r\n        console.error(\r\n          'THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.',\r\n        );\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    raycast(raycaster, intersects) {\r\n      const geometry = this.geometry;\r\n      const matrixWorld = this.matrixWorld;\r\n      const threshold = raycaster.params.Line.threshold;\r\n      const drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\r\n\r\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\r\n\r\n      _sphere$1.copy(geometry.boundingSphere);\r\n\r\n      _sphere$1.applyMatrix4(matrixWorld);\r\n\r\n      _sphere$1.radius += threshold;\r\n      if (raycaster.ray.intersectsSphere(_sphere$1) === false) return; //\r\n\r\n      _inverseMatrix$1.copy(matrixWorld).invert();\r\n\r\n      _ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);\r\n\r\n      const localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\r\n      const localThresholdSq = localThreshold * localThreshold;\r\n      const vStart = new Vector3();\r\n      const vEnd = new Vector3();\r\n      const interSegment = new Vector3();\r\n      const interRay = new Vector3();\r\n      const step = this.isLineSegments ? 2 : 1;\r\n\r\n      if (geometry.isBufferGeometry) {\r\n        const index = geometry.index;\r\n        const attributes = geometry.attributes;\r\n        const positionAttribute = attributes.position;\r\n\r\n        if (index !== null) {\r\n          const start = Math.max(0, drawRange.start);\r\n          const end = Math.min(index.count, drawRange.start + drawRange.count);\r\n\r\n          for (let i = start, l = end - 1; i < l; i += step) {\r\n            const a = index.getX(i);\r\n            const b = index.getX(i + 1);\r\n            vStart.fromBufferAttribute(positionAttribute, a);\r\n            vEnd.fromBufferAttribute(positionAttribute, b);\r\n\r\n            const distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\r\n\r\n            if (distSq > localThresholdSq) continue;\r\n            interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\r\n\r\n            const distance = raycaster.ray.origin.distanceTo(interRay);\r\n            if (distance < raycaster.near || distance > raycaster.far) continue;\r\n            intersects.push({\r\n              distance: distance,\r\n              // What do we want? intersection point on the ray or on the segment??\r\n              // point: raycaster.ray.at( distance ),\r\n              point: interSegment.clone().applyMatrix4(this.matrixWorld),\r\n              index: i,\r\n              face: null,\r\n              faceIndex: null,\r\n              object: this,\r\n            });\r\n          }\r\n        } else {\r\n          const start = Math.max(0, drawRange.start);\r\n          const end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\r\n\r\n          for (let i = start, l = end - 1; i < l; i += step) {\r\n            vStart.fromBufferAttribute(positionAttribute, i);\r\n            vEnd.fromBufferAttribute(positionAttribute, i + 1);\r\n\r\n            const distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\r\n\r\n            if (distSq > localThresholdSq) continue;\r\n            interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\r\n\r\n            const distance = raycaster.ray.origin.distanceTo(interRay);\r\n            if (distance < raycaster.near || distance > raycaster.far) continue;\r\n            intersects.push({\r\n              distance: distance,\r\n              // What do we want? intersection point on the ray or on the segment??\r\n              // point: raycaster.ray.at( distance ),\r\n              point: interSegment.clone().applyMatrix4(this.matrixWorld),\r\n              index: i,\r\n              face: null,\r\n              faceIndex: null,\r\n              object: this,\r\n            });\r\n          }\r\n        }\r\n      } else if (geometry.isGeometry) {\r\n        console.error(\r\n          'THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.',\r\n        );\r\n      }\r\n    }\r\n\r\n    updateMorphTargets() {\r\n      const geometry = this.geometry;\r\n\r\n      if (geometry.isBufferGeometry) {\r\n        const morphAttributes = geometry.morphAttributes;\r\n        const keys = Object.keys(morphAttributes);\r\n\r\n        if (keys.length > 0) {\r\n          const morphAttribute = morphAttributes[keys[0]];\r\n\r\n          if (morphAttribute !== undefined) {\r\n            this.morphTargetInfluences = [];\r\n            this.morphTargetDictionary = {};\r\n\r\n            for (let m = 0, ml = morphAttribute.length; m < ml; m++) {\r\n              const name = morphAttribute[m].name || String(m);\r\n              this.morphTargetInfluences.push(0);\r\n              this.morphTargetDictionary[name] = m;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        const morphTargets = geometry.morphTargets;\r\n\r\n        if (morphTargets !== undefined && morphTargets.length > 0) {\r\n          console.error(\r\n            'THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.',\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  Line.prototype.isLine = true;\r\n\r\n  const _start = /*@__PURE__*/ new Vector3();\r\n\r\n  const _end = /*@__PURE__*/ new Vector3();\r\n\r\n  class LineSegments extends Line {\r\n    constructor(geometry, material) {\r\n      super(geometry, material);\r\n      this.type = 'LineSegments';\r\n    }\r\n\r\n    computeLineDistances() {\r\n      const geometry = this.geometry;\r\n\r\n      if (geometry.isBufferGeometry) {\r\n        // we assume non-indexed geometry\r\n        if (geometry.index === null) {\r\n          const positionAttribute = geometry.attributes.position;\r\n          const lineDistances = [];\r\n\r\n          for (let i = 0, l = positionAttribute.count; i < l; i += 2) {\r\n            _start.fromBufferAttribute(positionAttribute, i);\r\n\r\n            _end.fromBufferAttribute(positionAttribute, i + 1);\r\n\r\n            lineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\r\n            lineDistances[i + 1] = lineDistances[i] + _start.distanceTo(_end);\r\n          }\r\n\r\n          geometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\r\n        } else {\r\n          console.warn(\r\n            'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.',\r\n          );\r\n        }\r\n      } else if (geometry.isGeometry) {\r\n        console.error(\r\n          'THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.',\r\n        );\r\n      }\r\n\r\n      return this;\r\n    }\r\n  }\r\n\r\n  LineSegments.prototype.isLineSegments = true;\r\n\r\n  class LineLoop extends Line {\r\n    constructor(geometry, material) {\r\n      super(geometry, material);\r\n      this.type = 'LineLoop';\r\n    }\r\n  }\r\n\r\n  LineLoop.prototype.isLineLoop = true;\r\n\r\n  /**\r\n   * parameters = {\r\n   *\tcolor: <hex>,\r\n   *\topacity: <float>,\r\n   *\tmap: new THREE.Texture( <Image> ),\r\n   *\talphaMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tsize: <float>,\r\n   *\tsizeAttenuation: <bool>\r\n   *\r\n   *\tmorphTargets: <bool>\r\n   * }\r\n   */\r\n\r\n  class PointsMaterial extends Material {\r\n    constructor(parameters) {\r\n      super();\r\n      this.type = 'PointsMaterial';\r\n      this.color = new Color(0xffffff);\r\n      this.map = null;\r\n      this.alphaMap = null;\r\n      this.size = 1;\r\n      this.sizeAttenuation = true;\r\n      this.morphTargets = false;\r\n      this.setValues(parameters);\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.color.copy(source.color);\r\n      this.map = source.map;\r\n      this.alphaMap = source.alphaMap;\r\n      this.size = source.size;\r\n      this.sizeAttenuation = source.sizeAttenuation;\r\n      this.morphTargets = source.morphTargets;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  PointsMaterial.prototype.isPointsMaterial = true;\r\n\r\n  const _inverseMatrix = /*@__PURE__*/ new Matrix4();\r\n\r\n  const _ray = /*@__PURE__*/ new Ray();\r\n\r\n  const _sphere = /*@__PURE__*/ new Sphere();\r\n\r\n  const _position$2 = /*@__PURE__*/ new Vector3();\r\n\r\n  class Points extends Object3D {\r\n    constructor(geometry = new BufferGeometry(), material = new PointsMaterial()) {\r\n      super();\r\n      this.type = 'Points';\r\n      this.geometry = geometry;\r\n      this.material = material;\r\n      this.updateMorphTargets();\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.material = source.material;\r\n      this.geometry = source.geometry;\r\n      return this;\r\n    }\r\n\r\n    raycast(raycaster, intersects) {\r\n      const geometry = this.geometry;\r\n      const matrixWorld = this.matrixWorld;\r\n      const threshold = raycaster.params.Points.threshold;\r\n      const drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\r\n\r\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\r\n\r\n      _sphere.copy(geometry.boundingSphere);\r\n\r\n      _sphere.applyMatrix4(matrixWorld);\r\n\r\n      _sphere.radius += threshold;\r\n      if (raycaster.ray.intersectsSphere(_sphere) === false) return; //\r\n\r\n      _inverseMatrix.copy(matrixWorld).invert();\r\n\r\n      _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\r\n\r\n      const localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\r\n      const localThresholdSq = localThreshold * localThreshold;\r\n\r\n      if (geometry.isBufferGeometry) {\r\n        const index = geometry.index;\r\n        const attributes = geometry.attributes;\r\n        const positionAttribute = attributes.position;\r\n\r\n        if (index !== null) {\r\n          const start = Math.max(0, drawRange.start);\r\n          const end = Math.min(index.count, drawRange.start + drawRange.count);\r\n\r\n          for (let i = start, il = end; i < il; i++) {\r\n            const a = index.getX(i);\r\n\r\n            _position$2.fromBufferAttribute(positionAttribute, a);\r\n\r\n            testPoint(_position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this);\r\n          }\r\n        } else {\r\n          const start = Math.max(0, drawRange.start);\r\n          const end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\r\n\r\n          for (let i = start, l = end; i < l; i++) {\r\n            _position$2.fromBufferAttribute(positionAttribute, i);\r\n\r\n            testPoint(_position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this);\r\n          }\r\n        }\r\n      } else {\r\n        console.error(\r\n          'THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.',\r\n        );\r\n      }\r\n    }\r\n\r\n    updateMorphTargets() {\r\n      const geometry = this.geometry;\r\n\r\n      if (geometry.isBufferGeometry) {\r\n        const morphAttributes = geometry.morphAttributes;\r\n        const keys = Object.keys(morphAttributes);\r\n\r\n        if (keys.length > 0) {\r\n          const morphAttribute = morphAttributes[keys[0]];\r\n\r\n          if (morphAttribute !== undefined) {\r\n            this.morphTargetInfluences = [];\r\n            this.morphTargetDictionary = {};\r\n\r\n            for (let m = 0, ml = morphAttribute.length; m < ml; m++) {\r\n              const name = morphAttribute[m].name || String(m);\r\n              this.morphTargetInfluences.push(0);\r\n              this.morphTargetDictionary[name] = m;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        const morphTargets = geometry.morphTargets;\r\n\r\n        if (morphTargets !== undefined && morphTargets.length > 0) {\r\n          console.error(\r\n            'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.',\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  Points.prototype.isPoints = true;\r\n\r\n  function testPoint(point, index, localThresholdSq, matrixWorld, raycaster, intersects, object) {\r\n    const rayPointDistanceSq = _ray.distanceSqToPoint(point);\r\n\r\n    if (rayPointDistanceSq < localThresholdSq) {\r\n      const intersectPoint = new Vector3();\r\n\r\n      _ray.closestPointToPoint(point, intersectPoint);\r\n\r\n      intersectPoint.applyMatrix4(matrixWorld);\r\n      const distance = raycaster.ray.origin.distanceTo(intersectPoint);\r\n      if (distance < raycaster.near || distance > raycaster.far) return;\r\n      intersects.push({\r\n        distance: distance,\r\n        distanceToRay: Math.sqrt(rayPointDistanceSq),\r\n        point: intersectPoint,\r\n        index: index,\r\n        face: null,\r\n        object: object,\r\n      });\r\n    }\r\n  }\r\n\r\n  class VideoTexture extends Texture {\r\n    constructor(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\r\n      super(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\r\n      this.format = format !== undefined ? format : RGBFormat;\r\n      this.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\r\n      this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\r\n      this.generateMipmaps = false;\r\n      const scope = this;\r\n\r\n      function updateVideo() {\r\n        scope.needsUpdate = true;\r\n        video.requestVideoFrameCallback(updateVideo);\r\n      }\r\n\r\n      if ('requestVideoFrameCallback' in video) {\r\n        video.requestVideoFrameCallback(updateVideo);\r\n      }\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor(this.image).copy(this);\r\n    }\r\n\r\n    update() {\r\n      const video = this.image;\r\n      const hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\r\n\r\n      if (hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA) {\r\n        this.needsUpdate = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  VideoTexture.prototype.isVideoTexture = true;\r\n\r\n  class CompressedTexture extends Texture {\r\n    constructor(\r\n      mipmaps,\r\n      width,\r\n      height,\r\n      format,\r\n      type,\r\n      mapping,\r\n      wrapS,\r\n      wrapT,\r\n      magFilter,\r\n      minFilter,\r\n      anisotropy,\r\n      encoding,\r\n    ) {\r\n      super(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\r\n      this.image = {\r\n        width: width,\r\n        height: height,\r\n      };\r\n      this.mipmaps = mipmaps; // no flipping for cube textures\r\n      // (also flipping doesn't work for compressed textures )\r\n\r\n      this.flipY = false; // can't generate mipmaps for compressed textures\r\n      // mips must be embedded in DDS files\r\n\r\n      this.generateMipmaps = false;\r\n    }\r\n  }\r\n\r\n  CompressedTexture.prototype.isCompressedTexture = true;\r\n\r\n  class CanvasTexture extends Texture {\r\n    constructor(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\r\n      super(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\r\n      this.needsUpdate = true;\r\n    }\r\n  }\r\n\r\n  CanvasTexture.prototype.isCanvasTexture = true;\r\n\r\n  class DepthTexture extends Texture {\r\n    constructor(\r\n      width,\r\n      height,\r\n      type,\r\n      mapping,\r\n      wrapS,\r\n      wrapT,\r\n      magFilter,\r\n      minFilter,\r\n      anisotropy,\r\n      format,\r\n    ) {\r\n      format = format !== undefined ? format : DepthFormat;\r\n\r\n      if (format !== DepthFormat && format !== DepthStencilFormat) {\r\n        throw new Error(\r\n          'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat',\r\n        );\r\n      }\r\n\r\n      if (type === undefined && format === DepthFormat) type = UnsignedShortType;\r\n      if (type === undefined && format === DepthStencilFormat) type = UnsignedInt248Type;\r\n      super(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\r\n      this.image = {\r\n        width: width,\r\n        height: height,\r\n      };\r\n      this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\r\n      this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\r\n      this.flipY = false;\r\n      this.generateMipmaps = false;\r\n    }\r\n  }\r\n\r\n  DepthTexture.prototype.isDepthTexture = true;\r\n\r\n  class CircleGeometry extends BufferGeometry {\r\n    constructor(radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2) {\r\n      super();\r\n      this.type = 'CircleGeometry';\r\n      this.parameters = {\r\n        radius: radius,\r\n        segments: segments,\r\n        thetaStart: thetaStart,\r\n        thetaLength: thetaLength,\r\n      };\r\n      segments = Math.max(3, segments); // buffers\r\n\r\n      const indices = [];\r\n      const vertices = [];\r\n      const normals = [];\r\n      const uvs = []; // helper variables\r\n\r\n      const vertex = new Vector3();\r\n      const uv = new Vector2(); // center point\r\n\r\n      vertices.push(0, 0, 0);\r\n      normals.push(0, 0, 1);\r\n      uvs.push(0.5, 0.5);\r\n\r\n      for (let s = 0, i = 3; s <= segments; s++, i += 3) {\r\n        const segment = thetaStart + (s / segments) * thetaLength; // vertex\r\n\r\n        vertex.x = radius * Math.cos(segment);\r\n        vertex.y = radius * Math.sin(segment);\r\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\r\n\r\n        normals.push(0, 0, 1); // uvs\r\n\r\n        uv.x = (vertices[i] / radius + 1) / 2;\r\n        uv.y = (vertices[i + 1] / radius + 1) / 2;\r\n        uvs.push(uv.x, uv.y);\r\n      } // indices\r\n\r\n      for (let i = 1; i <= segments; i++) {\r\n        indices.push(i, i + 1, 0);\r\n      } // build geometry\r\n\r\n      this.setIndex(indices);\r\n      this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n      this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n      this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n    }\r\n  }\r\n\r\n  class CylinderGeometry extends BufferGeometry {\r\n    constructor(\r\n      radiusTop = 1,\r\n      radiusBottom = 1,\r\n      height = 1,\r\n      radialSegments = 8,\r\n      heightSegments = 1,\r\n      openEnded = false,\r\n      thetaStart = 0,\r\n      thetaLength = Math.PI * 2,\r\n    ) {\r\n      super();\r\n      this.type = 'CylinderGeometry';\r\n      this.parameters = {\r\n        radiusTop: radiusTop,\r\n        radiusBottom: radiusBottom,\r\n        height: height,\r\n        radialSegments: radialSegments,\r\n        heightSegments: heightSegments,\r\n        openEnded: openEnded,\r\n        thetaStart: thetaStart,\r\n        thetaLength: thetaLength,\r\n      };\r\n      const scope = this;\r\n      radialSegments = Math.floor(radialSegments);\r\n      heightSegments = Math.floor(heightSegments); // buffers\r\n\r\n      const indices = [];\r\n      const vertices = [];\r\n      const normals = [];\r\n      const uvs = []; // helper variables\r\n\r\n      let index = 0;\r\n      const indexArray = [];\r\n      const halfHeight = height / 2;\r\n      let groupStart = 0; // generate geometry\r\n\r\n      generateTorso();\r\n\r\n      if (openEnded === false) {\r\n        if (radiusTop > 0) generateCap(true);\r\n        if (radiusBottom > 0) generateCap(false);\r\n      } // build geometry\r\n\r\n      this.setIndex(indices);\r\n      this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n      this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n      this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n\r\n      function generateTorso() {\r\n        const normal = new Vector3();\r\n        const vertex = new Vector3();\r\n        let groupCount = 0; // this will be used to calculate the normal\r\n\r\n        const slope = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\r\n\r\n        for (let y = 0; y <= heightSegments; y++) {\r\n          const indexRow = [];\r\n          const v = y / heightSegments; // calculate the radius of the current row\r\n\r\n          const radius = v * (radiusBottom - radiusTop) + radiusTop;\r\n\r\n          for (let x = 0; x <= radialSegments; x++) {\r\n            const u = x / radialSegments;\r\n            const theta = u * thetaLength + thetaStart;\r\n            const sinTheta = Math.sin(theta);\r\n            const cosTheta = Math.cos(theta); // vertex\r\n\r\n            vertex.x = radius * sinTheta;\r\n            vertex.y = -v * height + halfHeight;\r\n            vertex.z = radius * cosTheta;\r\n            vertices.push(vertex.x, vertex.y, vertex.z); // normal\r\n\r\n            normal.set(sinTheta, slope, cosTheta).normalize();\r\n            normals.push(normal.x, normal.y, normal.z); // uv\r\n\r\n            uvs.push(u, 1 - v); // save index of vertex in respective row\r\n\r\n            indexRow.push(index++);\r\n          } // now save vertices of the row in our index array\r\n\r\n          indexArray.push(indexRow);\r\n        } // generate indices\r\n\r\n        for (let x = 0; x < radialSegments; x++) {\r\n          for (let y = 0; y < heightSegments; y++) {\r\n            // we use the index array to access the correct indices\r\n            const a = indexArray[y][x];\r\n            const b = indexArray[y + 1][x];\r\n            const c = indexArray[y + 1][x + 1];\r\n            const d = indexArray[y][x + 1]; // faces\r\n\r\n            indices.push(a, b, d);\r\n            indices.push(b, c, d); // update group counter\r\n\r\n            groupCount += 6;\r\n          }\r\n        } // add a group to the geometry. this will ensure multi material support\r\n\r\n        scope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\r\n\r\n        groupStart += groupCount;\r\n      }\r\n\r\n      function generateCap(top) {\r\n        // save the index of the first center vertex\r\n        const centerIndexStart = index;\r\n        const uv = new Vector2();\r\n        const vertex = new Vector3();\r\n        let groupCount = 0;\r\n        const radius = top === true ? radiusTop : radiusBottom;\r\n        const sign = top === true ? 1 : -1; // first we generate the center vertex data of the cap.\r\n        // because the geometry needs one set of uvs per face,\r\n        // we must generate a center vertex per face/segment\r\n\r\n        for (let x = 1; x <= radialSegments; x++) {\r\n          // vertex\r\n          vertices.push(0, halfHeight * sign, 0); // normal\r\n\r\n          normals.push(0, sign, 0); // uv\r\n\r\n          uvs.push(0.5, 0.5); // increase index\r\n\r\n          index++;\r\n        } // save the index of the last center vertex\r\n\r\n        const centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\r\n\r\n        for (let x = 0; x <= radialSegments; x++) {\r\n          const u = x / radialSegments;\r\n          const theta = u * thetaLength + thetaStart;\r\n          const cosTheta = Math.cos(theta);\r\n          const sinTheta = Math.sin(theta); // vertex\r\n\r\n          vertex.x = radius * sinTheta;\r\n          vertex.y = halfHeight * sign;\r\n          vertex.z = radius * cosTheta;\r\n          vertices.push(vertex.x, vertex.y, vertex.z); // normal\r\n\r\n          normals.push(0, sign, 0); // uv\r\n\r\n          uv.x = cosTheta * 0.5 + 0.5;\r\n          uv.y = sinTheta * 0.5 * sign + 0.5;\r\n          uvs.push(uv.x, uv.y); // increase index\r\n\r\n          index++;\r\n        } // generate indices\r\n\r\n        for (let x = 0; x < radialSegments; x++) {\r\n          const c = centerIndexStart + x;\r\n          const i = centerIndexEnd + x;\r\n\r\n          if (top === true) {\r\n            // face top\r\n            indices.push(i, i + 1, c);\r\n          } else {\r\n            // face bottom\r\n            indices.push(i + 1, i, c);\r\n          }\r\n\r\n          groupCount += 3;\r\n        } // add a group to the geometry. this will ensure multi material support\r\n\r\n        scope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\r\n\r\n        groupStart += groupCount;\r\n      }\r\n    }\r\n  }\r\n\r\n  class ConeGeometry extends CylinderGeometry {\r\n    constructor(\r\n      radius = 1,\r\n      height = 1,\r\n      radialSegments = 8,\r\n      heightSegments = 1,\r\n      openEnded = false,\r\n      thetaStart = 0,\r\n      thetaLength = Math.PI * 2,\r\n    ) {\r\n      super(0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\r\n      this.type = 'ConeGeometry';\r\n      this.parameters = {\r\n        radius: radius,\r\n        height: height,\r\n        radialSegments: radialSegments,\r\n        heightSegments: heightSegments,\r\n        openEnded: openEnded,\r\n        thetaStart: thetaStart,\r\n        thetaLength: thetaLength,\r\n      };\r\n    }\r\n  }\r\n\r\n  class PolyhedronGeometry extends BufferGeometry {\r\n    constructor(vertices, indices, radius = 1, detail = 0) {\r\n      super();\r\n      this.type = 'PolyhedronGeometry';\r\n      this.parameters = {\r\n        vertices: vertices,\r\n        indices: indices,\r\n        radius: radius,\r\n        detail: detail,\r\n      }; // default buffer data\r\n\r\n      const vertexBuffer = [];\r\n      const uvBuffer = []; // the subdivision creates the vertex buffer data\r\n\r\n      subdivide(detail); // all vertices should lie on a conceptual sphere with a given radius\r\n\r\n      applyRadius(radius); // finally, create the uv data\r\n\r\n      generateUVs(); // build non-indexed geometry\r\n\r\n      this.setAttribute('position', new Float32BufferAttribute(vertexBuffer, 3));\r\n      this.setAttribute('normal', new Float32BufferAttribute(vertexBuffer.slice(), 3));\r\n      this.setAttribute('uv', new Float32BufferAttribute(uvBuffer, 2));\r\n\r\n      if (detail === 0) {\r\n        this.computeVertexNormals(); // flat normals\r\n      } else {\r\n        this.normalizeNormals(); // smooth normals\r\n      } // helper functions\r\n\r\n      function subdivide(detail) {\r\n        const a = new Vector3();\r\n        const b = new Vector3();\r\n        const c = new Vector3(); // iterate over all faces and apply a subdivison with the given detail value\r\n\r\n        for (let i = 0; i < indices.length; i += 3) {\r\n          // get the vertices of the face\r\n          getVertexByIndex(indices[i + 0], a);\r\n          getVertexByIndex(indices[i + 1], b);\r\n          getVertexByIndex(indices[i + 2], c); // perform subdivision\r\n\r\n          subdivideFace(a, b, c, detail);\r\n        }\r\n      }\r\n\r\n      function subdivideFace(a, b, c, detail) {\r\n        const cols = detail + 1; // we use this multidimensional array as a data structure for creating the subdivision\r\n\r\n        const v = []; // construct all of the vertices for this subdivision\r\n\r\n        for (let i = 0; i <= cols; i++) {\r\n          v[i] = [];\r\n          const aj = a.clone().lerp(c, i / cols);\r\n          const bj = b.clone().lerp(c, i / cols);\r\n          const rows = cols - i;\r\n\r\n          for (let j = 0; j <= rows; j++) {\r\n            if (j === 0 && i === cols) {\r\n              v[i][j] = aj;\r\n            } else {\r\n              v[i][j] = aj.clone().lerp(bj, j / rows);\r\n            }\r\n          }\r\n        } // construct all of the faces\r\n\r\n        for (let i = 0; i < cols; i++) {\r\n          for (let j = 0; j < 2 * (cols - i) - 1; j++) {\r\n            const k = Math.floor(j / 2);\r\n\r\n            if (j % 2 === 0) {\r\n              pushVertex(v[i][k + 1]);\r\n              pushVertex(v[i + 1][k]);\r\n              pushVertex(v[i][k]);\r\n            } else {\r\n              pushVertex(v[i][k + 1]);\r\n              pushVertex(v[i + 1][k + 1]);\r\n              pushVertex(v[i + 1][k]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      function applyRadius(radius) {\r\n        const vertex = new Vector3(); // iterate over the entire buffer and apply the radius to each vertex\r\n\r\n        for (let i = 0; i < vertexBuffer.length; i += 3) {\r\n          vertex.x = vertexBuffer[i + 0];\r\n          vertex.y = vertexBuffer[i + 1];\r\n          vertex.z = vertexBuffer[i + 2];\r\n          vertex.normalize().multiplyScalar(radius);\r\n          vertexBuffer[i + 0] = vertex.x;\r\n          vertexBuffer[i + 1] = vertex.y;\r\n          vertexBuffer[i + 2] = vertex.z;\r\n        }\r\n      }\r\n\r\n      function generateUVs() {\r\n        const vertex = new Vector3();\r\n\r\n        for (let i = 0; i < vertexBuffer.length; i += 3) {\r\n          vertex.x = vertexBuffer[i + 0];\r\n          vertex.y = vertexBuffer[i + 1];\r\n          vertex.z = vertexBuffer[i + 2];\r\n          const u = azimuth(vertex) / 2 / Math.PI + 0.5;\r\n          const v = inclination(vertex) / Math.PI + 0.5;\r\n          uvBuffer.push(u, 1 - v);\r\n        }\r\n\r\n        correctUVs();\r\n        correctSeam();\r\n      }\r\n\r\n      function correctSeam() {\r\n        // handle case when face straddles the seam, see #3269\r\n        for (let i = 0; i < uvBuffer.length; i += 6) {\r\n          // uv data of a single face\r\n          const x0 = uvBuffer[i + 0];\r\n          const x1 = uvBuffer[i + 2];\r\n          const x2 = uvBuffer[i + 4];\r\n          const max = Math.max(x0, x1, x2);\r\n          const min = Math.min(x0, x1, x2); // 0.9 is somewhat arbitrary\r\n\r\n          if (max > 0.9 && min < 0.1) {\r\n            if (x0 < 0.2) uvBuffer[i + 0] += 1;\r\n            if (x1 < 0.2) uvBuffer[i + 2] += 1;\r\n            if (x2 < 0.2) uvBuffer[i + 4] += 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      function pushVertex(vertex) {\r\n        vertexBuffer.push(vertex.x, vertex.y, vertex.z);\r\n      }\r\n\r\n      function getVertexByIndex(index, vertex) {\r\n        const stride = index * 3;\r\n        vertex.x = vertices[stride + 0];\r\n        vertex.y = vertices[stride + 1];\r\n        vertex.z = vertices[stride + 2];\r\n      }\r\n\r\n      function correctUVs() {\r\n        const a = new Vector3();\r\n        const b = new Vector3();\r\n        const c = new Vector3();\r\n        const centroid = new Vector3();\r\n        const uvA = new Vector2();\r\n        const uvB = new Vector2();\r\n        const uvC = new Vector2();\r\n\r\n        for (let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\r\n          a.set(vertexBuffer[i + 0], vertexBuffer[i + 1], vertexBuffer[i + 2]);\r\n          b.set(vertexBuffer[i + 3], vertexBuffer[i + 4], vertexBuffer[i + 5]);\r\n          c.set(vertexBuffer[i + 6], vertexBuffer[i + 7], vertexBuffer[i + 8]);\r\n          uvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\r\n          uvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\r\n          uvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\r\n          centroid.copy(a).add(b).add(c).divideScalar(3);\r\n          const azi = azimuth(centroid);\r\n          correctUV(uvA, j + 0, a, azi);\r\n          correctUV(uvB, j + 2, b, azi);\r\n          correctUV(uvC, j + 4, c, azi);\r\n        }\r\n      }\r\n\r\n      function correctUV(uv, stride, vector, azimuth) {\r\n        if (azimuth < 0 && uv.x === 1) {\r\n          uvBuffer[stride] = uv.x - 1;\r\n        }\r\n\r\n        if (vector.x === 0 && vector.z === 0) {\r\n          uvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\r\n        }\r\n      } // Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n      function azimuth(vector) {\r\n        return Math.atan2(vector.z, -vector.x);\r\n      } // Angle above the XZ plane.\r\n\r\n      function inclination(vector) {\r\n        return Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\r\n      }\r\n    }\r\n  }\r\n\r\n  class DodecahedronGeometry extends PolyhedronGeometry {\r\n    constructor(radius = 1, detail = 0) {\r\n      const t = (1 + Math.sqrt(5)) / 2;\r\n      const r = 1 / t;\r\n      const vertices = [\r\n        // (±1, ±1, ±1)\r\n        -1,\r\n        -1,\r\n        -1,\r\n        -1,\r\n        -1,\r\n        1,\r\n        -1,\r\n        1,\r\n        -1,\r\n        -1,\r\n        1,\r\n        1,\r\n        1,\r\n        -1,\r\n        -1,\r\n        1,\r\n        -1,\r\n        1,\r\n        1,\r\n        1,\r\n        -1,\r\n        1,\r\n        1,\r\n        1, // (0, ±1/φ, ±φ)\r\n        0,\r\n        -r,\r\n        -t,\r\n        0,\r\n        -r,\r\n        t,\r\n        0,\r\n        r,\r\n        -t,\r\n        0,\r\n        r,\r\n        t, // (±1/φ, ±φ, 0)\r\n        -r,\r\n        -t,\r\n        0,\r\n        -r,\r\n        t,\r\n        0,\r\n        r,\r\n        -t,\r\n        0,\r\n        r,\r\n        t,\r\n        0, // (±φ, 0, ±1/φ)\r\n        -t,\r\n        0,\r\n        -r,\r\n        t,\r\n        0,\r\n        -r,\r\n        -t,\r\n        0,\r\n        r,\r\n        t,\r\n        0,\r\n        r,\r\n      ];\r\n      const indices = [\r\n        3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10,\r\n        6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13,\r\n        15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4,\r\n        0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5,\r\n        1, 5, 9,\r\n      ];\r\n      super(vertices, indices, radius, detail);\r\n      this.type = 'DodecahedronGeometry';\r\n      this.parameters = {\r\n        radius: radius,\r\n        detail: detail,\r\n      };\r\n    }\r\n  }\r\n\r\n  const _v0 = new Vector3();\r\n\r\n  const _v1$1 = new Vector3();\r\n\r\n  const _normal = new Vector3();\r\n\r\n  const _triangle = new Triangle();\r\n\r\n  class EdgesGeometry extends BufferGeometry {\r\n    constructor(geometry, thresholdAngle) {\r\n      super();\r\n      this.type = 'EdgesGeometry';\r\n      this.parameters = {\r\n        thresholdAngle: thresholdAngle,\r\n      };\r\n      thresholdAngle = thresholdAngle !== undefined ? thresholdAngle : 1;\r\n\r\n      if (geometry.isGeometry === true) {\r\n        console.error(\r\n          'THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.',\r\n        );\r\n        return;\r\n      }\r\n\r\n      const precisionPoints = 4;\r\n      const precision = Math.pow(10, precisionPoints);\r\n      const thresholdDot = Math.cos(DEG2RAD * thresholdAngle);\r\n      const indexAttr = geometry.getIndex();\r\n      const positionAttr = geometry.getAttribute('position');\r\n      const indexCount = indexAttr ? indexAttr.count : positionAttr.count;\r\n      const indexArr = [0, 0, 0];\r\n      const vertKeys = ['a', 'b', 'c'];\r\n      const hashes = new Array(3);\r\n      const edgeData = {};\r\n      const vertices = [];\r\n\r\n      for (let i = 0; i < indexCount; i += 3) {\r\n        if (indexAttr) {\r\n          indexArr[0] = indexAttr.getX(i);\r\n          indexArr[1] = indexAttr.getX(i + 1);\r\n          indexArr[2] = indexAttr.getX(i + 2);\r\n        } else {\r\n          indexArr[0] = i;\r\n          indexArr[1] = i + 1;\r\n          indexArr[2] = i + 2;\r\n        }\r\n\r\n        const { a, b, c } = _triangle;\r\n        a.fromBufferAttribute(positionAttr, indexArr[0]);\r\n        b.fromBufferAttribute(positionAttr, indexArr[1]);\r\n        c.fromBufferAttribute(positionAttr, indexArr[2]);\r\n\r\n        _triangle.getNormal(_normal); // create hashes for the edge from the vertices\r\n\r\n        hashes[0] = `${Math.round(a.x * precision)},${Math.round(a.y * precision)},${Math.round(\r\n          a.z * precision,\r\n        )}`;\r\n        hashes[1] = `${Math.round(b.x * precision)},${Math.round(b.y * precision)},${Math.round(\r\n          b.z * precision,\r\n        )}`;\r\n        hashes[2] = `${Math.round(c.x * precision)},${Math.round(c.y * precision)},${Math.round(\r\n          c.z * precision,\r\n        )}`; // skip degenerate triangles\r\n\r\n        if (hashes[0] === hashes[1] || hashes[1] === hashes[2] || hashes[2] === hashes[0]) {\r\n          continue;\r\n        } // iterate over every edge\r\n\r\n        for (let j = 0; j < 3; j++) {\r\n          // get the first and next vertex making up the edge\r\n          const jNext = (j + 1) % 3;\r\n          const vecHash0 = hashes[j];\r\n          const vecHash1 = hashes[jNext];\r\n          const v0 = _triangle[vertKeys[j]];\r\n          const v1 = _triangle[vertKeys[jNext]];\r\n          const hash = `${vecHash0}_${vecHash1}`;\r\n          const reverseHash = `${vecHash1}_${vecHash0}`;\r\n\r\n          if (reverseHash in edgeData && edgeData[reverseHash]) {\r\n            // if we found a sibling edge add it into the vertex array if\r\n            // it meets the angle threshold and delete the edge from the map.\r\n            if (_normal.dot(edgeData[reverseHash].normal) <= thresholdDot) {\r\n              vertices.push(v0.x, v0.y, v0.z);\r\n              vertices.push(v1.x, v1.y, v1.z);\r\n            }\r\n\r\n            edgeData[reverseHash] = null;\r\n          } else if (!(hash in edgeData)) {\r\n            // if we've already got an edge here then skip adding a new one\r\n            edgeData[hash] = {\r\n              index0: indexArr[j],\r\n              index1: indexArr[jNext],\r\n              normal: _normal.clone(),\r\n            };\r\n          }\r\n        }\r\n      } // iterate over all remaining, unmatched edges and add them to the vertex array\r\n\r\n      for (const key in edgeData) {\r\n        if (edgeData[key]) {\r\n          const { index0, index1 } = edgeData[key];\r\n\r\n          _v0.fromBufferAttribute(positionAttr, index0);\r\n\r\n          _v1$1.fromBufferAttribute(positionAttr, index1);\r\n\r\n          vertices.push(_v0.x, _v0.y, _v0.z);\r\n          vertices.push(_v1$1.x, _v1$1.y, _v1$1.z);\r\n        }\r\n      }\r\n\r\n      this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Port from https://github.com/mapbox/earcut (v2.2.2)\r\n   */\r\n  const Earcut = {\r\n    triangulate: function (data, holeIndices, dim) {\r\n      dim = dim || 2;\r\n      const hasHoles = holeIndices && holeIndices.length;\r\n      const outerLen = hasHoles ? holeIndices[0] * dim : data.length;\r\n      let outerNode = linkedList(data, 0, outerLen, dim, true);\r\n      const triangles = [];\r\n      if (!outerNode || outerNode.next === outerNode.prev) return triangles;\r\n      let minX, minY, maxX, maxY, x, y, invSize;\r\n      if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim); // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n\r\n      if (data.length > 80 * dim) {\r\n        minX = maxX = data[0];\r\n        minY = maxY = data[1];\r\n\r\n        for (let i = dim; i < outerLen; i += dim) {\r\n          x = data[i];\r\n          y = data[i + 1];\r\n          if (x < minX) minX = x;\r\n          if (y < minY) minY = y;\r\n          if (x > maxX) maxX = x;\r\n          if (y > maxY) maxY = y;\r\n        } // minX, minY and invSize are later used to transform coords into integers for z-order calculation\r\n\r\n        invSize = Math.max(maxX - minX, maxY - minY);\r\n        invSize = invSize !== 0 ? 1 / invSize : 0;\r\n      }\r\n\r\n      earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\r\n      return triangles;\r\n    },\r\n  }; // create a circular doubly linked list from polygon points in the specified winding order\r\n\r\n  function linkedList(data, start, end, dim, clockwise) {\r\n    let i, last;\r\n\r\n    if (clockwise === signedArea(data, start, end, dim) > 0) {\r\n      for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\r\n    } else {\r\n      for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\r\n    }\r\n\r\n    if (last && equals(last, last.next)) {\r\n      removeNode(last);\r\n      last = last.next;\r\n    }\r\n\r\n    return last;\r\n  } // eliminate colinear or duplicate points\r\n\r\n  function filterPoints(start, end) {\r\n    if (!start) return start;\r\n    if (!end) end = start;\r\n    let p = start,\r\n      again;\r\n\r\n    do {\r\n      again = false;\r\n\r\n      if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\r\n        removeNode(p);\r\n        p = end = p.prev;\r\n        if (p === p.next) break;\r\n        again = true;\r\n      } else {\r\n        p = p.next;\r\n      }\r\n    } while (again || p !== end);\r\n\r\n    return end;\r\n  } // main ear slicing loop which triangulates a polygon (given as a linked list)\r\n\r\n  function earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\r\n    if (!ear) return; // interlink polygon nodes in z-order\r\n\r\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\r\n    let stop = ear,\r\n      prev,\r\n      next; // iterate through ears, slicing them one by one\r\n\r\n    while (ear.prev !== ear.next) {\r\n      prev = ear.prev;\r\n      next = ear.next;\r\n\r\n      if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\r\n        // cut off the triangle\r\n        triangles.push(prev.i / dim);\r\n        triangles.push(ear.i / dim);\r\n        triangles.push(next.i / dim);\r\n        removeNode(ear); // skipping the next vertex leads to less sliver triangles\r\n\r\n        ear = next.next;\r\n        stop = next.next;\r\n        continue;\r\n      }\r\n\r\n      ear = next; // if we looped through the whole remaining polygon and can't find any more ears\r\n\r\n      if (ear === stop) {\r\n        // try filtering points and slicing again\r\n        if (!pass) {\r\n          earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1); // if this didn't work, try curing all small self-intersections locally\r\n        } else if (pass === 1) {\r\n          ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\r\n          earcutLinked(ear, triangles, dim, minX, minY, invSize, 2); // as a last resort, try splitting the remaining polygon into two\r\n        } else if (pass === 2) {\r\n          splitEarcut(ear, triangles, dim, minX, minY, invSize);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  } // check whether a polygon node forms a valid ear with adjacent nodes\r\n\r\n  function isEar(ear) {\r\n    const a = ear.prev,\r\n      b = ear,\r\n      c = ear.next;\r\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n    // now make sure we don't have other points inside the potential ear\r\n\r\n    let p = ear.next.next;\r\n\r\n    while (p !== ear.prev) {\r\n      if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0)\r\n        return false;\r\n      p = p.next;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function isEarHashed(ear, minX, minY, invSize) {\r\n    const a = ear.prev,\r\n      b = ear,\r\n      c = ear.next;\r\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n    // triangle bbox; min & max are calculated like this for speed\r\n\r\n    const minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : b.x < c.x ? b.x : c.x,\r\n      minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : b.y < c.y ? b.y : c.y,\r\n      maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : b.x > c.x ? b.x : c.x,\r\n      maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : b.y > c.y ? b.y : c.y; // z-order range for the current triangle bbox;\r\n\r\n    const minZ = zOrder(minTX, minTY, minX, minY, invSize),\r\n      maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\r\n    let p = ear.prevZ,\r\n      n = ear.nextZ; // look for points inside the triangle in both directions\r\n\r\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\r\n      if (\r\n        p !== ear.prev &&\r\n        p !== ear.next &&\r\n        pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\r\n        area(p.prev, p, p.next) >= 0\r\n      )\r\n        return false;\r\n      p = p.prevZ;\r\n      if (\r\n        n !== ear.prev &&\r\n        n !== ear.next &&\r\n        pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\r\n        area(n.prev, n, n.next) >= 0\r\n      )\r\n        return false;\r\n      n = n.nextZ;\r\n    } // look for remaining points in decreasing z-order\r\n\r\n    while (p && p.z >= minZ) {\r\n      if (\r\n        p !== ear.prev &&\r\n        p !== ear.next &&\r\n        pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\r\n        area(p.prev, p, p.next) >= 0\r\n      )\r\n        return false;\r\n      p = p.prevZ;\r\n    } // look for remaining points in increasing z-order\r\n\r\n    while (n && n.z <= maxZ) {\r\n      if (\r\n        n !== ear.prev &&\r\n        n !== ear.next &&\r\n        pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\r\n        area(n.prev, n, n.next) >= 0\r\n      )\r\n        return false;\r\n      n = n.nextZ;\r\n    }\r\n\r\n    return true;\r\n  } // go through all polygon nodes and cure small local self-intersections\r\n\r\n  function cureLocalIntersections(start, triangles, dim) {\r\n    let p = start;\r\n\r\n    do {\r\n      const a = p.prev,\r\n        b = p.next.next;\r\n\r\n      if (\r\n        !equals(a, b) &&\r\n        intersects(a, p, p.next, b) &&\r\n        locallyInside(a, b) &&\r\n        locallyInside(b, a)\r\n      ) {\r\n        triangles.push(a.i / dim);\r\n        triangles.push(p.i / dim);\r\n        triangles.push(b.i / dim); // remove two nodes involved\r\n\r\n        removeNode(p);\r\n        removeNode(p.next);\r\n        p = start = b;\r\n      }\r\n\r\n      p = p.next;\r\n    } while (p !== start);\r\n\r\n    return filterPoints(p);\r\n  } // try splitting polygon into two and triangulate them independently\r\n\r\n  function splitEarcut(start, triangles, dim, minX, minY, invSize) {\r\n    // look for a valid diagonal that divides the polygon into two\r\n    let a = start;\r\n\r\n    do {\r\n      let b = a.next.next;\r\n\r\n      while (b !== a.prev) {\r\n        if (a.i !== b.i && isValidDiagonal(a, b)) {\r\n          // split the polygon in two by the diagonal\r\n          let c = splitPolygon(a, b); // filter colinear points around the cuts\r\n\r\n          a = filterPoints(a, a.next);\r\n          c = filterPoints(c, c.next); // run earcut on each half\r\n\r\n          earcutLinked(a, triangles, dim, minX, minY, invSize);\r\n          earcutLinked(c, triangles, dim, minX, minY, invSize);\r\n          return;\r\n        }\r\n\r\n        b = b.next;\r\n      }\r\n\r\n      a = a.next;\r\n    } while (a !== start);\r\n  } // link every hole into the outer loop, producing a single-ring polygon without holes\r\n\r\n  function eliminateHoles(data, holeIndices, outerNode, dim) {\r\n    const queue = [];\r\n    let i, len, start, end, list;\r\n\r\n    for (i = 0, len = holeIndices.length; i < len; i++) {\r\n      start = holeIndices[i] * dim;\r\n      end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n      list = linkedList(data, start, end, dim, false);\r\n      if (list === list.next) list.steiner = true;\r\n      queue.push(getLeftmost(list));\r\n    }\r\n\r\n    queue.sort(compareX); // process holes from left to right\r\n\r\n    for (i = 0; i < queue.length; i++) {\r\n      eliminateHole(queue[i], outerNode);\r\n      outerNode = filterPoints(outerNode, outerNode.next);\r\n    }\r\n\r\n    return outerNode;\r\n  }\r\n\r\n  function compareX(a, b) {\r\n    return a.x - b.x;\r\n  } // find a bridge between vertices that connects hole with an outer ring and and link it\r\n\r\n  function eliminateHole(hole, outerNode) {\r\n    outerNode = findHoleBridge(hole, outerNode);\r\n\r\n    if (outerNode) {\r\n      const b = splitPolygon(outerNode, hole); // filter collinear points around the cuts\r\n\r\n      filterPoints(outerNode, outerNode.next);\r\n      filterPoints(b, b.next);\r\n    }\r\n  } // David Eberly's algorithm for finding a bridge between hole and outer polygon\r\n\r\n  function findHoleBridge(hole, outerNode) {\r\n    let p = outerNode;\r\n    const hx = hole.x;\r\n    const hy = hole.y;\r\n    let qx = -Infinity,\r\n      m; // find a segment intersected by a ray from the hole's leftmost point to the left;\r\n    // segment's endpoint with lesser x will be potential connection point\r\n\r\n    do {\r\n      if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\r\n        const x = p.x + ((hy - p.y) * (p.next.x - p.x)) / (p.next.y - p.y);\r\n\r\n        if (x <= hx && x > qx) {\r\n          qx = x;\r\n\r\n          if (x === hx) {\r\n            if (hy === p.y) return p;\r\n            if (hy === p.next.y) return p.next;\r\n          }\r\n\r\n          m = p.x < p.next.x ? p : p.next;\r\n        }\r\n      }\r\n\r\n      p = p.next;\r\n    } while (p !== outerNode);\r\n\r\n    if (!m) return null;\r\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\r\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\r\n    // if there are no points found, we have a valid connection;\r\n    // otherwise choose the point of the minimum angle with the ray as connection point\r\n\r\n    const stop = m,\r\n      mx = m.x,\r\n      my = m.y;\r\n    let tanMin = Infinity,\r\n      tan;\r\n    p = m;\r\n\r\n    do {\r\n      if (\r\n        hx >= p.x &&\r\n        p.x >= mx &&\r\n        hx !== p.x &&\r\n        pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)\r\n      ) {\r\n        tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\r\n\r\n        if (\r\n          locallyInside(p, hole) &&\r\n          (tan < tanMin ||\r\n            (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))\r\n        ) {\r\n          m = p;\r\n          tanMin = tan;\r\n        }\r\n      }\r\n\r\n      p = p.next;\r\n    } while (p !== stop);\r\n\r\n    return m;\r\n  } // whether sector in vertex m contains sector in vertex p in the same coordinates\r\n\r\n  function sectorContainsSector(m, p) {\r\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\r\n  } // interlink polygon nodes in z-order\r\n\r\n  function indexCurve(start, minX, minY, invSize) {\r\n    let p = start;\r\n\r\n    do {\r\n      if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\r\n      p.prevZ = p.prev;\r\n      p.nextZ = p.next;\r\n      p = p.next;\r\n    } while (p !== start);\r\n\r\n    p.prevZ.nextZ = null;\r\n    p.prevZ = null;\r\n    sortLinked(p);\r\n  } // Simon Tatham's linked list merge sort algorithm\r\n  // http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\n\r\n  function sortLinked(list) {\r\n    let i,\r\n      p,\r\n      q,\r\n      e,\r\n      tail,\r\n      numMerges,\r\n      pSize,\r\n      qSize,\r\n      inSize = 1;\r\n\r\n    do {\r\n      p = list;\r\n      list = null;\r\n      tail = null;\r\n      numMerges = 0;\r\n\r\n      while (p) {\r\n        numMerges++;\r\n        q = p;\r\n        pSize = 0;\r\n\r\n        for (i = 0; i < inSize; i++) {\r\n          pSize++;\r\n          q = q.nextZ;\r\n          if (!q) break;\r\n        }\r\n\r\n        qSize = inSize;\r\n\r\n        while (pSize > 0 || (qSize > 0 && q)) {\r\n          if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\r\n            e = p;\r\n            p = p.nextZ;\r\n            pSize--;\r\n          } else {\r\n            e = q;\r\n            q = q.nextZ;\r\n            qSize--;\r\n          }\r\n\r\n          if (tail) tail.nextZ = e;\r\n          else list = e;\r\n          e.prevZ = tail;\r\n          tail = e;\r\n        }\r\n\r\n        p = q;\r\n      }\r\n\r\n      tail.nextZ = null;\r\n      inSize *= 2;\r\n    } while (numMerges > 1);\r\n\r\n    return list;\r\n  } // z-order of a point given coords and inverse of the longer side of data bbox\r\n\r\n  function zOrder(x, y, minX, minY, invSize) {\r\n    // coords are transformed into non-negative 15-bit integer range\r\n    x = 32767 * (x - minX) * invSize;\r\n    y = 32767 * (y - minY) * invSize;\r\n    x = (x | (x << 8)) & 0x00ff00ff;\r\n    x = (x | (x << 4)) & 0x0f0f0f0f;\r\n    x = (x | (x << 2)) & 0x33333333;\r\n    x = (x | (x << 1)) & 0x55555555;\r\n    y = (y | (y << 8)) & 0x00ff00ff;\r\n    y = (y | (y << 4)) & 0x0f0f0f0f;\r\n    y = (y | (y << 2)) & 0x33333333;\r\n    y = (y | (y << 1)) & 0x55555555;\r\n    return x | (y << 1);\r\n  } // find the leftmost node of a polygon ring\r\n\r\n  function getLeftmost(start) {\r\n    let p = start,\r\n      leftmost = start;\r\n\r\n    do {\r\n      if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\r\n      p = p.next;\r\n    } while (p !== start);\r\n\r\n    return leftmost;\r\n  } // check if a point lies within a convex triangle\r\n\r\n  function pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\r\n    return (\r\n      (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\r\n      (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\r\n      (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0\r\n    );\r\n  } // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\n\r\n  function isValidDiagonal(a, b) {\r\n    return (\r\n      a.next.i !== b.i &&\r\n      a.prev.i !== b.i &&\r\n      !intersectsPolygon(a, b) && // dones't intersect other edges\r\n      ((locallyInside(a, b) &&\r\n        locallyInside(b, a) &&\r\n        middleInside(a, b) && // locally visible\r\n        (area(a.prev, a, b.prev) || area(a, b.prev, b))) || // does not create opposite-facing sectors\r\n        (equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0))\r\n    ); // special zero-length case\r\n  } // signed area of a triangle\r\n\r\n  function area(p, q, r) {\r\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\r\n  } // check if two points are equal\r\n\r\n  function equals(p1, p2) {\r\n    return p1.x === p2.x && p1.y === p2.y;\r\n  } // check if two segments intersect\r\n\r\n  function intersects(p1, q1, p2, q2) {\r\n    const o1 = sign(area(p1, q1, p2));\r\n    const o2 = sign(area(p1, q1, q2));\r\n    const o3 = sign(area(p2, q2, p1));\r\n    const o4 = sign(area(p2, q2, q1));\r\n    if (o1 !== o2 && o3 !== o4) return true; // general case\r\n\r\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\r\n\r\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\r\n\r\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\r\n\r\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\r\n\r\n    return false;\r\n  } // for collinear points p, q, r, check if point q lies on segment pr\r\n\r\n  function onSegment(p, q, r) {\r\n    return (\r\n      q.x <= Math.max(p.x, r.x) &&\r\n      q.x >= Math.min(p.x, r.x) &&\r\n      q.y <= Math.max(p.y, r.y) &&\r\n      q.y >= Math.min(p.y, r.y)\r\n    );\r\n  }\r\n\r\n  function sign(num) {\r\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\r\n  } // check if a polygon diagonal intersects any polygon segments\r\n\r\n  function intersectsPolygon(a, b) {\r\n    let p = a;\r\n\r\n    do {\r\n      if (\r\n        p.i !== a.i &&\r\n        p.next.i !== a.i &&\r\n        p.i !== b.i &&\r\n        p.next.i !== b.i &&\r\n        intersects(p, p.next, a, b)\r\n      )\r\n        return true;\r\n      p = p.next;\r\n    } while (p !== a);\r\n\r\n    return false;\r\n  } // check if a polygon diagonal is locally inside the polygon\r\n\r\n  function locallyInside(a, b) {\r\n    return area(a.prev, a, a.next) < 0\r\n      ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0\r\n      : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\r\n  } // check if the middle point of a polygon diagonal is inside the polygon\r\n\r\n  function middleInside(a, b) {\r\n    let p = a,\r\n      inside = false;\r\n    const px = (a.x + b.x) / 2,\r\n      py = (a.y + b.y) / 2;\r\n\r\n    do {\r\n      if (\r\n        p.y > py !== p.next.y > py &&\r\n        p.next.y !== p.y &&\r\n        px < ((p.next.x - p.x) * (py - p.y)) / (p.next.y - p.y) + p.x\r\n      )\r\n        inside = !inside;\r\n      p = p.next;\r\n    } while (p !== a);\r\n\r\n    return inside;\r\n  } // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n  // if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\n\r\n  function splitPolygon(a, b) {\r\n    const a2 = new Node(a.i, a.x, a.y),\r\n      b2 = new Node(b.i, b.x, b.y),\r\n      an = a.next,\r\n      bp = b.prev;\r\n    a.next = b;\r\n    b.prev = a;\r\n    a2.next = an;\r\n    an.prev = a2;\r\n    b2.next = a2;\r\n    a2.prev = b2;\r\n    bp.next = b2;\r\n    b2.prev = bp;\r\n    return b2;\r\n  } // create a node and optionally link it with previous one (in a circular doubly linked list)\r\n\r\n  function insertNode(i, x, y, last) {\r\n    const p = new Node(i, x, y);\r\n\r\n    if (!last) {\r\n      p.prev = p;\r\n      p.next = p;\r\n    } else {\r\n      p.next = last.next;\r\n      p.prev = last;\r\n      last.next.prev = p;\r\n      last.next = p;\r\n    }\r\n\r\n    return p;\r\n  }\r\n\r\n  function removeNode(p) {\r\n    p.next.prev = p.prev;\r\n    p.prev.next = p.next;\r\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\r\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\r\n  }\r\n\r\n  function Node(i, x, y) {\r\n    // vertex index in coordinates array\r\n    this.i = i; // vertex coordinates\r\n\r\n    this.x = x;\r\n    this.y = y; // previous and next vertex nodes in a polygon ring\r\n\r\n    this.prev = null;\r\n    this.next = null; // z-order curve value\r\n\r\n    this.z = null; // previous and next nodes in z-order\r\n\r\n    this.prevZ = null;\r\n    this.nextZ = null; // indicates whether this is a steiner point\r\n\r\n    this.steiner = false;\r\n  }\r\n\r\n  function signedArea(data, start, end, dim) {\r\n    let sum = 0;\r\n\r\n    for (let i = start, j = end - dim; i < end; i += dim) {\r\n      sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\r\n      j = i;\r\n    }\r\n\r\n    return sum;\r\n  }\r\n\r\n  class ShapeUtils {\r\n    // calculate area of the contour polygon\r\n    static area(contour) {\r\n      const n = contour.length;\r\n      let a = 0.0;\r\n\r\n      for (let p = n - 1, q = 0; q < n; p = q++) {\r\n        a += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\r\n      }\r\n\r\n      return a * 0.5;\r\n    }\r\n\r\n    static isClockWise(pts) {\r\n      return ShapeUtils.area(pts) < 0;\r\n    }\r\n\r\n    static triangulateShape(contour, holes) {\r\n      const vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\r\n\r\n      const holeIndices = []; // array of hole indices\r\n\r\n      const faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\r\n\r\n      removeDupEndPts(contour);\r\n      addContour(vertices, contour); //\r\n\r\n      let holeIndex = contour.length;\r\n      holes.forEach(removeDupEndPts);\r\n\r\n      for (let i = 0; i < holes.length; i++) {\r\n        holeIndices.push(holeIndex);\r\n        holeIndex += holes[i].length;\r\n        addContour(vertices, holes[i]);\r\n      } //\r\n\r\n      const triangles = Earcut.triangulate(vertices, holeIndices); //\r\n\r\n      for (let i = 0; i < triangles.length; i += 3) {\r\n        faces.push(triangles.slice(i, i + 3));\r\n      }\r\n\r\n      return faces;\r\n    }\r\n  }\r\n\r\n  function removeDupEndPts(points) {\r\n    const l = points.length;\r\n\r\n    if (l > 2 && points[l - 1].equals(points[0])) {\r\n      points.pop();\r\n    }\r\n  }\r\n\r\n  function addContour(vertices, contour) {\r\n    for (let i = 0; i < contour.length; i++) {\r\n      vertices.push(contour[i].x);\r\n      vertices.push(contour[i].y);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates extruded geometry from a path shape.\r\n   *\r\n   * parameters = {\r\n   *\r\n   *\tcurveSegments: <int>, // number of points on the curves\r\n   *\tsteps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n   *\tdepth: <float>, // Depth to extrude the shape\r\n   *\r\n   *\tbevelEnabled: <bool>, // turn on bevel\r\n   *\tbevelThickness: <float>, // how deep into the original shape bevel goes\r\n   *\tbevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\r\n   *\tbevelOffset: <float>, // how far from shape outline does bevel start\r\n   *\tbevelSegments: <int>, // number of bevel layers\r\n   *\r\n   *\textrudePath: <THREE.Curve> // curve to extrude shape along\r\n   *\r\n   *\tUVGenerator: <Object> // object that provides UV generator functions\r\n   *\r\n   * }\r\n   */\r\n\r\n  class ExtrudeGeometry extends BufferGeometry {\r\n    constructor(shapes, options) {\r\n      super();\r\n      this.type = 'ExtrudeGeometry';\r\n      this.parameters = {\r\n        shapes: shapes,\r\n        options: options,\r\n      };\r\n      shapes = Array.isArray(shapes) ? shapes : [shapes];\r\n      const scope = this;\r\n      const verticesArray = [];\r\n      const uvArray = [];\r\n\r\n      for (let i = 0, l = shapes.length; i < l; i++) {\r\n        const shape = shapes[i];\r\n        addShape(shape);\r\n      } // build geometry\r\n\r\n      this.setAttribute('position', new Float32BufferAttribute(verticesArray, 3));\r\n      this.setAttribute('uv', new Float32BufferAttribute(uvArray, 2));\r\n      this.computeVertexNormals(); // functions\r\n\r\n      function addShape(shape) {\r\n        const placeholder = []; // options\r\n\r\n        const curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n        const steps = options.steps !== undefined ? options.steps : 1;\r\n        let depth = options.depth !== undefined ? options.depth : 100;\r\n        let bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\r\n        let bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\r\n        let bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\r\n        let bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\r\n        let bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n        const extrudePath = options.extrudePath;\r\n        const uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator; // deprecated options\r\n\r\n        if (options.amount !== undefined) {\r\n          console.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');\r\n          depth = options.amount;\r\n        } //\r\n\r\n        let extrudePts,\r\n          extrudeByPath = false;\r\n        let splineTube, binormal, normal, position2;\r\n\r\n        if (extrudePath) {\r\n          extrudePts = extrudePath.getSpacedPoints(steps);\r\n          extrudeByPath = true;\r\n          bevelEnabled = false; // bevels not supported for path extrusion\r\n          // SETUP TNB variables\r\n          // TODO1 - have a .isClosed in spline?\r\n\r\n          splineTube = extrudePath.computeFrenetFrames(steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n          binormal = new Vector3();\r\n          normal = new Vector3();\r\n          position2 = new Vector3();\r\n        } // Safeguards if bevels are not enabled\r\n\r\n        if (!bevelEnabled) {\r\n          bevelSegments = 0;\r\n          bevelThickness = 0;\r\n          bevelSize = 0;\r\n          bevelOffset = 0;\r\n        } // Variables initialization\r\n\r\n        const shapePoints = shape.extractPoints(curveSegments);\r\n        let vertices = shapePoints.shape;\r\n        const holes = shapePoints.holes;\r\n        const reverse = !ShapeUtils.isClockWise(vertices);\r\n\r\n        if (reverse) {\r\n          vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n          for (let h = 0, hl = holes.length; h < hl; h++) {\r\n            const ahole = holes[h];\r\n\r\n            if (ShapeUtils.isClockWise(ahole)) {\r\n              holes[h] = ahole.reverse();\r\n            }\r\n          }\r\n        }\r\n\r\n        const faces = ShapeUtils.triangulateShape(vertices, holes);\r\n        /* Vertices */\r\n\r\n        const contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n        for (let h = 0, hl = holes.length; h < hl; h++) {\r\n          const ahole = holes[h];\r\n          vertices = vertices.concat(ahole);\r\n        }\r\n\r\n        function scalePt2(pt, vec, size) {\r\n          if (!vec) console.error('THREE.ExtrudeGeometry: vec does not exist');\r\n          return vec.clone().multiplyScalar(size).add(pt);\r\n        }\r\n\r\n        const vlen = vertices.length,\r\n          flen = faces.length; // Find directions for point movement\r\n\r\n        function getBevelVec(inPt, inPrev, inNext) {\r\n          // computes for inPt the corresponding point inPt' on a new contour\r\n          //\t shifted by 1 unit (length of normalized vector) to the left\r\n          // if we walk along contour clockwise, this new contour is outside the old one\r\n          //\r\n          // inPt' is the intersection of the two lines parallel to the two\r\n          //\tadjacent edges of inPt at a distance of 1 unit on the left side.\r\n          let v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\r\n          // good reading for geometry algorithms (here: line-line intersection)\r\n          // http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n          const v_prev_x = inPt.x - inPrev.x,\r\n            v_prev_y = inPt.y - inPrev.y;\r\n          const v_next_x = inNext.x - inPt.x,\r\n            v_next_y = inNext.y - inPt.y;\r\n          const v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\r\n\r\n          const collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\r\n\r\n          if (Math.abs(collinear0) > Number.EPSILON) {\r\n            // not collinear\r\n            // length of vectors for normalizing\r\n            const v_prev_len = Math.sqrt(v_prev_lensq);\r\n            const v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\r\n\r\n            const ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\r\n            const ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\r\n            const ptNextShift_x = inNext.x - v_next_y / v_next_len;\r\n            const ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\r\n\r\n            const sf =\r\n              ((ptNextShift_x - ptPrevShift_x) * v_next_y -\r\n                (ptNextShift_y - ptPrevShift_y) * v_next_x) /\r\n              (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\r\n\r\n            v_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\r\n            v_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\r\n            //\tbut prevent crazy spikes\r\n\r\n            const v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\r\n\r\n            if (v_trans_lensq <= 2) {\r\n              return new Vector2(v_trans_x, v_trans_y);\r\n            } else {\r\n              shrink_by = Math.sqrt(v_trans_lensq / 2);\r\n            }\r\n          } else {\r\n            // handle special case of collinear edges\r\n            let direction_eq = false; // assumes: opposite\r\n\r\n            if (v_prev_x > Number.EPSILON) {\r\n              if (v_next_x > Number.EPSILON) {\r\n                direction_eq = true;\r\n              }\r\n            } else {\r\n              if (v_prev_x < -Number.EPSILON) {\r\n                if (v_next_x < -Number.EPSILON) {\r\n                  direction_eq = true;\r\n                }\r\n              } else {\r\n                if (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\r\n                  direction_eq = true;\r\n                }\r\n              }\r\n            }\r\n\r\n            if (direction_eq) {\r\n              // console.log(\"Warning: lines are a straight sequence\");\r\n              v_trans_x = -v_prev_y;\r\n              v_trans_y = v_prev_x;\r\n              shrink_by = Math.sqrt(v_prev_lensq);\r\n            } else {\r\n              // console.log(\"Warning: lines are a straight spike\");\r\n              v_trans_x = v_prev_x;\r\n              v_trans_y = v_prev_y;\r\n              shrink_by = Math.sqrt(v_prev_lensq / 2);\r\n            }\r\n          }\r\n\r\n          return new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\r\n        }\r\n\r\n        const contourMovements = [];\r\n\r\n        for (let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\r\n          if (j === il) j = 0;\r\n          if (k === il) k = 0; //\t(j)---(i)---(k)\r\n          // console.log('i,j,k', i, j , k)\r\n\r\n          contourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\r\n        }\r\n\r\n        const holesMovements = [];\r\n        let oneHoleMovements,\r\n          verticesMovements = contourMovements.concat();\r\n\r\n        for (let h = 0, hl = holes.length; h < hl; h++) {\r\n          const ahole = holes[h];\r\n          oneHoleMovements = [];\r\n\r\n          for (let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\r\n            if (j === il) j = 0;\r\n            if (k === il) k = 0; //\t(j)---(i)---(k)\r\n\r\n            oneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\r\n          }\r\n\r\n          holesMovements.push(oneHoleMovements);\r\n          verticesMovements = verticesMovements.concat(oneHoleMovements);\r\n        } // Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n        for (let b = 0; b < bevelSegments; b++) {\r\n          //for ( b = bevelSegments; b > 0; b -- ) {\r\n          const t = b / bevelSegments;\r\n          const z = bevelThickness * Math.cos((t * Math.PI) / 2);\r\n          const bs = bevelSize * Math.sin((t * Math.PI) / 2) + bevelOffset; // contract shape\r\n\r\n          for (let i = 0, il = contour.length; i < il; i++) {\r\n            const vert = scalePt2(contour[i], contourMovements[i], bs);\r\n            v(vert.x, vert.y, -z);\r\n          } // expand holes\r\n\r\n          for (let h = 0, hl = holes.length; h < hl; h++) {\r\n            const ahole = holes[h];\r\n            oneHoleMovements = holesMovements[h];\r\n\r\n            for (let i = 0, il = ahole.length; i < il; i++) {\r\n              const vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\r\n              v(vert.x, vert.y, -z);\r\n            }\r\n          }\r\n        }\r\n\r\n        const bs = bevelSize + bevelOffset; // Back facing vertices\r\n\r\n        for (let i = 0; i < vlen; i++) {\r\n          const vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\r\n\r\n          if (!extrudeByPath) {\r\n            v(vert.x, vert.y, 0);\r\n          } else {\r\n            // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n            normal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\r\n            binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\r\n            position2.copy(extrudePts[0]).add(normal).add(binormal);\r\n            v(position2.x, position2.y, position2.z);\r\n          }\r\n        } // Add stepped vertices...\r\n        // Including front facing vertices\r\n\r\n        for (let s = 1; s <= steps; s++) {\r\n          for (let i = 0; i < vlen; i++) {\r\n            const vert = bevelEnabled\r\n              ? scalePt2(vertices[i], verticesMovements[i], bs)\r\n              : vertices[i];\r\n\r\n            if (!extrudeByPath) {\r\n              v(vert.x, vert.y, (depth / steps) * s);\r\n            } else {\r\n              // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n              normal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\r\n              binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\r\n              position2.copy(extrudePts[s]).add(normal).add(binormal);\r\n              v(position2.x, position2.y, position2.z);\r\n            }\r\n          }\r\n        } // Add bevel segments planes\r\n        //for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\r\n        for (let b = bevelSegments - 1; b >= 0; b--) {\r\n          const t = b / bevelSegments;\r\n          const z = bevelThickness * Math.cos((t * Math.PI) / 2);\r\n          const bs = bevelSize * Math.sin((t * Math.PI) / 2) + bevelOffset; // contract shape\r\n\r\n          for (let i = 0, il = contour.length; i < il; i++) {\r\n            const vert = scalePt2(contour[i], contourMovements[i], bs);\r\n            v(vert.x, vert.y, depth + z);\r\n          } // expand holes\r\n\r\n          for (let h = 0, hl = holes.length; h < hl; h++) {\r\n            const ahole = holes[h];\r\n            oneHoleMovements = holesMovements[h];\r\n\r\n            for (let i = 0, il = ahole.length; i < il; i++) {\r\n              const vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\r\n\r\n              if (!extrudeByPath) {\r\n                v(vert.x, vert.y, depth + z);\r\n              } else {\r\n                v(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        /* Faces */\r\n        // Top and bottom faces\r\n\r\n        buildLidFaces(); // Sides faces\r\n\r\n        buildSideFaces(); /////\tInternal functions\r\n\r\n        function buildLidFaces() {\r\n          const start = verticesArray.length / 3;\r\n\r\n          if (bevelEnabled) {\r\n            let layer = 0; // steps + 1\r\n\r\n            let offset = vlen * layer; // Bottom faces\r\n\r\n            for (let i = 0; i < flen; i++) {\r\n              const face = faces[i];\r\n              f3(face[2] + offset, face[1] + offset, face[0] + offset);\r\n            }\r\n\r\n            layer = steps + bevelSegments * 2;\r\n            offset = vlen * layer; // Top faces\r\n\r\n            for (let i = 0; i < flen; i++) {\r\n              const face = faces[i];\r\n              f3(face[0] + offset, face[1] + offset, face[2] + offset);\r\n            }\r\n          } else {\r\n            // Bottom faces\r\n            for (let i = 0; i < flen; i++) {\r\n              const face = faces[i];\r\n              f3(face[2], face[1], face[0]);\r\n            } // Top faces\r\n\r\n            for (let i = 0; i < flen; i++) {\r\n              const face = faces[i];\r\n              f3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\r\n            }\r\n          }\r\n\r\n          scope.addGroup(start, verticesArray.length / 3 - start, 0);\r\n        } // Create faces for the z-sides of the shape\r\n\r\n        function buildSideFaces() {\r\n          const start = verticesArray.length / 3;\r\n          let layeroffset = 0;\r\n          sidewalls(contour, layeroffset);\r\n          layeroffset += contour.length;\r\n\r\n          for (let h = 0, hl = holes.length; h < hl; h++) {\r\n            const ahole = holes[h];\r\n            sidewalls(ahole, layeroffset); //, true\r\n\r\n            layeroffset += ahole.length;\r\n          }\r\n\r\n          scope.addGroup(start, verticesArray.length / 3 - start, 1);\r\n        }\r\n\r\n        function sidewalls(contour, layeroffset) {\r\n          let i = contour.length;\r\n\r\n          while (--i >= 0) {\r\n            const j = i;\r\n            let k = i - 1;\r\n            if (k < 0) k = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n            for (let s = 0, sl = steps + bevelSegments * 2; s < sl; s++) {\r\n              const slen1 = vlen * s;\r\n              const slen2 = vlen * (s + 1);\r\n              const a = layeroffset + j + slen1,\r\n                b = layeroffset + k + slen1,\r\n                c = layeroffset + k + slen2,\r\n                d = layeroffset + j + slen2;\r\n              f4(a, b, c, d);\r\n            }\r\n          }\r\n        }\r\n\r\n        function v(x, y, z) {\r\n          placeholder.push(x);\r\n          placeholder.push(y);\r\n          placeholder.push(z);\r\n        }\r\n\r\n        function f3(a, b, c) {\r\n          addVertex(a);\r\n          addVertex(b);\r\n          addVertex(c);\r\n          const nextIndex = verticesArray.length / 3;\r\n          const uvs = uvgen.generateTopUV(\r\n            scope,\r\n            verticesArray,\r\n            nextIndex - 3,\r\n            nextIndex - 2,\r\n            nextIndex - 1,\r\n          );\r\n          addUV(uvs[0]);\r\n          addUV(uvs[1]);\r\n          addUV(uvs[2]);\r\n        }\r\n\r\n        function f4(a, b, c, d) {\r\n          addVertex(a);\r\n          addVertex(b);\r\n          addVertex(d);\r\n          addVertex(b);\r\n          addVertex(c);\r\n          addVertex(d);\r\n          const nextIndex = verticesArray.length / 3;\r\n          const uvs = uvgen.generateSideWallUV(\r\n            scope,\r\n            verticesArray,\r\n            nextIndex - 6,\r\n            nextIndex - 3,\r\n            nextIndex - 2,\r\n            nextIndex - 1,\r\n          );\r\n          addUV(uvs[0]);\r\n          addUV(uvs[1]);\r\n          addUV(uvs[3]);\r\n          addUV(uvs[1]);\r\n          addUV(uvs[2]);\r\n          addUV(uvs[3]);\r\n        }\r\n\r\n        function addVertex(index) {\r\n          verticesArray.push(placeholder[index * 3 + 0]);\r\n          verticesArray.push(placeholder[index * 3 + 1]);\r\n          verticesArray.push(placeholder[index * 3 + 2]);\r\n        }\r\n\r\n        function addUV(vector2) {\r\n          uvArray.push(vector2.x);\r\n          uvArray.push(vector2.y);\r\n        }\r\n      }\r\n    }\r\n\r\n    toJSON() {\r\n      const data = super.toJSON();\r\n      const shapes = this.parameters.shapes;\r\n      const options = this.parameters.options;\r\n      return toJSON$1(shapes, options, data);\r\n    }\r\n  }\r\n\r\n  const WorldUVGenerator = {\r\n    generateTopUV: function (geometry, vertices, indexA, indexB, indexC) {\r\n      const a_x = vertices[indexA * 3];\r\n      const a_y = vertices[indexA * 3 + 1];\r\n      const b_x = vertices[indexB * 3];\r\n      const b_y = vertices[indexB * 3 + 1];\r\n      const c_x = vertices[indexC * 3];\r\n      const c_y = vertices[indexC * 3 + 1];\r\n      return [new Vector2(a_x, a_y), new Vector2(b_x, b_y), new Vector2(c_x, c_y)];\r\n    },\r\n    generateSideWallUV: function (geometry, vertices, indexA, indexB, indexC, indexD) {\r\n      const a_x = vertices[indexA * 3];\r\n      const a_y = vertices[indexA * 3 + 1];\r\n      const a_z = vertices[indexA * 3 + 2];\r\n      const b_x = vertices[indexB * 3];\r\n      const b_y = vertices[indexB * 3 + 1];\r\n      const b_z = vertices[indexB * 3 + 2];\r\n      const c_x = vertices[indexC * 3];\r\n      const c_y = vertices[indexC * 3 + 1];\r\n      const c_z = vertices[indexC * 3 + 2];\r\n      const d_x = vertices[indexD * 3];\r\n      const d_y = vertices[indexD * 3 + 1];\r\n      const d_z = vertices[indexD * 3 + 2];\r\n\r\n      if (Math.abs(a_y - b_y) < Math.abs(a_x - b_x)) {\r\n        return [\r\n          new Vector2(a_x, 1 - a_z),\r\n          new Vector2(b_x, 1 - b_z),\r\n          new Vector2(c_x, 1 - c_z),\r\n          new Vector2(d_x, 1 - d_z),\r\n        ];\r\n      } else {\r\n        return [\r\n          new Vector2(a_y, 1 - a_z),\r\n          new Vector2(b_y, 1 - b_z),\r\n          new Vector2(c_y, 1 - c_z),\r\n          new Vector2(d_y, 1 - d_z),\r\n        ];\r\n      }\r\n    },\r\n  };\r\n\r\n  function toJSON$1(shapes, options, data) {\r\n    data.shapes = [];\r\n\r\n    if (Array.isArray(shapes)) {\r\n      for (let i = 0, l = shapes.length; i < l; i++) {\r\n        const shape = shapes[i];\r\n        data.shapes.push(shape.uuid);\r\n      }\r\n    } else {\r\n      data.shapes.push(shapes.uuid);\r\n    }\r\n\r\n    if (options.extrudePath !== undefined) data.options.extrudePath = options.extrudePath.toJSON();\r\n    return data;\r\n  }\r\n\r\n  class IcosahedronGeometry extends PolyhedronGeometry {\r\n    constructor(radius = 1, detail = 0) {\r\n      const t = (1 + Math.sqrt(5)) / 2;\r\n      const vertices = [\r\n        -1,\r\n        t,\r\n        0,\r\n        1,\r\n        t,\r\n        0,\r\n        -1,\r\n        -t,\r\n        0,\r\n        1,\r\n        -t,\r\n        0,\r\n        0,\r\n        -1,\r\n        t,\r\n        0,\r\n        1,\r\n        t,\r\n        0,\r\n        -1,\r\n        -t,\r\n        0,\r\n        1,\r\n        -t,\r\n        t,\r\n        0,\r\n        -1,\r\n        t,\r\n        0,\r\n        1,\r\n        -t,\r\n        0,\r\n        -1,\r\n        -t,\r\n        0,\r\n        1,\r\n      ];\r\n      const indices = [\r\n        0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7,\r\n        1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9,\r\n        8, 1,\r\n      ];\r\n      super(vertices, indices, radius, detail);\r\n      this.type = 'IcosahedronGeometry';\r\n      this.parameters = {\r\n        radius: radius,\r\n        detail: detail,\r\n      };\r\n    }\r\n  }\r\n\r\n  class LatheGeometry extends BufferGeometry {\r\n    constructor(points, segments = 12, phiStart = 0, phiLength = Math.PI * 2) {\r\n      super();\r\n      this.type = 'LatheGeometry';\r\n      this.parameters = {\r\n        points: points,\r\n        segments: segments,\r\n        phiStart: phiStart,\r\n        phiLength: phiLength,\r\n      };\r\n      segments = Math.floor(segments); // clamp phiLength so it's in range of [ 0, 2PI ]\r\n\r\n      phiLength = clamp(phiLength, 0, Math.PI * 2); // buffers\r\n\r\n      const indices = [];\r\n      const vertices = [];\r\n      const uvs = []; // helper variables\r\n\r\n      const inverseSegments = 1.0 / segments;\r\n      const vertex = new Vector3();\r\n      const uv = new Vector2(); // generate vertices and uvs\r\n\r\n      for (let i = 0; i <= segments; i++) {\r\n        const phi = phiStart + i * inverseSegments * phiLength;\r\n        const sin = Math.sin(phi);\r\n        const cos = Math.cos(phi);\r\n\r\n        for (let j = 0; j <= points.length - 1; j++) {\r\n          // vertex\r\n          vertex.x = points[j].x * sin;\r\n          vertex.y = points[j].y;\r\n          vertex.z = points[j].x * cos;\r\n          vertices.push(vertex.x, vertex.y, vertex.z); // uv\r\n\r\n          uv.x = i / segments;\r\n          uv.y = j / (points.length - 1);\r\n          uvs.push(uv.x, uv.y);\r\n        }\r\n      } // indices\r\n\r\n      for (let i = 0; i < segments; i++) {\r\n        for (let j = 0; j < points.length - 1; j++) {\r\n          const base = j + i * points.length;\r\n          const a = base;\r\n          const b = base + points.length;\r\n          const c = base + points.length + 1;\r\n          const d = base + 1; // faces\r\n\r\n          indices.push(a, b, d);\r\n          indices.push(b, c, d);\r\n        }\r\n      } // build geometry\r\n\r\n      this.setIndex(indices);\r\n      this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n      this.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // generate normals\r\n\r\n      this.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam.\r\n      // because the corresponding vertices are identical (but still have different UVs).\r\n\r\n      if (phiLength === Math.PI * 2) {\r\n        const normals = this.attributes.normal.array;\r\n        const n1 = new Vector3();\r\n        const n2 = new Vector3();\r\n        const n = new Vector3(); // this is the buffer offset for the last line of vertices\r\n\r\n        const base = segments * points.length * 3;\r\n\r\n        for (let i = 0, j = 0; i < points.length; i++, j += 3) {\r\n          // select the normal of the vertex in the first line\r\n          n1.x = normals[j + 0];\r\n          n1.y = normals[j + 1];\r\n          n1.z = normals[j + 2]; // select the normal of the vertex in the last line\r\n\r\n          n2.x = normals[base + j + 0];\r\n          n2.y = normals[base + j + 1];\r\n          n2.z = normals[base + j + 2]; // average normals\r\n\r\n          n.addVectors(n1, n2).normalize(); // assign the new values to both normals\r\n\r\n          normals[j + 0] = normals[base + j + 0] = n.x;\r\n          normals[j + 1] = normals[base + j + 1] = n.y;\r\n          normals[j + 2] = normals[base + j + 2] = n.z;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  class OctahedronGeometry extends PolyhedronGeometry {\r\n    constructor(radius = 1, detail = 0) {\r\n      const vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\r\n      const indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\r\n      super(vertices, indices, radius, detail);\r\n      this.type = 'OctahedronGeometry';\r\n      this.parameters = {\r\n        radius: radius,\r\n        detail: detail,\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parametric Surfaces Geometry\r\n   * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\r\n   */\r\n\r\n  class ParametricGeometry extends BufferGeometry {\r\n    constructor(func, slices, stacks) {\r\n      super();\r\n      this.type = 'ParametricGeometry';\r\n      this.parameters = {\r\n        func: func,\r\n        slices: slices,\r\n        stacks: stacks,\r\n      }; // buffers\r\n\r\n      const indices = [];\r\n      const vertices = [];\r\n      const normals = [];\r\n      const uvs = [];\r\n      const EPS = 0.00001;\r\n      const normal = new Vector3();\r\n      const p0 = new Vector3(),\r\n        p1 = new Vector3();\r\n      const pu = new Vector3(),\r\n        pv = new Vector3();\r\n\r\n      if (func.length < 3) {\r\n        console.error(\r\n          'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.',\r\n        );\r\n      } // generate vertices, normals and uvs\r\n\r\n      const sliceCount = slices + 1;\r\n\r\n      for (let i = 0; i <= stacks; i++) {\r\n        const v = i / stacks;\r\n\r\n        for (let j = 0; j <= slices; j++) {\r\n          const u = j / slices; // vertex\r\n\r\n          func(u, v, p0);\r\n          vertices.push(p0.x, p0.y, p0.z); // normal\r\n          // approximate tangent vectors via finite differences\r\n\r\n          if (u - EPS >= 0) {\r\n            func(u - EPS, v, p1);\r\n            pu.subVectors(p0, p1);\r\n          } else {\r\n            func(u + EPS, v, p1);\r\n            pu.subVectors(p1, p0);\r\n          }\r\n\r\n          if (v - EPS >= 0) {\r\n            func(u, v - EPS, p1);\r\n            pv.subVectors(p0, p1);\r\n          } else {\r\n            func(u, v + EPS, p1);\r\n            pv.subVectors(p1, p0);\r\n          } // cross product of tangent vectors returns surface normal\r\n\r\n          normal.crossVectors(pu, pv).normalize();\r\n          normals.push(normal.x, normal.y, normal.z); // uv\r\n\r\n          uvs.push(u, v);\r\n        }\r\n      } // generate indices\r\n\r\n      for (let i = 0; i < stacks; i++) {\r\n        for (let j = 0; j < slices; j++) {\r\n          const a = i * sliceCount + j;\r\n          const b = i * sliceCount + j + 1;\r\n          const c = (i + 1) * sliceCount + j + 1;\r\n          const d = (i + 1) * sliceCount + j; // faces one and two\r\n\r\n          indices.push(a, b, d);\r\n          indices.push(b, c, d);\r\n        }\r\n      } // build geometry\r\n\r\n      this.setIndex(indices);\r\n      this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n      this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n      this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n    }\r\n  }\r\n\r\n  class RingGeometry extends BufferGeometry {\r\n    constructor(\r\n      innerRadius = 0.5,\r\n      outerRadius = 1,\r\n      thetaSegments = 8,\r\n      phiSegments = 1,\r\n      thetaStart = 0,\r\n      thetaLength = Math.PI * 2,\r\n    ) {\r\n      super();\r\n      this.type = 'RingGeometry';\r\n      this.parameters = {\r\n        innerRadius: innerRadius,\r\n        outerRadius: outerRadius,\r\n        thetaSegments: thetaSegments,\r\n        phiSegments: phiSegments,\r\n        thetaStart: thetaStart,\r\n        thetaLength: thetaLength,\r\n      };\r\n      thetaSegments = Math.max(3, thetaSegments);\r\n      phiSegments = Math.max(1, phiSegments); // buffers\r\n\r\n      const indices = [];\r\n      const vertices = [];\r\n      const normals = [];\r\n      const uvs = []; // some helper variables\r\n\r\n      let radius = innerRadius;\r\n      const radiusStep = (outerRadius - innerRadius) / phiSegments;\r\n      const vertex = new Vector3();\r\n      const uv = new Vector2(); // generate vertices, normals and uvs\r\n\r\n      for (let j = 0; j <= phiSegments; j++) {\r\n        for (let i = 0; i <= thetaSegments; i++) {\r\n          // values are generate from the inside of the ring to the outside\r\n          const segment = thetaStart + (i / thetaSegments) * thetaLength; // vertex\r\n\r\n          vertex.x = radius * Math.cos(segment);\r\n          vertex.y = radius * Math.sin(segment);\r\n          vertices.push(vertex.x, vertex.y, vertex.z); // normal\r\n\r\n          normals.push(0, 0, 1); // uv\r\n\r\n          uv.x = (vertex.x / outerRadius + 1) / 2;\r\n          uv.y = (vertex.y / outerRadius + 1) / 2;\r\n          uvs.push(uv.x, uv.y);\r\n        } // increase the radius for next row of vertices\r\n\r\n        radius += radiusStep;\r\n      } // indices\r\n\r\n      for (let j = 0; j < phiSegments; j++) {\r\n        const thetaSegmentLevel = j * (thetaSegments + 1);\r\n\r\n        for (let i = 0; i < thetaSegments; i++) {\r\n          const segment = i + thetaSegmentLevel;\r\n          const a = segment;\r\n          const b = segment + thetaSegments + 1;\r\n          const c = segment + thetaSegments + 2;\r\n          const d = segment + 1; // faces\r\n\r\n          indices.push(a, b, d);\r\n          indices.push(b, c, d);\r\n        }\r\n      } // build geometry\r\n\r\n      this.setIndex(indices);\r\n      this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n      this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n      this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n    }\r\n  }\r\n\r\n  class ShapeGeometry extends BufferGeometry {\r\n    constructor(shapes, curveSegments = 12) {\r\n      super();\r\n      this.type = 'ShapeGeometry';\r\n      this.parameters = {\r\n        shapes: shapes,\r\n        curveSegments: curveSegments,\r\n      }; // buffers\r\n\r\n      const indices = [];\r\n      const vertices = [];\r\n      const normals = [];\r\n      const uvs = []; // helper variables\r\n\r\n      let groupStart = 0;\r\n      let groupCount = 0; // allow single and array values for \"shapes\" parameter\r\n\r\n      if (Array.isArray(shapes) === false) {\r\n        addShape(shapes);\r\n      } else {\r\n        for (let i = 0; i < shapes.length; i++) {\r\n          addShape(shapes[i]);\r\n          this.addGroup(groupStart, groupCount, i); // enables MultiMaterial support\r\n\r\n          groupStart += groupCount;\r\n          groupCount = 0;\r\n        }\r\n      } // build geometry\r\n\r\n      this.setIndex(indices);\r\n      this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n      this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n      this.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // helper functions\r\n\r\n      function addShape(shape) {\r\n        const indexOffset = vertices.length / 3;\r\n        const points = shape.extractPoints(curveSegments);\r\n        let shapeVertices = points.shape;\r\n        const shapeHoles = points.holes; // check direction of vertices\r\n\r\n        if (ShapeUtils.isClockWise(shapeVertices) === false) {\r\n          shapeVertices = shapeVertices.reverse();\r\n        }\r\n\r\n        for (let i = 0, l = shapeHoles.length; i < l; i++) {\r\n          const shapeHole = shapeHoles[i];\r\n\r\n          if (ShapeUtils.isClockWise(shapeHole) === true) {\r\n            shapeHoles[i] = shapeHole.reverse();\r\n          }\r\n        }\r\n\r\n        const faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles); // join vertices of inner and outer paths to a single array\r\n\r\n        for (let i = 0, l = shapeHoles.length; i < l; i++) {\r\n          const shapeHole = shapeHoles[i];\r\n          shapeVertices = shapeVertices.concat(shapeHole);\r\n        } // vertices, normals, uvs\r\n\r\n        for (let i = 0, l = shapeVertices.length; i < l; i++) {\r\n          const vertex = shapeVertices[i];\r\n          vertices.push(vertex.x, vertex.y, 0);\r\n          normals.push(0, 0, 1);\r\n          uvs.push(vertex.x, vertex.y); // world uvs\r\n        } // incides\r\n\r\n        for (let i = 0, l = faces.length; i < l; i++) {\r\n          const face = faces[i];\r\n          const a = face[0] + indexOffset;\r\n          const b = face[1] + indexOffset;\r\n          const c = face[2] + indexOffset;\r\n          indices.push(a, b, c);\r\n          groupCount += 3;\r\n        }\r\n      }\r\n    }\r\n\r\n    toJSON() {\r\n      const data = super.toJSON();\r\n      const shapes = this.parameters.shapes;\r\n      return toJSON(shapes, data);\r\n    }\r\n  }\r\n\r\n  function toJSON(shapes, data) {\r\n    data.shapes = [];\r\n\r\n    if (Array.isArray(shapes)) {\r\n      for (let i = 0, l = shapes.length; i < l; i++) {\r\n        const shape = shapes[i];\r\n        data.shapes.push(shape.uuid);\r\n      }\r\n    } else {\r\n      data.shapes.push(shapes.uuid);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  class SphereGeometry extends BufferGeometry {\r\n    constructor(\r\n      radius = 1,\r\n      widthSegments = 8,\r\n      heightSegments = 6,\r\n      phiStart = 0,\r\n      phiLength = Math.PI * 2,\r\n      thetaStart = 0,\r\n      thetaLength = Math.PI,\r\n    ) {\r\n      super();\r\n      this.type = 'SphereGeometry';\r\n      this.parameters = {\r\n        radius: radius,\r\n        widthSegments: widthSegments,\r\n        heightSegments: heightSegments,\r\n        phiStart: phiStart,\r\n        phiLength: phiLength,\r\n        thetaStart: thetaStart,\r\n        thetaLength: thetaLength,\r\n      };\r\n      widthSegments = Math.max(3, Math.floor(widthSegments));\r\n      heightSegments = Math.max(2, Math.floor(heightSegments));\r\n      const thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\r\n      let index = 0;\r\n      const grid = [];\r\n      const vertex = new Vector3();\r\n      const normal = new Vector3(); // buffers\r\n\r\n      const indices = [];\r\n      const vertices = [];\r\n      const normals = [];\r\n      const uvs = []; // generate vertices, normals and uvs\r\n\r\n      for (let iy = 0; iy <= heightSegments; iy++) {\r\n        const verticesRow = [];\r\n        const v = iy / heightSegments; // special case for the poles\r\n\r\n        let uOffset = 0;\r\n\r\n        if (iy == 0 && thetaStart == 0) {\r\n          uOffset = 0.5 / widthSegments;\r\n        } else if (iy == heightSegments && thetaEnd == Math.PI) {\r\n          uOffset = -0.5 / widthSegments;\r\n        }\r\n\r\n        for (let ix = 0; ix <= widthSegments; ix++) {\r\n          const u = ix / widthSegments; // vertex\r\n\r\n          vertex.x =\r\n            -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\r\n          vertex.y = radius * Math.cos(thetaStart + v * thetaLength);\r\n          vertex.z =\r\n            radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\r\n          vertices.push(vertex.x, vertex.y, vertex.z); // normal\r\n\r\n          normal.copy(vertex).normalize();\r\n          normals.push(normal.x, normal.y, normal.z); // uv\r\n\r\n          uvs.push(u + uOffset, 1 - v);\r\n          verticesRow.push(index++);\r\n        }\r\n\r\n        grid.push(verticesRow);\r\n      } // indices\r\n\r\n      for (let iy = 0; iy < heightSegments; iy++) {\r\n        for (let ix = 0; ix < widthSegments; ix++) {\r\n          const a = grid[iy][ix + 1];\r\n          const b = grid[iy][ix];\r\n          const c = grid[iy + 1][ix];\r\n          const d = grid[iy + 1][ix + 1];\r\n          if (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\r\n          if (iy !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\r\n        }\r\n      } // build geometry\r\n\r\n      this.setIndex(indices);\r\n      this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n      this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n      this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n    }\r\n  }\r\n\r\n  class TetrahedronGeometry extends PolyhedronGeometry {\r\n    constructor(radius = 1, detail = 0) {\r\n      const vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\r\n      const indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\r\n      super(vertices, indices, radius, detail);\r\n      this.type = 'TetrahedronGeometry';\r\n      this.parameters = {\r\n        radius: radius,\r\n        detail: detail,\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Text = 3D Text\r\n   *\r\n   * parameters = {\r\n   *\tfont: <THREE.Font>, // font\r\n   *\r\n   *\tsize: <float>, // size of the text\r\n   *\theight: <float>, // thickness to extrude text\r\n   *\tcurveSegments: <int>, // number of points on the curves\r\n   *\r\n   *\tbevelEnabled: <bool>, // turn on bevel\r\n   *\tbevelThickness: <float>, // how deep into text bevel goes\r\n   *\tbevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\r\n   *\tbevelOffset: <float> // how far from text outline does bevel start\r\n   * }\r\n   */\r\n\r\n  class TextGeometry extends ExtrudeGeometry {\r\n    constructor(text, parameters = {}) {\r\n      const font = parameters.font;\r\n\r\n      if (!(font && font.isFont)) {\r\n        console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');\r\n        return new BufferGeometry();\r\n      }\r\n\r\n      const shapes = font.generateShapes(text, parameters.size); // translate parameters to ExtrudeGeometry API\r\n\r\n      parameters.depth = parameters.height !== undefined ? parameters.height : 50; // defaults\r\n\r\n      if (parameters.bevelThickness === undefined) parameters.bevelThickness = 10;\r\n      if (parameters.bevelSize === undefined) parameters.bevelSize = 8;\r\n      if (parameters.bevelEnabled === undefined) parameters.bevelEnabled = false;\r\n      super(shapes, parameters);\r\n      this.type = 'TextGeometry';\r\n    }\r\n  }\r\n\r\n  class TorusGeometry extends BufferGeometry {\r\n    constructor(\r\n      radius = 1,\r\n      tube = 0.4,\r\n      radialSegments = 8,\r\n      tubularSegments = 6,\r\n      arc = Math.PI * 2,\r\n    ) {\r\n      super();\r\n      this.type = 'TorusGeometry';\r\n      this.parameters = {\r\n        radius: radius,\r\n        tube: tube,\r\n        radialSegments: radialSegments,\r\n        tubularSegments: tubularSegments,\r\n        arc: arc,\r\n      };\r\n      radialSegments = Math.floor(radialSegments);\r\n      tubularSegments = Math.floor(tubularSegments); // buffers\r\n\r\n      const indices = [];\r\n      const vertices = [];\r\n      const normals = [];\r\n      const uvs = []; // helper variables\r\n\r\n      const center = new Vector3();\r\n      const vertex = new Vector3();\r\n      const normal = new Vector3(); // generate vertices, normals and uvs\r\n\r\n      for (let j = 0; j <= radialSegments; j++) {\r\n        for (let i = 0; i <= tubularSegments; i++) {\r\n          const u = (i / tubularSegments) * arc;\r\n          const v = (j / radialSegments) * Math.PI * 2; // vertex\r\n\r\n          vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\r\n          vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\r\n          vertex.z = tube * Math.sin(v);\r\n          vertices.push(vertex.x, vertex.y, vertex.z); // normal\r\n\r\n          center.x = radius * Math.cos(u);\r\n          center.y = radius * Math.sin(u);\r\n          normal.subVectors(vertex, center).normalize();\r\n          normals.push(normal.x, normal.y, normal.z); // uv\r\n\r\n          uvs.push(i / tubularSegments);\r\n          uvs.push(j / radialSegments);\r\n        }\r\n      } // generate indices\r\n\r\n      for (let j = 1; j <= radialSegments; j++) {\r\n        for (let i = 1; i <= tubularSegments; i++) {\r\n          // indices\r\n          const a = (tubularSegments + 1) * j + i - 1;\r\n          const b = (tubularSegments + 1) * (j - 1) + i - 1;\r\n          const c = (tubularSegments + 1) * (j - 1) + i;\r\n          const d = (tubularSegments + 1) * j + i; // faces\r\n\r\n          indices.push(a, b, d);\r\n          indices.push(b, c, d);\r\n        }\r\n      } // build geometry\r\n\r\n      this.setIndex(indices);\r\n      this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n      this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n      this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n    }\r\n  }\r\n\r\n  class TorusKnotGeometry extends BufferGeometry {\r\n    constructor(radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3) {\r\n      super();\r\n      this.type = 'TorusKnotGeometry';\r\n      this.parameters = {\r\n        radius: radius,\r\n        tube: tube,\r\n        tubularSegments: tubularSegments,\r\n        radialSegments: radialSegments,\r\n        p: p,\r\n        q: q,\r\n      };\r\n      tubularSegments = Math.floor(tubularSegments);\r\n      radialSegments = Math.floor(radialSegments); // buffers\r\n\r\n      const indices = [];\r\n      const vertices = [];\r\n      const normals = [];\r\n      const uvs = []; // helper variables\r\n\r\n      const vertex = new Vector3();\r\n      const normal = new Vector3();\r\n      const P1 = new Vector3();\r\n      const P2 = new Vector3();\r\n      const B = new Vector3();\r\n      const T = new Vector3();\r\n      const N = new Vector3(); // generate vertices, normals and uvs\r\n\r\n      for (let i = 0; i <= tubularSegments; ++i) {\r\n        // the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\r\n        const u = (i / tubularSegments) * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\r\n        // these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\r\n\r\n        calculatePositionOnCurve(u, p, q, radius, P1);\r\n        calculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\r\n\r\n        T.subVectors(P2, P1);\r\n        N.addVectors(P2, P1);\r\n        B.crossVectors(T, N);\r\n        N.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\r\n\r\n        B.normalize();\r\n        N.normalize();\r\n\r\n        for (let j = 0; j <= radialSegments; ++j) {\r\n          // now calculate the vertices. they are nothing more than an extrusion of the torus curve.\r\n          // because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\r\n          const v = (j / radialSegments) * Math.PI * 2;\r\n          const cx = -tube * Math.cos(v);\r\n          const cy = tube * Math.sin(v); // now calculate the final vertex position.\r\n          // first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\r\n\r\n          vertex.x = P1.x + (cx * N.x + cy * B.x);\r\n          vertex.y = P1.y + (cx * N.y + cy * B.y);\r\n          vertex.z = P1.z + (cx * N.z + cy * B.z);\r\n          vertices.push(vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\r\n\r\n          normal.subVectors(vertex, P1).normalize();\r\n          normals.push(normal.x, normal.y, normal.z); // uv\r\n\r\n          uvs.push(i / tubularSegments);\r\n          uvs.push(j / radialSegments);\r\n        }\r\n      } // generate indices\r\n\r\n      for (let j = 1; j <= tubularSegments; j++) {\r\n        for (let i = 1; i <= radialSegments; i++) {\r\n          // indices\r\n          const a = (radialSegments + 1) * (j - 1) + (i - 1);\r\n          const b = (radialSegments + 1) * j + (i - 1);\r\n          const c = (radialSegments + 1) * j + i;\r\n          const d = (radialSegments + 1) * (j - 1) + i; // faces\r\n\r\n          indices.push(a, b, d);\r\n          indices.push(b, c, d);\r\n        }\r\n      } // build geometry\r\n\r\n      this.setIndex(indices);\r\n      this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n      this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n      this.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // this function calculates the current position on the torus curve\r\n\r\n      function calculatePositionOnCurve(u, p, q, radius, position) {\r\n        const cu = Math.cos(u);\r\n        const su = Math.sin(u);\r\n        const quOverP = (q / p) * u;\r\n        const cs = Math.cos(quOverP);\r\n        position.x = radius * (2 + cs) * 0.5 * cu;\r\n        position.y = radius * (2 + cs) * su * 0.5;\r\n        position.z = radius * Math.sin(quOverP) * 0.5;\r\n      }\r\n    }\r\n  }\r\n\r\n  class TubeGeometry extends BufferGeometry {\r\n    constructor(path, tubularSegments = 64, radius = 1, radialSegments = 8, closed = false) {\r\n      super();\r\n      this.type = 'TubeGeometry';\r\n      this.parameters = {\r\n        path: path,\r\n        tubularSegments: tubularSegments,\r\n        radius: radius,\r\n        radialSegments: radialSegments,\r\n        closed: closed,\r\n      };\r\n      const frames = path.computeFrenetFrames(tubularSegments, closed); // expose internals\r\n\r\n      this.tangents = frames.tangents;\r\n      this.normals = frames.normals;\r\n      this.binormals = frames.binormals; // helper variables\r\n\r\n      const vertex = new Vector3();\r\n      const normal = new Vector3();\r\n      const uv = new Vector2();\r\n      let P = new Vector3(); // buffer\r\n\r\n      const vertices = [];\r\n      const normals = [];\r\n      const uvs = [];\r\n      const indices = []; // create buffer data\r\n\r\n      generateBufferData(); // build geometry\r\n\r\n      this.setIndex(indices);\r\n      this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n      this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n      this.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // functions\r\n\r\n      function generateBufferData() {\r\n        for (let i = 0; i < tubularSegments; i++) {\r\n          generateSegment(i);\r\n        } // if the geometry is not closed, generate the last row of vertices and normals\r\n        // at the regular position on the given path\r\n        //\r\n        // if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\r\n\r\n        generateSegment(closed === false ? tubularSegments : 0); // uvs are generated in a separate function.\r\n        // this makes it easy compute correct values for closed geometries\r\n\r\n        generateUVs(); // finally create faces\r\n\r\n        generateIndices();\r\n      }\r\n\r\n      function generateSegment(i) {\r\n        // we use getPointAt to sample evenly distributed points from the given path\r\n        P = path.getPointAt(i / tubularSegments, P); // retrieve corresponding normal and binormal\r\n\r\n        const N = frames.normals[i];\r\n        const B = frames.binormals[i]; // generate normals and vertices for the current segment\r\n\r\n        for (let j = 0; j <= radialSegments; j++) {\r\n          const v = (j / radialSegments) * Math.PI * 2;\r\n          const sin = Math.sin(v);\r\n          const cos = -Math.cos(v); // normal\r\n\r\n          normal.x = cos * N.x + sin * B.x;\r\n          normal.y = cos * N.y + sin * B.y;\r\n          normal.z = cos * N.z + sin * B.z;\r\n          normal.normalize();\r\n          normals.push(normal.x, normal.y, normal.z); // vertex\r\n\r\n          vertex.x = P.x + radius * normal.x;\r\n          vertex.y = P.y + radius * normal.y;\r\n          vertex.z = P.z + radius * normal.z;\r\n          vertices.push(vertex.x, vertex.y, vertex.z);\r\n        }\r\n      }\r\n\r\n      function generateIndices() {\r\n        for (let j = 1; j <= tubularSegments; j++) {\r\n          for (let i = 1; i <= radialSegments; i++) {\r\n            const a = (radialSegments + 1) * (j - 1) + (i - 1);\r\n            const b = (radialSegments + 1) * j + (i - 1);\r\n            const c = (radialSegments + 1) * j + i;\r\n            const d = (radialSegments + 1) * (j - 1) + i; // faces\r\n\r\n            indices.push(a, b, d);\r\n            indices.push(b, c, d);\r\n          }\r\n        }\r\n      }\r\n\r\n      function generateUVs() {\r\n        for (let i = 0; i <= tubularSegments; i++) {\r\n          for (let j = 0; j <= radialSegments; j++) {\r\n            uv.x = i / tubularSegments;\r\n            uv.y = j / radialSegments;\r\n            uvs.push(uv.x, uv.y);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    toJSON() {\r\n      const data = super.toJSON();\r\n      data.path = this.parameters.path.toJSON();\r\n      return data;\r\n    }\r\n  }\r\n\r\n  class WireframeGeometry extends BufferGeometry {\r\n    constructor(geometry) {\r\n      super();\r\n      this.type = 'WireframeGeometry';\r\n\r\n      if (geometry.isGeometry === true) {\r\n        console.error(\r\n          'THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.',\r\n        );\r\n        return;\r\n      } // buffer\r\n\r\n      const vertices = []; // helper variables\r\n\r\n      const edge = [0, 0],\r\n        edges = {};\r\n      const vertex = new Vector3();\r\n\r\n      if (geometry.index !== null) {\r\n        // indexed BufferGeometry\r\n        const position = geometry.attributes.position;\r\n        const indices = geometry.index;\r\n        let groups = geometry.groups;\r\n\r\n        if (groups.length === 0) {\r\n          groups = [\r\n            {\r\n              start: 0,\r\n              count: indices.count,\r\n              materialIndex: 0,\r\n            },\r\n          ];\r\n        } // create a data structure that contains all eges without duplicates\r\n\r\n        for (let o = 0, ol = groups.length; o < ol; ++o) {\r\n          const group = groups[o];\r\n          const start = group.start;\r\n          const count = group.count;\r\n\r\n          for (let i = start, l = start + count; i < l; i += 3) {\r\n            for (let j = 0; j < 3; j++) {\r\n              const edge1 = indices.getX(i + j);\r\n              const edge2 = indices.getX(i + ((j + 1) % 3));\r\n              edge[0] = Math.min(edge1, edge2); // sorting prevents duplicates\r\n\r\n              edge[1] = Math.max(edge1, edge2);\r\n              const key = edge[0] + ',' + edge[1];\r\n\r\n              if (edges[key] === undefined) {\r\n                edges[key] = {\r\n                  index1: edge[0],\r\n                  index2: edge[1],\r\n                };\r\n              }\r\n            }\r\n          }\r\n        } // generate vertices\r\n\r\n        for (const key in edges) {\r\n          const e = edges[key];\r\n          vertex.fromBufferAttribute(position, e.index1);\r\n          vertices.push(vertex.x, vertex.y, vertex.z);\r\n          vertex.fromBufferAttribute(position, e.index2);\r\n          vertices.push(vertex.x, vertex.y, vertex.z);\r\n        }\r\n      } else {\r\n        // non-indexed BufferGeometry\r\n        const position = geometry.attributes.position;\r\n\r\n        for (let i = 0, l = position.count / 3; i < l; i++) {\r\n          for (let j = 0; j < 3; j++) {\r\n            // three edges per triangle, an edge is represented as (index1, index2)\r\n            // e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\r\n            const index1 = 3 * i + j;\r\n            vertex.fromBufferAttribute(position, index1);\r\n            vertices.push(vertex.x, vertex.y, vertex.z);\r\n            const index2 = 3 * i + ((j + 1) % 3);\r\n            vertex.fromBufferAttribute(position, index2);\r\n            vertices.push(vertex.x, vertex.y, vertex.z);\r\n          }\r\n        }\r\n      } // build geometry\r\n\r\n      this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n    }\r\n  }\r\n\r\n  var Geometries = /*#__PURE__*/ Object.freeze({\r\n    __proto__: null,\r\n    BoxGeometry: BoxGeometry,\r\n    BoxBufferGeometry: BoxGeometry,\r\n    CircleGeometry: CircleGeometry,\r\n    CircleBufferGeometry: CircleGeometry,\r\n    ConeGeometry: ConeGeometry,\r\n    ConeBufferGeometry: ConeGeometry,\r\n    CylinderGeometry: CylinderGeometry,\r\n    CylinderBufferGeometry: CylinderGeometry,\r\n    DodecahedronGeometry: DodecahedronGeometry,\r\n    DodecahedronBufferGeometry: DodecahedronGeometry,\r\n    EdgesGeometry: EdgesGeometry,\r\n    ExtrudeGeometry: ExtrudeGeometry,\r\n    ExtrudeBufferGeometry: ExtrudeGeometry,\r\n    IcosahedronGeometry: IcosahedronGeometry,\r\n    IcosahedronBufferGeometry: IcosahedronGeometry,\r\n    LatheGeometry: LatheGeometry,\r\n    LatheBufferGeometry: LatheGeometry,\r\n    OctahedronGeometry: OctahedronGeometry,\r\n    OctahedronBufferGeometry: OctahedronGeometry,\r\n    ParametricGeometry: ParametricGeometry,\r\n    ParametricBufferGeometry: ParametricGeometry,\r\n    PlaneGeometry: PlaneGeometry,\r\n    PlaneBufferGeometry: PlaneGeometry,\r\n    PolyhedronGeometry: PolyhedronGeometry,\r\n    PolyhedronBufferGeometry: PolyhedronGeometry,\r\n    RingGeometry: RingGeometry,\r\n    RingBufferGeometry: RingGeometry,\r\n    ShapeGeometry: ShapeGeometry,\r\n    ShapeBufferGeometry: ShapeGeometry,\r\n    SphereGeometry: SphereGeometry,\r\n    SphereBufferGeometry: SphereGeometry,\r\n    TetrahedronGeometry: TetrahedronGeometry,\r\n    TetrahedronBufferGeometry: TetrahedronGeometry,\r\n    TextGeometry: TextGeometry,\r\n    TextBufferGeometry: TextGeometry,\r\n    TorusGeometry: TorusGeometry,\r\n    TorusBufferGeometry: TorusGeometry,\r\n    TorusKnotGeometry: TorusKnotGeometry,\r\n    TorusKnotBufferGeometry: TorusKnotGeometry,\r\n    TubeGeometry: TubeGeometry,\r\n    TubeBufferGeometry: TubeGeometry,\r\n    WireframeGeometry: WireframeGeometry,\r\n  });\r\n\r\n  /**\r\n   * parameters = {\r\n   *\tcolor: <THREE.Color>\r\n   * }\r\n   */\r\n\r\n  class ShadowMaterial extends Material {\r\n    constructor(parameters) {\r\n      super();\r\n      this.type = 'ShadowMaterial';\r\n      this.color = new Color(0x000000);\r\n      this.transparent = true;\r\n      this.setValues(parameters);\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.color.copy(source.color);\r\n      return this;\r\n    }\r\n  }\r\n\r\n  ShadowMaterial.prototype.isShadowMaterial = true;\r\n\r\n  class RawShaderMaterial extends ShaderMaterial {\r\n    constructor(parameters) {\r\n      super(parameters);\r\n      this.type = 'RawShaderMaterial';\r\n    }\r\n  }\r\n\r\n  RawShaderMaterial.prototype.isRawShaderMaterial = true;\r\n\r\n  /**\r\n   * parameters = {\r\n   *\tcolor: <hex>,\r\n   *\troughness: <float>,\r\n   *\tmetalness: <float>,\r\n   *\topacity: <float>,\r\n   *\r\n   *\tmap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tlightMap: new THREE.Texture( <Image> ),\r\n   *\tlightMapIntensity: <float>\r\n   *\r\n   *\taoMap: new THREE.Texture( <Image> ),\r\n   *\taoMapIntensity: <float>\r\n   *\r\n   *\temissive: <hex>,\r\n   *\temissiveIntensity: <float>\r\n   *\temissiveMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tbumpMap: new THREE.Texture( <Image> ),\r\n   *\tbumpScale: <float>,\r\n   *\r\n   *\tnormalMap: new THREE.Texture( <Image> ),\r\n   *\tnormalMapType: THREE.TangentSpaceNormalMap,\r\n   *\tnormalScale: <Vector2>,\r\n   *\r\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n   *\tdisplacementScale: <float>,\r\n   *\tdisplacementBias: <float>,\r\n   *\r\n   *\troughnessMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tmetalnessMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\talphaMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n   *\tenvMapIntensity: <float>\r\n   *\r\n   *\trefractionRatio: <float>,\r\n   *\r\n   *\twireframe: <boolean>,\r\n   *\twireframeLinewidth: <float>,\r\n   *\r\n   *\tmorphTargets: <bool>,\r\n   *\tmorphNormals: <bool>,\r\n   *\r\n   *\tflatShading: <bool>\r\n   * }\r\n   */\r\n\r\n  class MeshStandardMaterial extends Material {\r\n    constructor(parameters) {\r\n      super();\r\n      this.defines = {\r\n        STANDARD: '',\r\n      };\r\n      this.type = 'MeshStandardMaterial';\r\n      this.color = new Color(0xffffff); // diffuse\r\n\r\n      this.roughness = 1.0;\r\n      this.metalness = 0.0;\r\n      this.map = null;\r\n      this.lightMap = null;\r\n      this.lightMapIntensity = 1.0;\r\n      this.aoMap = null;\r\n      this.aoMapIntensity = 1.0;\r\n      this.emissive = new Color(0x000000);\r\n      this.emissiveIntensity = 1.0;\r\n      this.emissiveMap = null;\r\n      this.bumpMap = null;\r\n      this.bumpScale = 1;\r\n      this.normalMap = null;\r\n      this.normalMapType = TangentSpaceNormalMap;\r\n      this.normalScale = new Vector2(1, 1);\r\n      this.displacementMap = null;\r\n      this.displacementScale = 1;\r\n      this.displacementBias = 0;\r\n      this.roughnessMap = null;\r\n      this.metalnessMap = null;\r\n      this.alphaMap = null;\r\n      this.envMap = null;\r\n      this.envMapIntensity = 1.0;\r\n      this.refractionRatio = 0.98;\r\n      this.wireframe = false;\r\n      this.wireframeLinewidth = 1;\r\n      this.wireframeLinecap = 'round';\r\n      this.wireframeLinejoin = 'round';\r\n      this.morphTargets = false;\r\n      this.morphNormals = false;\r\n      this.flatShading = false;\r\n      this.vertexTangents = false;\r\n      this.setValues(parameters);\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.defines = {\r\n        STANDARD: '',\r\n      };\r\n      this.color.copy(source.color);\r\n      this.roughness = source.roughness;\r\n      this.metalness = source.metalness;\r\n      this.map = source.map;\r\n      this.lightMap = source.lightMap;\r\n      this.lightMapIntensity = source.lightMapIntensity;\r\n      this.aoMap = source.aoMap;\r\n      this.aoMapIntensity = source.aoMapIntensity;\r\n      this.emissive.copy(source.emissive);\r\n      this.emissiveMap = source.emissiveMap;\r\n      this.emissiveIntensity = source.emissiveIntensity;\r\n      this.bumpMap = source.bumpMap;\r\n      this.bumpScale = source.bumpScale;\r\n      this.normalMap = source.normalMap;\r\n      this.normalMapType = source.normalMapType;\r\n      this.normalScale.copy(source.normalScale);\r\n      this.displacementMap = source.displacementMap;\r\n      this.displacementScale = source.displacementScale;\r\n      this.displacementBias = source.displacementBias;\r\n      this.roughnessMap = source.roughnessMap;\r\n      this.metalnessMap = source.metalnessMap;\r\n      this.alphaMap = source.alphaMap;\r\n      this.envMap = source.envMap;\r\n      this.envMapIntensity = source.envMapIntensity;\r\n      this.refractionRatio = source.refractionRatio;\r\n      this.wireframe = source.wireframe;\r\n      this.wireframeLinewidth = source.wireframeLinewidth;\r\n      this.wireframeLinecap = source.wireframeLinecap;\r\n      this.wireframeLinejoin = source.wireframeLinejoin;\r\n      this.morphTargets = source.morphTargets;\r\n      this.morphNormals = source.morphNormals;\r\n      this.flatShading = source.flatShading;\r\n      this.vertexTangents = source.vertexTangents;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  MeshStandardMaterial.prototype.isMeshStandardMaterial = true;\r\n\r\n  /**\r\n   * parameters = {\r\n   *\tclearcoat: <float>,\r\n   *\tclearcoatMap: new THREE.Texture( <Image> ),\r\n   *\tclearcoatRoughness: <float>,\r\n   *\tclearcoatRoughnessMap: new THREE.Texture( <Image> ),\r\n   *\tclearcoatNormalScale: <Vector2>,\r\n   *\tclearcoatNormalMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\treflectivity: <float>,\r\n   *\tior: <float>,\r\n   *\r\n   *\tsheen: <Color>,\r\n   *\r\n   *\ttransmission: <float>,\r\n   *\ttransmissionMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tthickness: <float>,\r\n   *\tthicknessMap: new THREE.Texture( <Image> ),\r\n   *\tattenuationDistance: <float>,\r\n   *\tattenuationColor: <Color>\r\n   * }\r\n   */\r\n\r\n  class MeshPhysicalMaterial extends MeshStandardMaterial {\r\n    constructor(parameters) {\r\n      super();\r\n      this.defines = {\r\n        STANDARD: '',\r\n        PHYSICAL: '',\r\n      };\r\n      this.type = 'MeshPhysicalMaterial';\r\n      this.clearcoat = 0.0;\r\n      this.clearcoatMap = null;\r\n      this.clearcoatRoughness = 0.0;\r\n      this.clearcoatRoughnessMap = null;\r\n      this.clearcoatNormalScale = new Vector2(1, 1);\r\n      this.clearcoatNormalMap = null;\r\n      this.reflectivity = 0.5; // maps to F0 = 0.04\r\n\r\n      Object.defineProperty(this, 'ior', {\r\n        get: function () {\r\n          return (1 + 0.4 * this.reflectivity) / (1 - 0.4 * this.reflectivity);\r\n        },\r\n        set: function (ior) {\r\n          this.reflectivity = clamp((2.5 * (ior - 1)) / (ior + 1), 0, 1);\r\n        },\r\n      });\r\n      this.sheen = null; // null will disable sheen bsdf\r\n\r\n      this.transmission = 0.0;\r\n      this.transmissionMap = null;\r\n      this.thickness = 0.01;\r\n      this.thicknessMap = null;\r\n      this.attenuationDistance = 0.0;\r\n      this.attenuationColor = new Color(1, 1, 1);\r\n      this.setValues(parameters);\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.defines = {\r\n        STANDARD: '',\r\n        PHYSICAL: '',\r\n      };\r\n      this.clearcoat = source.clearcoat;\r\n      this.clearcoatMap = source.clearcoatMap;\r\n      this.clearcoatRoughness = source.clearcoatRoughness;\r\n      this.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\r\n      this.clearcoatNormalMap = source.clearcoatNormalMap;\r\n      this.clearcoatNormalScale.copy(source.clearcoatNormalScale);\r\n      this.reflectivity = source.reflectivity;\r\n\r\n      if (source.sheen) {\r\n        this.sheen = (this.sheen || new Color()).copy(source.sheen);\r\n      } else {\r\n        this.sheen = null;\r\n      }\r\n\r\n      this.transmission = source.transmission;\r\n      this.transmissionMap = source.transmissionMap;\r\n      this.thickness = source.thickness;\r\n      this.thicknessMap = source.thicknessMap;\r\n      this.attenuationDistance = source.attenuationDistance;\r\n      this.attenuationColor.copy(source.attenuationColor);\r\n      return this;\r\n    }\r\n  }\r\n\r\n  MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\r\n\r\n  /**\r\n   * parameters = {\r\n   *\tcolor: <hex>,\r\n   *\tspecular: <hex>,\r\n   *\tshininess: <float>,\r\n   *\topacity: <float>,\r\n   *\r\n   *\tmap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tlightMap: new THREE.Texture( <Image> ),\r\n   *\tlightMapIntensity: <float>\r\n   *\r\n   *\taoMap: new THREE.Texture( <Image> ),\r\n   *\taoMapIntensity: <float>\r\n   *\r\n   *\temissive: <hex>,\r\n   *\temissiveIntensity: <float>\r\n   *\temissiveMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tbumpMap: new THREE.Texture( <Image> ),\r\n   *\tbumpScale: <float>,\r\n   *\r\n   *\tnormalMap: new THREE.Texture( <Image> ),\r\n   *\tnormalMapType: THREE.TangentSpaceNormalMap,\r\n   *\tnormalScale: <Vector2>,\r\n   *\r\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n   *\tdisplacementScale: <float>,\r\n   *\tdisplacementBias: <float>,\r\n   *\r\n   *\tspecularMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\talphaMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n   *\tcombine: THREE.MultiplyOperation,\r\n   *\treflectivity: <float>,\r\n   *\trefractionRatio: <float>,\r\n   *\r\n   *\twireframe: <boolean>,\r\n   *\twireframeLinewidth: <float>,\r\n   *\r\n   *\tmorphTargets: <bool>,\r\n   *\tmorphNormals: <bool>,\r\n   *\r\n   *\tflatShading: <bool>\r\n   * }\r\n   */\r\n\r\n  class MeshPhongMaterial extends Material {\r\n    constructor(parameters) {\r\n      super();\r\n      this.type = 'MeshPhongMaterial';\r\n      this.color = new Color(0xffffff); // diffuse\r\n\r\n      this.specular = new Color(0x111111);\r\n      this.shininess = 30;\r\n      this.map = null;\r\n      this.lightMap = null;\r\n      this.lightMapIntensity = 1.0;\r\n      this.aoMap = null;\r\n      this.aoMapIntensity = 1.0;\r\n      this.emissive = new Color(0x000000);\r\n      this.emissiveIntensity = 1.0;\r\n      this.emissiveMap = null;\r\n      this.bumpMap = null;\r\n      this.bumpScale = 1;\r\n      this.normalMap = null;\r\n      this.normalMapType = TangentSpaceNormalMap;\r\n      this.normalScale = new Vector2(1, 1);\r\n      this.displacementMap = null;\r\n      this.displacementScale = 1;\r\n      this.displacementBias = 0;\r\n      this.specularMap = null;\r\n      this.alphaMap = null;\r\n      this.envMap = null;\r\n      this.combine = MultiplyOperation;\r\n      this.reflectivity = 1;\r\n      this.refractionRatio = 0.98;\r\n      this.wireframe = false;\r\n      this.wireframeLinewidth = 1;\r\n      this.wireframeLinecap = 'round';\r\n      this.wireframeLinejoin = 'round';\r\n      this.morphTargets = false;\r\n      this.morphNormals = false;\r\n      this.flatShading = false;\r\n      this.setValues(parameters);\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.color.copy(source.color);\r\n      this.specular.copy(source.specular);\r\n      this.shininess = source.shininess;\r\n      this.map = source.map;\r\n      this.lightMap = source.lightMap;\r\n      this.lightMapIntensity = source.lightMapIntensity;\r\n      this.aoMap = source.aoMap;\r\n      this.aoMapIntensity = source.aoMapIntensity;\r\n      this.emissive.copy(source.emissive);\r\n      this.emissiveMap = source.emissiveMap;\r\n      this.emissiveIntensity = source.emissiveIntensity;\r\n      this.bumpMap = source.bumpMap;\r\n      this.bumpScale = source.bumpScale;\r\n      this.normalMap = source.normalMap;\r\n      this.normalMapType = source.normalMapType;\r\n      this.normalScale.copy(source.normalScale);\r\n      this.displacementMap = source.displacementMap;\r\n      this.displacementScale = source.displacementScale;\r\n      this.displacementBias = source.displacementBias;\r\n      this.specularMap = source.specularMap;\r\n      this.alphaMap = source.alphaMap;\r\n      this.envMap = source.envMap;\r\n      this.combine = source.combine;\r\n      this.reflectivity = source.reflectivity;\r\n      this.refractionRatio = source.refractionRatio;\r\n      this.wireframe = source.wireframe;\r\n      this.wireframeLinewidth = source.wireframeLinewidth;\r\n      this.wireframeLinecap = source.wireframeLinecap;\r\n      this.wireframeLinejoin = source.wireframeLinejoin;\r\n      this.morphTargets = source.morphTargets;\r\n      this.morphNormals = source.morphNormals;\r\n      this.flatShading = source.flatShading;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  MeshPhongMaterial.prototype.isMeshPhongMaterial = true;\r\n\r\n  /**\r\n   * parameters = {\r\n   *\tcolor: <hex>,\r\n   *\r\n   *\tmap: new THREE.Texture( <Image> ),\r\n   *\tgradientMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tlightMap: new THREE.Texture( <Image> ),\r\n   *\tlightMapIntensity: <float>\r\n   *\r\n   *\taoMap: new THREE.Texture( <Image> ),\r\n   *\taoMapIntensity: <float>\r\n   *\r\n   *\temissive: <hex>,\r\n   *\temissiveIntensity: <float>\r\n   *\temissiveMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tbumpMap: new THREE.Texture( <Image> ),\r\n   *\tbumpScale: <float>,\r\n   *\r\n   *\tnormalMap: new THREE.Texture( <Image> ),\r\n   *\tnormalMapType: THREE.TangentSpaceNormalMap,\r\n   *\tnormalScale: <Vector2>,\r\n   *\r\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n   *\tdisplacementScale: <float>,\r\n   *\tdisplacementBias: <float>,\r\n   *\r\n   *\talphaMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\twireframe: <boolean>,\r\n   *\twireframeLinewidth: <float>,\r\n   *\r\n   *\tmorphTargets: <bool>,\r\n   *\tmorphNormals: <bool>\r\n   * }\r\n   */\r\n\r\n  class MeshToonMaterial extends Material {\r\n    constructor(parameters) {\r\n      super();\r\n      this.defines = {\r\n        TOON: '',\r\n      };\r\n      this.type = 'MeshToonMaterial';\r\n      this.color = new Color(0xffffff);\r\n      this.map = null;\r\n      this.gradientMap = null;\r\n      this.lightMap = null;\r\n      this.lightMapIntensity = 1.0;\r\n      this.aoMap = null;\r\n      this.aoMapIntensity = 1.0;\r\n      this.emissive = new Color(0x000000);\r\n      this.emissiveIntensity = 1.0;\r\n      this.emissiveMap = null;\r\n      this.bumpMap = null;\r\n      this.bumpScale = 1;\r\n      this.normalMap = null;\r\n      this.normalMapType = TangentSpaceNormalMap;\r\n      this.normalScale = new Vector2(1, 1);\r\n      this.displacementMap = null;\r\n      this.displacementScale = 1;\r\n      this.displacementBias = 0;\r\n      this.alphaMap = null;\r\n      this.wireframe = false;\r\n      this.wireframeLinewidth = 1;\r\n      this.wireframeLinecap = 'round';\r\n      this.wireframeLinejoin = 'round';\r\n      this.morphTargets = false;\r\n      this.morphNormals = false;\r\n      this.setValues(parameters);\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.color.copy(source.color);\r\n      this.map = source.map;\r\n      this.gradientMap = source.gradientMap;\r\n      this.lightMap = source.lightMap;\r\n      this.lightMapIntensity = source.lightMapIntensity;\r\n      this.aoMap = source.aoMap;\r\n      this.aoMapIntensity = source.aoMapIntensity;\r\n      this.emissive.copy(source.emissive);\r\n      this.emissiveMap = source.emissiveMap;\r\n      this.emissiveIntensity = source.emissiveIntensity;\r\n      this.bumpMap = source.bumpMap;\r\n      this.bumpScale = source.bumpScale;\r\n      this.normalMap = source.normalMap;\r\n      this.normalMapType = source.normalMapType;\r\n      this.normalScale.copy(source.normalScale);\r\n      this.displacementMap = source.displacementMap;\r\n      this.displacementScale = source.displacementScale;\r\n      this.displacementBias = source.displacementBias;\r\n      this.alphaMap = source.alphaMap;\r\n      this.wireframe = source.wireframe;\r\n      this.wireframeLinewidth = source.wireframeLinewidth;\r\n      this.wireframeLinecap = source.wireframeLinecap;\r\n      this.wireframeLinejoin = source.wireframeLinejoin;\r\n      this.morphTargets = source.morphTargets;\r\n      this.morphNormals = source.morphNormals;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  MeshToonMaterial.prototype.isMeshToonMaterial = true;\r\n\r\n  /**\r\n   * parameters = {\r\n   *\topacity: <float>,\r\n   *\r\n   *\tbumpMap: new THREE.Texture( <Image> ),\r\n   *\tbumpScale: <float>,\r\n   *\r\n   *\tnormalMap: new THREE.Texture( <Image> ),\r\n   *\tnormalMapType: THREE.TangentSpaceNormalMap,\r\n   *\tnormalScale: <Vector2>,\r\n   *\r\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n   *\tdisplacementScale: <float>,\r\n   *\tdisplacementBias: <float>,\r\n   *\r\n   *\twireframe: <boolean>,\r\n   *\twireframeLinewidth: <float>\r\n   *\r\n   *\tmorphTargets: <bool>,\r\n   *\tmorphNormals: <bool>,\r\n   *\r\n   *\tflatShading: <bool>\r\n   * }\r\n   */\r\n\r\n  class MeshNormalMaterial extends Material {\r\n    constructor(parameters) {\r\n      super();\r\n      this.type = 'MeshNormalMaterial';\r\n      this.bumpMap = null;\r\n      this.bumpScale = 1;\r\n      this.normalMap = null;\r\n      this.normalMapType = TangentSpaceNormalMap;\r\n      this.normalScale = new Vector2(1, 1);\r\n      this.displacementMap = null;\r\n      this.displacementScale = 1;\r\n      this.displacementBias = 0;\r\n      this.wireframe = false;\r\n      this.wireframeLinewidth = 1;\r\n      this.fog = false;\r\n      this.morphTargets = false;\r\n      this.morphNormals = false;\r\n      this.flatShading = false;\r\n      this.setValues(parameters);\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.bumpMap = source.bumpMap;\r\n      this.bumpScale = source.bumpScale;\r\n      this.normalMap = source.normalMap;\r\n      this.normalMapType = source.normalMapType;\r\n      this.normalScale.copy(source.normalScale);\r\n      this.displacementMap = source.displacementMap;\r\n      this.displacementScale = source.displacementScale;\r\n      this.displacementBias = source.displacementBias;\r\n      this.wireframe = source.wireframe;\r\n      this.wireframeLinewidth = source.wireframeLinewidth;\r\n      this.morphTargets = source.morphTargets;\r\n      this.morphNormals = source.morphNormals;\r\n      this.flatShading = source.flatShading;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  MeshNormalMaterial.prototype.isMeshNormalMaterial = true;\r\n\r\n  /**\r\n   * parameters = {\r\n   *\tcolor: <hex>,\r\n   *\topacity: <float>,\r\n   *\r\n   *\tmap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tlightMap: new THREE.Texture( <Image> ),\r\n   *\tlightMapIntensity: <float>\r\n   *\r\n   *\taoMap: new THREE.Texture( <Image> ),\r\n   *\taoMapIntensity: <float>\r\n   *\r\n   *\temissive: <hex>,\r\n   *\temissiveIntensity: <float>\r\n   *\temissiveMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tspecularMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\talphaMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n   *\tcombine: THREE.Multiply,\r\n   *\treflectivity: <float>,\r\n   *\trefractionRatio: <float>,\r\n   *\r\n   *\twireframe: <boolean>,\r\n   *\twireframeLinewidth: <float>,\r\n   *\r\n   *\tmorphTargets: <bool>,\r\n   *\tmorphNormals: <bool>\r\n   * }\r\n   */\r\n\r\n  class MeshLambertMaterial extends Material {\r\n    constructor(parameters) {\r\n      super();\r\n      this.type = 'MeshLambertMaterial';\r\n      this.color = new Color(0xffffff); // diffuse\r\n\r\n      this.map = null;\r\n      this.lightMap = null;\r\n      this.lightMapIntensity = 1.0;\r\n      this.aoMap = null;\r\n      this.aoMapIntensity = 1.0;\r\n      this.emissive = new Color(0x000000);\r\n      this.emissiveIntensity = 1.0;\r\n      this.emissiveMap = null;\r\n      this.specularMap = null;\r\n      this.alphaMap = null;\r\n      this.envMap = null;\r\n      this.combine = MultiplyOperation;\r\n      this.reflectivity = 1;\r\n      this.refractionRatio = 0.98;\r\n      this.wireframe = false;\r\n      this.wireframeLinewidth = 1;\r\n      this.wireframeLinecap = 'round';\r\n      this.wireframeLinejoin = 'round';\r\n      this.morphTargets = false;\r\n      this.morphNormals = false;\r\n      this.setValues(parameters);\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.color.copy(source.color);\r\n      this.map = source.map;\r\n      this.lightMap = source.lightMap;\r\n      this.lightMapIntensity = source.lightMapIntensity;\r\n      this.aoMap = source.aoMap;\r\n      this.aoMapIntensity = source.aoMapIntensity;\r\n      this.emissive.copy(source.emissive);\r\n      this.emissiveMap = source.emissiveMap;\r\n      this.emissiveIntensity = source.emissiveIntensity;\r\n      this.specularMap = source.specularMap;\r\n      this.alphaMap = source.alphaMap;\r\n      this.envMap = source.envMap;\r\n      this.combine = source.combine;\r\n      this.reflectivity = source.reflectivity;\r\n      this.refractionRatio = source.refractionRatio;\r\n      this.wireframe = source.wireframe;\r\n      this.wireframeLinewidth = source.wireframeLinewidth;\r\n      this.wireframeLinecap = source.wireframeLinecap;\r\n      this.wireframeLinejoin = source.wireframeLinejoin;\r\n      this.morphTargets = source.morphTargets;\r\n      this.morphNormals = source.morphNormals;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  MeshLambertMaterial.prototype.isMeshLambertMaterial = true;\r\n\r\n  /**\r\n   * parameters = {\r\n   *\tcolor: <hex>,\r\n   *\topacity: <float>,\r\n   *\r\n   *\tmatcap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tmap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tbumpMap: new THREE.Texture( <Image> ),\r\n   *\tbumpScale: <float>,\r\n   *\r\n   *\tnormalMap: new THREE.Texture( <Image> ),\r\n   *\tnormalMapType: THREE.TangentSpaceNormalMap,\r\n   *\tnormalScale: <Vector2>,\r\n   *\r\n   *\tdisplacementMap: new THREE.Texture( <Image> ),\r\n   *\tdisplacementScale: <float>,\r\n   *\tdisplacementBias: <float>,\r\n   *\r\n   *\talphaMap: new THREE.Texture( <Image> ),\r\n   *\r\n   *\tmorphTargets: <bool>,\r\n   *\tmorphNormals: <bool>\r\n   *\r\n   *\tflatShading: <bool>\r\n   * }\r\n   */\r\n\r\n  class MeshMatcapMaterial extends Material {\r\n    constructor(parameters) {\r\n      super();\r\n      this.defines = {\r\n        MATCAP: '',\r\n      };\r\n      this.type = 'MeshMatcapMaterial';\r\n      this.color = new Color(0xffffff); // diffuse\r\n\r\n      this.matcap = null;\r\n      this.map = null;\r\n      this.bumpMap = null;\r\n      this.bumpScale = 1;\r\n      this.normalMap = null;\r\n      this.normalMapType = TangentSpaceNormalMap;\r\n      this.normalScale = new Vector2(1, 1);\r\n      this.displacementMap = null;\r\n      this.displacementScale = 1;\r\n      this.displacementBias = 0;\r\n      this.alphaMap = null;\r\n      this.morphTargets = false;\r\n      this.morphNormals = false;\r\n      this.flatShading = false;\r\n      this.setValues(parameters);\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.defines = {\r\n        MATCAP: '',\r\n      };\r\n      this.color.copy(source.color);\r\n      this.matcap = source.matcap;\r\n      this.map = source.map;\r\n      this.bumpMap = source.bumpMap;\r\n      this.bumpScale = source.bumpScale;\r\n      this.normalMap = source.normalMap;\r\n      this.normalMapType = source.normalMapType;\r\n      this.normalScale.copy(source.normalScale);\r\n      this.displacementMap = source.displacementMap;\r\n      this.displacementScale = source.displacementScale;\r\n      this.displacementBias = source.displacementBias;\r\n      this.alphaMap = source.alphaMap;\r\n      this.morphTargets = source.morphTargets;\r\n      this.morphNormals = source.morphNormals;\r\n      this.flatShading = source.flatShading;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  MeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\r\n\r\n  /**\r\n   * parameters = {\r\n   *\tcolor: <hex>,\r\n   *\topacity: <float>,\r\n   *\r\n   *\tlinewidth: <float>,\r\n   *\r\n   *\tscale: <float>,\r\n   *\tdashSize: <float>,\r\n   *\tgapSize: <float>\r\n   * }\r\n   */\r\n\r\n  class LineDashedMaterial extends LineBasicMaterial {\r\n    constructor(parameters) {\r\n      super();\r\n      this.type = 'LineDashedMaterial';\r\n      this.scale = 1;\r\n      this.dashSize = 3;\r\n      this.gapSize = 1;\r\n      this.setValues(parameters);\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.scale = source.scale;\r\n      this.dashSize = source.dashSize;\r\n      this.gapSize = source.gapSize;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  LineDashedMaterial.prototype.isLineDashedMaterial = true;\r\n\r\n  var Materials = /*#__PURE__*/ Object.freeze({\r\n    __proto__: null,\r\n    ShadowMaterial: ShadowMaterial,\r\n    SpriteMaterial: SpriteMaterial,\r\n    RawShaderMaterial: RawShaderMaterial,\r\n    ShaderMaterial: ShaderMaterial,\r\n    PointsMaterial: PointsMaterial,\r\n    MeshPhysicalMaterial: MeshPhysicalMaterial,\r\n    MeshStandardMaterial: MeshStandardMaterial,\r\n    MeshPhongMaterial: MeshPhongMaterial,\r\n    MeshToonMaterial: MeshToonMaterial,\r\n    MeshNormalMaterial: MeshNormalMaterial,\r\n    MeshLambertMaterial: MeshLambertMaterial,\r\n    MeshDepthMaterial: MeshDepthMaterial,\r\n    MeshDistanceMaterial: MeshDistanceMaterial,\r\n    MeshBasicMaterial: MeshBasicMaterial,\r\n    MeshMatcapMaterial: MeshMatcapMaterial,\r\n    LineDashedMaterial: LineDashedMaterial,\r\n    LineBasicMaterial: LineBasicMaterial,\r\n    Material: Material,\r\n  });\r\n\r\n  const AnimationUtils = {\r\n    // same as Array.prototype.slice, but also works on typed arrays\r\n    arraySlice: function (array, from, to) {\r\n      if (AnimationUtils.isTypedArray(array)) {\r\n        // in ios9 array.subarray(from, undefined) will return empty array\r\n        // but array.subarray(from) or array.subarray(from, len) is correct\r\n        return new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\r\n      }\r\n\r\n      return array.slice(from, to);\r\n    },\r\n    // converts an array to a specific type\r\n    convertArray: function (array, type, forceClone) {\r\n      if (\r\n        !array || // let 'undefined' and 'null' pass\r\n        (!forceClone && array.constructor === type)\r\n      )\r\n        return array;\r\n\r\n      if (typeof type.BYTES_PER_ELEMENT === 'number') {\r\n        return new type(array); // create typed array\r\n      }\r\n\r\n      return Array.prototype.slice.call(array); // create Array\r\n    },\r\n    isTypedArray: function (object) {\r\n      return ArrayBuffer.isView(object) && !(object instanceof DataView);\r\n    },\r\n    // returns an array by which times and values can be sorted\r\n    getKeyframeOrder: function (times) {\r\n      function compareTime(i, j) {\r\n        return times[i] - times[j];\r\n      }\r\n\r\n      const n = times.length;\r\n      const result = new Array(n);\r\n\r\n      for (let i = 0; i !== n; ++i) result[i] = i;\r\n\r\n      result.sort(compareTime);\r\n      return result;\r\n    },\r\n    // uses the array previously returned by 'getKeyframeOrder' to sort data\r\n    sortedArray: function (values, stride, order) {\r\n      const nValues = values.length;\r\n      const result = new values.constructor(nValues);\r\n\r\n      for (let i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\r\n        const srcOffset = order[i] * stride;\r\n\r\n        for (let j = 0; j !== stride; ++j) {\r\n          result[dstOffset++] = values[srcOffset + j];\r\n        }\r\n      }\r\n\r\n      return result;\r\n    },\r\n    // function for parsing AOS keyframe formats\r\n    flattenJSON: function (jsonKeys, times, values, valuePropertyName) {\r\n      let i = 1,\r\n        key = jsonKeys[0];\r\n\r\n      while (key !== undefined && key[valuePropertyName] === undefined) {\r\n        key = jsonKeys[i++];\r\n      }\r\n\r\n      if (key === undefined) return; // no data\r\n\r\n      let value = key[valuePropertyName];\r\n      if (value === undefined) return; // no data\r\n\r\n      if (Array.isArray(value)) {\r\n        do {\r\n          value = key[valuePropertyName];\r\n\r\n          if (value !== undefined) {\r\n            times.push(key.time);\r\n            values.push.apply(values, value); // push all elements\r\n          }\r\n\r\n          key = jsonKeys[i++];\r\n        } while (key !== undefined);\r\n      } else if (value.toArray !== undefined) {\r\n        // ...assume THREE.Math-ish\r\n        do {\r\n          value = key[valuePropertyName];\r\n\r\n          if (value !== undefined) {\r\n            times.push(key.time);\r\n            value.toArray(values, values.length);\r\n          }\r\n\r\n          key = jsonKeys[i++];\r\n        } while (key !== undefined);\r\n      } else {\r\n        // otherwise push as-is\r\n        do {\r\n          value = key[valuePropertyName];\r\n\r\n          if (value !== undefined) {\r\n            times.push(key.time);\r\n            values.push(value);\r\n          }\r\n\r\n          key = jsonKeys[i++];\r\n        } while (key !== undefined);\r\n      }\r\n    },\r\n    subclip: function (sourceClip, name, startFrame, endFrame, fps = 30) {\r\n      const clip = sourceClip.clone();\r\n      clip.name = name;\r\n      const tracks = [];\r\n\r\n      for (let i = 0; i < clip.tracks.length; ++i) {\r\n        const track = clip.tracks[i];\r\n        const valueSize = track.getValueSize();\r\n        const times = [];\r\n        const values = [];\r\n\r\n        for (let j = 0; j < track.times.length; ++j) {\r\n          const frame = track.times[j] * fps;\r\n          if (frame < startFrame || frame >= endFrame) continue;\r\n          times.push(track.times[j]);\r\n\r\n          for (let k = 0; k < valueSize; ++k) {\r\n            values.push(track.values[j * valueSize + k]);\r\n          }\r\n        }\r\n\r\n        if (times.length === 0) continue;\r\n        track.times = AnimationUtils.convertArray(times, track.times.constructor);\r\n        track.values = AnimationUtils.convertArray(values, track.values.constructor);\r\n        tracks.push(track);\r\n      }\r\n\r\n      clip.tracks = tracks; // find minimum .times value across all tracks in the trimmed clip\r\n\r\n      let minStartTime = Infinity;\r\n\r\n      for (let i = 0; i < clip.tracks.length; ++i) {\r\n        if (minStartTime > clip.tracks[i].times[0]) {\r\n          minStartTime = clip.tracks[i].times[0];\r\n        }\r\n      } // shift all tracks such that clip begins at t=0\r\n\r\n      for (let i = 0; i < clip.tracks.length; ++i) {\r\n        clip.tracks[i].shift(-1 * minStartTime);\r\n      }\r\n\r\n      clip.resetDuration();\r\n      return clip;\r\n    },\r\n    makeClipAdditive: function (\r\n      targetClip,\r\n      referenceFrame = 0,\r\n      referenceClip = targetClip,\r\n      fps = 30,\r\n    ) {\r\n      if (fps <= 0) fps = 30;\r\n      const numTracks = referenceClip.tracks.length;\r\n      const referenceTime = referenceFrame / fps; // Make each track's values relative to the values at the reference frame\r\n\r\n      for (let i = 0; i < numTracks; ++i) {\r\n        const referenceTrack = referenceClip.tracks[i];\r\n        const referenceTrackType = referenceTrack.ValueTypeName; // Skip this track if it's non-numeric\r\n\r\n        if (referenceTrackType === 'bool' || referenceTrackType === 'string') continue; // Find the track in the target clip whose name and type matches the reference track\r\n\r\n        const targetTrack = targetClip.tracks.find(function (track) {\r\n          return track.name === referenceTrack.name && track.ValueTypeName === referenceTrackType;\r\n        });\r\n        if (targetTrack === undefined) continue;\r\n        let referenceOffset = 0;\r\n        const referenceValueSize = referenceTrack.getValueSize();\r\n\r\n        if (referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\r\n          referenceOffset = referenceValueSize / 3;\r\n        }\r\n\r\n        let targetOffset = 0;\r\n        const targetValueSize = targetTrack.getValueSize();\r\n\r\n        if (targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\r\n          targetOffset = targetValueSize / 3;\r\n        }\r\n\r\n        const lastIndex = referenceTrack.times.length - 1;\r\n        let referenceValue; // Find the value to subtract out of the track\r\n\r\n        if (referenceTime <= referenceTrack.times[0]) {\r\n          // Reference frame is earlier than the first keyframe, so just use the first keyframe\r\n          const startIndex = referenceOffset;\r\n          const endIndex = referenceValueSize - referenceOffset;\r\n          referenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\r\n        } else if (referenceTime >= referenceTrack.times[lastIndex]) {\r\n          // Reference frame is after the last keyframe, so just use the last keyframe\r\n          const startIndex = lastIndex * referenceValueSize + referenceOffset;\r\n          const endIndex = startIndex + referenceValueSize - referenceOffset;\r\n          referenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\r\n        } else {\r\n          // Interpolate to the reference value\r\n          const interpolant = referenceTrack.createInterpolant();\r\n          const startIndex = referenceOffset;\r\n          const endIndex = referenceValueSize - referenceOffset;\r\n          interpolant.evaluate(referenceTime);\r\n          referenceValue = AnimationUtils.arraySlice(\r\n            interpolant.resultBuffer,\r\n            startIndex,\r\n            endIndex,\r\n          );\r\n        } // Conjugate the quaternion\r\n\r\n        if (referenceTrackType === 'quaternion') {\r\n          const referenceQuat = new Quaternion().fromArray(referenceValue).normalize().conjugate();\r\n          referenceQuat.toArray(referenceValue);\r\n        } // Subtract the reference value from all of the track values\r\n\r\n        const numTimes = targetTrack.times.length;\r\n\r\n        for (let j = 0; j < numTimes; ++j) {\r\n          const valueStart = j * targetValueSize + targetOffset;\r\n\r\n          if (referenceTrackType === 'quaternion') {\r\n            // Multiply the conjugate for quaternion track types\r\n            Quaternion.multiplyQuaternionsFlat(\r\n              targetTrack.values,\r\n              valueStart,\r\n              referenceValue,\r\n              0,\r\n              targetTrack.values,\r\n              valueStart,\r\n            );\r\n          } else {\r\n            const valueEnd = targetValueSize - targetOffset * 2; // Subtract each value for all other numeric track types\r\n\r\n            for (let k = 0; k < valueEnd; ++k) {\r\n              targetTrack.values[valueStart + k] -= referenceValue[k];\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      targetClip.blendMode = AdditiveAnimationBlendMode;\r\n      return targetClip;\r\n    },\r\n  };\r\n\r\n  /**\r\n   * Abstract base class of interpolants over parametric samples.\r\n   *\r\n   * The parameter domain is one dimensional, typically the time or a path\r\n   * along a curve defined by the data.\r\n   *\r\n   * The sample values can have any dimensionality and derived classes may\r\n   * apply special interpretations to the data.\r\n   *\r\n   * This class provides the interval seek in a Template Method, deferring\r\n   * the actual interpolation to derived classes.\r\n   *\r\n   * Time complexity is O(1) for linear access crossing at most two points\r\n   * and O(log N) for random access, where N is the number of positions.\r\n   *\r\n   * References:\r\n   *\r\n   * \t\thttp://www.oodesign.com/template-method-pattern.html\r\n   *\r\n   */\r\n  class Interpolant {\r\n    constructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\r\n      this.parameterPositions = parameterPositions;\r\n      this._cachedIndex = 0;\r\n      this.resultBuffer =\r\n        resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\r\n      this.sampleValues = sampleValues;\r\n      this.valueSize = sampleSize;\r\n      this.settings = null;\r\n      this.DefaultSettings_ = {};\r\n    }\r\n\r\n    evaluate(t) {\r\n      const pp = this.parameterPositions;\r\n      let i1 = this._cachedIndex,\r\n        t1 = pp[i1],\r\n        t0 = pp[i1 - 1];\r\n\r\n      validate_interval: {\r\n        seek: {\r\n          let right;\r\n\r\n          linear_scan: {\r\n            //- See http://jsperf.com/comparison-to-undefined/3\r\n            //- slower code:\r\n            //-\r\n            //- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\r\n            forward_scan: if (!(t < t1)) {\r\n              for (let giveUpAt = i1 + 2; ; ) {\r\n                if (t1 === undefined) {\r\n                  if (t < t0) break forward_scan; // after end\r\n\r\n                  i1 = pp.length;\r\n                  this._cachedIndex = i1;\r\n                  return this.afterEnd_(i1 - 1, t, t0);\r\n                }\r\n\r\n                if (i1 === giveUpAt) break; // this loop\r\n\r\n                t0 = t1;\r\n                t1 = pp[++i1];\r\n\r\n                if (t < t1) {\r\n                  // we have arrived at the sought interval\r\n                  break seek;\r\n                }\r\n              } // prepare binary search on the right side of the index\r\n\r\n              right = pp.length;\r\n              break linear_scan;\r\n            } //- slower code:\r\n            //-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\r\n\r\n            if (!(t >= t0)) {\r\n              // looping?\r\n              const t1global = pp[1];\r\n\r\n              if (t < t1global) {\r\n                i1 = 2; // + 1, using the scan for the details\r\n\r\n                t0 = t1global;\r\n              } // linear reverse scan\r\n\r\n              for (let giveUpAt = i1 - 2; ; ) {\r\n                if (t0 === undefined) {\r\n                  // before start\r\n                  this._cachedIndex = 0;\r\n                  return this.beforeStart_(0, t, t1);\r\n                }\r\n\r\n                if (i1 === giveUpAt) break; // this loop\r\n\r\n                t1 = t0;\r\n                t0 = pp[--i1 - 1];\r\n\r\n                if (t >= t0) {\r\n                  // we have arrived at the sought interval\r\n                  break seek;\r\n                }\r\n              } // prepare binary search on the left side of the index\r\n\r\n              right = i1;\r\n              i1 = 0;\r\n              break linear_scan;\r\n            } // the interval is valid\r\n\r\n            break validate_interval;\r\n          } // linear scan\r\n          // binary search\r\n\r\n          while (i1 < right) {\r\n            const mid = (i1 + right) >>> 1;\r\n\r\n            if (t < pp[mid]) {\r\n              right = mid;\r\n            } else {\r\n              i1 = mid + 1;\r\n            }\r\n          }\r\n\r\n          t1 = pp[i1];\r\n          t0 = pp[i1 - 1]; // check boundary cases, again\r\n\r\n          if (t0 === undefined) {\r\n            this._cachedIndex = 0;\r\n            return this.beforeStart_(0, t, t1);\r\n          }\r\n\r\n          if (t1 === undefined) {\r\n            i1 = pp.length;\r\n            this._cachedIndex = i1;\r\n            return this.afterEnd_(i1 - 1, t0, t);\r\n          }\r\n        } // seek\r\n\r\n        this._cachedIndex = i1;\r\n        this.intervalChanged_(i1, t0, t1);\r\n      } // validate_interval\r\n\r\n      return this.interpolate_(i1, t0, t, t1);\r\n    }\r\n\r\n    getSettings_() {\r\n      return this.settings || this.DefaultSettings_;\r\n    }\r\n\r\n    copySampleValue_(index) {\r\n      // copies a sample value to the result buffer\r\n      const result = this.resultBuffer,\r\n        values = this.sampleValues,\r\n        stride = this.valueSize,\r\n        offset = index * stride;\r\n\r\n      for (let i = 0; i !== stride; ++i) {\r\n        result[i] = values[offset + i];\r\n      }\r\n\r\n      return result;\r\n    } // Template methods for derived classes:\r\n\r\n    interpolate_() /* i1, t0, t, t1 */\r\n    {\r\n      throw new Error('call to abstract method'); // implementations shall return this.resultBuffer\r\n    }\r\n\r\n    intervalChanged_() /* i1, t0, t1 */\r\n    {\r\n      // empty\r\n    }\r\n  } // ALIAS DEFINITIONS\r\n\r\n  Interpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\r\n  Interpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\r\n\r\n  /**\r\n   * Fast and simple cubic spline interpolant.\r\n   *\r\n   * It was derived from a Hermitian construction setting the first derivative\r\n   * at each sample position to the linear slope between neighboring positions\r\n   * over their parameter interval.\r\n   */\r\n\r\n  class CubicInterpolant extends Interpolant {\r\n    constructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\r\n      super(parameterPositions, sampleValues, sampleSize, resultBuffer);\r\n      this._weightPrev = -0;\r\n      this._offsetPrev = -0;\r\n      this._weightNext = -0;\r\n      this._offsetNext = -0;\r\n      this.DefaultSettings_ = {\r\n        endingStart: ZeroCurvatureEnding,\r\n        endingEnd: ZeroCurvatureEnding,\r\n      };\r\n    }\r\n\r\n    intervalChanged_(i1, t0, t1) {\r\n      const pp = this.parameterPositions;\r\n      let iPrev = i1 - 2,\r\n        iNext = i1 + 1,\r\n        tPrev = pp[iPrev],\r\n        tNext = pp[iNext];\r\n\r\n      if (tPrev === undefined) {\r\n        switch (this.getSettings_().endingStart) {\r\n          case ZeroSlopeEnding:\r\n            // f'(t0) = 0\r\n            iPrev = i1;\r\n            tPrev = 2 * t0 - t1;\r\n            break;\r\n\r\n          case WrapAroundEnding:\r\n            // use the other end of the curve\r\n            iPrev = pp.length - 2;\r\n            tPrev = t0 + pp[iPrev] - pp[iPrev + 1];\r\n            break;\r\n\r\n          default:\r\n            // ZeroCurvatureEnding\r\n            // f''(t0) = 0 a.k.a. Natural Spline\r\n            iPrev = i1;\r\n            tPrev = t1;\r\n        }\r\n      }\r\n\r\n      if (tNext === undefined) {\r\n        switch (this.getSettings_().endingEnd) {\r\n          case ZeroSlopeEnding:\r\n            // f'(tN) = 0\r\n            iNext = i1;\r\n            tNext = 2 * t1 - t0;\r\n            break;\r\n\r\n          case WrapAroundEnding:\r\n            // use the other end of the curve\r\n            iNext = 1;\r\n            tNext = t1 + pp[1] - pp[0];\r\n            break;\r\n\r\n          default:\r\n            // ZeroCurvatureEnding\r\n            // f''(tN) = 0, a.k.a. Natural Spline\r\n            iNext = i1 - 1;\r\n            tNext = t0;\r\n        }\r\n      }\r\n\r\n      const halfDt = (t1 - t0) * 0.5,\r\n        stride = this.valueSize;\r\n      this._weightPrev = halfDt / (t0 - tPrev);\r\n      this._weightNext = halfDt / (tNext - t1);\r\n      this._offsetPrev = iPrev * stride;\r\n      this._offsetNext = iNext * stride;\r\n    }\r\n\r\n    interpolate_(i1, t0, t, t1) {\r\n      const result = this.resultBuffer,\r\n        values = this.sampleValues,\r\n        stride = this.valueSize,\r\n        o1 = i1 * stride,\r\n        o0 = o1 - stride,\r\n        oP = this._offsetPrev,\r\n        oN = this._offsetNext,\r\n        wP = this._weightPrev,\r\n        wN = this._weightNext,\r\n        p = (t - t0) / (t1 - t0),\r\n        pp = p * p,\r\n        ppp = pp * p; // evaluate polynomials\r\n\r\n      const sP = -wP * ppp + 2 * wP * pp - wP * p;\r\n      const s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\r\n      const s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\r\n      const sN = wN * ppp - wN * pp; // combine data linearly\r\n\r\n      for (let i = 0; i !== stride; ++i) {\r\n        result[i] =\r\n          sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\r\n      }\r\n\r\n      return result;\r\n    }\r\n  }\r\n\r\n  class LinearInterpolant extends Interpolant {\r\n    constructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\r\n      super(parameterPositions, sampleValues, sampleSize, resultBuffer);\r\n    }\r\n\r\n    interpolate_(i1, t0, t, t1) {\r\n      const result = this.resultBuffer,\r\n        values = this.sampleValues,\r\n        stride = this.valueSize,\r\n        offset1 = i1 * stride,\r\n        offset0 = offset1 - stride,\r\n        weight1 = (t - t0) / (t1 - t0),\r\n        weight0 = 1 - weight1;\r\n\r\n      for (let i = 0; i !== stride; ++i) {\r\n        result[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\r\n      }\r\n\r\n      return result;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Interpolant that evaluates to the sample value at the position preceeding\r\n   * the parameter.\r\n   */\r\n\r\n  class DiscreteInterpolant extends Interpolant {\r\n    constructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\r\n      super(parameterPositions, sampleValues, sampleSize, resultBuffer);\r\n    }\r\n\r\n    interpolate_(\r\n      i1,\r\n      /*, t0, t, t1 */\r\n    ) {\r\n      return this.copySampleValue_(i1 - 1);\r\n    }\r\n  }\r\n\r\n  class KeyframeTrack {\r\n    constructor(name, times, values, interpolation) {\r\n      if (name === undefined) throw new Error('THREE.KeyframeTrack: track name is undefined');\r\n      if (times === undefined || times.length === 0)\r\n        throw new Error('THREE.KeyframeTrack: no keyframes in track named ' + name);\r\n      this.name = name;\r\n      this.times = AnimationUtils.convertArray(times, this.TimeBufferType);\r\n      this.values = AnimationUtils.convertArray(values, this.ValueBufferType);\r\n      this.setInterpolation(interpolation || this.DefaultInterpolation);\r\n    } // Serialization (in static context, because of constructor invocation\r\n    // and automatic invocation of .toJSON):\r\n\r\n    static toJSON(track) {\r\n      const trackType = track.constructor;\r\n      let json; // derived classes can define a static toJSON method\r\n\r\n      if (trackType.toJSON !== this.toJSON) {\r\n        json = trackType.toJSON(track);\r\n      } else {\r\n        // by default, we assume the data can be serialized as-is\r\n        json = {\r\n          name: track.name,\r\n          times: AnimationUtils.convertArray(track.times, Array),\r\n          values: AnimationUtils.convertArray(track.values, Array),\r\n        };\r\n        const interpolation = track.getInterpolation();\r\n\r\n        if (interpolation !== track.DefaultInterpolation) {\r\n          json.interpolation = interpolation;\r\n        }\r\n      }\r\n\r\n      json.type = track.ValueTypeName; // mandatory\r\n\r\n      return json;\r\n    }\r\n\r\n    InterpolantFactoryMethodDiscrete(result) {\r\n      return new DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\r\n    }\r\n\r\n    InterpolantFactoryMethodLinear(result) {\r\n      return new LinearInterpolant(this.times, this.values, this.getValueSize(), result);\r\n    }\r\n\r\n    InterpolantFactoryMethodSmooth(result) {\r\n      return new CubicInterpolant(this.times, this.values, this.getValueSize(), result);\r\n    }\r\n\r\n    setInterpolation(interpolation) {\r\n      let factoryMethod;\r\n\r\n      switch (interpolation) {\r\n        case InterpolateDiscrete:\r\n          factoryMethod = this.InterpolantFactoryMethodDiscrete;\r\n          break;\r\n\r\n        case InterpolateLinear:\r\n          factoryMethod = this.InterpolantFactoryMethodLinear;\r\n          break;\r\n\r\n        case InterpolateSmooth:\r\n          factoryMethod = this.InterpolantFactoryMethodSmooth;\r\n          break;\r\n      }\r\n\r\n      if (factoryMethod === undefined) {\r\n        const message =\r\n          'unsupported interpolation for ' +\r\n          this.ValueTypeName +\r\n          ' keyframe track named ' +\r\n          this.name;\r\n\r\n        if (this.createInterpolant === undefined) {\r\n          // fall back to default, unless the default itself is messed up\r\n          if (interpolation !== this.DefaultInterpolation) {\r\n            this.setInterpolation(this.DefaultInterpolation);\r\n          } else {\r\n            throw new Error(message); // fatal, in this case\r\n          }\r\n        }\r\n\r\n        console.warn('THREE.KeyframeTrack:', message);\r\n        return this;\r\n      }\r\n\r\n      this.createInterpolant = factoryMethod;\r\n      return this;\r\n    }\r\n\r\n    getInterpolation() {\r\n      switch (this.createInterpolant) {\r\n        case this.InterpolantFactoryMethodDiscrete:\r\n          return InterpolateDiscrete;\r\n\r\n        case this.InterpolantFactoryMethodLinear:\r\n          return InterpolateLinear;\r\n\r\n        case this.InterpolantFactoryMethodSmooth:\r\n          return InterpolateSmooth;\r\n      }\r\n    }\r\n\r\n    getValueSize() {\r\n      return this.values.length / this.times.length;\r\n    } // move all keyframes either forwards or backwards in time\r\n\r\n    shift(timeOffset) {\r\n      if (timeOffset !== 0.0) {\r\n        const times = this.times;\r\n\r\n        for (let i = 0, n = times.length; i !== n; ++i) {\r\n          times[i] += timeOffset;\r\n        }\r\n      }\r\n\r\n      return this;\r\n    } // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\r\n\r\n    scale(timeScale) {\r\n      if (timeScale !== 1.0) {\r\n        const times = this.times;\r\n\r\n        for (let i = 0, n = times.length; i !== n; ++i) {\r\n          times[i] *= timeScale;\r\n        }\r\n      }\r\n\r\n      return this;\r\n    } // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\r\n    // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\r\n\r\n    trim(startTime, endTime) {\r\n      const times = this.times,\r\n        nKeys = times.length;\r\n      let from = 0,\r\n        to = nKeys - 1;\r\n\r\n      while (from !== nKeys && times[from] < startTime) {\r\n        ++from;\r\n      }\r\n\r\n      while (to !== -1 && times[to] > endTime) {\r\n        --to;\r\n      }\r\n\r\n      ++to; // inclusive -> exclusive bound\r\n\r\n      if (from !== 0 || to !== nKeys) {\r\n        // empty tracks are forbidden, so keep at least one keyframe\r\n        if (from >= to) {\r\n          to = Math.max(to, 1);\r\n          from = to - 1;\r\n        }\r\n\r\n        const stride = this.getValueSize();\r\n        this.times = AnimationUtils.arraySlice(times, from, to);\r\n        this.values = AnimationUtils.arraySlice(this.values, from * stride, to * stride);\r\n      }\r\n\r\n      return this;\r\n    } // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\r\n\r\n    validate() {\r\n      let valid = true;\r\n      const valueSize = this.getValueSize();\r\n\r\n      if (valueSize - Math.floor(valueSize) !== 0) {\r\n        console.error('THREE.KeyframeTrack: Invalid value size in track.', this);\r\n        valid = false;\r\n      }\r\n\r\n      const times = this.times,\r\n        values = this.values,\r\n        nKeys = times.length;\r\n\r\n      if (nKeys === 0) {\r\n        console.error('THREE.KeyframeTrack: Track is empty.', this);\r\n        valid = false;\r\n      }\r\n\r\n      let prevTime = null;\r\n\r\n      for (let i = 0; i !== nKeys; i++) {\r\n        const currTime = times[i];\r\n\r\n        if (typeof currTime === 'number' && isNaN(currTime)) {\r\n          console.error('THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime);\r\n          valid = false;\r\n          break;\r\n        }\r\n\r\n        if (prevTime !== null && prevTime > currTime) {\r\n          console.error('THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime);\r\n          valid = false;\r\n          break;\r\n        }\r\n\r\n        prevTime = currTime;\r\n      }\r\n\r\n      if (values !== undefined) {\r\n        if (AnimationUtils.isTypedArray(values)) {\r\n          for (let i = 0, n = values.length; i !== n; ++i) {\r\n            const value = values[i];\r\n\r\n            if (isNaN(value)) {\r\n              console.error('THREE.KeyframeTrack: Value is not a valid number.', this, i, value);\r\n              valid = false;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return valid;\r\n    } // removes equivalent sequential keys as common in morph target sequences\r\n    // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\r\n\r\n    optimize() {\r\n      // times or values may be shared with other tracks, so overwriting is unsafe\r\n      const times = AnimationUtils.arraySlice(this.times),\r\n        values = AnimationUtils.arraySlice(this.values),\r\n        stride = this.getValueSize(),\r\n        smoothInterpolation = this.getInterpolation() === InterpolateSmooth,\r\n        lastIndex = times.length - 1;\r\n      let writeIndex = 1;\r\n\r\n      for (let i = 1; i < lastIndex; ++i) {\r\n        let keep = false;\r\n        const time = times[i];\r\n        const timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\r\n\r\n        if (time !== timeNext && (i !== 1 || time !== times[0])) {\r\n          if (!smoothInterpolation) {\r\n            // remove unnecessary keyframes same as their neighbors\r\n            const offset = i * stride,\r\n              offsetP = offset - stride,\r\n              offsetN = offset + stride;\r\n\r\n            for (let j = 0; j !== stride; ++j) {\r\n              const value = values[offset + j];\r\n\r\n              if (value !== values[offsetP + j] || value !== values[offsetN + j]) {\r\n                keep = true;\r\n                break;\r\n              }\r\n            }\r\n          } else {\r\n            keep = true;\r\n          }\r\n        } // in-place compaction\r\n\r\n        if (keep) {\r\n          if (i !== writeIndex) {\r\n            times[writeIndex] = times[i];\r\n            const readOffset = i * stride,\r\n              writeOffset = writeIndex * stride;\r\n\r\n            for (let j = 0; j !== stride; ++j) {\r\n              values[writeOffset + j] = values[readOffset + j];\r\n            }\r\n          }\r\n\r\n          ++writeIndex;\r\n        }\r\n      } // flush last keyframe (compaction looks ahead)\r\n\r\n      if (lastIndex > 0) {\r\n        times[writeIndex] = times[lastIndex];\r\n\r\n        for (\r\n          let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0;\r\n          j !== stride;\r\n          ++j\r\n        ) {\r\n          values[writeOffset + j] = values[readOffset + j];\r\n        }\r\n\r\n        ++writeIndex;\r\n      }\r\n\r\n      if (writeIndex !== times.length) {\r\n        this.times = AnimationUtils.arraySlice(times, 0, writeIndex);\r\n        this.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\r\n      } else {\r\n        this.times = times;\r\n        this.values = values;\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    clone() {\r\n      const times = AnimationUtils.arraySlice(this.times, 0);\r\n      const values = AnimationUtils.arraySlice(this.values, 0);\r\n      const TypedKeyframeTrack = this.constructor;\r\n      const track = new TypedKeyframeTrack(this.name, times, values); // Interpolant argument to constructor is not saved, so copy the factory method directly.\r\n\r\n      track.createInterpolant = this.createInterpolant;\r\n      return track;\r\n    }\r\n  }\r\n\r\n  KeyframeTrack.prototype.TimeBufferType = Float32Array;\r\n  KeyframeTrack.prototype.ValueBufferType = Float32Array;\r\n  KeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\r\n\r\n  /**\r\n   * A Track of Boolean keyframe values.\r\n   */\r\n\r\n  class BooleanKeyframeTrack extends KeyframeTrack {}\r\n\r\n  BooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\r\n  BooleanKeyframeTrack.prototype.ValueBufferType = Array;\r\n  BooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\r\n  BooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\r\n  BooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined; // Note: Actually this track could have a optimized / compressed\r\n\r\n  /**\r\n   * A Track of keyframe values that represent color.\r\n   */\r\n\r\n  class ColorKeyframeTrack extends KeyframeTrack {}\r\n\r\n  ColorKeyframeTrack.prototype.ValueTypeName = 'color'; // ValueBufferType is inherited\r\n\r\n  /**\r\n   * A Track of numeric keyframe values.\r\n   */\r\n\r\n  class NumberKeyframeTrack extends KeyframeTrack {}\r\n\r\n  NumberKeyframeTrack.prototype.ValueTypeName = 'number'; // ValueBufferType is inherited\r\n\r\n  /**\r\n   * Spherical linear unit quaternion interpolant.\r\n   */\r\n\r\n  class QuaternionLinearInterpolant extends Interpolant {\r\n    constructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\r\n      super(parameterPositions, sampleValues, sampleSize, resultBuffer);\r\n    }\r\n\r\n    interpolate_(i1, t0, t, t1) {\r\n      const result = this.resultBuffer,\r\n        values = this.sampleValues,\r\n        stride = this.valueSize,\r\n        alpha = (t - t0) / (t1 - t0);\r\n      let offset = i1 * stride;\r\n\r\n      for (let end = offset + stride; offset !== end; offset += 4) {\r\n        Quaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\r\n      }\r\n\r\n      return result;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A Track of quaternion keyframe values.\r\n   */\r\n\r\n  class QuaternionKeyframeTrack extends KeyframeTrack {\r\n    InterpolantFactoryMethodLinear(result) {\r\n      return new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\r\n    }\r\n  }\r\n\r\n  QuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion'; // ValueBufferType is inherited\r\n\r\n  QuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\r\n  QuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\r\n\r\n  /**\r\n   * A Track that interpolates Strings\r\n   */\r\n\r\n  class StringKeyframeTrack extends KeyframeTrack {}\r\n\r\n  StringKeyframeTrack.prototype.ValueTypeName = 'string';\r\n  StringKeyframeTrack.prototype.ValueBufferType = Array;\r\n  StringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\r\n  StringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\r\n  StringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\r\n\r\n  /**\r\n   * A Track of vectored keyframe values.\r\n   */\r\n\r\n  class VectorKeyframeTrack extends KeyframeTrack {}\r\n\r\n  VectorKeyframeTrack.prototype.ValueTypeName = 'vector'; // ValueBufferType is inherited\r\n\r\n  class AnimationClip {\r\n    constructor(name, duration = -1, tracks, blendMode = NormalAnimationBlendMode) {\r\n      this.name = name;\r\n      this.tracks = tracks;\r\n      this.duration = duration;\r\n      this.blendMode = blendMode;\r\n      this.uuid = generateUUID(); // this means it should figure out its duration by scanning the tracks\r\n\r\n      if (this.duration < 0) {\r\n        this.resetDuration();\r\n      }\r\n    }\r\n\r\n    static parse(json) {\r\n      const tracks = [],\r\n        jsonTracks = json.tracks,\r\n        frameTime = 1.0 / (json.fps || 1.0);\r\n\r\n      for (let i = 0, n = jsonTracks.length; i !== n; ++i) {\r\n        tracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));\r\n      }\r\n\r\n      const clip = new this(json.name, json.duration, tracks, json.blendMode);\r\n      clip.uuid = json.uuid;\r\n      return clip;\r\n    }\r\n\r\n    static toJSON(clip) {\r\n      const tracks = [],\r\n        clipTracks = clip.tracks;\r\n      const json = {\r\n        name: clip.name,\r\n        duration: clip.duration,\r\n        tracks: tracks,\r\n        uuid: clip.uuid,\r\n        blendMode: clip.blendMode,\r\n      };\r\n\r\n      for (let i = 0, n = clipTracks.length; i !== n; ++i) {\r\n        tracks.push(KeyframeTrack.toJSON(clipTracks[i]));\r\n      }\r\n\r\n      return json;\r\n    }\r\n\r\n    static CreateFromMorphTargetSequence(name, morphTargetSequence, fps, noLoop) {\r\n      const numMorphTargets = morphTargetSequence.length;\r\n      const tracks = [];\r\n\r\n      for (let i = 0; i < numMorphTargets; i++) {\r\n        let times = [];\r\n        let values = [];\r\n        times.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\r\n        values.push(0, 1, 0);\r\n        const order = AnimationUtils.getKeyframeOrder(times);\r\n        times = AnimationUtils.sortedArray(times, 1, order);\r\n        values = AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\r\n        // last frame as well for perfect loop.\r\n\r\n        if (!noLoop && times[0] === 0) {\r\n          times.push(numMorphTargets);\r\n          values.push(values[0]);\r\n        }\r\n\r\n        tracks.push(\r\n          new NumberKeyframeTrack(\r\n            '.morphTargetInfluences[' + morphTargetSequence[i].name + ']',\r\n            times,\r\n            values,\r\n          ).scale(1.0 / fps),\r\n        );\r\n      }\r\n\r\n      return new this(name, -1, tracks);\r\n    }\r\n\r\n    static findByName(objectOrClipArray, name) {\r\n      let clipArray = objectOrClipArray;\r\n\r\n      if (!Array.isArray(objectOrClipArray)) {\r\n        const o = objectOrClipArray;\r\n        clipArray = (o.geometry && o.geometry.animations) || o.animations;\r\n      }\r\n\r\n      for (let i = 0; i < clipArray.length; i++) {\r\n        if (clipArray[i].name === name) {\r\n          return clipArray[i];\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    static CreateClipsFromMorphTargetSequences(morphTargets, fps, noLoop) {\r\n      const animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\r\n      // such flamingo_flyA_003, flamingo_run1_003, crdeath0059\r\n\r\n      const pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\r\n      // patterns like Walk_001, Walk_002, Run_001, Run_002\r\n\r\n      for (let i = 0, il = morphTargets.length; i < il; i++) {\r\n        const morphTarget = morphTargets[i];\r\n        const parts = morphTarget.name.match(pattern);\r\n\r\n        if (parts && parts.length > 1) {\r\n          const name = parts[1];\r\n          let animationMorphTargets = animationToMorphTargets[name];\r\n\r\n          if (!animationMorphTargets) {\r\n            animationToMorphTargets[name] = animationMorphTargets = [];\r\n          }\r\n\r\n          animationMorphTargets.push(morphTarget);\r\n        }\r\n      }\r\n\r\n      const clips = [];\r\n\r\n      for (const name in animationToMorphTargets) {\r\n        clips.push(\r\n          this.CreateFromMorphTargetSequence(name, animationToMorphTargets[name], fps, noLoop),\r\n        );\r\n      }\r\n\r\n      return clips;\r\n    } // parse the animation.hierarchy format\r\n\r\n    static parseAnimation(animation, bones) {\r\n      if (!animation) {\r\n        console.error('THREE.AnimationClip: No animation in JSONLoader data.');\r\n        return null;\r\n      }\r\n\r\n      const addNonemptyTrack = function (\r\n        trackType,\r\n        trackName,\r\n        animationKeys,\r\n        propertyName,\r\n        destTracks,\r\n      ) {\r\n        // only return track if there are actually keys.\r\n        if (animationKeys.length !== 0) {\r\n          const times = [];\r\n          const values = [];\r\n          AnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\r\n\r\n          if (times.length !== 0) {\r\n            destTracks.push(new trackType(trackName, times, values));\r\n          }\r\n        }\r\n      };\r\n\r\n      const tracks = [];\r\n      const clipName = animation.name || 'default';\r\n      const fps = animation.fps || 30;\r\n      const blendMode = animation.blendMode; // automatic length determination in AnimationClip.\r\n\r\n      let duration = animation.length || -1;\r\n      const hierarchyTracks = animation.hierarchy || [];\r\n\r\n      for (let h = 0; h < hierarchyTracks.length; h++) {\r\n        const animationKeys = hierarchyTracks[h].keys; // skip empty tracks\r\n\r\n        if (!animationKeys || animationKeys.length === 0) continue; // process morph targets\r\n\r\n        if (animationKeys[0].morphTargets) {\r\n          // figure out all morph targets used in this track\r\n          const morphTargetNames = {};\r\n          let k;\r\n\r\n          for (k = 0; k < animationKeys.length; k++) {\r\n            if (animationKeys[k].morphTargets) {\r\n              for (let m = 0; m < animationKeys[k].morphTargets.length; m++) {\r\n                morphTargetNames[animationKeys[k].morphTargets[m]] = -1;\r\n              }\r\n            }\r\n          } // create a track for each morph target with all zero\r\n          // morphTargetInfluences except for the keys in which\r\n          // the morphTarget is named.\r\n\r\n          for (const morphTargetName in morphTargetNames) {\r\n            const times = [];\r\n            const values = [];\r\n\r\n            for (let m = 0; m !== animationKeys[k].morphTargets.length; ++m) {\r\n              const animationKey = animationKeys[k];\r\n              times.push(animationKey.time);\r\n              values.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\r\n            }\r\n\r\n            tracks.push(\r\n              new NumberKeyframeTrack(\r\n                '.morphTargetInfluence[' + morphTargetName + ']',\r\n                times,\r\n                values,\r\n              ),\r\n            );\r\n          }\r\n\r\n          duration = morphTargetNames.length * (fps || 1.0);\r\n        } else {\r\n          // ...assume skeletal animation\r\n          const boneName = '.bones[' + bones[h].name + ']';\r\n          addNonemptyTrack(\r\n            VectorKeyframeTrack,\r\n            boneName + '.position',\r\n            animationKeys,\r\n            'pos',\r\n            tracks,\r\n          );\r\n          addNonemptyTrack(\r\n            QuaternionKeyframeTrack,\r\n            boneName + '.quaternion',\r\n            animationKeys,\r\n            'rot',\r\n            tracks,\r\n          );\r\n          addNonemptyTrack(VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\r\n        }\r\n      }\r\n\r\n      if (tracks.length === 0) {\r\n        return null;\r\n      }\r\n\r\n      const clip = new this(clipName, duration, tracks, blendMode);\r\n      return clip;\r\n    }\r\n\r\n    resetDuration() {\r\n      const tracks = this.tracks;\r\n      let duration = 0;\r\n\r\n      for (let i = 0, n = tracks.length; i !== n; ++i) {\r\n        const track = this.tracks[i];\r\n        duration = Math.max(duration, track.times[track.times.length - 1]);\r\n      }\r\n\r\n      this.duration = duration;\r\n      return this;\r\n    }\r\n\r\n    trim() {\r\n      for (let i = 0; i < this.tracks.length; i++) {\r\n        this.tracks[i].trim(0, this.duration);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    validate() {\r\n      let valid = true;\r\n\r\n      for (let i = 0; i < this.tracks.length; i++) {\r\n        valid = valid && this.tracks[i].validate();\r\n      }\r\n\r\n      return valid;\r\n    }\r\n\r\n    optimize() {\r\n      for (let i = 0; i < this.tracks.length; i++) {\r\n        this.tracks[i].optimize();\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    clone() {\r\n      const tracks = [];\r\n\r\n      for (let i = 0; i < this.tracks.length; i++) {\r\n        tracks.push(this.tracks[i].clone());\r\n      }\r\n\r\n      return new this.constructor(this.name, this.duration, tracks, this.blendMode);\r\n    }\r\n\r\n    toJSON() {\r\n      return this.constructor.toJSON(this);\r\n    }\r\n  }\r\n\r\n  function getTrackTypeForValueTypeName(typeName) {\r\n    switch (typeName.toLowerCase()) {\r\n      case 'scalar':\r\n      case 'double':\r\n      case 'float':\r\n      case 'number':\r\n      case 'integer':\r\n        return NumberKeyframeTrack;\r\n\r\n      case 'vector':\r\n      case 'vector2':\r\n      case 'vector3':\r\n      case 'vector4':\r\n        return VectorKeyframeTrack;\r\n\r\n      case 'color':\r\n        return ColorKeyframeTrack;\r\n\r\n      case 'quaternion':\r\n        return QuaternionKeyframeTrack;\r\n\r\n      case 'bool':\r\n      case 'boolean':\r\n        return BooleanKeyframeTrack;\r\n\r\n      case 'string':\r\n        return StringKeyframeTrack;\r\n    }\r\n\r\n    throw new Error('THREE.KeyframeTrack: Unsupported typeName: ' + typeName);\r\n  }\r\n\r\n  function parseKeyframeTrack(json) {\r\n    if (json.type === undefined) {\r\n      throw new Error('THREE.KeyframeTrack: track type undefined, can not parse');\r\n    }\r\n\r\n    const trackType = getTrackTypeForValueTypeName(json.type);\r\n\r\n    if (json.times === undefined) {\r\n      const times = [],\r\n        values = [];\r\n      AnimationUtils.flattenJSON(json.keys, times, values, 'value');\r\n      json.times = times;\r\n      json.values = values;\r\n    } // derived classes can define a static parse method\r\n\r\n    if (trackType.parse !== undefined) {\r\n      return trackType.parse(json);\r\n    } else {\r\n      // by default, we assume a constructor compatible with the base\r\n      return new trackType(json.name, json.times, json.values, json.interpolation);\r\n    }\r\n  }\r\n\r\n  const Cache = {\r\n    enabled: false,\r\n    files: {},\r\n    add: function (key, file) {\r\n      if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n      this.files[key] = file;\r\n    },\r\n    get: function (key) {\r\n      if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n      return this.files[key];\r\n    },\r\n    remove: function (key) {\r\n      delete this.files[key];\r\n    },\r\n    clear: function () {\r\n      this.files = {};\r\n    },\r\n  };\r\n\r\n  class LoadingManager {\r\n    constructor(onLoad, onProgress, onError) {\r\n      const scope = this;\r\n      let isLoading = false;\r\n      let itemsLoaded = 0;\r\n      let itemsTotal = 0;\r\n      let urlModifier = undefined;\r\n      const handlers = []; // Refer to #5689 for the reason why we don't set .onStart\r\n      // in the constructor\r\n\r\n      this.onStart = undefined;\r\n      this.onLoad = onLoad;\r\n      this.onProgress = onProgress;\r\n      this.onError = onError;\r\n\r\n      this.itemStart = function (url) {\r\n        itemsTotal++;\r\n\r\n        if (isLoading === false) {\r\n          if (scope.onStart !== undefined) {\r\n            scope.onStart(url, itemsLoaded, itemsTotal);\r\n          }\r\n        }\r\n\r\n        isLoading = true;\r\n      };\r\n\r\n      this.itemEnd = function (url) {\r\n        itemsLoaded++;\r\n\r\n        if (scope.onProgress !== undefined) {\r\n          scope.onProgress(url, itemsLoaded, itemsTotal);\r\n        }\r\n\r\n        if (itemsLoaded === itemsTotal) {\r\n          isLoading = false;\r\n\r\n          if (scope.onLoad !== undefined) {\r\n            scope.onLoad();\r\n          }\r\n        }\r\n      };\r\n\r\n      this.itemError = function (url) {\r\n        if (scope.onError !== undefined) {\r\n          scope.onError(url);\r\n        }\r\n      };\r\n\r\n      this.resolveURL = function (url) {\r\n        if (urlModifier) {\r\n          return urlModifier(url);\r\n        }\r\n\r\n        return url;\r\n      };\r\n\r\n      this.setURLModifier = function (transform) {\r\n        urlModifier = transform;\r\n        return this;\r\n      };\r\n\r\n      this.addHandler = function (regex, loader) {\r\n        handlers.push(regex, loader);\r\n        return this;\r\n      };\r\n\r\n      this.removeHandler = function (regex) {\r\n        const index = handlers.indexOf(regex);\r\n\r\n        if (index !== -1) {\r\n          handlers.splice(index, 2);\r\n        }\r\n\r\n        return this;\r\n      };\r\n\r\n      this.getHandler = function (file) {\r\n        for (let i = 0, l = handlers.length; i < l; i += 2) {\r\n          const regex = handlers[i];\r\n          const loader = handlers[i + 1];\r\n          if (regex.global) regex.lastIndex = 0; // see #17920\r\n\r\n          if (regex.test(file)) {\r\n            return loader;\r\n          }\r\n        }\r\n\r\n        return null;\r\n      };\r\n    }\r\n  }\r\n\r\n  const DefaultLoadingManager = new LoadingManager();\r\n\r\n  class Loader {\r\n    constructor(manager) {\r\n      this.manager = manager !== undefined ? manager : DefaultLoadingManager;\r\n      this.crossOrigin = 'anonymous';\r\n      this.withCredentials = false;\r\n      this.path = '';\r\n      this.resourcePath = '';\r\n      this.requestHeader = {};\r\n    }\r\n\r\n    load() /* url, onLoad, onProgress, onError */\r\n    {}\r\n\r\n    loadAsync(url, onProgress) {\r\n      const scope = this;\r\n      return new Promise(function (resolve, reject) {\r\n        scope.load(url, resolve, onProgress, reject);\r\n      });\r\n    }\r\n\r\n    parse() /* data */\r\n    {}\r\n\r\n    setCrossOrigin(crossOrigin) {\r\n      this.crossOrigin = crossOrigin;\r\n      return this;\r\n    }\r\n\r\n    setWithCredentials(value) {\r\n      this.withCredentials = value;\r\n      return this;\r\n    }\r\n\r\n    setPath(path) {\r\n      this.path = path;\r\n      return this;\r\n    }\r\n\r\n    setResourcePath(resourcePath) {\r\n      this.resourcePath = resourcePath;\r\n      return this;\r\n    }\r\n\r\n    setRequestHeader(requestHeader) {\r\n      this.requestHeader = requestHeader;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  const loading = {};\r\n\r\n  class FileLoader extends Loader {\r\n    constructor(manager) {\r\n      super(manager);\r\n    }\r\n\r\n    load(url, onLoad, onProgress, onError) {\r\n      if (url === undefined) url = '';\r\n      if (this.path !== undefined) url = this.path + url;\r\n      url = this.manager.resolveURL(url);\r\n      const scope = this;\r\n      const cached = Cache.get(url);\r\n\r\n      if (cached !== undefined) {\r\n        scope.manager.itemStart(url);\r\n        setTimeout(function () {\r\n          if (onLoad) onLoad(cached);\r\n          scope.manager.itemEnd(url);\r\n        }, 0);\r\n        return cached;\r\n      } // Check if request is duplicate\r\n\r\n      if (loading[url] !== undefined) {\r\n        loading[url].push({\r\n          onLoad: onLoad,\r\n          onProgress: onProgress,\r\n          onError: onError,\r\n        });\r\n        return;\r\n      } // Check for data: URI\r\n\r\n      const dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\r\n      const dataUriRegexResult = url.match(dataUriRegex);\r\n      let request; // Safari can not handle Data URIs through XMLHttpRequest so process manually\r\n\r\n      if (dataUriRegexResult) {\r\n        const mimeType = dataUriRegexResult[1];\r\n        const isBase64 = !!dataUriRegexResult[2];\r\n        let data = dataUriRegexResult[3];\r\n        data = decodeURIComponent(data);\r\n        if (isBase64) data = atob(data);\r\n\r\n        try {\r\n          let response;\r\n          const responseType = (this.responseType || '').toLowerCase();\r\n\r\n          switch (responseType) {\r\n            case 'arraybuffer':\r\n            case 'blob':\r\n              const view = new Uint8Array(data.length);\r\n\r\n              for (let i = 0; i < data.length; i++) {\r\n                view[i] = data.charCodeAt(i);\r\n              }\r\n\r\n              if (responseType === 'blob') {\r\n                response = new Blob([view.buffer], {\r\n                  type: mimeType,\r\n                });\r\n              } else {\r\n                response = view.buffer;\r\n              }\r\n\r\n              break;\r\n\r\n            case 'document':\r\n              const parser = new DOMParser();\r\n              response = parser.parseFromString(data, mimeType);\r\n              break;\r\n\r\n            case 'json':\r\n              response = JSON.parse(data);\r\n              break;\r\n\r\n            default:\r\n              // 'text' or other\r\n              response = data;\r\n              break;\r\n          } // Wait for next browser tick like standard XMLHttpRequest event dispatching does\r\n\r\n          setTimeout(function () {\r\n            if (onLoad) onLoad(response);\r\n            scope.manager.itemEnd(url);\r\n          }, 0);\r\n        } catch (error) {\r\n          // Wait for next browser tick like standard XMLHttpRequest event dispatching does\r\n          setTimeout(function () {\r\n            if (onError) onError(error);\r\n            scope.manager.itemError(url);\r\n            scope.manager.itemEnd(url);\r\n          }, 0);\r\n        }\r\n      } else {\r\n        // Initialise array for duplicate requests\r\n        loading[url] = [];\r\n        loading[url].push({\r\n          onLoad: onLoad,\r\n          onProgress: onProgress,\r\n          onError: onError,\r\n        });\r\n        request = new XMLHttpRequest();\r\n        request.open('GET', url, true);\r\n        request.addEventListener(\r\n          'load',\r\n          function (event) {\r\n            const response = this.response;\r\n            const callbacks = loading[url];\r\n            delete loading[url];\r\n\r\n            if (this.status === 200 || this.status === 0) {\r\n              // Some browsers return HTTP Status 0 when using non-http protocol\r\n              // e.g. 'file://' or 'data://'. Handle as success.\r\n              if (this.status === 0) console.warn('THREE.FileLoader: HTTP Status 0 received.'); // Add to cache only on HTTP success, so that we do not cache\r\n              // error response bodies as proper responses to requests.\r\n\r\n              Cache.add(url, response);\r\n\r\n              for (let i = 0, il = callbacks.length; i < il; i++) {\r\n                const callback = callbacks[i];\r\n                if (callback.onLoad) callback.onLoad(response);\r\n              }\r\n\r\n              scope.manager.itemEnd(url);\r\n            } else {\r\n              for (let i = 0, il = callbacks.length; i < il; i++) {\r\n                const callback = callbacks[i];\r\n                if (callback.onError) callback.onError(event);\r\n              }\r\n\r\n              scope.manager.itemError(url);\r\n              scope.manager.itemEnd(url);\r\n            }\r\n          },\r\n          false,\r\n        );\r\n        request.addEventListener(\r\n          'progress',\r\n          function (event) {\r\n            const callbacks = loading[url];\r\n\r\n            for (let i = 0, il = callbacks.length; i < il; i++) {\r\n              const callback = callbacks[i];\r\n              if (callback.onProgress) callback.onProgress(event);\r\n            }\r\n          },\r\n          false,\r\n        );\r\n        request.addEventListener(\r\n          'error',\r\n          function (event) {\r\n            const callbacks = loading[url];\r\n            delete loading[url];\r\n\r\n            for (let i = 0, il = callbacks.length; i < il; i++) {\r\n              const callback = callbacks[i];\r\n              if (callback.onError) callback.onError(event);\r\n            }\r\n\r\n            scope.manager.itemError(url);\r\n            scope.manager.itemEnd(url);\r\n          },\r\n          false,\r\n        );\r\n        request.addEventListener(\r\n          'abort',\r\n          function (event) {\r\n            const callbacks = loading[url];\r\n            delete loading[url];\r\n\r\n            for (let i = 0, il = callbacks.length; i < il; i++) {\r\n              const callback = callbacks[i];\r\n              if (callback.onError) callback.onError(event);\r\n            }\r\n\r\n            scope.manager.itemError(url);\r\n            scope.manager.itemEnd(url);\r\n          },\r\n          false,\r\n        );\r\n        if (this.responseType !== undefined) request.responseType = this.responseType;\r\n        if (this.withCredentials !== undefined) request.withCredentials = this.withCredentials;\r\n        if (request.overrideMimeType)\r\n          request.overrideMimeType(this.mimeType !== undefined ? this.mimeType : 'text/plain');\r\n\r\n        for (const header in this.requestHeader) {\r\n          request.setRequestHeader(header, this.requestHeader[header]);\r\n        }\r\n\r\n        request.send(null);\r\n      }\r\n\r\n      scope.manager.itemStart(url);\r\n      return request;\r\n    }\r\n\r\n    setResponseType(value) {\r\n      this.responseType = value;\r\n      return this;\r\n    }\r\n\r\n    setMimeType(value) {\r\n      this.mimeType = value;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  class AnimationLoader extends Loader {\r\n    constructor(manager) {\r\n      super(manager);\r\n    }\r\n\r\n    load(url, onLoad, onProgress, onError) {\r\n      const scope = this;\r\n      const loader = new FileLoader(this.manager);\r\n      loader.setPath(this.path);\r\n      loader.setRequestHeader(this.requestHeader);\r\n      loader.setWithCredentials(this.withCredentials);\r\n      loader.load(\r\n        url,\r\n        function (text) {\r\n          try {\r\n            onLoad(scope.parse(JSON.parse(text)));\r\n          } catch (e) {\r\n            if (onError) {\r\n              onError(e);\r\n            } else {\r\n              console.error(e);\r\n            }\r\n\r\n            scope.manager.itemError(url);\r\n          }\r\n        },\r\n        onProgress,\r\n        onError,\r\n      );\r\n    }\r\n\r\n    parse(json) {\r\n      const animations = [];\r\n\r\n      for (let i = 0; i < json.length; i++) {\r\n        const clip = AnimationClip.parse(json[i]);\r\n        animations.push(clip);\r\n      }\r\n\r\n      return animations;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n   *\r\n   * Sub classes have to implement the parse() method which will be used in load().\r\n   */\r\n\r\n  class CompressedTextureLoader extends Loader {\r\n    constructor(manager) {\r\n      super(manager);\r\n    }\r\n\r\n    load(url, onLoad, onProgress, onError) {\r\n      const scope = this;\r\n      const images = [];\r\n      const texture = new CompressedTexture();\r\n      const loader = new FileLoader(this.manager);\r\n      loader.setPath(this.path);\r\n      loader.setResponseType('arraybuffer');\r\n      loader.setRequestHeader(this.requestHeader);\r\n      loader.setWithCredentials(scope.withCredentials);\r\n      let loaded = 0;\r\n\r\n      function loadTexture(i) {\r\n        loader.load(\r\n          url[i],\r\n          function (buffer) {\r\n            const texDatas = scope.parse(buffer, true);\r\n            images[i] = {\r\n              width: texDatas.width,\r\n              height: texDatas.height,\r\n              format: texDatas.format,\r\n              mipmaps: texDatas.mipmaps,\r\n            };\r\n            loaded += 1;\r\n\r\n            if (loaded === 6) {\r\n              if (texDatas.mipmapCount === 1) texture.minFilter = LinearFilter;\r\n              texture.image = images;\r\n              texture.format = texDatas.format;\r\n              texture.needsUpdate = true;\r\n              if (onLoad) onLoad(texture);\r\n            }\r\n          },\r\n          onProgress,\r\n          onError,\r\n        );\r\n      }\r\n\r\n      if (Array.isArray(url)) {\r\n        for (let i = 0, il = url.length; i < il; ++i) {\r\n          loadTexture(i);\r\n        }\r\n      } else {\r\n        // compressed cubemap texture stored in a single DDS file\r\n        loader.load(\r\n          url,\r\n          function (buffer) {\r\n            const texDatas = scope.parse(buffer, true);\r\n\r\n            if (texDatas.isCubemap) {\r\n              const faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n              for (let f = 0; f < faces; f++) {\r\n                images[f] = {\r\n                  mipmaps: [],\r\n                };\r\n\r\n                for (let i = 0; i < texDatas.mipmapCount; i++) {\r\n                  images[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\r\n                  images[f].format = texDatas.format;\r\n                  images[f].width = texDatas.width;\r\n                  images[f].height = texDatas.height;\r\n                }\r\n              }\r\n\r\n              texture.image = images;\r\n            } else {\r\n              texture.image.width = texDatas.width;\r\n              texture.image.height = texDatas.height;\r\n              texture.mipmaps = texDatas.mipmaps;\r\n            }\r\n\r\n            if (texDatas.mipmapCount === 1) {\r\n              texture.minFilter = LinearFilter;\r\n            }\r\n\r\n            texture.format = texDatas.format;\r\n            texture.needsUpdate = true;\r\n            if (onLoad) onLoad(texture);\r\n          },\r\n          onProgress,\r\n          onError,\r\n        );\r\n      }\r\n\r\n      return texture;\r\n    }\r\n  }\r\n\r\n  class ImageLoader extends Loader {\r\n    constructor(manager) {\r\n      super(manager);\r\n    }\r\n\r\n    load(url, onLoad, onProgress, onError) {\r\n      if (this.path !== undefined) url = this.path + url;\r\n      url = this.manager.resolveURL(url);\r\n      const scope = this;\r\n      const cached = Cache.get(url);\r\n\r\n      if (cached !== undefined) {\r\n        scope.manager.itemStart(url);\r\n        setTimeout(function () {\r\n          if (onLoad) onLoad(cached);\r\n          scope.manager.itemEnd(url);\r\n        }, 0);\r\n        return cached;\r\n      }\r\n\r\n      const image = document.createElementNS('http://www.w3.org/1999/xhtml', 'img');\r\n\r\n      function onImageLoad() {\r\n        image.removeEventListener('load', onImageLoad, false);\r\n        image.removeEventListener('error', onImageError, false);\r\n        Cache.add(url, this);\r\n        if (onLoad) onLoad(this);\r\n        scope.manager.itemEnd(url);\r\n      }\r\n\r\n      function onImageError(event) {\r\n        image.removeEventListener('load', onImageLoad, false);\r\n        image.removeEventListener('error', onImageError, false);\r\n        if (onError) onError(event);\r\n        scope.manager.itemError(url);\r\n        scope.manager.itemEnd(url);\r\n      }\r\n\r\n      image.addEventListener('load', onImageLoad, false);\r\n      image.addEventListener('error', onImageError, false);\r\n\r\n      if (url.substr(0, 5) !== 'data:') {\r\n        if (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\r\n      }\r\n\r\n      scope.manager.itemStart(url);\r\n      image.src = url;\r\n      return image;\r\n    }\r\n  }\r\n\r\n  class CubeTextureLoader extends Loader {\r\n    constructor(manager) {\r\n      super(manager);\r\n    }\r\n\r\n    load(urls, onLoad, onProgress, onError) {\r\n      const texture = new CubeTexture();\r\n      const loader = new ImageLoader(this.manager);\r\n      loader.setCrossOrigin(this.crossOrigin);\r\n      loader.setPath(this.path);\r\n      let loaded = 0;\r\n\r\n      function loadTexture(i) {\r\n        loader.load(\r\n          urls[i],\r\n          function (image) {\r\n            texture.images[i] = image;\r\n            loaded++;\r\n\r\n            if (loaded === 6) {\r\n              texture.needsUpdate = true;\r\n              if (onLoad) onLoad(texture);\r\n            }\r\n          },\r\n          undefined,\r\n          onError,\r\n        );\r\n      }\r\n\r\n      for (let i = 0; i < urls.length; ++i) {\r\n        loadTexture(i);\r\n      }\r\n\r\n      return texture;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n   *\r\n   * Sub classes have to implement the parse() method which will be used in load().\r\n   */\r\n\r\n  class DataTextureLoader extends Loader {\r\n    constructor(manager) {\r\n      super(manager);\r\n    }\r\n\r\n    load(url, onLoad, onProgress, onError) {\r\n      const scope = this;\r\n      const texture = new DataTexture();\r\n      const loader = new FileLoader(this.manager);\r\n      loader.setResponseType('arraybuffer');\r\n      loader.setRequestHeader(this.requestHeader);\r\n      loader.setPath(this.path);\r\n      loader.setWithCredentials(scope.withCredentials);\r\n      loader.load(\r\n        url,\r\n        function (buffer) {\r\n          const texData = scope.parse(buffer);\r\n          if (!texData) return;\r\n\r\n          if (texData.image !== undefined) {\r\n            texture.image = texData.image;\r\n          } else if (texData.data !== undefined) {\r\n            texture.image.width = texData.width;\r\n            texture.image.height = texData.height;\r\n            texture.image.data = texData.data;\r\n          }\r\n\r\n          texture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\r\n          texture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\r\n          texture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\r\n          texture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\r\n          texture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\r\n\r\n          if (texData.encoding !== undefined) {\r\n            texture.encoding = texData.encoding;\r\n          }\r\n\r\n          if (texData.flipY !== undefined) {\r\n            texture.flipY = texData.flipY;\r\n          }\r\n\r\n          if (texData.format !== undefined) {\r\n            texture.format = texData.format;\r\n          }\r\n\r\n          if (texData.type !== undefined) {\r\n            texture.type = texData.type;\r\n          }\r\n\r\n          if (texData.mipmaps !== undefined) {\r\n            texture.mipmaps = texData.mipmaps;\r\n            texture.minFilter = LinearMipmapLinearFilter; // presumably...\r\n          }\r\n\r\n          if (texData.mipmapCount === 1) {\r\n            texture.minFilter = LinearFilter;\r\n          }\r\n\r\n          if (texData.generateMipmaps !== undefined) {\r\n            texture.generateMipmaps = texData.generateMipmaps;\r\n          }\r\n\r\n          texture.needsUpdate = true;\r\n          if (onLoad) onLoad(texture, texData);\r\n        },\r\n        onProgress,\r\n        onError,\r\n      );\r\n      return texture;\r\n    }\r\n  }\r\n\r\n  class TextureLoader extends Loader {\r\n    constructor(manager) {\r\n      super(manager);\r\n    }\r\n\r\n    load(url, onLoad, onProgress, onError) {\r\n      const texture = new Texture();\r\n      const loader = new ImageLoader(this.manager);\r\n      loader.setCrossOrigin(this.crossOrigin);\r\n      loader.setPath(this.path);\r\n      loader.load(\r\n        url,\r\n        function (image) {\r\n          texture.image = image; // JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\r\n\r\n          const isJPEG = url.search(/\\.jpe?g($|\\?)/i) > 0 || url.search(/^data\\:image\\/jpeg/) === 0;\r\n          texture.format = isJPEG ? RGBFormat : RGBAFormat;\r\n          texture.needsUpdate = true;\r\n\r\n          if (onLoad !== undefined) {\r\n            onLoad(texture);\r\n          }\r\n        },\r\n        onProgress,\r\n        onError,\r\n      );\r\n      return texture;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extensible curve object.\r\n   *\r\n   * Some common of curve methods:\r\n   * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\r\n   * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\r\n   * .getPoints(), .getSpacedPoints()\r\n   * .getLength()\r\n   * .updateArcLengths()\r\n   *\r\n   * This following curves inherit from THREE.Curve:\r\n   *\r\n   * -- 2D curves --\r\n   * THREE.ArcCurve\r\n   * THREE.CubicBezierCurve\r\n   * THREE.EllipseCurve\r\n   * THREE.LineCurve\r\n   * THREE.QuadraticBezierCurve\r\n   * THREE.SplineCurve\r\n   *\r\n   * -- 3D curves --\r\n   * THREE.CatmullRomCurve3\r\n   * THREE.CubicBezierCurve3\r\n   * THREE.LineCurve3\r\n   * THREE.QuadraticBezierCurve3\r\n   *\r\n   * A series of curves can be represented as a THREE.CurvePath.\r\n   *\r\n   **/\r\n\r\n  class Curve {\r\n    constructor() {\r\n      this.type = 'Curve';\r\n      this.arcLengthDivisions = 200;\r\n    } // Virtual base class method to overwrite and implement in subclasses\r\n    //\t- t [0 .. 1]\r\n\r\n    getPoint() /* t, optionalTarget */\r\n    {\r\n      console.warn('THREE.Curve: .getPoint() not implemented.');\r\n      return null;\r\n    } // Get point at relative position in curve according to arc length\r\n    // - u [0 .. 1]\r\n\r\n    getPointAt(u, optionalTarget) {\r\n      const t = this.getUtoTmapping(u);\r\n      return this.getPoint(t, optionalTarget);\r\n    } // Get sequence of points using getPoint( t )\r\n\r\n    getPoints(divisions = 5) {\r\n      const points = [];\r\n\r\n      for (let d = 0; d <= divisions; d++) {\r\n        points.push(this.getPoint(d / divisions));\r\n      }\r\n\r\n      return points;\r\n    } // Get sequence of points using getPointAt( u )\r\n\r\n    getSpacedPoints(divisions = 5) {\r\n      const points = [];\r\n\r\n      for (let d = 0; d <= divisions; d++) {\r\n        points.push(this.getPointAt(d / divisions));\r\n      }\r\n\r\n      return points;\r\n    } // Get total curve arc length\r\n\r\n    getLength() {\r\n      const lengths = this.getLengths();\r\n      return lengths[lengths.length - 1];\r\n    } // Get list of cumulative segment lengths\r\n\r\n    getLengths(divisions = this.arcLengthDivisions) {\r\n      if (\r\n        this.cacheArcLengths &&\r\n        this.cacheArcLengths.length === divisions + 1 &&\r\n        !this.needsUpdate\r\n      ) {\r\n        return this.cacheArcLengths;\r\n      }\r\n\r\n      this.needsUpdate = false;\r\n      const cache = [];\r\n      let current,\r\n        last = this.getPoint(0);\r\n      let sum = 0;\r\n      cache.push(0);\r\n\r\n      for (let p = 1; p <= divisions; p++) {\r\n        current = this.getPoint(p / divisions);\r\n        sum += current.distanceTo(last);\r\n        cache.push(sum);\r\n        last = current;\r\n      }\r\n\r\n      this.cacheArcLengths = cache;\r\n      return cache; // { sums: cache, sum: sum }; Sum is in the last element.\r\n    }\r\n\r\n    updateArcLengths() {\r\n      this.needsUpdate = true;\r\n      this.getLengths();\r\n    } // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\n    getUtoTmapping(u, distance) {\r\n      const arcLengths = this.getLengths();\r\n      let i = 0;\r\n      const il = arcLengths.length;\r\n      let targetArcLength; // The targeted u distance value to get\r\n\r\n      if (distance) {\r\n        targetArcLength = distance;\r\n      } else {\r\n        targetArcLength = u * arcLengths[il - 1];\r\n      } // binary search for the index with largest value smaller than target u distance\r\n\r\n      let low = 0,\r\n        high = il - 1,\r\n        comparison;\r\n\r\n      while (low <= high) {\r\n        i = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n        comparison = arcLengths[i] - targetArcLength;\r\n\r\n        if (comparison < 0) {\r\n          low = i + 1;\r\n        } else if (comparison > 0) {\r\n          high = i - 1;\r\n        } else {\r\n          high = i;\r\n          break; // DONE\r\n        }\r\n      }\r\n\r\n      i = high;\r\n\r\n      if (arcLengths[i] === targetArcLength) {\r\n        return i / (il - 1);\r\n      } // we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n      const lengthBefore = arcLengths[i];\r\n      const lengthAfter = arcLengths[i + 1];\r\n      const segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\r\n\r\n      const segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\r\n\r\n      const t = (i + segmentFraction) / (il - 1);\r\n      return t;\r\n    } // Returns a unit vector tangent at t\r\n    // In case any sub curve does not implement its tangent derivation,\r\n    // 2 points a small delta apart will be used to find its gradient\r\n    // which seems to give a reasonable approximation\r\n\r\n    getTangent(t, optionalTarget) {\r\n      const delta = 0.0001;\r\n      let t1 = t - delta;\r\n      let t2 = t + delta; // Capping in case of danger\r\n\r\n      if (t1 < 0) t1 = 0;\r\n      if (t2 > 1) t2 = 1;\r\n      const pt1 = this.getPoint(t1);\r\n      const pt2 = this.getPoint(t2);\r\n      const tangent = optionalTarget || (pt1.isVector2 ? new Vector2() : new Vector3());\r\n      tangent.copy(pt2).sub(pt1).normalize();\r\n      return tangent;\r\n    }\r\n\r\n    getTangentAt(u, optionalTarget) {\r\n      const t = this.getUtoTmapping(u);\r\n      return this.getTangent(t, optionalTarget);\r\n    }\r\n\r\n    computeFrenetFrames(segments, closed) {\r\n      // see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n      const normal = new Vector3();\r\n      const tangents = [];\r\n      const normals = [];\r\n      const binormals = [];\r\n      const vec = new Vector3();\r\n      const mat = new Matrix4(); // compute the tangent vectors for each segment on the curve\r\n\r\n      for (let i = 0; i <= segments; i++) {\r\n        const u = i / segments;\r\n        tangents[i] = this.getTangentAt(u, new Vector3());\r\n        tangents[i].normalize();\r\n      } // select an initial normal vector perpendicular to the first tangent vector,\r\n      // and in the direction of the minimum tangent xyz component\r\n\r\n      normals[0] = new Vector3();\r\n      binormals[0] = new Vector3();\r\n      let min = Number.MAX_VALUE;\r\n      const tx = Math.abs(tangents[0].x);\r\n      const ty = Math.abs(tangents[0].y);\r\n      const tz = Math.abs(tangents[0].z);\r\n\r\n      if (tx <= min) {\r\n        min = tx;\r\n        normal.set(1, 0, 0);\r\n      }\r\n\r\n      if (ty <= min) {\r\n        min = ty;\r\n        normal.set(0, 1, 0);\r\n      }\r\n\r\n      if (tz <= min) {\r\n        normal.set(0, 0, 1);\r\n      }\r\n\r\n      vec.crossVectors(tangents[0], normal).normalize();\r\n      normals[0].crossVectors(tangents[0], vec);\r\n      binormals[0].crossVectors(tangents[0], normals[0]); // compute the slowly-varying normal and binormal vectors for each segment on the curve\r\n\r\n      for (let i = 1; i <= segments; i++) {\r\n        normals[i] = normals[i - 1].clone();\r\n        binormals[i] = binormals[i - 1].clone();\r\n        vec.crossVectors(tangents[i - 1], tangents[i]);\r\n\r\n        if (vec.length() > Number.EPSILON) {\r\n          vec.normalize();\r\n          const theta = Math.acos(clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\r\n\r\n          normals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\r\n        }\r\n\r\n        binormals[i].crossVectors(tangents[i], normals[i]);\r\n      } // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n      if (closed === true) {\r\n        let theta = Math.acos(clamp(normals[0].dot(normals[segments]), -1, 1));\r\n        theta /= segments;\r\n\r\n        if (tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0) {\r\n          theta = -theta;\r\n        }\r\n\r\n        for (let i = 1; i <= segments; i++) {\r\n          // twist a little...\r\n          normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\r\n          binormals[i].crossVectors(tangents[i], normals[i]);\r\n        }\r\n      }\r\n\r\n      return {\r\n        tangents: tangents,\r\n        normals: normals,\r\n        binormals: binormals,\r\n      };\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().copy(this);\r\n    }\r\n\r\n    copy(source) {\r\n      this.arcLengthDivisions = source.arcLengthDivisions;\r\n      return this;\r\n    }\r\n\r\n    toJSON() {\r\n      const data = {\r\n        metadata: {\r\n          version: 4.5,\r\n          type: 'Curve',\r\n          generator: 'Curve.toJSON',\r\n        },\r\n      };\r\n      data.arcLengthDivisions = this.arcLengthDivisions;\r\n      data.type = this.type;\r\n      return data;\r\n    }\r\n\r\n    fromJSON(json) {\r\n      this.arcLengthDivisions = json.arcLengthDivisions;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  class EllipseCurve extends Curve {\r\n    constructor(\r\n      aX = 0,\r\n      aY = 0,\r\n      xRadius = 1,\r\n      yRadius = 1,\r\n      aStartAngle = 0,\r\n      aEndAngle = Math.PI * 2,\r\n      aClockwise = false,\r\n      aRotation = 0,\r\n    ) {\r\n      super();\r\n      this.type = 'EllipseCurve';\r\n      this.aX = aX;\r\n      this.aY = aY;\r\n      this.xRadius = xRadius;\r\n      this.yRadius = yRadius;\r\n      this.aStartAngle = aStartAngle;\r\n      this.aEndAngle = aEndAngle;\r\n      this.aClockwise = aClockwise;\r\n      this.aRotation = aRotation;\r\n    }\r\n\r\n    getPoint(t, optionalTarget) {\r\n      const point = optionalTarget || new Vector2();\r\n      const twoPi = Math.PI * 2;\r\n      let deltaAngle = this.aEndAngle - this.aStartAngle;\r\n      const samePoints = Math.abs(deltaAngle) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI\r\n\r\n      while (deltaAngle < 0) deltaAngle += twoPi;\r\n\r\n      while (deltaAngle > twoPi) deltaAngle -= twoPi;\r\n\r\n      if (deltaAngle < Number.EPSILON) {\r\n        if (samePoints) {\r\n          deltaAngle = 0;\r\n        } else {\r\n          deltaAngle = twoPi;\r\n        }\r\n      }\r\n\r\n      if (this.aClockwise === true && !samePoints) {\r\n        if (deltaAngle === twoPi) {\r\n          deltaAngle = -twoPi;\r\n        } else {\r\n          deltaAngle = deltaAngle - twoPi;\r\n        }\r\n      }\r\n\r\n      const angle = this.aStartAngle + t * deltaAngle;\r\n      let x = this.aX + this.xRadius * Math.cos(angle);\r\n      let y = this.aY + this.yRadius * Math.sin(angle);\r\n\r\n      if (this.aRotation !== 0) {\r\n        const cos = Math.cos(this.aRotation);\r\n        const sin = Math.sin(this.aRotation);\r\n        const tx = x - this.aX;\r\n        const ty = y - this.aY; // Rotate the point about the center of the ellipse.\r\n\r\n        x = tx * cos - ty * sin + this.aX;\r\n        y = tx * sin + ty * cos + this.aY;\r\n      }\r\n\r\n      return point.set(x, y);\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.aX = source.aX;\r\n      this.aY = source.aY;\r\n      this.xRadius = source.xRadius;\r\n      this.yRadius = source.yRadius;\r\n      this.aStartAngle = source.aStartAngle;\r\n      this.aEndAngle = source.aEndAngle;\r\n      this.aClockwise = source.aClockwise;\r\n      this.aRotation = source.aRotation;\r\n      return this;\r\n    }\r\n\r\n    toJSON() {\r\n      const data = super.toJSON();\r\n      data.aX = this.aX;\r\n      data.aY = this.aY;\r\n      data.xRadius = this.xRadius;\r\n      data.yRadius = this.yRadius;\r\n      data.aStartAngle = this.aStartAngle;\r\n      data.aEndAngle = this.aEndAngle;\r\n      data.aClockwise = this.aClockwise;\r\n      data.aRotation = this.aRotation;\r\n      return data;\r\n    }\r\n\r\n    fromJSON(json) {\r\n      super.fromJSON(json);\r\n      this.aX = json.aX;\r\n      this.aY = json.aY;\r\n      this.xRadius = json.xRadius;\r\n      this.yRadius = json.yRadius;\r\n      this.aStartAngle = json.aStartAngle;\r\n      this.aEndAngle = json.aEndAngle;\r\n      this.aClockwise = json.aClockwise;\r\n      this.aRotation = json.aRotation;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  EllipseCurve.prototype.isEllipseCurve = true;\r\n\r\n  class ArcCurve extends EllipseCurve {\r\n    constructor(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\r\n      super(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\r\n      this.type = 'ArcCurve';\r\n    }\r\n  }\r\n\r\n  ArcCurve.prototype.isArcCurve = true;\r\n\r\n  /**\r\n   * Centripetal CatmullRom Curve - which is useful for avoiding\r\n   * cusps and self-intersections in non-uniform catmull rom curves.\r\n   * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n   *\r\n   * curve.type accepts centripetal(default), chordal and catmullrom\r\n   * curve.tension is used for catmullrom which defaults to 0.5\r\n   */\r\n\r\n  /*\r\n\tBased on an optimized c++ solution in\r\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t - http://ideone.com/NoEbVM\r\n\r\n\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\twhich can be placed in CurveUtils.\r\n\t*/\r\n\r\n  function CubicPoly() {\r\n    let c0 = 0,\r\n      c1 = 0,\r\n      c2 = 0,\r\n      c3 = 0;\r\n    /*\r\n     * Compute coefficients for a cubic polynomial\r\n     *\t p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n     * such that\r\n     *\t p(0) = x0, p(1) = x1\r\n     *\tand\r\n     *\t p'(0) = t0, p'(1) = t1.\r\n     */\r\n\r\n    function init(x0, x1, t0, t1) {\r\n      c0 = x0;\r\n      c1 = t0;\r\n      c2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n      c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n    }\r\n\r\n    return {\r\n      initCatmullRom: function (x0, x1, x2, x3, tension) {\r\n        init(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\r\n      },\r\n      initNonuniformCatmullRom: function (x0, x1, x2, x3, dt0, dt1, dt2) {\r\n        // compute tangents when parameterized in [t1,t2]\r\n        let t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\r\n        let t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\r\n\r\n        t1 *= dt1;\r\n        t2 *= dt1;\r\n        init(x1, x2, t1, t2);\r\n      },\r\n      calc: function (t) {\r\n        const t2 = t * t;\r\n        const t3 = t2 * t;\r\n        return c0 + c1 * t + c2 * t2 + c3 * t3;\r\n      },\r\n    };\r\n  } //\r\n\r\n  const tmp = new Vector3();\r\n  const px = new CubicPoly(),\r\n    py = new CubicPoly(),\r\n    pz = new CubicPoly();\r\n\r\n  class CatmullRomCurve3 extends Curve {\r\n    constructor(points = [], closed = false, curveType = 'centripetal', tension = 0.5) {\r\n      super();\r\n      this.type = 'CatmullRomCurve3';\r\n      this.points = points;\r\n      this.closed = closed;\r\n      this.curveType = curveType;\r\n      this.tension = tension;\r\n    }\r\n\r\n    getPoint(t, optionalTarget = new Vector3()) {\r\n      const point = optionalTarget;\r\n      const points = this.points;\r\n      const l = points.length;\r\n      const p = (l - (this.closed ? 0 : 1)) * t;\r\n      let intPoint = Math.floor(p);\r\n      let weight = p - intPoint;\r\n\r\n      if (this.closed) {\r\n        intPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / l) + 1) * l;\r\n      } else if (weight === 0 && intPoint === l - 1) {\r\n        intPoint = l - 2;\r\n        weight = 1;\r\n      }\r\n\r\n      let p0, p3; // 4 points (p1 & p2 defined below)\r\n\r\n      if (this.closed || intPoint > 0) {\r\n        p0 = points[(intPoint - 1) % l];\r\n      } else {\r\n        // extrapolate first point\r\n        tmp.subVectors(points[0], points[1]).add(points[0]);\r\n        p0 = tmp;\r\n      }\r\n\r\n      const p1 = points[intPoint % l];\r\n      const p2 = points[(intPoint + 1) % l];\r\n\r\n      if (this.closed || intPoint + 2 < l) {\r\n        p3 = points[(intPoint + 2) % l];\r\n      } else {\r\n        // extrapolate last point\r\n        tmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\r\n        p3 = tmp;\r\n      }\r\n\r\n      if (this.curveType === 'centripetal' || this.curveType === 'chordal') {\r\n        // init Centripetal / Chordal Catmull-Rom\r\n        const pow = this.curveType === 'chordal' ? 0.5 : 0.25;\r\n        let dt0 = Math.pow(p0.distanceToSquared(p1), pow);\r\n        let dt1 = Math.pow(p1.distanceToSquared(p2), pow);\r\n        let dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\r\n\r\n        if (dt1 < 1e-4) dt1 = 1.0;\r\n        if (dt0 < 1e-4) dt0 = dt1;\r\n        if (dt2 < 1e-4) dt2 = dt1;\r\n        px.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\r\n        py.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\r\n        pz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\r\n      } else if (this.curveType === 'catmullrom') {\r\n        px.initCatmullRom(p0.x, p1.x, p2.x, p3.x, this.tension);\r\n        py.initCatmullRom(p0.y, p1.y, p2.y, p3.y, this.tension);\r\n        pz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, this.tension);\r\n      }\r\n\r\n      point.set(px.calc(weight), py.calc(weight), pz.calc(weight));\r\n      return point;\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.points = [];\r\n\r\n      for (let i = 0, l = source.points.length; i < l; i++) {\r\n        const point = source.points[i];\r\n        this.points.push(point.clone());\r\n      }\r\n\r\n      this.closed = source.closed;\r\n      this.curveType = source.curveType;\r\n      this.tension = source.tension;\r\n      return this;\r\n    }\r\n\r\n    toJSON() {\r\n      const data = super.toJSON();\r\n      data.points = [];\r\n\r\n      for (let i = 0, l = this.points.length; i < l; i++) {\r\n        const point = this.points[i];\r\n        data.points.push(point.toArray());\r\n      }\r\n\r\n      data.closed = this.closed;\r\n      data.curveType = this.curveType;\r\n      data.tension = this.tension;\r\n      return data;\r\n    }\r\n\r\n    fromJSON(json) {\r\n      super.fromJSON(json);\r\n      this.points = [];\r\n\r\n      for (let i = 0, l = json.points.length; i < l; i++) {\r\n        const point = json.points[i];\r\n        this.points.push(new Vector3().fromArray(point));\r\n      }\r\n\r\n      this.closed = json.closed;\r\n      this.curveType = json.curveType;\r\n      this.tension = json.tension;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  CatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\r\n\r\n  /**\r\n   * Bezier Curves formulas obtained from\r\n   * http://en.wikipedia.org/wiki/Bézier_curve\r\n   */\r\n  function CatmullRom(t, p0, p1, p2, p3) {\r\n    const v0 = (p2 - p0) * 0.5;\r\n    const v1 = (p3 - p1) * 0.5;\r\n    const t2 = t * t;\r\n    const t3 = t * t2;\r\n    return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\r\n  } //\r\n\r\n  function QuadraticBezierP0(t, p) {\r\n    const k = 1 - t;\r\n    return k * k * p;\r\n  }\r\n\r\n  function QuadraticBezierP1(t, p) {\r\n    return 2 * (1 - t) * t * p;\r\n  }\r\n\r\n  function QuadraticBezierP2(t, p) {\r\n    return t * t * p;\r\n  }\r\n\r\n  function QuadraticBezier(t, p0, p1, p2) {\r\n    return QuadraticBezierP0(t, p0) + QuadraticBezierP1(t, p1) + QuadraticBezierP2(t, p2);\r\n  } //\r\n\r\n  function CubicBezierP0(t, p) {\r\n    const k = 1 - t;\r\n    return k * k * k * p;\r\n  }\r\n\r\n  function CubicBezierP1(t, p) {\r\n    const k = 1 - t;\r\n    return 3 * k * k * t * p;\r\n  }\r\n\r\n  function CubicBezierP2(t, p) {\r\n    return 3 * (1 - t) * t * t * p;\r\n  }\r\n\r\n  function CubicBezierP3(t, p) {\r\n    return t * t * t * p;\r\n  }\r\n\r\n  function CubicBezier(t, p0, p1, p2, p3) {\r\n    return (\r\n      CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3)\r\n    );\r\n  }\r\n\r\n  class CubicBezierCurve extends Curve {\r\n    constructor(v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2()) {\r\n      super();\r\n      this.type = 'CubicBezierCurve';\r\n      this.v0 = v0;\r\n      this.v1 = v1;\r\n      this.v2 = v2;\r\n      this.v3 = v3;\r\n    }\r\n\r\n    getPoint(t, optionalTarget = new Vector2()) {\r\n      const point = optionalTarget;\r\n      const v0 = this.v0,\r\n        v1 = this.v1,\r\n        v2 = this.v2,\r\n        v3 = this.v3;\r\n      point.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\r\n      return point;\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.v0.copy(source.v0);\r\n      this.v1.copy(source.v1);\r\n      this.v2.copy(source.v2);\r\n      this.v3.copy(source.v3);\r\n      return this;\r\n    }\r\n\r\n    toJSON() {\r\n      const data = super.toJSON();\r\n      data.v0 = this.v0.toArray();\r\n      data.v1 = this.v1.toArray();\r\n      data.v2 = this.v2.toArray();\r\n      data.v3 = this.v3.toArray();\r\n      return data;\r\n    }\r\n\r\n    fromJSON(json) {\r\n      super.fromJSON(json);\r\n      this.v0.fromArray(json.v0);\r\n      this.v1.fromArray(json.v1);\r\n      this.v2.fromArray(json.v2);\r\n      this.v3.fromArray(json.v3);\r\n      return this;\r\n    }\r\n  }\r\n\r\n  CubicBezierCurve.prototype.isCubicBezierCurve = true;\r\n\r\n  class CubicBezierCurve3 extends Curve {\r\n    constructor(v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3()) {\r\n      super();\r\n      this.type = 'CubicBezierCurve3';\r\n      this.v0 = v0;\r\n      this.v1 = v1;\r\n      this.v2 = v2;\r\n      this.v3 = v3;\r\n    }\r\n\r\n    getPoint(t, optionalTarget = new Vector3()) {\r\n      const point = optionalTarget;\r\n      const v0 = this.v0,\r\n        v1 = this.v1,\r\n        v2 = this.v2,\r\n        v3 = this.v3;\r\n      point.set(\r\n        CubicBezier(t, v0.x, v1.x, v2.x, v3.x),\r\n        CubicBezier(t, v0.y, v1.y, v2.y, v3.y),\r\n        CubicBezier(t, v0.z, v1.z, v2.z, v3.z),\r\n      );\r\n      return point;\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.v0.copy(source.v0);\r\n      this.v1.copy(source.v1);\r\n      this.v2.copy(source.v2);\r\n      this.v3.copy(source.v3);\r\n      return this;\r\n    }\r\n\r\n    toJSON() {\r\n      const data = super.toJSON();\r\n      data.v0 = this.v0.toArray();\r\n      data.v1 = this.v1.toArray();\r\n      data.v2 = this.v2.toArray();\r\n      data.v3 = this.v3.toArray();\r\n      return data;\r\n    }\r\n\r\n    fromJSON(json) {\r\n      super.fromJSON(json);\r\n      this.v0.fromArray(json.v0);\r\n      this.v1.fromArray(json.v1);\r\n      this.v2.fromArray(json.v2);\r\n      this.v3.fromArray(json.v3);\r\n      return this;\r\n    }\r\n  }\r\n\r\n  CubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\r\n\r\n  class LineCurve extends Curve {\r\n    constructor(v1 = new Vector2(), v2 = new Vector2()) {\r\n      super();\r\n      this.type = 'LineCurve';\r\n      this.v1 = v1;\r\n      this.v2 = v2;\r\n    }\r\n\r\n    getPoint(t, optionalTarget = new Vector2()) {\r\n      const point = optionalTarget;\r\n\r\n      if (t === 1) {\r\n        point.copy(this.v2);\r\n      } else {\r\n        point.copy(this.v2).sub(this.v1);\r\n        point.multiplyScalar(t).add(this.v1);\r\n      }\r\n\r\n      return point;\r\n    } // Line curve is linear, so we can overwrite default getPointAt\r\n\r\n    getPointAt(u, optionalTarget) {\r\n      return this.getPoint(u, optionalTarget);\r\n    }\r\n\r\n    getTangent(t, optionalTarget) {\r\n      const tangent = optionalTarget || new Vector2();\r\n      tangent.copy(this.v2).sub(this.v1).normalize();\r\n      return tangent;\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.v1.copy(source.v1);\r\n      this.v2.copy(source.v2);\r\n      return this;\r\n    }\r\n\r\n    toJSON() {\r\n      const data = super.toJSON();\r\n      data.v1 = this.v1.toArray();\r\n      data.v2 = this.v2.toArray();\r\n      return data;\r\n    }\r\n\r\n    fromJSON(json) {\r\n      super.fromJSON(json);\r\n      this.v1.fromArray(json.v1);\r\n      this.v2.fromArray(json.v2);\r\n      return this;\r\n    }\r\n  }\r\n\r\n  LineCurve.prototype.isLineCurve = true;\r\n\r\n  class LineCurve3 extends Curve {\r\n    constructor(v1 = new Vector3(), v2 = new Vector3()) {\r\n      super();\r\n      this.type = 'LineCurve3';\r\n      this.isLineCurve3 = true;\r\n      this.v1 = v1;\r\n      this.v2 = v2;\r\n    }\r\n\r\n    getPoint(t, optionalTarget = new Vector3()) {\r\n      const point = optionalTarget;\r\n\r\n      if (t === 1) {\r\n        point.copy(this.v2);\r\n      } else {\r\n        point.copy(this.v2).sub(this.v1);\r\n        point.multiplyScalar(t).add(this.v1);\r\n      }\r\n\r\n      return point;\r\n    } // Line curve is linear, so we can overwrite default getPointAt\r\n\r\n    getPointAt(u, optionalTarget) {\r\n      return this.getPoint(u, optionalTarget);\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.v1.copy(source.v1);\r\n      this.v2.copy(source.v2);\r\n      return this;\r\n    }\r\n\r\n    toJSON() {\r\n      const data = super.toJSON();\r\n      data.v1 = this.v1.toArray();\r\n      data.v2 = this.v2.toArray();\r\n      return data;\r\n    }\r\n\r\n    fromJSON(json) {\r\n      super.fromJSON(json);\r\n      this.v1.fromArray(json.v1);\r\n      this.v2.fromArray(json.v2);\r\n      return this;\r\n    }\r\n  }\r\n\r\n  class QuadraticBezierCurve extends Curve {\r\n    constructor(v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2()) {\r\n      super();\r\n      this.type = 'QuadraticBezierCurve';\r\n      this.v0 = v0;\r\n      this.v1 = v1;\r\n      this.v2 = v2;\r\n    }\r\n\r\n    getPoint(t, optionalTarget = new Vector2()) {\r\n      const point = optionalTarget;\r\n      const v0 = this.v0,\r\n        v1 = this.v1,\r\n        v2 = this.v2;\r\n      point.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\r\n      return point;\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.v0.copy(source.v0);\r\n      this.v1.copy(source.v1);\r\n      this.v2.copy(source.v2);\r\n      return this;\r\n    }\r\n\r\n    toJSON() {\r\n      const data = super.toJSON();\r\n      data.v0 = this.v0.toArray();\r\n      data.v1 = this.v1.toArray();\r\n      data.v2 = this.v2.toArray();\r\n      return data;\r\n    }\r\n\r\n    fromJSON(json) {\r\n      super.fromJSON(json);\r\n      this.v0.fromArray(json.v0);\r\n      this.v1.fromArray(json.v1);\r\n      this.v2.fromArray(json.v2);\r\n      return this;\r\n    }\r\n  }\r\n\r\n  QuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\r\n\r\n  class QuadraticBezierCurve3 extends Curve {\r\n    constructor(v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3()) {\r\n      super();\r\n      this.type = 'QuadraticBezierCurve3';\r\n      this.v0 = v0;\r\n      this.v1 = v1;\r\n      this.v2 = v2;\r\n    }\r\n\r\n    getPoint(t, optionalTarget = new Vector3()) {\r\n      const point = optionalTarget;\r\n      const v0 = this.v0,\r\n        v1 = this.v1,\r\n        v2 = this.v2;\r\n      point.set(\r\n        QuadraticBezier(t, v0.x, v1.x, v2.x),\r\n        QuadraticBezier(t, v0.y, v1.y, v2.y),\r\n        QuadraticBezier(t, v0.z, v1.z, v2.z),\r\n      );\r\n      return point;\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.v0.copy(source.v0);\r\n      this.v1.copy(source.v1);\r\n      this.v2.copy(source.v2);\r\n      return this;\r\n    }\r\n\r\n    toJSON() {\r\n      const data = super.toJSON();\r\n      data.v0 = this.v0.toArray();\r\n      data.v1 = this.v1.toArray();\r\n      data.v2 = this.v2.toArray();\r\n      return data;\r\n    }\r\n\r\n    fromJSON(json) {\r\n      super.fromJSON(json);\r\n      this.v0.fromArray(json.v0);\r\n      this.v1.fromArray(json.v1);\r\n      this.v2.fromArray(json.v2);\r\n      return this;\r\n    }\r\n  }\r\n\r\n  QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\r\n\r\n  class SplineCurve extends Curve {\r\n    constructor(points = []) {\r\n      super();\r\n      this.type = 'SplineCurve';\r\n      this.points = points;\r\n    }\r\n\r\n    getPoint(t, optionalTarget = new Vector2()) {\r\n      const point = optionalTarget;\r\n      const points = this.points;\r\n      const p = (points.length - 1) * t;\r\n      const intPoint = Math.floor(p);\r\n      const weight = p - intPoint;\r\n      const p0 = points[intPoint === 0 ? intPoint : intPoint - 1];\r\n      const p1 = points[intPoint];\r\n      const p2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\r\n      const p3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\r\n      point.set(\r\n        CatmullRom(weight, p0.x, p1.x, p2.x, p3.x),\r\n        CatmullRom(weight, p0.y, p1.y, p2.y, p3.y),\r\n      );\r\n      return point;\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.points = [];\r\n\r\n      for (let i = 0, l = source.points.length; i < l; i++) {\r\n        const point = source.points[i];\r\n        this.points.push(point.clone());\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    toJSON() {\r\n      const data = super.toJSON();\r\n      data.points = [];\r\n\r\n      for (let i = 0, l = this.points.length; i < l; i++) {\r\n        const point = this.points[i];\r\n        data.points.push(point.toArray());\r\n      }\r\n\r\n      return data;\r\n    }\r\n\r\n    fromJSON(json) {\r\n      super.fromJSON(json);\r\n      this.points = [];\r\n\r\n      for (let i = 0, l = json.points.length; i < l; i++) {\r\n        const point = json.points[i];\r\n        this.points.push(new Vector2().fromArray(point));\r\n      }\r\n\r\n      return this;\r\n    }\r\n  }\r\n\r\n  SplineCurve.prototype.isSplineCurve = true;\r\n\r\n  var Curves = /*#__PURE__*/ Object.freeze({\r\n    __proto__: null,\r\n    ArcCurve: ArcCurve,\r\n    CatmullRomCurve3: CatmullRomCurve3,\r\n    CubicBezierCurve: CubicBezierCurve,\r\n    CubicBezierCurve3: CubicBezierCurve3,\r\n    EllipseCurve: EllipseCurve,\r\n    LineCurve: LineCurve,\r\n    LineCurve3: LineCurve3,\r\n    QuadraticBezierCurve: QuadraticBezierCurve,\r\n    QuadraticBezierCurve3: QuadraticBezierCurve3,\r\n    SplineCurve: SplineCurve,\r\n  });\r\n\r\n  /**************************************************************\r\n   *\tCurved Path - a curve path is simply a array of connected\r\n   *\tcurves, but retains the api of a curve\r\n   **************************************************************/\r\n\r\n  class CurvePath extends Curve {\r\n    constructor() {\r\n      super();\r\n      this.type = 'CurvePath';\r\n      this.curves = [];\r\n      this.autoClose = false; // Automatically closes the path\r\n    }\r\n\r\n    add(curve) {\r\n      this.curves.push(curve);\r\n    }\r\n\r\n    closePath() {\r\n      // Add a line curve if start and end of lines are not connected\r\n      const startPoint = this.curves[0].getPoint(0);\r\n      const endPoint = this.curves[this.curves.length - 1].getPoint(1);\r\n\r\n      if (!startPoint.equals(endPoint)) {\r\n        this.curves.push(new LineCurve(endPoint, startPoint));\r\n      }\r\n    } // To get accurate point with reference to\r\n    // entire path distance at time t,\r\n    // following has to be done:\r\n    // 1. Length of each sub path have to be known\r\n    // 2. Locate and identify type of curve\r\n    // 3. Get t for the curve\r\n    // 4. Return curve.getPointAt(t')\r\n\r\n    getPoint(t) {\r\n      const d = t * this.getLength();\r\n      const curveLengths = this.getCurveLengths();\r\n      let i = 0; // To think about boundaries points.\r\n\r\n      while (i < curveLengths.length) {\r\n        if (curveLengths[i] >= d) {\r\n          const diff = curveLengths[i] - d;\r\n          const curve = this.curves[i];\r\n          const segmentLength = curve.getLength();\r\n          const u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\r\n          return curve.getPointAt(u);\r\n        }\r\n\r\n        i++;\r\n      }\r\n\r\n      return null; // loop where sum != 0, sum > d , sum+1 <d\r\n    } // We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n    // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n    // getPoint() depends on getLength\r\n\r\n    getLength() {\r\n      const lens = this.getCurveLengths();\r\n      return lens[lens.length - 1];\r\n    } // cacheLengths must be recalculated.\r\n\r\n    updateArcLengths() {\r\n      this.needsUpdate = true;\r\n      this.cacheLengths = null;\r\n      this.getCurveLengths();\r\n    } // Compute lengths and cache them\r\n    // We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\n    getCurveLengths() {\r\n      // We use cache values if curves and cache array are same length\r\n      if (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\r\n        return this.cacheLengths;\r\n      } // Get length of sub-curve\r\n      // Push sums into cached array\r\n\r\n      const lengths = [];\r\n      let sums = 0;\r\n\r\n      for (let i = 0, l = this.curves.length; i < l; i++) {\r\n        sums += this.curves[i].getLength();\r\n        lengths.push(sums);\r\n      }\r\n\r\n      this.cacheLengths = lengths;\r\n      return lengths;\r\n    }\r\n\r\n    getSpacedPoints(divisions = 40) {\r\n      const points = [];\r\n\r\n      for (let i = 0; i <= divisions; i++) {\r\n        points.push(this.getPoint(i / divisions));\r\n      }\r\n\r\n      if (this.autoClose) {\r\n        points.push(points[0]);\r\n      }\r\n\r\n      return points;\r\n    }\r\n\r\n    getPoints(divisions = 12) {\r\n      const points = [];\r\n      let last;\r\n\r\n      for (let i = 0, curves = this.curves; i < curves.length; i++) {\r\n        const curve = curves[i];\r\n        const resolution =\r\n          curve && curve.isEllipseCurve\r\n            ? divisions * 2\r\n            : curve && (curve.isLineCurve || curve.isLineCurve3)\r\n            ? 1\r\n            : curve && curve.isSplineCurve\r\n            ? divisions * curve.points.length\r\n            : divisions;\r\n        const pts = curve.getPoints(resolution);\r\n\r\n        for (let j = 0; j < pts.length; j++) {\r\n          const point = pts[j];\r\n          if (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\r\n\r\n          points.push(point);\r\n          last = point;\r\n        }\r\n      }\r\n\r\n      if (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\r\n        points.push(points[0]);\r\n      }\r\n\r\n      return points;\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.curves = [];\r\n\r\n      for (let i = 0, l = source.curves.length; i < l; i++) {\r\n        const curve = source.curves[i];\r\n        this.curves.push(curve.clone());\r\n      }\r\n\r\n      this.autoClose = source.autoClose;\r\n      return this;\r\n    }\r\n\r\n    toJSON() {\r\n      const data = super.toJSON();\r\n      data.autoClose = this.autoClose;\r\n      data.curves = [];\r\n\r\n      for (let i = 0, l = this.curves.length; i < l; i++) {\r\n        const curve = this.curves[i];\r\n        data.curves.push(curve.toJSON());\r\n      }\r\n\r\n      return data;\r\n    }\r\n\r\n    fromJSON(json) {\r\n      super.fromJSON(json);\r\n      this.autoClose = json.autoClose;\r\n      this.curves = [];\r\n\r\n      for (let i = 0, l = json.curves.length; i < l; i++) {\r\n        const curve = json.curves[i];\r\n        this.curves.push(new Curves[curve.type]().fromJSON(curve));\r\n      }\r\n\r\n      return this;\r\n    }\r\n  }\r\n\r\n  class Path extends CurvePath {\r\n    constructor(points) {\r\n      super();\r\n      this.type = 'Path';\r\n      this.currentPoint = new Vector2();\r\n\r\n      if (points) {\r\n        this.setFromPoints(points);\r\n      }\r\n    }\r\n\r\n    setFromPoints(points) {\r\n      this.moveTo(points[0].x, points[0].y);\r\n\r\n      for (let i = 1, l = points.length; i < l; i++) {\r\n        this.lineTo(points[i].x, points[i].y);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    moveTo(x, y) {\r\n      this.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\r\n\r\n      return this;\r\n    }\r\n\r\n    lineTo(x, y) {\r\n      const curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\r\n      this.curves.push(curve);\r\n      this.currentPoint.set(x, y);\r\n      return this;\r\n    }\r\n\r\n    quadraticCurveTo(aCPx, aCPy, aX, aY) {\r\n      const curve = new QuadraticBezierCurve(\r\n        this.currentPoint.clone(),\r\n        new Vector2(aCPx, aCPy),\r\n        new Vector2(aX, aY),\r\n      );\r\n      this.curves.push(curve);\r\n      this.currentPoint.set(aX, aY);\r\n      return this;\r\n    }\r\n\r\n    bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\r\n      const curve = new CubicBezierCurve(\r\n        this.currentPoint.clone(),\r\n        new Vector2(aCP1x, aCP1y),\r\n        new Vector2(aCP2x, aCP2y),\r\n        new Vector2(aX, aY),\r\n      );\r\n      this.curves.push(curve);\r\n      this.currentPoint.set(aX, aY);\r\n      return this;\r\n    }\r\n\r\n    splineThru(\r\n      pts,\r\n      /*Array of Vector*/\r\n    ) {\r\n      const npts = [this.currentPoint.clone()].concat(pts);\r\n      const curve = new SplineCurve(npts);\r\n      this.curves.push(curve);\r\n      this.currentPoint.copy(pts[pts.length - 1]);\r\n      return this;\r\n    }\r\n\r\n    arc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\r\n      const x0 = this.currentPoint.x;\r\n      const y0 = this.currentPoint.y;\r\n      this.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\r\n      return this;\r\n    }\r\n\r\n    absarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\r\n      this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\r\n      return this;\r\n    }\r\n\r\n    ellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\r\n      const x0 = this.currentPoint.x;\r\n      const y0 = this.currentPoint.y;\r\n      this.absellipse(\r\n        aX + x0,\r\n        aY + y0,\r\n        xRadius,\r\n        yRadius,\r\n        aStartAngle,\r\n        aEndAngle,\r\n        aClockwise,\r\n        aRotation,\r\n      );\r\n      return this;\r\n    }\r\n\r\n    absellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\r\n      const curve = new EllipseCurve(\r\n        aX,\r\n        aY,\r\n        xRadius,\r\n        yRadius,\r\n        aStartAngle,\r\n        aEndAngle,\r\n        aClockwise,\r\n        aRotation,\r\n      );\r\n\r\n      if (this.curves.length > 0) {\r\n        // if a previous curve is present, attempt to join\r\n        const firstPoint = curve.getPoint(0);\r\n\r\n        if (!firstPoint.equals(this.currentPoint)) {\r\n          this.lineTo(firstPoint.x, firstPoint.y);\r\n        }\r\n      }\r\n\r\n      this.curves.push(curve);\r\n      const lastPoint = curve.getPoint(1);\r\n      this.currentPoint.copy(lastPoint);\r\n      return this;\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.currentPoint.copy(source.currentPoint);\r\n      return this;\r\n    }\r\n\r\n    toJSON() {\r\n      const data = super.toJSON();\r\n      data.currentPoint = this.currentPoint.toArray();\r\n      return data;\r\n    }\r\n\r\n    fromJSON(json) {\r\n      super.fromJSON(json);\r\n      this.currentPoint.fromArray(json.currentPoint);\r\n      return this;\r\n    }\r\n  }\r\n\r\n  class Shape extends Path {\r\n    constructor(points) {\r\n      super(points);\r\n      this.uuid = generateUUID();\r\n      this.type = 'Shape';\r\n      this.holes = [];\r\n    }\r\n\r\n    getPointsHoles(divisions) {\r\n      const holesPts = [];\r\n\r\n      for (let i = 0, l = this.holes.length; i < l; i++) {\r\n        holesPts[i] = this.holes[i].getPoints(divisions);\r\n      }\r\n\r\n      return holesPts;\r\n    } // get points of shape and holes (keypoints based on segments parameter)\r\n\r\n    extractPoints(divisions) {\r\n      return {\r\n        shape: this.getPoints(divisions),\r\n        holes: this.getPointsHoles(divisions),\r\n      };\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.holes = [];\r\n\r\n      for (let i = 0, l = source.holes.length; i < l; i++) {\r\n        const hole = source.holes[i];\r\n        this.holes.push(hole.clone());\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    toJSON() {\r\n      const data = super.toJSON();\r\n      data.uuid = this.uuid;\r\n      data.holes = [];\r\n\r\n      for (let i = 0, l = this.holes.length; i < l; i++) {\r\n        const hole = this.holes[i];\r\n        data.holes.push(hole.toJSON());\r\n      }\r\n\r\n      return data;\r\n    }\r\n\r\n    fromJSON(json) {\r\n      super.fromJSON(json);\r\n      this.uuid = json.uuid;\r\n      this.holes = [];\r\n\r\n      for (let i = 0, l = json.holes.length; i < l; i++) {\r\n        const hole = json.holes[i];\r\n        this.holes.push(new Path().fromJSON(hole));\r\n      }\r\n\r\n      return this;\r\n    }\r\n  }\r\n\r\n  class Light extends Object3D {\r\n    constructor(color, intensity = 1) {\r\n      super();\r\n      this.type = 'Light';\r\n      this.color = new Color(color);\r\n      this.intensity = intensity;\r\n    }\r\n\r\n    dispose() {\r\n      // Empty here in base class; some subclasses override.\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.color.copy(source.color);\r\n      this.intensity = source.intensity;\r\n      return this;\r\n    }\r\n\r\n    toJSON(meta) {\r\n      const data = super.toJSON(meta);\r\n      data.object.color = this.color.getHex();\r\n      data.object.intensity = this.intensity;\r\n      if (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\r\n      if (this.distance !== undefined) data.object.distance = this.distance;\r\n      if (this.angle !== undefined) data.object.angle = this.angle;\r\n      if (this.decay !== undefined) data.object.decay = this.decay;\r\n      if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\r\n      if (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\r\n      return data;\r\n    }\r\n  }\r\n\r\n  Light.prototype.isLight = true;\r\n\r\n  class HemisphereLight extends Light {\r\n    constructor(skyColor, groundColor, intensity) {\r\n      super(skyColor, intensity);\r\n      this.type = 'HemisphereLight';\r\n      this.position.copy(Object3D.DefaultUp);\r\n      this.updateMatrix();\r\n      this.groundColor = new Color(groundColor);\r\n    }\r\n\r\n    copy(source) {\r\n      Light.prototype.copy.call(this, source);\r\n      this.groundColor.copy(source.groundColor);\r\n      return this;\r\n    }\r\n  }\r\n\r\n  HemisphereLight.prototype.isHemisphereLight = true;\r\n\r\n  const _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\r\n\r\n  const _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _lookTarget$1 = /*@__PURE__*/ new Vector3();\r\n\r\n  class LightShadow {\r\n    constructor(camera) {\r\n      this.camera = camera;\r\n      this.bias = 0;\r\n      this.normalBias = 0;\r\n      this.radius = 1;\r\n      this.mapSize = new Vector2(512, 512);\r\n      this.map = null;\r\n      this.mapPass = null;\r\n      this.matrix = new Matrix4();\r\n      this.autoUpdate = true;\r\n      this.needsUpdate = false;\r\n      this._frustum = new Frustum();\r\n      this._frameExtents = new Vector2(1, 1);\r\n      this._viewportCount = 1;\r\n      this._viewports = [new Vector4(0, 0, 1, 1)];\r\n    }\r\n\r\n    getViewportCount() {\r\n      return this._viewportCount;\r\n    }\r\n\r\n    getFrustum() {\r\n      return this._frustum;\r\n    }\r\n\r\n    updateMatrices(light) {\r\n      const shadowCamera = this.camera;\r\n      const shadowMatrix = this.matrix;\r\n\r\n      _lightPositionWorld$1.setFromMatrixPosition(light.matrixWorld);\r\n\r\n      shadowCamera.position.copy(_lightPositionWorld$1);\r\n\r\n      _lookTarget$1.setFromMatrixPosition(light.target.matrixWorld);\r\n\r\n      shadowCamera.lookAt(_lookTarget$1);\r\n      shadowCamera.updateMatrixWorld();\r\n\r\n      _projScreenMatrix$1.multiplyMatrices(\r\n        shadowCamera.projectionMatrix,\r\n        shadowCamera.matrixWorldInverse,\r\n      );\r\n\r\n      this._frustum.setFromProjectionMatrix(_projScreenMatrix$1);\r\n\r\n      shadowMatrix.set(\r\n        0.5,\r\n        0.0,\r\n        0.0,\r\n        0.5,\r\n        0.0,\r\n        0.5,\r\n        0.0,\r\n        0.5,\r\n        0.0,\r\n        0.0,\r\n        0.5,\r\n        0.5,\r\n        0.0,\r\n        0.0,\r\n        0.0,\r\n        1.0,\r\n      );\r\n      shadowMatrix.multiply(shadowCamera.projectionMatrix);\r\n      shadowMatrix.multiply(shadowCamera.matrixWorldInverse);\r\n    }\r\n\r\n    getViewport(viewportIndex) {\r\n      return this._viewports[viewportIndex];\r\n    }\r\n\r\n    getFrameExtents() {\r\n      return this._frameExtents;\r\n    }\r\n\r\n    dispose() {\r\n      if (this.map) {\r\n        this.map.dispose();\r\n      }\r\n\r\n      if (this.mapPass) {\r\n        this.mapPass.dispose();\r\n      }\r\n    }\r\n\r\n    copy(source) {\r\n      this.camera = source.camera.clone();\r\n      this.bias = source.bias;\r\n      this.radius = source.radius;\r\n      this.mapSize.copy(source.mapSize);\r\n      return this;\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().copy(this);\r\n    }\r\n\r\n    toJSON() {\r\n      const object = {};\r\n      if (this.bias !== 0) object.bias = this.bias;\r\n      if (this.normalBias !== 0) object.normalBias = this.normalBias;\r\n      if (this.radius !== 1) object.radius = this.radius;\r\n      if (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\r\n      object.camera = this.camera.toJSON(false).object;\r\n      delete object.camera.matrix;\r\n      return object;\r\n    }\r\n  }\r\n\r\n  class SpotLightShadow extends LightShadow {\r\n    constructor() {\r\n      super(new PerspectiveCamera(50, 1, 0.5, 500));\r\n      this.focus = 1;\r\n    }\r\n\r\n    updateMatrices(light) {\r\n      const camera = this.camera;\r\n      const fov = RAD2DEG * 2 * light.angle * this.focus;\r\n      const aspect = this.mapSize.width / this.mapSize.height;\r\n      const far = light.distance || camera.far;\r\n\r\n      if (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\r\n        camera.fov = fov;\r\n        camera.aspect = aspect;\r\n        camera.far = far;\r\n        camera.updateProjectionMatrix();\r\n      }\r\n\r\n      super.updateMatrices(light);\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.focus = source.focus;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  SpotLightShadow.prototype.isSpotLightShadow = true;\r\n\r\n  class SpotLight extends Light {\r\n    constructor(color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1) {\r\n      super(color, intensity);\r\n      this.type = 'SpotLight';\r\n      this.position.copy(Object3D.DefaultUp);\r\n      this.updateMatrix();\r\n      this.target = new Object3D();\r\n      this.distance = distance;\r\n      this.angle = angle;\r\n      this.penumbra = penumbra;\r\n      this.decay = decay; // for physically correct lights, should be 2.\r\n\r\n      this.shadow = new SpotLightShadow();\r\n    }\r\n\r\n    get power() {\r\n      // intensity = power per solid angle.\r\n      // ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n      return this.intensity * Math.PI;\r\n    }\r\n\r\n    set power(power) {\r\n      // intensity = power per solid angle.\r\n      // ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n      this.intensity = power / Math.PI;\r\n    }\r\n\r\n    dispose() {\r\n      this.shadow.dispose();\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.distance = source.distance;\r\n      this.angle = source.angle;\r\n      this.penumbra = source.penumbra;\r\n      this.decay = source.decay;\r\n      this.target = source.target.clone();\r\n      this.shadow = source.shadow.clone();\r\n      return this;\r\n    }\r\n  }\r\n\r\n  SpotLight.prototype.isSpotLight = true;\r\n\r\n  const _projScreenMatrix = /*@__PURE__*/ new Matrix4();\r\n\r\n  const _lightPositionWorld = /*@__PURE__*/ new Vector3();\r\n\r\n  const _lookTarget = /*@__PURE__*/ new Vector3();\r\n\r\n  class PointLightShadow extends LightShadow {\r\n    constructor() {\r\n      super(new PerspectiveCamera(90, 1, 0.5, 500));\r\n      this._frameExtents = new Vector2(4, 2);\r\n      this._viewportCount = 6;\r\n      this._viewports = [\r\n        // These viewports map a cube-map onto a 2D texture with the\r\n        // following orientation:\r\n        //\r\n        //\txzXZ\r\n        //\t y Y\r\n        //\r\n        // X - Positive x direction\r\n        // x - Negative x direction\r\n        // Y - Positive y direction\r\n        // y - Negative y direction\r\n        // Z - Positive z direction\r\n        // z - Negative z direction\r\n        // positive X\r\n        new Vector4(2, 1, 1, 1), // negative X\r\n        new Vector4(0, 1, 1, 1), // positive Z\r\n        new Vector4(3, 1, 1, 1), // negative Z\r\n        new Vector4(1, 1, 1, 1), // positive Y\r\n        new Vector4(3, 0, 1, 1), // negative Y\r\n        new Vector4(1, 0, 1, 1),\r\n      ];\r\n      this._cubeDirections = [\r\n        new Vector3(1, 0, 0),\r\n        new Vector3(-1, 0, 0),\r\n        new Vector3(0, 0, 1),\r\n        new Vector3(0, 0, -1),\r\n        new Vector3(0, 1, 0),\r\n        new Vector3(0, -1, 0),\r\n      ];\r\n      this._cubeUps = [\r\n        new Vector3(0, 1, 0),\r\n        new Vector3(0, 1, 0),\r\n        new Vector3(0, 1, 0),\r\n        new Vector3(0, 1, 0),\r\n        new Vector3(0, 0, 1),\r\n        new Vector3(0, 0, -1),\r\n      ];\r\n    }\r\n\r\n    updateMatrices(light, viewportIndex = 0) {\r\n      const camera = this.camera;\r\n      const shadowMatrix = this.matrix;\r\n      const far = light.distance || camera.far;\r\n\r\n      if (far !== camera.far) {\r\n        camera.far = far;\r\n        camera.updateProjectionMatrix();\r\n      }\r\n\r\n      _lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\r\n\r\n      camera.position.copy(_lightPositionWorld);\r\n\r\n      _lookTarget.copy(camera.position);\r\n\r\n      _lookTarget.add(this._cubeDirections[viewportIndex]);\r\n\r\n      camera.up.copy(this._cubeUps[viewportIndex]);\r\n      camera.lookAt(_lookTarget);\r\n      camera.updateMatrixWorld();\r\n      shadowMatrix.makeTranslation(\r\n        -_lightPositionWorld.x,\r\n        -_lightPositionWorld.y,\r\n        -_lightPositionWorld.z,\r\n      );\r\n\r\n      _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\r\n\r\n      this._frustum.setFromProjectionMatrix(_projScreenMatrix);\r\n    }\r\n  }\r\n\r\n  PointLightShadow.prototype.isPointLightShadow = true;\r\n\r\n  class PointLight extends Light {\r\n    constructor(color, intensity, distance = 0, decay = 1) {\r\n      super(color, intensity);\r\n      this.type = 'PointLight';\r\n      this.distance = distance;\r\n      this.decay = decay; // for physically correct lights, should be 2.\r\n\r\n      this.shadow = new PointLightShadow();\r\n    }\r\n\r\n    get power() {\r\n      // intensity = power per solid angle.\r\n      // ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n      return this.intensity * 4 * Math.PI;\r\n    }\r\n\r\n    set power(power) {\r\n      // intensity = power per solid angle.\r\n      // ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\r\n      this.intensity = power / (4 * Math.PI);\r\n    }\r\n\r\n    dispose() {\r\n      this.shadow.dispose();\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.distance = source.distance;\r\n      this.decay = source.decay;\r\n      this.shadow = source.shadow.clone();\r\n      return this;\r\n    }\r\n  }\r\n\r\n  PointLight.prototype.isPointLight = true;\r\n\r\n  class OrthographicCamera extends Camera {\r\n    constructor(left = -1, right = 1, top = 1, bottom = -1, near = 0.1, far = 2000) {\r\n      super();\r\n      this.type = 'OrthographicCamera';\r\n      this.zoom = 1;\r\n      this.view = null;\r\n      this.left = left;\r\n      this.right = right;\r\n      this.top = top;\r\n      this.bottom = bottom;\r\n      this.near = near;\r\n      this.far = far;\r\n      this.updateProjectionMatrix();\r\n    }\r\n\r\n    copy(source, recursive) {\r\n      super.copy(source, recursive);\r\n      this.left = source.left;\r\n      this.right = source.right;\r\n      this.top = source.top;\r\n      this.bottom = source.bottom;\r\n      this.near = source.near;\r\n      this.far = source.far;\r\n      this.zoom = source.zoom;\r\n      this.view = source.view === null ? null : Object.assign({}, source.view);\r\n      return this;\r\n    }\r\n\r\n    setViewOffset(fullWidth, fullHeight, x, y, width, height) {\r\n      if (this.view === null) {\r\n        this.view = {\r\n          enabled: true,\r\n          fullWidth: 1,\r\n          fullHeight: 1,\r\n          offsetX: 0,\r\n          offsetY: 0,\r\n          width: 1,\r\n          height: 1,\r\n        };\r\n      }\r\n\r\n      this.view.enabled = true;\r\n      this.view.fullWidth = fullWidth;\r\n      this.view.fullHeight = fullHeight;\r\n      this.view.offsetX = x;\r\n      this.view.offsetY = y;\r\n      this.view.width = width;\r\n      this.view.height = height;\r\n      this.updateProjectionMatrix();\r\n    }\r\n\r\n    clearViewOffset() {\r\n      if (this.view !== null) {\r\n        this.view.enabled = false;\r\n      }\r\n\r\n      this.updateProjectionMatrix();\r\n    }\r\n\r\n    updateProjectionMatrix() {\r\n      const dx = (this.right - this.left) / (2 * this.zoom);\r\n      const dy = (this.top - this.bottom) / (2 * this.zoom);\r\n      const cx = (this.right + this.left) / 2;\r\n      const cy = (this.top + this.bottom) / 2;\r\n      let left = cx - dx;\r\n      let right = cx + dx;\r\n      let top = cy + dy;\r\n      let bottom = cy - dy;\r\n\r\n      if (this.view !== null && this.view.enabled) {\r\n        const scaleW = (this.right - this.left) / this.view.fullWidth / this.zoom;\r\n        const scaleH = (this.top - this.bottom) / this.view.fullHeight / this.zoom;\r\n        left += scaleW * this.view.offsetX;\r\n        right = left + scaleW * this.view.width;\r\n        top -= scaleH * this.view.offsetY;\r\n        bottom = top - scaleH * this.view.height;\r\n      }\r\n\r\n      this.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\r\n      this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\r\n    }\r\n\r\n    toJSON(meta) {\r\n      const data = super.toJSON(meta);\r\n      data.object.zoom = this.zoom;\r\n      data.object.left = this.left;\r\n      data.object.right = this.right;\r\n      data.object.top = this.top;\r\n      data.object.bottom = this.bottom;\r\n      data.object.near = this.near;\r\n      data.object.far = this.far;\r\n      if (this.view !== null) data.object.view = Object.assign({}, this.view);\r\n      return data;\r\n    }\r\n  }\r\n\r\n  OrthographicCamera.prototype.isOrthographicCamera = true;\r\n\r\n  class DirectionalLightShadow extends LightShadow {\r\n    constructor() {\r\n      super(new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\r\n    }\r\n  }\r\n\r\n  DirectionalLightShadow.prototype.isDirectionalLightShadow = true;\r\n\r\n  class DirectionalLight extends Light {\r\n    constructor(color, intensity) {\r\n      super(color, intensity);\r\n      this.type = 'DirectionalLight';\r\n      this.position.copy(Object3D.DefaultUp);\r\n      this.updateMatrix();\r\n      this.target = new Object3D();\r\n      this.shadow = new DirectionalLightShadow();\r\n    }\r\n\r\n    dispose() {\r\n      this.shadow.dispose();\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.target = source.target.clone();\r\n      this.shadow = source.shadow.clone();\r\n      return this;\r\n    }\r\n  }\r\n\r\n  DirectionalLight.prototype.isDirectionalLight = true;\r\n\r\n  class AmbientLight extends Light {\r\n    constructor(color, intensity) {\r\n      super(color, intensity);\r\n      this.type = 'AmbientLight';\r\n    }\r\n  }\r\n\r\n  AmbientLight.prototype.isAmbientLight = true;\r\n\r\n  class RectAreaLight extends Light {\r\n    constructor(color, intensity, width = 10, height = 10) {\r\n      super(color, intensity);\r\n      this.type = 'RectAreaLight';\r\n      this.width = width;\r\n      this.height = height;\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.width = source.width;\r\n      this.height = source.height;\r\n      return this;\r\n    }\r\n\r\n    toJSON(meta) {\r\n      const data = super.toJSON(meta);\r\n      data.object.width = this.width;\r\n      data.object.height = this.height;\r\n      return data;\r\n    }\r\n  }\r\n\r\n  RectAreaLight.prototype.isRectAreaLight = true;\r\n\r\n  /**\r\n   * Primary reference:\r\n   *\t https://graphics.stanford.edu/papers/envmap/envmap.pdf\r\n   *\r\n   * Secondary reference:\r\n   *\t https://www.ppsloan.org/publications/StupidSH36.pdf\r\n   */\r\n  // 3-band SH defined by 9 coefficients\r\n\r\n  class SphericalHarmonics3 {\r\n    constructor() {\r\n      this.coefficients = [];\r\n\r\n      for (let i = 0; i < 9; i++) {\r\n        this.coefficients.push(new Vector3());\r\n      }\r\n    }\r\n\r\n    set(coefficients) {\r\n      for (let i = 0; i < 9; i++) {\r\n        this.coefficients[i].copy(coefficients[i]);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    zero() {\r\n      for (let i = 0; i < 9; i++) {\r\n        this.coefficients[i].set(0, 0, 0);\r\n      }\r\n\r\n      return this;\r\n    } // get the radiance in the direction of the normal\r\n    // target is a Vector3\r\n\r\n    getAt(normal, target) {\r\n      // normal is assumed to be unit length\r\n      const x = normal.x,\r\n        y = normal.y,\r\n        z = normal.z;\r\n      const coeff = this.coefficients; // band 0\r\n\r\n      target.copy(coeff[0]).multiplyScalar(0.282095); // band 1\r\n\r\n      target.addScaledVector(coeff[1], 0.488603 * y);\r\n      target.addScaledVector(coeff[2], 0.488603 * z);\r\n      target.addScaledVector(coeff[3], 0.488603 * x); // band 2\r\n\r\n      target.addScaledVector(coeff[4], 1.092548 * (x * y));\r\n      target.addScaledVector(coeff[5], 1.092548 * (y * z));\r\n      target.addScaledVector(coeff[6], 0.315392 * (3.0 * z * z - 1.0));\r\n      target.addScaledVector(coeff[7], 1.092548 * (x * z));\r\n      target.addScaledVector(coeff[8], 0.546274 * (x * x - y * y));\r\n      return target;\r\n    } // get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\r\n    // target is a Vector3\r\n    // https://graphics.stanford.edu/papers/envmap/envmap.pdf\r\n\r\n    getIrradianceAt(normal, target) {\r\n      // normal is assumed to be unit length\r\n      const x = normal.x,\r\n        y = normal.y,\r\n        z = normal.z;\r\n      const coeff = this.coefficients; // band 0\r\n\r\n      target.copy(coeff[0]).multiplyScalar(0.886227); // π * 0.282095\r\n      // band 1\r\n\r\n      target.addScaledVector(coeff[1], 2.0 * 0.511664 * y); // ( 2 * π / 3 ) * 0.488603\r\n\r\n      target.addScaledVector(coeff[2], 2.0 * 0.511664 * z);\r\n      target.addScaledVector(coeff[3], 2.0 * 0.511664 * x); // band 2\r\n\r\n      target.addScaledVector(coeff[4], 2.0 * 0.429043 * x * y); // ( π / 4 ) * 1.092548\r\n\r\n      target.addScaledVector(coeff[5], 2.0 * 0.429043 * y * z);\r\n      target.addScaledVector(coeff[6], 0.743125 * z * z - 0.247708); // ( π / 4 ) * 0.315392 * 3\r\n\r\n      target.addScaledVector(coeff[7], 2.0 * 0.429043 * x * z);\r\n      target.addScaledVector(coeff[8], 0.429043 * (x * x - y * y)); // ( π / 4 ) * 0.546274\r\n\r\n      return target;\r\n    }\r\n\r\n    add(sh) {\r\n      for (let i = 0; i < 9; i++) {\r\n        this.coefficients[i].add(sh.coefficients[i]);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    addScaledSH(sh, s) {\r\n      for (let i = 0; i < 9; i++) {\r\n        this.coefficients[i].addScaledVector(sh.coefficients[i], s);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    scale(s) {\r\n      for (let i = 0; i < 9; i++) {\r\n        this.coefficients[i].multiplyScalar(s);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    lerp(sh, alpha) {\r\n      for (let i = 0; i < 9; i++) {\r\n        this.coefficients[i].lerp(sh.coefficients[i], alpha);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    equals(sh) {\r\n      for (let i = 0; i < 9; i++) {\r\n        if (!this.coefficients[i].equals(sh.coefficients[i])) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    copy(sh) {\r\n      return this.set(sh.coefficients);\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().copy(this);\r\n    }\r\n\r\n    fromArray(array, offset = 0) {\r\n      const coefficients = this.coefficients;\r\n\r\n      for (let i = 0; i < 9; i++) {\r\n        coefficients[i].fromArray(array, offset + i * 3);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    toArray(array = [], offset = 0) {\r\n      const coefficients = this.coefficients;\r\n\r\n      for (let i = 0; i < 9; i++) {\r\n        coefficients[i].toArray(array, offset + i * 3);\r\n      }\r\n\r\n      return array;\r\n    } // evaluate the basis functions\r\n    // shBasis is an Array[ 9 ]\r\n\r\n    static getBasisAt(normal, shBasis) {\r\n      // normal is assumed to be unit length\r\n      const x = normal.x,\r\n        y = normal.y,\r\n        z = normal.z; // band 0\r\n\r\n      shBasis[0] = 0.282095; // band 1\r\n\r\n      shBasis[1] = 0.488603 * y;\r\n      shBasis[2] = 0.488603 * z;\r\n      shBasis[3] = 0.488603 * x; // band 2\r\n\r\n      shBasis[4] = 1.092548 * x * y;\r\n      shBasis[5] = 1.092548 * y * z;\r\n      shBasis[6] = 0.315392 * (3 * z * z - 1);\r\n      shBasis[7] = 1.092548 * x * z;\r\n      shBasis[8] = 0.546274 * (x * x - y * y);\r\n    }\r\n  }\r\n\r\n  SphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\r\n\r\n  class LightProbe extends Light {\r\n    constructor(sh = new SphericalHarmonics3(), intensity = 1) {\r\n      super(undefined, intensity);\r\n      this.sh = sh;\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.sh.copy(source.sh);\r\n      return this;\r\n    }\r\n\r\n    fromJSON(json) {\r\n      this.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\r\n\r\n      this.sh.fromArray(json.sh);\r\n      return this;\r\n    }\r\n\r\n    toJSON(meta) {\r\n      const data = super.toJSON(meta);\r\n      data.object.sh = this.sh.toArray();\r\n      return data;\r\n    }\r\n  }\r\n\r\n  LightProbe.prototype.isLightProbe = true;\r\n\r\n  class MaterialLoader extends Loader {\r\n    constructor(manager) {\r\n      super(manager);\r\n      this.textures = {};\r\n    }\r\n\r\n    load(url, onLoad, onProgress, onError) {\r\n      const scope = this;\r\n      const loader = new FileLoader(scope.manager);\r\n      loader.setPath(scope.path);\r\n      loader.setRequestHeader(scope.requestHeader);\r\n      loader.setWithCredentials(scope.withCredentials);\r\n      loader.load(\r\n        url,\r\n        function (text) {\r\n          try {\r\n            onLoad(scope.parse(JSON.parse(text)));\r\n          } catch (e) {\r\n            if (onError) {\r\n              onError(e);\r\n            } else {\r\n              console.error(e);\r\n            }\r\n\r\n            scope.manager.itemError(url);\r\n          }\r\n        },\r\n        onProgress,\r\n        onError,\r\n      );\r\n    }\r\n\r\n    parse(json) {\r\n      const textures = this.textures;\r\n\r\n      function getTexture(name) {\r\n        if (textures[name] === undefined) {\r\n          console.warn('THREE.MaterialLoader: Undefined texture', name);\r\n        }\r\n\r\n        return textures[name];\r\n      }\r\n\r\n      const material = new Materials[json.type]();\r\n      if (json.uuid !== undefined) material.uuid = json.uuid;\r\n      if (json.name !== undefined) material.name = json.name;\r\n      if (json.color !== undefined && material.color !== undefined)\r\n        material.color.setHex(json.color);\r\n      if (json.roughness !== undefined) material.roughness = json.roughness;\r\n      if (json.metalness !== undefined) material.metalness = json.metalness;\r\n      if (json.sheen !== undefined) material.sheen = new Color().setHex(json.sheen);\r\n      if (json.emissive !== undefined && material.emissive !== undefined)\r\n        material.emissive.setHex(json.emissive);\r\n      if (json.specular !== undefined && material.specular !== undefined)\r\n        material.specular.setHex(json.specular);\r\n      if (json.shininess !== undefined) material.shininess = json.shininess;\r\n      if (json.clearcoat !== undefined) material.clearcoat = json.clearcoat;\r\n      if (json.clearcoatRoughness !== undefined)\r\n        material.clearcoatRoughness = json.clearcoatRoughness;\r\n      if (json.transmission !== undefined) material.transmission = json.transmission;\r\n      if (json.thickness !== undefined) material.thickness = json.thickness;\r\n      if (json.attenuationDistance !== undefined)\r\n        material.attenuationDistance = json.attenuationDistance;\r\n      if (json.attenuationColor !== undefined && material.attenuationColor !== undefined)\r\n        material.attenuationColor.setHex(json.attenuationColor);\r\n      if (json.fog !== undefined) material.fog = json.fog;\r\n      if (json.flatShading !== undefined) material.flatShading = json.flatShading;\r\n      if (json.blending !== undefined) material.blending = json.blending;\r\n      if (json.combine !== undefined) material.combine = json.combine;\r\n      if (json.side !== undefined) material.side = json.side;\r\n      if (json.shadowSide !== undefined) material.shadowSide = json.shadowSide;\r\n      if (json.opacity !== undefined) material.opacity = json.opacity;\r\n      if (json.transparent !== undefined) material.transparent = json.transparent;\r\n      if (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\r\n      if (json.depthTest !== undefined) material.depthTest = json.depthTest;\r\n      if (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\r\n      if (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\r\n      if (json.stencilWrite !== undefined) material.stencilWrite = json.stencilWrite;\r\n      if (json.stencilWriteMask !== undefined) material.stencilWriteMask = json.stencilWriteMask;\r\n      if (json.stencilFunc !== undefined) material.stencilFunc = json.stencilFunc;\r\n      if (json.stencilRef !== undefined) material.stencilRef = json.stencilRef;\r\n      if (json.stencilFuncMask !== undefined) material.stencilFuncMask = json.stencilFuncMask;\r\n      if (json.stencilFail !== undefined) material.stencilFail = json.stencilFail;\r\n      if (json.stencilZFail !== undefined) material.stencilZFail = json.stencilZFail;\r\n      if (json.stencilZPass !== undefined) material.stencilZPass = json.stencilZPass;\r\n      if (json.wireframe !== undefined) material.wireframe = json.wireframe;\r\n      if (json.wireframeLinewidth !== undefined)\r\n        material.wireframeLinewidth = json.wireframeLinewidth;\r\n      if (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\r\n      if (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\r\n      if (json.rotation !== undefined) material.rotation = json.rotation;\r\n      if (json.linewidth !== 1) material.linewidth = json.linewidth;\r\n      if (json.dashSize !== undefined) material.dashSize = json.dashSize;\r\n      if (json.gapSize !== undefined) material.gapSize = json.gapSize;\r\n      if (json.scale !== undefined) material.scale = json.scale;\r\n      if (json.polygonOffset !== undefined) material.polygonOffset = json.polygonOffset;\r\n      if (json.polygonOffsetFactor !== undefined)\r\n        material.polygonOffsetFactor = json.polygonOffsetFactor;\r\n      if (json.polygonOffsetUnits !== undefined)\r\n        material.polygonOffsetUnits = json.polygonOffsetUnits;\r\n      if (json.morphTargets !== undefined) material.morphTargets = json.morphTargets;\r\n      if (json.morphNormals !== undefined) material.morphNormals = json.morphNormals;\r\n      if (json.dithering !== undefined) material.dithering = json.dithering;\r\n      if (json.alphaToCoverage !== undefined) material.alphaToCoverage = json.alphaToCoverage;\r\n      if (json.premultipliedAlpha !== undefined)\r\n        material.premultipliedAlpha = json.premultipliedAlpha;\r\n      if (json.vertexTangents !== undefined) material.vertexTangents = json.vertexTangents;\r\n      if (json.visible !== undefined) material.visible = json.visible;\r\n      if (json.toneMapped !== undefined) material.toneMapped = json.toneMapped;\r\n      if (json.userData !== undefined) material.userData = json.userData;\r\n\r\n      if (json.vertexColors !== undefined) {\r\n        if (typeof json.vertexColors === 'number') {\r\n          material.vertexColors = json.vertexColors > 0 ? true : false;\r\n        } else {\r\n          material.vertexColors = json.vertexColors;\r\n        }\r\n      } // Shader Material\r\n\r\n      if (json.uniforms !== undefined) {\r\n        for (const name in json.uniforms) {\r\n          const uniform = json.uniforms[name];\r\n          material.uniforms[name] = {};\r\n\r\n          switch (uniform.type) {\r\n            case 't':\r\n              material.uniforms[name].value = getTexture(uniform.value);\r\n              break;\r\n\r\n            case 'c':\r\n              material.uniforms[name].value = new Color().setHex(uniform.value);\r\n              break;\r\n\r\n            case 'v2':\r\n              material.uniforms[name].value = new Vector2().fromArray(uniform.value);\r\n              break;\r\n\r\n            case 'v3':\r\n              material.uniforms[name].value = new Vector3().fromArray(uniform.value);\r\n              break;\r\n\r\n            case 'v4':\r\n              material.uniforms[name].value = new Vector4().fromArray(uniform.value);\r\n              break;\r\n\r\n            case 'm3':\r\n              material.uniforms[name].value = new Matrix3().fromArray(uniform.value);\r\n              break;\r\n\r\n            case 'm4':\r\n              material.uniforms[name].value = new Matrix4().fromArray(uniform.value);\r\n              break;\r\n\r\n            default:\r\n              material.uniforms[name].value = uniform.value;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (json.defines !== undefined) material.defines = json.defines;\r\n      if (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\r\n      if (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\r\n\r\n      if (json.extensions !== undefined) {\r\n        for (const key in json.extensions) {\r\n          material.extensions[key] = json.extensions[key];\r\n        }\r\n      } // Deprecated\r\n\r\n      if (json.shading !== undefined) material.flatShading = json.shading === 1; // THREE.FlatShading\r\n      // for PointsMaterial\r\n\r\n      if (json.size !== undefined) material.size = json.size;\r\n      if (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\r\n\r\n      if (json.map !== undefined) material.map = getTexture(json.map);\r\n      if (json.matcap !== undefined) material.matcap = getTexture(json.matcap);\r\n      if (json.alphaMap !== undefined) material.alphaMap = getTexture(json.alphaMap);\r\n      if (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\r\n      if (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\r\n      if (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\r\n      if (json.normalMapType !== undefined) material.normalMapType = json.normalMapType;\r\n\r\n      if (json.normalScale !== undefined) {\r\n        let normalScale = json.normalScale;\r\n\r\n        if (Array.isArray(normalScale) === false) {\r\n          // Blender exporter used to export a scalar. See #7459\r\n          normalScale = [normalScale, normalScale];\r\n        }\r\n\r\n        material.normalScale = new Vector2().fromArray(normalScale);\r\n      }\r\n\r\n      if (json.displacementMap !== undefined)\r\n        material.displacementMap = getTexture(json.displacementMap);\r\n      if (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\r\n      if (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\r\n      if (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\r\n      if (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\r\n      if (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\r\n      if (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\r\n      if (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\r\n      if (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\r\n      if (json.envMapIntensity !== undefined) material.envMapIntensity = json.envMapIntensity;\r\n      if (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\r\n      if (json.refractionRatio !== undefined) material.refractionRatio = json.refractionRatio;\r\n      if (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\r\n      if (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\r\n      if (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\r\n      if (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\r\n      if (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\r\n      if (json.clearcoatMap !== undefined) material.clearcoatMap = getTexture(json.clearcoatMap);\r\n      if (json.clearcoatRoughnessMap !== undefined)\r\n        material.clearcoatRoughnessMap = getTexture(json.clearcoatRoughnessMap);\r\n      if (json.clearcoatNormalMap !== undefined)\r\n        material.clearcoatNormalMap = getTexture(json.clearcoatNormalMap);\r\n      if (json.clearcoatNormalScale !== undefined)\r\n        material.clearcoatNormalScale = new Vector2().fromArray(json.clearcoatNormalScale);\r\n      if (json.transmissionMap !== undefined)\r\n        material.transmissionMap = getTexture(json.transmissionMap);\r\n      if (json.thicknessMap !== undefined) material.thicknessMap = getTexture(json.thicknessMap);\r\n      return material;\r\n    }\r\n\r\n    setTextures(value) {\r\n      this.textures = value;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  class LoaderUtils {\r\n    static decodeText(array) {\r\n      if (typeof TextDecoder !== 'undefined') {\r\n        return new TextDecoder().decode(array);\r\n      } // Avoid the String.fromCharCode.apply(null, array) shortcut, which\r\n      // throws a \"maximum call stack size exceeded\" error for large arrays.\r\n\r\n      let s = '';\r\n\r\n      for (let i = 0, il = array.length; i < il; i++) {\r\n        // Implicitly assumes little-endian.\r\n        s += String.fromCharCode(array[i]);\r\n      }\r\n\r\n      try {\r\n        // merges multi-byte utf-8 characters.\r\n        return decodeURIComponent(escape(s));\r\n      } catch (e) {\r\n        // see #16358\r\n        return s;\r\n      }\r\n    }\r\n\r\n    static extractUrlBase(url) {\r\n      const index = url.lastIndexOf('/');\r\n      if (index === -1) return './';\r\n      return url.substr(0, index + 1);\r\n    }\r\n  }\r\n\r\n  class InstancedBufferGeometry extends BufferGeometry {\r\n    constructor() {\r\n      super();\r\n      this.type = 'InstancedBufferGeometry';\r\n      this.instanceCount = Infinity;\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.instanceCount = source.instanceCount;\r\n      return this;\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().copy(this);\r\n    }\r\n\r\n    toJSON() {\r\n      const data = super.toJSON(this);\r\n      data.instanceCount = this.instanceCount;\r\n      data.isInstancedBufferGeometry = true;\r\n      return data;\r\n    }\r\n  }\r\n\r\n  InstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\r\n\r\n  class InstancedBufferAttribute extends BufferAttribute {\r\n    constructor(array, itemSize, normalized, meshPerAttribute) {\r\n      if (typeof normalized === 'number') {\r\n        meshPerAttribute = normalized;\r\n        normalized = false;\r\n        console.error(\r\n          'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.',\r\n        );\r\n      }\r\n\r\n      super(array, itemSize, normalized);\r\n      this.meshPerAttribute = meshPerAttribute || 1;\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.meshPerAttribute = source.meshPerAttribute;\r\n      return this;\r\n    }\r\n\r\n    toJSON() {\r\n      const data = super.toJSON();\r\n      data.meshPerAttribute = this.meshPerAttribute;\r\n      data.isInstancedBufferAttribute = true;\r\n      return data;\r\n    }\r\n  }\r\n\r\n  InstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\r\n\r\n  class BufferGeometryLoader extends Loader {\r\n    constructor(manager) {\r\n      super(manager);\r\n    }\r\n\r\n    load(url, onLoad, onProgress, onError) {\r\n      const scope = this;\r\n      const loader = new FileLoader(scope.manager);\r\n      loader.setPath(scope.path);\r\n      loader.setRequestHeader(scope.requestHeader);\r\n      loader.setWithCredentials(scope.withCredentials);\r\n      loader.load(\r\n        url,\r\n        function (text) {\r\n          try {\r\n            onLoad(scope.parse(JSON.parse(text)));\r\n          } catch (e) {\r\n            if (onError) {\r\n              onError(e);\r\n            } else {\r\n              console.error(e);\r\n            }\r\n\r\n            scope.manager.itemError(url);\r\n          }\r\n        },\r\n        onProgress,\r\n        onError,\r\n      );\r\n    }\r\n\r\n    parse(json) {\r\n      const interleavedBufferMap = {};\r\n      const arrayBufferMap = {};\r\n\r\n      function getInterleavedBuffer(json, uuid) {\r\n        if (interleavedBufferMap[uuid] !== undefined) return interleavedBufferMap[uuid];\r\n        const interleavedBuffers = json.interleavedBuffers;\r\n        const interleavedBuffer = interleavedBuffers[uuid];\r\n        const buffer = getArrayBuffer(json, interleavedBuffer.buffer);\r\n        const array = getTypedArray(interleavedBuffer.type, buffer);\r\n        const ib = new InterleavedBuffer(array, interleavedBuffer.stride);\r\n        ib.uuid = interleavedBuffer.uuid;\r\n        interleavedBufferMap[uuid] = ib;\r\n        return ib;\r\n      }\r\n\r\n      function getArrayBuffer(json, uuid) {\r\n        if (arrayBufferMap[uuid] !== undefined) return arrayBufferMap[uuid];\r\n        const arrayBuffers = json.arrayBuffers;\r\n        const arrayBuffer = arrayBuffers[uuid];\r\n        const ab = new Uint32Array(arrayBuffer).buffer;\r\n        arrayBufferMap[uuid] = ab;\r\n        return ab;\r\n      }\r\n\r\n      const geometry = json.isInstancedBufferGeometry\r\n        ? new InstancedBufferGeometry()\r\n        : new BufferGeometry();\r\n      const index = json.data.index;\r\n\r\n      if (index !== undefined) {\r\n        const typedArray = getTypedArray(index.type, index.array);\r\n        geometry.setIndex(new BufferAttribute(typedArray, 1));\r\n      }\r\n\r\n      const attributes = json.data.attributes;\r\n\r\n      for (const key in attributes) {\r\n        const attribute = attributes[key];\r\n        let bufferAttribute;\r\n\r\n        if (attribute.isInterleavedBufferAttribute) {\r\n          const interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\r\n          bufferAttribute = new InterleavedBufferAttribute(\r\n            interleavedBuffer,\r\n            attribute.itemSize,\r\n            attribute.offset,\r\n            attribute.normalized,\r\n          );\r\n        } else {\r\n          const typedArray = getTypedArray(attribute.type, attribute.array);\r\n          const bufferAttributeConstr = attribute.isInstancedBufferAttribute\r\n            ? InstancedBufferAttribute\r\n            : BufferAttribute;\r\n          bufferAttribute = new bufferAttributeConstr(\r\n            typedArray,\r\n            attribute.itemSize,\r\n            attribute.normalized,\r\n          );\r\n        }\r\n\r\n        if (attribute.name !== undefined) bufferAttribute.name = attribute.name;\r\n        if (attribute.usage !== undefined) bufferAttribute.setUsage(attribute.usage);\r\n\r\n        if (attribute.updateRange !== undefined) {\r\n          bufferAttribute.updateRange.offset = attribute.updateRange.offset;\r\n          bufferAttribute.updateRange.count = attribute.updateRange.count;\r\n        }\r\n\r\n        geometry.setAttribute(key, bufferAttribute);\r\n      }\r\n\r\n      const morphAttributes = json.data.morphAttributes;\r\n\r\n      if (morphAttributes) {\r\n        for (const key in morphAttributes) {\r\n          const attributeArray = morphAttributes[key];\r\n          const array = [];\r\n\r\n          for (let i = 0, il = attributeArray.length; i < il; i++) {\r\n            const attribute = attributeArray[i];\r\n            let bufferAttribute;\r\n\r\n            if (attribute.isInterleavedBufferAttribute) {\r\n              const interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\r\n              bufferAttribute = new InterleavedBufferAttribute(\r\n                interleavedBuffer,\r\n                attribute.itemSize,\r\n                attribute.offset,\r\n                attribute.normalized,\r\n              );\r\n            } else {\r\n              const typedArray = getTypedArray(attribute.type, attribute.array);\r\n              bufferAttribute = new BufferAttribute(\r\n                typedArray,\r\n                attribute.itemSize,\r\n                attribute.normalized,\r\n              );\r\n            }\r\n\r\n            if (attribute.name !== undefined) bufferAttribute.name = attribute.name;\r\n            array.push(bufferAttribute);\r\n          }\r\n\r\n          geometry.morphAttributes[key] = array;\r\n        }\r\n      }\r\n\r\n      const morphTargetsRelative = json.data.morphTargetsRelative;\r\n\r\n      if (morphTargetsRelative) {\r\n        geometry.morphTargetsRelative = true;\r\n      }\r\n\r\n      const groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n      if (groups !== undefined) {\r\n        for (let i = 0, n = groups.length; i !== n; ++i) {\r\n          const group = groups[i];\r\n          geometry.addGroup(group.start, group.count, group.materialIndex);\r\n        }\r\n      }\r\n\r\n      const boundingSphere = json.data.boundingSphere;\r\n\r\n      if (boundingSphere !== undefined) {\r\n        const center = new Vector3();\r\n\r\n        if (boundingSphere.center !== undefined) {\r\n          center.fromArray(boundingSphere.center);\r\n        }\r\n\r\n        geometry.boundingSphere = new Sphere(center, boundingSphere.radius);\r\n      }\r\n\r\n      if (json.name) geometry.name = json.name;\r\n      if (json.userData) geometry.userData = json.userData;\r\n      return geometry;\r\n    }\r\n  }\r\n\r\n  class ObjectLoader extends Loader {\r\n    constructor(manager) {\r\n      super(manager);\r\n    }\r\n\r\n    load(url, onLoad, onProgress, onError) {\r\n      const scope = this;\r\n      const path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\r\n      this.resourcePath = this.resourcePath || path;\r\n      const loader = new FileLoader(this.manager);\r\n      loader.setPath(this.path);\r\n      loader.setRequestHeader(this.requestHeader);\r\n      loader.setWithCredentials(this.withCredentials);\r\n      loader.load(\r\n        url,\r\n        function (text) {\r\n          let json = null;\r\n\r\n          try {\r\n            json = JSON.parse(text);\r\n          } catch (error) {\r\n            if (onError !== undefined) onError(error);\r\n            console.error(\"THREE:ObjectLoader: Can't parse \" + url + '.', error.message);\r\n            return;\r\n          }\r\n\r\n          const metadata = json.metadata;\r\n\r\n          if (\r\n            metadata === undefined ||\r\n            metadata.type === undefined ||\r\n            metadata.type.toLowerCase() === 'geometry'\r\n          ) {\r\n            console.error(\"THREE.ObjectLoader: Can't load \" + url);\r\n            return;\r\n          }\r\n\r\n          scope.parse(json, onLoad);\r\n        },\r\n        onProgress,\r\n        onError,\r\n      );\r\n    }\r\n\r\n    parse(json, onLoad) {\r\n      const animations = this.parseAnimations(json.animations);\r\n      const shapes = this.parseShapes(json.shapes);\r\n      const geometries = this.parseGeometries(json.geometries, shapes);\r\n      const images = this.parseImages(json.images, function () {\r\n        if (onLoad !== undefined) onLoad(object);\r\n      });\r\n      const textures = this.parseTextures(json.textures, images);\r\n      const materials = this.parseMaterials(json.materials, textures);\r\n      const object = this.parseObject(json.object, geometries, materials, animations);\r\n      const skeletons = this.parseSkeletons(json.skeletons, object);\r\n      this.bindSkeletons(object, skeletons); //\r\n\r\n      if (onLoad !== undefined) {\r\n        let hasImages = false;\r\n\r\n        for (const uuid in images) {\r\n          if (images[uuid] instanceof HTMLImageElement) {\r\n            hasImages = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (hasImages === false) onLoad(object);\r\n      }\r\n\r\n      return object;\r\n    }\r\n\r\n    parseShapes(json) {\r\n      const shapes = {};\r\n\r\n      if (json !== undefined) {\r\n        for (let i = 0, l = json.length; i < l; i++) {\r\n          const shape = new Shape().fromJSON(json[i]);\r\n          shapes[shape.uuid] = shape;\r\n        }\r\n      }\r\n\r\n      return shapes;\r\n    }\r\n\r\n    parseSkeletons(json, object) {\r\n      const skeletons = {};\r\n      const bones = {}; // generate bone lookup table\r\n\r\n      object.traverse(function (child) {\r\n        if (child.isBone) bones[child.uuid] = child;\r\n      }); // create skeletons\r\n\r\n      if (json !== undefined) {\r\n        for (let i = 0, l = json.length; i < l; i++) {\r\n          const skeleton = new Skeleton().fromJSON(json[i], bones);\r\n          skeletons[skeleton.uuid] = skeleton;\r\n        }\r\n      }\r\n\r\n      return skeletons;\r\n    }\r\n\r\n    parseGeometries(json, shapes) {\r\n      const geometries = {};\r\n      let geometryShapes;\r\n\r\n      if (json !== undefined) {\r\n        const bufferGeometryLoader = new BufferGeometryLoader();\r\n\r\n        for (let i = 0, l = json.length; i < l; i++) {\r\n          let geometry;\r\n          const data = json[i];\r\n\r\n          switch (data.type) {\r\n            case 'PlaneGeometry':\r\n            case 'PlaneBufferGeometry':\r\n              geometry = new Geometries[data.type](\r\n                data.width,\r\n                data.height,\r\n                data.widthSegments,\r\n                data.heightSegments,\r\n              );\r\n              break;\r\n\r\n            case 'BoxGeometry':\r\n            case 'BoxBufferGeometry':\r\n              geometry = new Geometries[data.type](\r\n                data.width,\r\n                data.height,\r\n                data.depth,\r\n                data.widthSegments,\r\n                data.heightSegments,\r\n                data.depthSegments,\r\n              );\r\n              break;\r\n\r\n            case 'CircleGeometry':\r\n            case 'CircleBufferGeometry':\r\n              geometry = new Geometries[data.type](\r\n                data.radius,\r\n                data.segments,\r\n                data.thetaStart,\r\n                data.thetaLength,\r\n              );\r\n              break;\r\n\r\n            case 'CylinderGeometry':\r\n            case 'CylinderBufferGeometry':\r\n              geometry = new Geometries[data.type](\r\n                data.radiusTop,\r\n                data.radiusBottom,\r\n                data.height,\r\n                data.radialSegments,\r\n                data.heightSegments,\r\n                data.openEnded,\r\n                data.thetaStart,\r\n                data.thetaLength,\r\n              );\r\n              break;\r\n\r\n            case 'ConeGeometry':\r\n            case 'ConeBufferGeometry':\r\n              geometry = new Geometries[data.type](\r\n                data.radius,\r\n                data.height,\r\n                data.radialSegments,\r\n                data.heightSegments,\r\n                data.openEnded,\r\n                data.thetaStart,\r\n                data.thetaLength,\r\n              );\r\n              break;\r\n\r\n            case 'SphereGeometry':\r\n            case 'SphereBufferGeometry':\r\n              geometry = new Geometries[data.type](\r\n                data.radius,\r\n                data.widthSegments,\r\n                data.heightSegments,\r\n                data.phiStart,\r\n                data.phiLength,\r\n                data.thetaStart,\r\n                data.thetaLength,\r\n              );\r\n              break;\r\n\r\n            case 'DodecahedronGeometry':\r\n            case 'DodecahedronBufferGeometry':\r\n            case 'IcosahedronGeometry':\r\n            case 'IcosahedronBufferGeometry':\r\n            case 'OctahedronGeometry':\r\n            case 'OctahedronBufferGeometry':\r\n            case 'TetrahedronGeometry':\r\n            case 'TetrahedronBufferGeometry':\r\n              geometry = new Geometries[data.type](data.radius, data.detail);\r\n              break;\r\n\r\n            case 'RingGeometry':\r\n            case 'RingBufferGeometry':\r\n              geometry = new Geometries[data.type](\r\n                data.innerRadius,\r\n                data.outerRadius,\r\n                data.thetaSegments,\r\n                data.phiSegments,\r\n                data.thetaStart,\r\n                data.thetaLength,\r\n              );\r\n              break;\r\n\r\n            case 'TorusGeometry':\r\n            case 'TorusBufferGeometry':\r\n              geometry = new Geometries[data.type](\r\n                data.radius,\r\n                data.tube,\r\n                data.radialSegments,\r\n                data.tubularSegments,\r\n                data.arc,\r\n              );\r\n              break;\r\n\r\n            case 'TorusKnotGeometry':\r\n            case 'TorusKnotBufferGeometry':\r\n              geometry = new Geometries[data.type](\r\n                data.radius,\r\n                data.tube,\r\n                data.tubularSegments,\r\n                data.radialSegments,\r\n                data.p,\r\n                data.q,\r\n              );\r\n              break;\r\n\r\n            case 'TubeGeometry':\r\n            case 'TubeBufferGeometry':\r\n              // This only works for built-in curves (e.g. CatmullRomCurve3).\r\n              // User defined curves or instances of CurvePath will not be deserialized.\r\n              geometry = new Geometries[data.type](\r\n                new Curves[data.path.type]().fromJSON(data.path),\r\n                data.tubularSegments,\r\n                data.radius,\r\n                data.radialSegments,\r\n                data.closed,\r\n              );\r\n              break;\r\n\r\n            case 'LatheGeometry':\r\n            case 'LatheBufferGeometry':\r\n              geometry = new Geometries[data.type](\r\n                data.points,\r\n                data.segments,\r\n                data.phiStart,\r\n                data.phiLength,\r\n              );\r\n              break;\r\n\r\n            case 'PolyhedronGeometry':\r\n            case 'PolyhedronBufferGeometry':\r\n              geometry = new Geometries[data.type](\r\n                data.vertices,\r\n                data.indices,\r\n                data.radius,\r\n                data.details,\r\n              );\r\n              break;\r\n\r\n            case 'ShapeGeometry':\r\n            case 'ShapeBufferGeometry':\r\n              geometryShapes = [];\r\n\r\n              for (let j = 0, jl = data.shapes.length; j < jl; j++) {\r\n                const shape = shapes[data.shapes[j]];\r\n                geometryShapes.push(shape);\r\n              }\r\n\r\n              geometry = new Geometries[data.type](geometryShapes, data.curveSegments);\r\n              break;\r\n\r\n            case 'ExtrudeGeometry':\r\n            case 'ExtrudeBufferGeometry':\r\n              geometryShapes = [];\r\n\r\n              for (let j = 0, jl = data.shapes.length; j < jl; j++) {\r\n                const shape = shapes[data.shapes[j]];\r\n                geometryShapes.push(shape);\r\n              }\r\n\r\n              const extrudePath = data.options.extrudePath;\r\n\r\n              if (extrudePath !== undefined) {\r\n                data.options.extrudePath = new Curves[extrudePath.type]().fromJSON(extrudePath);\r\n              }\r\n\r\n              geometry = new Geometries[data.type](geometryShapes, data.options);\r\n              break;\r\n\r\n            case 'BufferGeometry':\r\n            case 'InstancedBufferGeometry':\r\n              geometry = bufferGeometryLoader.parse(data);\r\n              break;\r\n\r\n            case 'Geometry':\r\n              console.error('THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.');\r\n              break;\r\n\r\n            default:\r\n              console.warn('THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"');\r\n              continue;\r\n          }\r\n\r\n          geometry.uuid = data.uuid;\r\n          if (data.name !== undefined) geometry.name = data.name;\r\n          if (geometry.isBufferGeometry === true && data.userData !== undefined)\r\n            geometry.userData = data.userData;\r\n          geometries[data.uuid] = geometry;\r\n        }\r\n      }\r\n\r\n      return geometries;\r\n    }\r\n\r\n    parseMaterials(json, textures) {\r\n      const cache = {}; // MultiMaterial\r\n\r\n      const materials = {};\r\n\r\n      if (json !== undefined) {\r\n        const loader = new MaterialLoader();\r\n        loader.setTextures(textures);\r\n\r\n        for (let i = 0, l = json.length; i < l; i++) {\r\n          const data = json[i];\r\n\r\n          if (data.type === 'MultiMaterial') {\r\n            // Deprecated\r\n            const array = [];\r\n\r\n            for (let j = 0; j < data.materials.length; j++) {\r\n              const material = data.materials[j];\r\n\r\n              if (cache[material.uuid] === undefined) {\r\n                cache[material.uuid] = loader.parse(material);\r\n              }\r\n\r\n              array.push(cache[material.uuid]);\r\n            }\r\n\r\n            materials[data.uuid] = array;\r\n          } else {\r\n            if (cache[data.uuid] === undefined) {\r\n              cache[data.uuid] = loader.parse(data);\r\n            }\r\n\r\n            materials[data.uuid] = cache[data.uuid];\r\n          }\r\n        }\r\n      }\r\n\r\n      return materials;\r\n    }\r\n\r\n    parseAnimations(json) {\r\n      const animations = {};\r\n\r\n      if (json !== undefined) {\r\n        for (let i = 0; i < json.length; i++) {\r\n          const data = json[i];\r\n          const clip = AnimationClip.parse(data);\r\n          animations[clip.uuid] = clip;\r\n        }\r\n      }\r\n\r\n      return animations;\r\n    }\r\n\r\n    parseImages(json, onLoad) {\r\n      const scope = this;\r\n      const images = {};\r\n      let loader;\r\n\r\n      function loadImage(url) {\r\n        scope.manager.itemStart(url);\r\n        return loader.load(\r\n          url,\r\n          function () {\r\n            scope.manager.itemEnd(url);\r\n          },\r\n          undefined,\r\n          function () {\r\n            scope.manager.itemError(url);\r\n            scope.manager.itemEnd(url);\r\n          },\r\n        );\r\n      }\r\n\r\n      function deserializeImage(image) {\r\n        if (typeof image === 'string') {\r\n          const url = image;\r\n          const path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\r\n          return loadImage(path);\r\n        } else {\r\n          if (image.data) {\r\n            return {\r\n              data: getTypedArray(image.type, image.data),\r\n              width: image.width,\r\n              height: image.height,\r\n            };\r\n          } else {\r\n            return null;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (json !== undefined && json.length > 0) {\r\n        const manager = new LoadingManager(onLoad);\r\n        loader = new ImageLoader(manager);\r\n        loader.setCrossOrigin(this.crossOrigin);\r\n\r\n        for (let i = 0, il = json.length; i < il; i++) {\r\n          const image = json[i];\r\n          const url = image.url;\r\n\r\n          if (Array.isArray(url)) {\r\n            // load array of images e.g CubeTexture\r\n            images[image.uuid] = [];\r\n\r\n            for (let j = 0, jl = url.length; j < jl; j++) {\r\n              const currentUrl = url[j];\r\n              const deserializedImage = deserializeImage(currentUrl);\r\n\r\n              if (deserializedImage !== null) {\r\n                if (deserializedImage instanceof HTMLImageElement) {\r\n                  images[image.uuid].push(deserializedImage);\r\n                } else {\r\n                  // special case: handle array of data textures for cube textures\r\n                  images[image.uuid].push(\r\n                    new DataTexture(\r\n                      deserializedImage.data,\r\n                      deserializedImage.width,\r\n                      deserializedImage.height,\r\n                    ),\r\n                  );\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            // load single image\r\n            const deserializedImage = deserializeImage(image.url);\r\n\r\n            if (deserializedImage !== null) {\r\n              images[image.uuid] = deserializedImage;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return images;\r\n    }\r\n\r\n    parseTextures(json, images) {\r\n      function parseConstant(value, type) {\r\n        if (typeof value === 'number') return value;\r\n        console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\r\n        return type[value];\r\n      }\r\n\r\n      const textures = {};\r\n\r\n      if (json !== undefined) {\r\n        for (let i = 0, l = json.length; i < l; i++) {\r\n          const data = json[i];\r\n\r\n          if (data.image === undefined) {\r\n            console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\r\n          }\r\n\r\n          if (images[data.image] === undefined) {\r\n            console.warn('THREE.ObjectLoader: Undefined image', data.image);\r\n          }\r\n\r\n          let texture;\r\n          const image = images[data.image];\r\n\r\n          if (Array.isArray(image)) {\r\n            texture = new CubeTexture(image);\r\n            if (image.length === 6) texture.needsUpdate = true;\r\n          } else {\r\n            if (image && image.data) {\r\n              texture = new DataTexture(image.data, image.width, image.height);\r\n            } else {\r\n              texture = new Texture(image);\r\n            }\r\n\r\n            if (image) texture.needsUpdate = true; // textures can have undefined image data\r\n          }\r\n\r\n          texture.uuid = data.uuid;\r\n          if (data.name !== undefined) texture.name = data.name;\r\n          if (data.mapping !== undefined)\r\n            texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\r\n          if (data.offset !== undefined) texture.offset.fromArray(data.offset);\r\n          if (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\r\n          if (data.center !== undefined) texture.center.fromArray(data.center);\r\n          if (data.rotation !== undefined) texture.rotation = data.rotation;\r\n\r\n          if (data.wrap !== undefined) {\r\n            texture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\r\n            texture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\r\n          }\r\n\r\n          if (data.format !== undefined) texture.format = data.format;\r\n          if (data.type !== undefined) texture.type = data.type;\r\n          if (data.encoding !== undefined) texture.encoding = data.encoding;\r\n          if (data.minFilter !== undefined)\r\n            texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\r\n          if (data.magFilter !== undefined)\r\n            texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\r\n          if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\r\n          if (data.flipY !== undefined) texture.flipY = data.flipY;\r\n          if (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\r\n          if (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\r\n          textures[data.uuid] = texture;\r\n        }\r\n      }\r\n\r\n      return textures;\r\n    }\r\n\r\n    parseObject(data, geometries, materials, animations) {\r\n      let object;\r\n\r\n      function getGeometry(name) {\r\n        if (geometries[name] === undefined) {\r\n          console.warn('THREE.ObjectLoader: Undefined geometry', name);\r\n        }\r\n\r\n        return geometries[name];\r\n      }\r\n\r\n      function getMaterial(name) {\r\n        if (name === undefined) return undefined;\r\n\r\n        if (Array.isArray(name)) {\r\n          const array = [];\r\n\r\n          for (let i = 0, l = name.length; i < l; i++) {\r\n            const uuid = name[i];\r\n\r\n            if (materials[uuid] === undefined) {\r\n              console.warn('THREE.ObjectLoader: Undefined material', uuid);\r\n            }\r\n\r\n            array.push(materials[uuid]);\r\n          }\r\n\r\n          return array;\r\n        }\r\n\r\n        if (materials[name] === undefined) {\r\n          console.warn('THREE.ObjectLoader: Undefined material', name);\r\n        }\r\n\r\n        return materials[name];\r\n      }\r\n\r\n      let geometry, material;\r\n\r\n      switch (data.type) {\r\n        case 'Scene':\r\n          object = new Scene();\r\n\r\n          if (data.background !== undefined) {\r\n            if (Number.isInteger(data.background)) {\r\n              object.background = new Color(data.background);\r\n            }\r\n          }\r\n\r\n          if (data.fog !== undefined) {\r\n            if (data.fog.type === 'Fog') {\r\n              object.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\r\n            } else if (data.fog.type === 'FogExp2') {\r\n              object.fog = new FogExp2(data.fog.color, data.fog.density);\r\n            }\r\n          }\r\n\r\n          break;\r\n\r\n        case 'PerspectiveCamera':\r\n          object = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\r\n          if (data.focus !== undefined) object.focus = data.focus;\r\n          if (data.zoom !== undefined) object.zoom = data.zoom;\r\n          if (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\r\n          if (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\r\n          if (data.view !== undefined) object.view = Object.assign({}, data.view);\r\n          break;\r\n\r\n        case 'OrthographicCamera':\r\n          object = new OrthographicCamera(\r\n            data.left,\r\n            data.right,\r\n            data.top,\r\n            data.bottom,\r\n            data.near,\r\n            data.far,\r\n          );\r\n          if (data.zoom !== undefined) object.zoom = data.zoom;\r\n          if (data.view !== undefined) object.view = Object.assign({}, data.view);\r\n          break;\r\n\r\n        case 'AmbientLight':\r\n          object = new AmbientLight(data.color, data.intensity);\r\n          break;\r\n\r\n        case 'DirectionalLight':\r\n          object = new DirectionalLight(data.color, data.intensity);\r\n          break;\r\n\r\n        case 'PointLight':\r\n          object = new PointLight(data.color, data.intensity, data.distance, data.decay);\r\n          break;\r\n\r\n        case 'RectAreaLight':\r\n          object = new RectAreaLight(data.color, data.intensity, data.width, data.height);\r\n          break;\r\n\r\n        case 'SpotLight':\r\n          object = new SpotLight(\r\n            data.color,\r\n            data.intensity,\r\n            data.distance,\r\n            data.angle,\r\n            data.penumbra,\r\n            data.decay,\r\n          );\r\n          break;\r\n\r\n        case 'HemisphereLight':\r\n          object = new HemisphereLight(data.color, data.groundColor, data.intensity);\r\n          break;\r\n\r\n        case 'LightProbe':\r\n          object = new LightProbe().fromJSON(data);\r\n          break;\r\n\r\n        case 'SkinnedMesh':\r\n          geometry = getGeometry(data.geometry);\r\n          material = getMaterial(data.material);\r\n          object = new SkinnedMesh(geometry, material);\r\n          if (data.bindMode !== undefined) object.bindMode = data.bindMode;\r\n          if (data.bindMatrix !== undefined) object.bindMatrix.fromArray(data.bindMatrix);\r\n          if (data.skeleton !== undefined) object.skeleton = data.skeleton;\r\n          break;\r\n\r\n        case 'Mesh':\r\n          geometry = getGeometry(data.geometry);\r\n          material = getMaterial(data.material);\r\n          object = new Mesh(geometry, material);\r\n          break;\r\n\r\n        case 'InstancedMesh':\r\n          geometry = getGeometry(data.geometry);\r\n          material = getMaterial(data.material);\r\n          const count = data.count;\r\n          const instanceMatrix = data.instanceMatrix;\r\n          const instanceColor = data.instanceColor;\r\n          object = new InstancedMesh(geometry, material, count);\r\n          object.instanceMatrix = new BufferAttribute(new Float32Array(instanceMatrix.array), 16);\r\n          if (instanceColor !== undefined)\r\n            object.instanceColor = new BufferAttribute(\r\n              new Float32Array(instanceColor.array),\r\n              instanceColor.itemSize,\r\n            );\r\n          break;\r\n\r\n        case 'LOD':\r\n          object = new LOD();\r\n          break;\r\n\r\n        case 'Line':\r\n          object = new Line(getGeometry(data.geometry), getMaterial(data.material));\r\n          break;\r\n\r\n        case 'LineLoop':\r\n          object = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\r\n          break;\r\n\r\n        case 'LineSegments':\r\n          object = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\r\n          break;\r\n\r\n        case 'PointCloud':\r\n        case 'Points':\r\n          object = new Points(getGeometry(data.geometry), getMaterial(data.material));\r\n          break;\r\n\r\n        case 'Sprite':\r\n          object = new Sprite(getMaterial(data.material));\r\n          break;\r\n\r\n        case 'Group':\r\n          object = new Group();\r\n          break;\r\n\r\n        case 'Bone':\r\n          object = new Bone();\r\n          break;\r\n\r\n        default:\r\n          object = new Object3D();\r\n      }\r\n\r\n      object.uuid = data.uuid;\r\n      if (data.name !== undefined) object.name = data.name;\r\n\r\n      if (data.matrix !== undefined) {\r\n        object.matrix.fromArray(data.matrix);\r\n        if (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\r\n        if (object.matrixAutoUpdate)\r\n          object.matrix.decompose(object.position, object.quaternion, object.scale);\r\n      } else {\r\n        if (data.position !== undefined) object.position.fromArray(data.position);\r\n        if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\r\n        if (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\r\n        if (data.scale !== undefined) object.scale.fromArray(data.scale);\r\n      }\r\n\r\n      if (data.castShadow !== undefined) object.castShadow = data.castShadow;\r\n      if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\r\n\r\n      if (data.shadow) {\r\n        if (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\r\n        if (data.shadow.normalBias !== undefined) object.shadow.normalBias = data.shadow.normalBias;\r\n        if (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\r\n        if (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\r\n        if (data.shadow.camera !== undefined)\r\n          object.shadow.camera = this.parseObject(data.shadow.camera);\r\n      }\r\n\r\n      if (data.visible !== undefined) object.visible = data.visible;\r\n      if (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\r\n      if (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\r\n      if (data.userData !== undefined) object.userData = data.userData;\r\n      if (data.layers !== undefined) object.layers.mask = data.layers;\r\n\r\n      if (data.children !== undefined) {\r\n        const children = data.children;\r\n\r\n        for (let i = 0; i < children.length; i++) {\r\n          object.add(this.parseObject(children[i], geometries, materials, animations));\r\n        }\r\n      }\r\n\r\n      if (data.animations !== undefined) {\r\n        const objectAnimations = data.animations;\r\n\r\n        for (let i = 0; i < objectAnimations.length; i++) {\r\n          const uuid = objectAnimations[i];\r\n          object.animations.push(animations[uuid]);\r\n        }\r\n      }\r\n\r\n      if (data.type === 'LOD') {\r\n        if (data.autoUpdate !== undefined) object.autoUpdate = data.autoUpdate;\r\n        const levels = data.levels;\r\n\r\n        for (let l = 0; l < levels.length; l++) {\r\n          const level = levels[l];\r\n          const child = object.getObjectByProperty('uuid', level.object);\r\n\r\n          if (child !== undefined) {\r\n            object.addLevel(child, level.distance);\r\n          }\r\n        }\r\n      }\r\n\r\n      return object;\r\n    }\r\n\r\n    bindSkeletons(object, skeletons) {\r\n      if (Object.keys(skeletons).length === 0) return;\r\n      object.traverse(function (child) {\r\n        if (child.isSkinnedMesh === true && child.skeleton !== undefined) {\r\n          const skeleton = skeletons[child.skeleton];\r\n\r\n          if (skeleton === undefined) {\r\n            console.warn('THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton);\r\n          } else {\r\n            child.bind(skeleton, child.bindMatrix);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    /* DEPRECATED */\r\n\r\n    setTexturePath(value) {\r\n      console.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');\r\n      return this.setResourcePath(value);\r\n    }\r\n  }\r\n\r\n  const TEXTURE_MAPPING = {\r\n    UVMapping: UVMapping,\r\n    CubeReflectionMapping: CubeReflectionMapping,\r\n    CubeRefractionMapping: CubeRefractionMapping,\r\n    EquirectangularReflectionMapping: EquirectangularReflectionMapping,\r\n    EquirectangularRefractionMapping: EquirectangularRefractionMapping,\r\n    CubeUVReflectionMapping: CubeUVReflectionMapping,\r\n    CubeUVRefractionMapping: CubeUVRefractionMapping,\r\n  };\r\n  const TEXTURE_WRAPPING = {\r\n    RepeatWrapping: RepeatWrapping,\r\n    ClampToEdgeWrapping: ClampToEdgeWrapping,\r\n    MirroredRepeatWrapping: MirroredRepeatWrapping,\r\n  };\r\n  const TEXTURE_FILTER = {\r\n    NearestFilter: NearestFilter,\r\n    NearestMipmapNearestFilter: NearestMipmapNearestFilter,\r\n    NearestMipmapLinearFilter: NearestMipmapLinearFilter,\r\n    LinearFilter: LinearFilter,\r\n    LinearMipmapNearestFilter: LinearMipmapNearestFilter,\r\n    LinearMipmapLinearFilter: LinearMipmapLinearFilter,\r\n  };\r\n\r\n  class ImageBitmapLoader extends Loader {\r\n    constructor(manager) {\r\n      super(manager);\r\n\r\n      if (typeof createImageBitmap === 'undefined') {\r\n        console.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');\r\n      }\r\n\r\n      if (typeof fetch === 'undefined') {\r\n        console.warn('THREE.ImageBitmapLoader: fetch() not supported.');\r\n      }\r\n\r\n      this.options = {\r\n        premultiplyAlpha: 'none',\r\n      };\r\n    }\r\n\r\n    setOptions(options) {\r\n      this.options = options;\r\n      return this;\r\n    }\r\n\r\n    load(url, onLoad, onProgress, onError) {\r\n      if (url === undefined) url = '';\r\n      if (this.path !== undefined) url = this.path + url;\r\n      url = this.manager.resolveURL(url);\r\n      const scope = this;\r\n      const cached = Cache.get(url);\r\n\r\n      if (cached !== undefined) {\r\n        scope.manager.itemStart(url);\r\n        setTimeout(function () {\r\n          if (onLoad) onLoad(cached);\r\n          scope.manager.itemEnd(url);\r\n        }, 0);\r\n        return cached;\r\n      }\r\n\r\n      const fetchOptions = {};\r\n      fetchOptions.credentials = this.crossOrigin === 'anonymous' ? 'same-origin' : 'include';\r\n      fetchOptions.headers = this.requestHeader;\r\n      fetch(url, fetchOptions)\r\n        .then(function (res) {\r\n          return res.blob();\r\n        })\r\n        .then(function (blob) {\r\n          return createImageBitmap(\r\n            blob,\r\n            Object.assign(scope.options, {\r\n              colorSpaceConversion: 'none',\r\n            }),\r\n          );\r\n        })\r\n        .then(function (imageBitmap) {\r\n          Cache.add(url, imageBitmap);\r\n          if (onLoad) onLoad(imageBitmap);\r\n          scope.manager.itemEnd(url);\r\n        })\r\n        .catch(function (e) {\r\n          if (onError) onError(e);\r\n          scope.manager.itemError(url);\r\n          scope.manager.itemEnd(url);\r\n        });\r\n      scope.manager.itemStart(url);\r\n    }\r\n  }\r\n\r\n  ImageBitmapLoader.prototype.isImageBitmapLoader = true;\r\n\r\n  class ShapePath {\r\n    constructor() {\r\n      this.type = 'ShapePath';\r\n      this.color = new Color();\r\n      this.subPaths = [];\r\n      this.currentPath = null;\r\n    }\r\n\r\n    moveTo(x, y) {\r\n      this.currentPath = new Path();\r\n      this.subPaths.push(this.currentPath);\r\n      this.currentPath.moveTo(x, y);\r\n      return this;\r\n    }\r\n\r\n    lineTo(x, y) {\r\n      this.currentPath.lineTo(x, y);\r\n      return this;\r\n    }\r\n\r\n    quadraticCurveTo(aCPx, aCPy, aX, aY) {\r\n      this.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\r\n      return this;\r\n    }\r\n\r\n    bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\r\n      this.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\r\n      return this;\r\n    }\r\n\r\n    splineThru(pts) {\r\n      this.currentPath.splineThru(pts);\r\n      return this;\r\n    }\r\n\r\n    toShapes(isCCW, noHoles) {\r\n      function toShapesNoHoles(inSubpaths) {\r\n        const shapes = [];\r\n\r\n        for (let i = 0, l = inSubpaths.length; i < l; i++) {\r\n          const tmpPath = inSubpaths[i];\r\n          const tmpShape = new Shape();\r\n          tmpShape.curves = tmpPath.curves;\r\n          shapes.push(tmpShape);\r\n        }\r\n\r\n        return shapes;\r\n      }\r\n\r\n      function isPointInsidePolygon(inPt, inPolygon) {\r\n        const polyLen = inPolygon.length; // inPt on polygon contour => immediate success\t\tor\r\n        // toggling of inside/outside at every single! intersection point of an edge\r\n        //\twith the horizontal line through inPt, left of inPt\r\n        //\tnot counting lowerY endpoints of edges and whole edges on that line\r\n\r\n        let inside = false;\r\n\r\n        for (let p = polyLen - 1, q = 0; q < polyLen; p = q++) {\r\n          let edgeLowPt = inPolygon[p];\r\n          let edgeHighPt = inPolygon[q];\r\n          let edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n          let edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n          if (Math.abs(edgeDy) > Number.EPSILON) {\r\n            // not parallel\r\n            if (edgeDy < 0) {\r\n              edgeLowPt = inPolygon[q];\r\n              edgeDx = -edgeDx;\r\n              edgeHighPt = inPolygon[p];\r\n              edgeDy = -edgeDy;\r\n            }\r\n\r\n            if (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\r\n\r\n            if (inPt.y === edgeLowPt.y) {\r\n              if (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\r\n              // continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n            } else {\r\n              const perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\r\n              if (perpEdge === 0) return true; // inPt is on contour ?\r\n\r\n              if (perpEdge < 0) continue;\r\n              inside = !inside; // true intersection left of inPt\r\n            }\r\n          } else {\r\n            // parallel or collinear\r\n            if (inPt.y !== edgeLowPt.y) continue; // parallel\r\n            // edge lies on the same horizontal line as inPt\r\n\r\n            if (\r\n              (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x) ||\r\n              (edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x)\r\n            )\r\n              return true; // inPt: Point on contour !\r\n            // continue;\r\n          }\r\n        }\r\n\r\n        return inside;\r\n      }\r\n\r\n      const isClockWise = ShapeUtils.isClockWise;\r\n      const subPaths = this.subPaths;\r\n      if (subPaths.length === 0) return [];\r\n      if (noHoles === true) return toShapesNoHoles(subPaths);\r\n      let solid, tmpPath, tmpShape;\r\n      const shapes = [];\r\n\r\n      if (subPaths.length === 1) {\r\n        tmpPath = subPaths[0];\r\n        tmpShape = new Shape();\r\n        tmpShape.curves = tmpPath.curves;\r\n        shapes.push(tmpShape);\r\n        return shapes;\r\n      }\r\n\r\n      let holesFirst = !isClockWise(subPaths[0].getPoints());\r\n      holesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\r\n\r\n      const betterShapeHoles = [];\r\n      const newShapes = [];\r\n      let newShapeHoles = [];\r\n      let mainIdx = 0;\r\n      let tmpPoints;\r\n      newShapes[mainIdx] = undefined;\r\n      newShapeHoles[mainIdx] = [];\r\n\r\n      for (let i = 0, l = subPaths.length; i < l; i++) {\r\n        tmpPath = subPaths[i];\r\n        tmpPoints = tmpPath.getPoints();\r\n        solid = isClockWise(tmpPoints);\r\n        solid = isCCW ? !solid : solid;\r\n\r\n        if (solid) {\r\n          if (!holesFirst && newShapes[mainIdx]) mainIdx++;\r\n          newShapes[mainIdx] = {\r\n            s: new Shape(),\r\n            p: tmpPoints,\r\n          };\r\n          newShapes[mainIdx].s.curves = tmpPath.curves;\r\n          if (holesFirst) mainIdx++;\r\n          newShapeHoles[mainIdx] = []; //console.log('cw', i);\r\n        } else {\r\n          newShapeHoles[mainIdx].push({\r\n            h: tmpPath,\r\n            p: tmpPoints[0],\r\n          }); //console.log('ccw', i);\r\n        }\r\n      } // only Holes? -> probably all Shapes with wrong orientation\r\n\r\n      if (!newShapes[0]) return toShapesNoHoles(subPaths);\r\n\r\n      if (newShapes.length > 1) {\r\n        let ambiguous = false;\r\n        const toChange = [];\r\n\r\n        for (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\r\n          betterShapeHoles[sIdx] = [];\r\n        }\r\n\r\n        for (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\r\n          const sho = newShapeHoles[sIdx];\r\n\r\n          for (let hIdx = 0; hIdx < sho.length; hIdx++) {\r\n            const ho = sho[hIdx];\r\n            let hole_unassigned = true;\r\n\r\n            for (let s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\r\n              if (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\r\n                if (sIdx !== s2Idx)\r\n                  toChange.push({\r\n                    froms: sIdx,\r\n                    tos: s2Idx,\r\n                    hole: hIdx,\r\n                  });\r\n\r\n                if (hole_unassigned) {\r\n                  hole_unassigned = false;\r\n                  betterShapeHoles[s2Idx].push(ho);\r\n                } else {\r\n                  ambiguous = true;\r\n                }\r\n              }\r\n            }\r\n\r\n            if (hole_unassigned) {\r\n              betterShapeHoles[sIdx].push(ho);\r\n            }\r\n          }\r\n        } // console.log(\"ambiguous: \", ambiguous);\r\n\r\n        if (toChange.length > 0) {\r\n          // console.log(\"to change: \", toChange);\r\n          if (!ambiguous) newShapeHoles = betterShapeHoles;\r\n        }\r\n      }\r\n\r\n      let tmpHoles;\r\n\r\n      for (let i = 0, il = newShapes.length; i < il; i++) {\r\n        tmpShape = newShapes[i].s;\r\n        shapes.push(tmpShape);\r\n        tmpHoles = newShapeHoles[i];\r\n\r\n        for (let j = 0, jl = tmpHoles.length; j < jl; j++) {\r\n          tmpShape.holes.push(tmpHoles[j].h);\r\n        }\r\n      } //console.log(\"shape\", shapes);\r\n\r\n      return shapes;\r\n    }\r\n  }\r\n\r\n  class Font {\r\n    constructor(data) {\r\n      this.type = 'Font';\r\n      this.data = data;\r\n    }\r\n\r\n    generateShapes(text, size = 100) {\r\n      const shapes = [];\r\n      const paths = createPaths(text, size, this.data);\r\n\r\n      for (let p = 0, pl = paths.length; p < pl; p++) {\r\n        Array.prototype.push.apply(shapes, paths[p].toShapes());\r\n      }\r\n\r\n      return shapes;\r\n    }\r\n  }\r\n\r\n  function createPaths(text, size, data) {\r\n    const chars = Array.from(text);\r\n    const scale = size / data.resolution;\r\n    const line_height =\r\n      (data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness) * scale;\r\n    const paths = [];\r\n    let offsetX = 0,\r\n      offsetY = 0;\r\n\r\n    for (let i = 0; i < chars.length; i++) {\r\n      const char = chars[i];\r\n\r\n      if (char === '\\n') {\r\n        offsetX = 0;\r\n        offsetY -= line_height;\r\n      } else {\r\n        const ret = createPath(char, scale, offsetX, offsetY, data);\r\n        offsetX += ret.offsetX;\r\n        paths.push(ret.path);\r\n      }\r\n    }\r\n\r\n    return paths;\r\n  }\r\n\r\n  function createPath(char, scale, offsetX, offsetY, data) {\r\n    const glyph = data.glyphs[char] || data.glyphs['?'];\r\n\r\n    if (!glyph) {\r\n      console.error(\r\n        'THREE.Font: character \"' +\r\n          char +\r\n          '\" does not exists in font family ' +\r\n          data.familyName +\r\n          '.',\r\n      );\r\n      return;\r\n    }\r\n\r\n    const path = new ShapePath();\r\n    let x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\r\n\r\n    if (glyph.o) {\r\n      const outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\r\n\r\n      for (let i = 0, l = outline.length; i < l; ) {\r\n        const action = outline[i++];\r\n\r\n        switch (action) {\r\n          case 'm':\r\n            // moveTo\r\n            x = outline[i++] * scale + offsetX;\r\n            y = outline[i++] * scale + offsetY;\r\n            path.moveTo(x, y);\r\n            break;\r\n\r\n          case 'l':\r\n            // lineTo\r\n            x = outline[i++] * scale + offsetX;\r\n            y = outline[i++] * scale + offsetY;\r\n            path.lineTo(x, y);\r\n            break;\r\n\r\n          case 'q':\r\n            // quadraticCurveTo\r\n            cpx = outline[i++] * scale + offsetX;\r\n            cpy = outline[i++] * scale + offsetY;\r\n            cpx1 = outline[i++] * scale + offsetX;\r\n            cpy1 = outline[i++] * scale + offsetY;\r\n            path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\r\n            break;\r\n\r\n          case 'b':\r\n            // bezierCurveTo\r\n            cpx = outline[i++] * scale + offsetX;\r\n            cpy = outline[i++] * scale + offsetY;\r\n            cpx1 = outline[i++] * scale + offsetX;\r\n            cpy1 = outline[i++] * scale + offsetY;\r\n            cpx2 = outline[i++] * scale + offsetX;\r\n            cpy2 = outline[i++] * scale + offsetY;\r\n            path.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      offsetX: glyph.ha * scale,\r\n      path: path,\r\n    };\r\n  }\r\n\r\n  Font.prototype.isFont = true;\r\n\r\n  class FontLoader extends Loader {\r\n    constructor(manager) {\r\n      super(manager);\r\n    }\r\n\r\n    load(url, onLoad, onProgress, onError) {\r\n      const scope = this;\r\n      const loader = new FileLoader(this.manager);\r\n      loader.setPath(this.path);\r\n      loader.setRequestHeader(this.requestHeader);\r\n      loader.setWithCredentials(scope.withCredentials);\r\n      loader.load(\r\n        url,\r\n        function (text) {\r\n          let json;\r\n\r\n          try {\r\n            json = JSON.parse(text);\r\n          } catch (e) {\r\n            console.warn(\r\n              'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.',\r\n            );\r\n            json = JSON.parse(text.substring(65, text.length - 2));\r\n          }\r\n\r\n          const font = scope.parse(json);\r\n          if (onLoad) onLoad(font);\r\n        },\r\n        onProgress,\r\n        onError,\r\n      );\r\n    }\r\n\r\n    parse(json) {\r\n      return new Font(json);\r\n    }\r\n  }\r\n\r\n  let _context;\r\n\r\n  const AudioContext = {\r\n    getContext: function () {\r\n      if (_context === undefined) {\r\n        _context = new (window.AudioContext || window.webkitAudioContext)();\r\n      }\r\n\r\n      return _context;\r\n    },\r\n    setContext: function (value) {\r\n      _context = value;\r\n    },\r\n  };\r\n\r\n  class AudioLoader extends Loader {\r\n    constructor(manager) {\r\n      super(manager);\r\n    }\r\n\r\n    load(url, onLoad, onProgress, onError) {\r\n      const scope = this;\r\n      const loader = new FileLoader(this.manager);\r\n      loader.setResponseType('arraybuffer');\r\n      loader.setPath(this.path);\r\n      loader.setRequestHeader(this.requestHeader);\r\n      loader.setWithCredentials(this.withCredentials);\r\n      loader.load(\r\n        url,\r\n        function (buffer) {\r\n          try {\r\n            // Create a copy of the buffer. The `decodeAudioData` method\r\n            // detaches the buffer when complete, preventing reuse.\r\n            const bufferCopy = buffer.slice(0);\r\n            const context = AudioContext.getContext();\r\n            context.decodeAudioData(bufferCopy, function (audioBuffer) {\r\n              onLoad(audioBuffer);\r\n            });\r\n          } catch (e) {\r\n            if (onError) {\r\n              onError(e);\r\n            } else {\r\n              console.error(e);\r\n            }\r\n\r\n            scope.manager.itemError(url);\r\n          }\r\n        },\r\n        onProgress,\r\n        onError,\r\n      );\r\n    }\r\n  }\r\n\r\n  class HemisphereLightProbe extends LightProbe {\r\n    constructor(skyColor, groundColor, intensity = 1) {\r\n      super(undefined, intensity);\r\n      const color1 = new Color().set(skyColor);\r\n      const color2 = new Color().set(groundColor);\r\n      const sky = new Vector3(color1.r, color1.g, color1.b);\r\n      const ground = new Vector3(color2.r, color2.g, color2.b); // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\r\n\r\n      const c0 = Math.sqrt(Math.PI);\r\n      const c1 = c0 * Math.sqrt(0.75);\r\n      this.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);\r\n      this.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);\r\n    }\r\n  }\r\n\r\n  HemisphereLightProbe.prototype.isHemisphereLightProbe = true;\r\n\r\n  class AmbientLightProbe extends LightProbe {\r\n    constructor(color, intensity = 1) {\r\n      super(undefined, intensity);\r\n      const color1 = new Color().set(color); // without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\r\n\r\n      this.sh.coefficients[0]\r\n        .set(color1.r, color1.g, color1.b)\r\n        .multiplyScalar(2 * Math.sqrt(Math.PI));\r\n    }\r\n  }\r\n\r\n  AmbientLightProbe.prototype.isAmbientLightProbe = true;\r\n\r\n  const _eyeRight = /*@__PURE__*/ new Matrix4();\r\n\r\n  const _eyeLeft = /*@__PURE__*/ new Matrix4();\r\n\r\n  class StereoCamera {\r\n    constructor() {\r\n      this.type = 'StereoCamera';\r\n      this.aspect = 1;\r\n      this.eyeSep = 0.064;\r\n      this.cameraL = new PerspectiveCamera();\r\n      this.cameraL.layers.enable(1);\r\n      this.cameraL.matrixAutoUpdate = false;\r\n      this.cameraR = new PerspectiveCamera();\r\n      this.cameraR.layers.enable(2);\r\n      this.cameraR.matrixAutoUpdate = false;\r\n      this._cache = {\r\n        focus: null,\r\n        fov: null,\r\n        aspect: null,\r\n        near: null,\r\n        far: null,\r\n        zoom: null,\r\n        eyeSep: null,\r\n      };\r\n    }\r\n\r\n    update(camera) {\r\n      const cache = this._cache;\r\n      const needsUpdate =\r\n        cache.focus !== camera.focus ||\r\n        cache.fov !== camera.fov ||\r\n        cache.aspect !== camera.aspect * this.aspect ||\r\n        cache.near !== camera.near ||\r\n        cache.far !== camera.far ||\r\n        cache.zoom !== camera.zoom ||\r\n        cache.eyeSep !== this.eyeSep;\r\n\r\n      if (needsUpdate) {\r\n        cache.focus = camera.focus;\r\n        cache.fov = camera.fov;\r\n        cache.aspect = camera.aspect * this.aspect;\r\n        cache.near = camera.near;\r\n        cache.far = camera.far;\r\n        cache.zoom = camera.zoom;\r\n        cache.eyeSep = this.eyeSep; // Off-axis stereoscopic effect based on\r\n        // http://paulbourke.net/stereographics/stereorender/\r\n\r\n        const projectionMatrix = camera.projectionMatrix.clone();\r\n        const eyeSepHalf = cache.eyeSep / 2;\r\n        const eyeSepOnProjection = (eyeSepHalf * cache.near) / cache.focus;\r\n        const ymax = (cache.near * Math.tan(DEG2RAD * cache.fov * 0.5)) / cache.zoom;\r\n        let xmin, xmax; // translate xOffset\r\n\r\n        _eyeLeft.elements[12] = -eyeSepHalf;\r\n        _eyeRight.elements[12] = eyeSepHalf; // for left eye\r\n\r\n        xmin = -ymax * cache.aspect + eyeSepOnProjection;\r\n        xmax = ymax * cache.aspect + eyeSepOnProjection;\r\n        projectionMatrix.elements[0] = (2 * cache.near) / (xmax - xmin);\r\n        projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\r\n        this.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\r\n\r\n        xmin = -ymax * cache.aspect - eyeSepOnProjection;\r\n        xmax = ymax * cache.aspect - eyeSepOnProjection;\r\n        projectionMatrix.elements[0] = (2 * cache.near) / (xmax - xmin);\r\n        projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\r\n        this.cameraR.projectionMatrix.copy(projectionMatrix);\r\n      }\r\n\r\n      this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);\r\n      this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);\r\n    }\r\n  }\r\n\r\n  class Clock {\r\n    constructor(autoStart = true) {\r\n      this.autoStart = autoStart;\r\n      this.startTime = 0;\r\n      this.oldTime = 0;\r\n      this.elapsedTime = 0;\r\n      this.running = false;\r\n    }\r\n\r\n    start() {\r\n      this.startTime = now();\r\n      this.oldTime = this.startTime;\r\n      this.elapsedTime = 0;\r\n      this.running = true;\r\n    }\r\n\r\n    stop() {\r\n      this.getElapsedTime();\r\n      this.running = false;\r\n      this.autoStart = false;\r\n    }\r\n\r\n    getElapsedTime() {\r\n      this.getDelta();\r\n      return this.elapsedTime;\r\n    }\r\n\r\n    getDelta() {\r\n      let diff = 0;\r\n\r\n      if (this.autoStart && !this.running) {\r\n        this.start();\r\n        return 0;\r\n      }\r\n\r\n      if (this.running) {\r\n        const newTime = now();\r\n        diff = (newTime - this.oldTime) / 1000;\r\n        this.oldTime = newTime;\r\n        this.elapsedTime += diff;\r\n      }\r\n\r\n      return diff;\r\n    }\r\n  }\r\n\r\n  function now() {\r\n    return (typeof performance === 'undefined' ? Date : performance).now(); // see #10732\r\n  }\r\n\r\n  const _position$1 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _quaternion$1 = /*@__PURE__*/ new Quaternion();\r\n\r\n  const _scale$1 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _orientation$1 = /*@__PURE__*/ new Vector3();\r\n\r\n  class AudioListener extends Object3D {\r\n    constructor() {\r\n      super();\r\n      this.type = 'AudioListener';\r\n      this.context = AudioContext.getContext();\r\n      this.gain = this.context.createGain();\r\n      this.gain.connect(this.context.destination);\r\n      this.filter = null;\r\n      this.timeDelta = 0; // private\r\n\r\n      this._clock = new Clock();\r\n    }\r\n\r\n    getInput() {\r\n      return this.gain;\r\n    }\r\n\r\n    removeFilter() {\r\n      if (this.filter !== null) {\r\n        this.gain.disconnect(this.filter);\r\n        this.filter.disconnect(this.context.destination);\r\n        this.gain.connect(this.context.destination);\r\n        this.filter = null;\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    getFilter() {\r\n      return this.filter;\r\n    }\r\n\r\n    setFilter(value) {\r\n      if (this.filter !== null) {\r\n        this.gain.disconnect(this.filter);\r\n        this.filter.disconnect(this.context.destination);\r\n      } else {\r\n        this.gain.disconnect(this.context.destination);\r\n      }\r\n\r\n      this.filter = value;\r\n      this.gain.connect(this.filter);\r\n      this.filter.connect(this.context.destination);\r\n      return this;\r\n    }\r\n\r\n    getMasterVolume() {\r\n      return this.gain.gain.value;\r\n    }\r\n\r\n    setMasterVolume(value) {\r\n      this.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\r\n      return this;\r\n    }\r\n\r\n    updateMatrixWorld(force) {\r\n      super.updateMatrixWorld(force);\r\n      const listener = this.context.listener;\r\n      const up = this.up;\r\n      this.timeDelta = this._clock.getDelta();\r\n      this.matrixWorld.decompose(_position$1, _quaternion$1, _scale$1);\r\n\r\n      _orientation$1.set(0, 0, -1).applyQuaternion(_quaternion$1);\r\n\r\n      if (listener.positionX) {\r\n        // code path for Chrome (see #14393)\r\n        const endTime = this.context.currentTime + this.timeDelta;\r\n        listener.positionX.linearRampToValueAtTime(_position$1.x, endTime);\r\n        listener.positionY.linearRampToValueAtTime(_position$1.y, endTime);\r\n        listener.positionZ.linearRampToValueAtTime(_position$1.z, endTime);\r\n        listener.forwardX.linearRampToValueAtTime(_orientation$1.x, endTime);\r\n        listener.forwardY.linearRampToValueAtTime(_orientation$1.y, endTime);\r\n        listener.forwardZ.linearRampToValueAtTime(_orientation$1.z, endTime);\r\n        listener.upX.linearRampToValueAtTime(up.x, endTime);\r\n        listener.upY.linearRampToValueAtTime(up.y, endTime);\r\n        listener.upZ.linearRampToValueAtTime(up.z, endTime);\r\n      } else {\r\n        listener.setPosition(_position$1.x, _position$1.y, _position$1.z);\r\n        listener.setOrientation(\r\n          _orientation$1.x,\r\n          _orientation$1.y,\r\n          _orientation$1.z,\r\n          up.x,\r\n          up.y,\r\n          up.z,\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  class Audio extends Object3D {\r\n    constructor(listener) {\r\n      super();\r\n      this.type = 'Audio';\r\n      this.listener = listener;\r\n      this.context = listener.context;\r\n      this.gain = this.context.createGain();\r\n      this.gain.connect(listener.getInput());\r\n      this.autoplay = false;\r\n      this.buffer = null;\r\n      this.detune = 0;\r\n      this.loop = false;\r\n      this.loopStart = 0;\r\n      this.loopEnd = 0;\r\n      this.offset = 0;\r\n      this.duration = undefined;\r\n      this.playbackRate = 1;\r\n      this.isPlaying = false;\r\n      this.hasPlaybackControl = true;\r\n      this.source = null;\r\n      this.sourceType = 'empty';\r\n      this._startedAt = 0;\r\n      this._progress = 0;\r\n      this._connected = false;\r\n      this.filters = [];\r\n    }\r\n\r\n    getOutput() {\r\n      return this.gain;\r\n    }\r\n\r\n    setNodeSource(audioNode) {\r\n      this.hasPlaybackControl = false;\r\n      this.sourceType = 'audioNode';\r\n      this.source = audioNode;\r\n      this.connect();\r\n      return this;\r\n    }\r\n\r\n    setMediaElementSource(mediaElement) {\r\n      this.hasPlaybackControl = false;\r\n      this.sourceType = 'mediaNode';\r\n      this.source = this.context.createMediaElementSource(mediaElement);\r\n      this.connect();\r\n      return this;\r\n    }\r\n\r\n    setMediaStreamSource(mediaStream) {\r\n      this.hasPlaybackControl = false;\r\n      this.sourceType = 'mediaStreamNode';\r\n      this.source = this.context.createMediaStreamSource(mediaStream);\r\n      this.connect();\r\n      return this;\r\n    }\r\n\r\n    setBuffer(audioBuffer) {\r\n      this.buffer = audioBuffer;\r\n      this.sourceType = 'buffer';\r\n      if (this.autoplay) this.play();\r\n      return this;\r\n    }\r\n\r\n    play(delay = 0) {\r\n      if (this.isPlaying === true) {\r\n        console.warn('THREE.Audio: Audio is already playing.');\r\n        return;\r\n      }\r\n\r\n      if (this.hasPlaybackControl === false) {\r\n        console.warn('THREE.Audio: this Audio has no playback control.');\r\n        return;\r\n      }\r\n\r\n      this._startedAt = this.context.currentTime + delay;\r\n      const source = this.context.createBufferSource();\r\n      source.buffer = this.buffer;\r\n      source.loop = this.loop;\r\n      source.loopStart = this.loopStart;\r\n      source.loopEnd = this.loopEnd;\r\n      source.onended = this.onEnded.bind(this);\r\n      source.start(this._startedAt, this._progress + this.offset, this.duration);\r\n      this.isPlaying = true;\r\n      this.source = source;\r\n      this.setDetune(this.detune);\r\n      this.setPlaybackRate(this.playbackRate);\r\n      return this.connect();\r\n    }\r\n\r\n    pause() {\r\n      if (this.hasPlaybackControl === false) {\r\n        console.warn('THREE.Audio: this Audio has no playback control.');\r\n        return;\r\n      }\r\n\r\n      if (this.isPlaying === true) {\r\n        // update current progress\r\n        this._progress +=\r\n          Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate;\r\n\r\n        if (this.loop === true) {\r\n          // ensure _progress does not exceed duration with looped audios\r\n          this._progress = this._progress % (this.duration || this.buffer.duration);\r\n        }\r\n\r\n        this.source.stop();\r\n        this.source.onended = null;\r\n        this.isPlaying = false;\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    stop() {\r\n      if (this.hasPlaybackControl === false) {\r\n        console.warn('THREE.Audio: this Audio has no playback control.');\r\n        return;\r\n      }\r\n\r\n      this._progress = 0;\r\n      this.source.stop();\r\n      this.source.onended = null;\r\n      this.isPlaying = false;\r\n      return this;\r\n    }\r\n\r\n    connect() {\r\n      if (this.filters.length > 0) {\r\n        this.source.connect(this.filters[0]);\r\n\r\n        for (let i = 1, l = this.filters.length; i < l; i++) {\r\n          this.filters[i - 1].connect(this.filters[i]);\r\n        }\r\n\r\n        this.filters[this.filters.length - 1].connect(this.getOutput());\r\n      } else {\r\n        this.source.connect(this.getOutput());\r\n      }\r\n\r\n      this._connected = true;\r\n      return this;\r\n    }\r\n\r\n    disconnect() {\r\n      if (this.filters.length > 0) {\r\n        this.source.disconnect(this.filters[0]);\r\n\r\n        for (let i = 1, l = this.filters.length; i < l; i++) {\r\n          this.filters[i - 1].disconnect(this.filters[i]);\r\n        }\r\n\r\n        this.filters[this.filters.length - 1].disconnect(this.getOutput());\r\n      } else {\r\n        this.source.disconnect(this.getOutput());\r\n      }\r\n\r\n      this._connected = false;\r\n      return this;\r\n    }\r\n\r\n    getFilters() {\r\n      return this.filters;\r\n    }\r\n\r\n    setFilters(value) {\r\n      if (!value) value = [];\r\n\r\n      if (this._connected === true) {\r\n        this.disconnect();\r\n        this.filters = value.slice();\r\n        this.connect();\r\n      } else {\r\n        this.filters = value.slice();\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    setDetune(value) {\r\n      this.detune = value;\r\n      if (this.source.detune === undefined) return; // only set detune when available\r\n\r\n      if (this.isPlaying === true) {\r\n        this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, 0.01);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    getDetune() {\r\n      return this.detune;\r\n    }\r\n\r\n    getFilter() {\r\n      return this.getFilters()[0];\r\n    }\r\n\r\n    setFilter(filter) {\r\n      return this.setFilters(filter ? [filter] : []);\r\n    }\r\n\r\n    setPlaybackRate(value) {\r\n      if (this.hasPlaybackControl === false) {\r\n        console.warn('THREE.Audio: this Audio has no playback control.');\r\n        return;\r\n      }\r\n\r\n      this.playbackRate = value;\r\n\r\n      if (this.isPlaying === true) {\r\n        this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, 0.01);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    getPlaybackRate() {\r\n      return this.playbackRate;\r\n    }\r\n\r\n    onEnded() {\r\n      this.isPlaying = false;\r\n    }\r\n\r\n    getLoop() {\r\n      if (this.hasPlaybackControl === false) {\r\n        console.warn('THREE.Audio: this Audio has no playback control.');\r\n        return false;\r\n      }\r\n\r\n      return this.loop;\r\n    }\r\n\r\n    setLoop(value) {\r\n      if (this.hasPlaybackControl === false) {\r\n        console.warn('THREE.Audio: this Audio has no playback control.');\r\n        return;\r\n      }\r\n\r\n      this.loop = value;\r\n\r\n      if (this.isPlaying === true) {\r\n        this.source.loop = this.loop;\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    setLoopStart(value) {\r\n      this.loopStart = value;\r\n      return this;\r\n    }\r\n\r\n    setLoopEnd(value) {\r\n      this.loopEnd = value;\r\n      return this;\r\n    }\r\n\r\n    getVolume() {\r\n      return this.gain.gain.value;\r\n    }\r\n\r\n    setVolume(value) {\r\n      this.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\r\n      return this;\r\n    }\r\n  }\r\n\r\n  const _position = /*@__PURE__*/ new Vector3();\r\n\r\n  const _quaternion = /*@__PURE__*/ new Quaternion();\r\n\r\n  const _scale = /*@__PURE__*/ new Vector3();\r\n\r\n  const _orientation = /*@__PURE__*/ new Vector3();\r\n\r\n  class PositionalAudio extends Audio {\r\n    constructor(listener) {\r\n      super(listener);\r\n      this.panner = this.context.createPanner();\r\n      this.panner.panningModel = 'HRTF';\r\n      this.panner.connect(this.gain);\r\n    }\r\n\r\n    getOutput() {\r\n      return this.panner;\r\n    }\r\n\r\n    getRefDistance() {\r\n      return this.panner.refDistance;\r\n    }\r\n\r\n    setRefDistance(value) {\r\n      this.panner.refDistance = value;\r\n      return this;\r\n    }\r\n\r\n    getRolloffFactor() {\r\n      return this.panner.rolloffFactor;\r\n    }\r\n\r\n    setRolloffFactor(value) {\r\n      this.panner.rolloffFactor = value;\r\n      return this;\r\n    }\r\n\r\n    getDistanceModel() {\r\n      return this.panner.distanceModel;\r\n    }\r\n\r\n    setDistanceModel(value) {\r\n      this.panner.distanceModel = value;\r\n      return this;\r\n    }\r\n\r\n    getMaxDistance() {\r\n      return this.panner.maxDistance;\r\n    }\r\n\r\n    setMaxDistance(value) {\r\n      this.panner.maxDistance = value;\r\n      return this;\r\n    }\r\n\r\n    setDirectionalCone(coneInnerAngle, coneOuterAngle, coneOuterGain) {\r\n      this.panner.coneInnerAngle = coneInnerAngle;\r\n      this.panner.coneOuterAngle = coneOuterAngle;\r\n      this.panner.coneOuterGain = coneOuterGain;\r\n      return this;\r\n    }\r\n\r\n    updateMatrixWorld(force) {\r\n      super.updateMatrixWorld(force);\r\n      if (this.hasPlaybackControl === true && this.isPlaying === false) return;\r\n      this.matrixWorld.decompose(_position, _quaternion, _scale);\r\n\r\n      _orientation.set(0, 0, 1).applyQuaternion(_quaternion);\r\n\r\n      const panner = this.panner;\r\n\r\n      if (panner.positionX) {\r\n        // code path for Chrome and Firefox (see #14393)\r\n        const endTime = this.context.currentTime + this.listener.timeDelta;\r\n        panner.positionX.linearRampToValueAtTime(_position.x, endTime);\r\n        panner.positionY.linearRampToValueAtTime(_position.y, endTime);\r\n        panner.positionZ.linearRampToValueAtTime(_position.z, endTime);\r\n        panner.orientationX.linearRampToValueAtTime(_orientation.x, endTime);\r\n        panner.orientationY.linearRampToValueAtTime(_orientation.y, endTime);\r\n        panner.orientationZ.linearRampToValueAtTime(_orientation.z, endTime);\r\n      } else {\r\n        panner.setPosition(_position.x, _position.y, _position.z);\r\n        panner.setOrientation(_orientation.x, _orientation.y, _orientation.z);\r\n      }\r\n    }\r\n  }\r\n\r\n  class AudioAnalyser {\r\n    constructor(audio, fftSize = 2048) {\r\n      this.analyser = audio.context.createAnalyser();\r\n      this.analyser.fftSize = fftSize;\r\n      this.data = new Uint8Array(this.analyser.frequencyBinCount);\r\n      audio.getOutput().connect(this.analyser);\r\n    }\r\n\r\n    getFrequencyData() {\r\n      this.analyser.getByteFrequencyData(this.data);\r\n      return this.data;\r\n    }\r\n\r\n    getAverageFrequency() {\r\n      let value = 0;\r\n      const data = this.getFrequencyData();\r\n\r\n      for (let i = 0; i < data.length; i++) {\r\n        value += data[i];\r\n      }\r\n\r\n      return value / data.length;\r\n    }\r\n  }\r\n\r\n  class PropertyMixer {\r\n    constructor(binding, typeName, valueSize) {\r\n      this.binding = binding;\r\n      this.valueSize = valueSize;\r\n      let mixFunction, mixFunctionAdditive, setIdentity; // buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\r\n      //\r\n      // interpolators can use .buffer as their .result\r\n      // the data then goes to 'incoming'\r\n      //\r\n      // 'accu0' and 'accu1' are used frame-interleaved for\r\n      // the cumulative result and are compared to detect\r\n      // changes\r\n      //\r\n      // 'orig' stores the original state of the property\r\n      //\r\n      // 'add' is used for additive cumulative results\r\n      //\r\n      // 'work' is optional and is only present for quaternion types. It is used\r\n      // to store intermediate quaternion multiplication results\r\n\r\n      switch (typeName) {\r\n        case 'quaternion':\r\n          mixFunction = this._slerp;\r\n          mixFunctionAdditive = this._slerpAdditive;\r\n          setIdentity = this._setAdditiveIdentityQuaternion;\r\n          this.buffer = new Float64Array(valueSize * 6);\r\n          this._workIndex = 5;\r\n          break;\r\n\r\n        case 'string':\r\n        case 'bool':\r\n          mixFunction = this._select; // Use the regular mix function and for additive on these types,\r\n          // additive is not relevant for non-numeric types\r\n\r\n          mixFunctionAdditive = this._select;\r\n          setIdentity = this._setAdditiveIdentityOther;\r\n          this.buffer = new Array(valueSize * 5);\r\n          break;\r\n\r\n        default:\r\n          mixFunction = this._lerp;\r\n          mixFunctionAdditive = this._lerpAdditive;\r\n          setIdentity = this._setAdditiveIdentityNumeric;\r\n          this.buffer = new Float64Array(valueSize * 5);\r\n      }\r\n\r\n      this._mixBufferRegion = mixFunction;\r\n      this._mixBufferRegionAdditive = mixFunctionAdditive;\r\n      this._setIdentity = setIdentity;\r\n      this._origIndex = 3;\r\n      this._addIndex = 4;\r\n      this.cumulativeWeight = 0;\r\n      this.cumulativeWeightAdditive = 0;\r\n      this.useCount = 0;\r\n      this.referenceCount = 0;\r\n    } // accumulate data in the 'incoming' region into 'accu<i>'\r\n\r\n    accumulate(accuIndex, weight) {\r\n      // note: happily accumulating nothing when weight = 0, the caller knows\r\n      // the weight and shouldn't have made the call in the first place\r\n      const buffer = this.buffer,\r\n        stride = this.valueSize,\r\n        offset = accuIndex * stride + stride;\r\n      let currentWeight = this.cumulativeWeight;\r\n\r\n      if (currentWeight === 0) {\r\n        // accuN := incoming * weight\r\n        for (let i = 0; i !== stride; ++i) {\r\n          buffer[offset + i] = buffer[i];\r\n        }\r\n\r\n        currentWeight = weight;\r\n      } else {\r\n        // accuN := accuN + incoming * weight\r\n        currentWeight += weight;\r\n        const mix = weight / currentWeight;\r\n\r\n        this._mixBufferRegion(buffer, offset, 0, mix, stride);\r\n      }\r\n\r\n      this.cumulativeWeight = currentWeight;\r\n    } // accumulate data in the 'incoming' region into 'add'\r\n\r\n    accumulateAdditive(weight) {\r\n      const buffer = this.buffer,\r\n        stride = this.valueSize,\r\n        offset = stride * this._addIndex;\r\n\r\n      if (this.cumulativeWeightAdditive === 0) {\r\n        // add = identity\r\n        this._setIdentity();\r\n      } // add := add + incoming * weight\r\n\r\n      this._mixBufferRegionAdditive(buffer, offset, 0, weight, stride);\r\n\r\n      this.cumulativeWeightAdditive += weight;\r\n    } // apply the state of 'accu<i>' to the binding when accus differ\r\n\r\n    apply(accuIndex) {\r\n      const stride = this.valueSize,\r\n        buffer = this.buffer,\r\n        offset = accuIndex * stride + stride,\r\n        weight = this.cumulativeWeight,\r\n        weightAdditive = this.cumulativeWeightAdditive,\r\n        binding = this.binding;\r\n      this.cumulativeWeight = 0;\r\n      this.cumulativeWeightAdditive = 0;\r\n\r\n      if (weight < 1) {\r\n        // accuN := accuN + original * ( 1 - cumulativeWeight )\r\n        const originalValueOffset = stride * this._origIndex;\r\n\r\n        this._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\r\n      }\r\n\r\n      if (weightAdditive > 0) {\r\n        // accuN := accuN + additive accuN\r\n        this._mixBufferRegionAdditive(buffer, offset, this._addIndex * stride, 1, stride);\r\n      }\r\n\r\n      for (let i = stride, e = stride + stride; i !== e; ++i) {\r\n        if (buffer[i] !== buffer[i + stride]) {\r\n          // value has changed -> update scene graph\r\n          binding.setValue(buffer, offset);\r\n          break;\r\n        }\r\n      }\r\n    } // remember the state of the bound property and copy it to both accus\r\n\r\n    saveOriginalState() {\r\n      const binding = this.binding;\r\n      const buffer = this.buffer,\r\n        stride = this.valueSize,\r\n        originalValueOffset = stride * this._origIndex;\r\n      binding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\r\n\r\n      for (let i = stride, e = originalValueOffset; i !== e; ++i) {\r\n        buffer[i] = buffer[originalValueOffset + (i % stride)];\r\n      } // Add to identity for additive\r\n\r\n      this._setIdentity();\r\n\r\n      this.cumulativeWeight = 0;\r\n      this.cumulativeWeightAdditive = 0;\r\n    } // apply the state previously taken via 'saveOriginalState' to the binding\r\n\r\n    restoreOriginalState() {\r\n      const originalValueOffset = this.valueSize * 3;\r\n      this.binding.setValue(this.buffer, originalValueOffset);\r\n    }\r\n\r\n    _setAdditiveIdentityNumeric() {\r\n      const startIndex = this._addIndex * this.valueSize;\r\n      const endIndex = startIndex + this.valueSize;\r\n\r\n      for (let i = startIndex; i < endIndex; i++) {\r\n        this.buffer[i] = 0;\r\n      }\r\n    }\r\n\r\n    _setAdditiveIdentityQuaternion() {\r\n      this._setAdditiveIdentityNumeric();\r\n\r\n      this.buffer[this._addIndex * this.valueSize + 3] = 1;\r\n    }\r\n\r\n    _setAdditiveIdentityOther() {\r\n      const startIndex = this._origIndex * this.valueSize;\r\n      const targetIndex = this._addIndex * this.valueSize;\r\n\r\n      for (let i = 0; i < this.valueSize; i++) {\r\n        this.buffer[targetIndex + i] = this.buffer[startIndex + i];\r\n      }\r\n    } // mix functions\r\n\r\n    _select(buffer, dstOffset, srcOffset, t, stride) {\r\n      if (t >= 0.5) {\r\n        for (let i = 0; i !== stride; ++i) {\r\n          buffer[dstOffset + i] = buffer[srcOffset + i];\r\n        }\r\n      }\r\n    }\r\n\r\n    _slerp(buffer, dstOffset, srcOffset, t) {\r\n      Quaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\r\n    }\r\n\r\n    _slerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\r\n      const workOffset = this._workIndex * stride; // Store result in intermediate buffer offset\r\n\r\n      Quaternion.multiplyQuaternionsFlat(buffer, workOffset, buffer, dstOffset, buffer, srcOffset); // Slerp to the intermediate result\r\n\r\n      Quaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t);\r\n    }\r\n\r\n    _lerp(buffer, dstOffset, srcOffset, t, stride) {\r\n      const s = 1 - t;\r\n\r\n      for (let i = 0; i !== stride; ++i) {\r\n        const j = dstOffset + i;\r\n        buffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\r\n      }\r\n    }\r\n\r\n    _lerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\r\n      for (let i = 0; i !== stride; ++i) {\r\n        const j = dstOffset + i;\r\n        buffer[j] = buffer[j] + buffer[srcOffset + i] * t;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Characters [].:/ are reserved for track binding syntax.\r\n  const _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\r\n\r\n  const _reservedRe = new RegExp('[' + _RESERVED_CHARS_RE + ']', 'g'); // Attempts to allow node names from any language. ES5's `\\w` regexp matches\r\n  // only latin characters, and the unicode \\p{L} is not yet supported. So\r\n  // instead, we exclude reserved characters and match everything else.\r\n\r\n  const _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\r\n\r\n  const _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace('\\\\.', '') + ']'; // Parent directories, delimited by '/' or ':'. Currently unused, but must\r\n  // be matched to parse the rest of the track name.\r\n\r\n  const _directoryRe = /((?:WC+[\\/:])*)/.source.replace('WC', _wordChar); // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\r\n\r\n  const _nodeRe = /(WCOD+)?/.source.replace('WCOD', _wordCharOrDot); // Object on target node, and accessor. May not contain reserved\r\n  // characters. Accessor may contain any character except closing bracket.\r\n\r\n  const _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC', _wordChar); // Property and accessor. May not contain reserved characters. Accessor may\r\n  // contain any non-bracket characters.\r\n\r\n  const _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC', _wordChar);\r\n\r\n  const _trackRe = new RegExp('' + '^' + _directoryRe + _nodeRe + _objectRe + _propertyRe + '$');\r\n\r\n  const _supportedObjectNames = ['material', 'materials', 'bones'];\r\n\r\n  class Composite {\r\n    constructor(targetGroup, path, optionalParsedPath) {\r\n      const parsedPath = optionalParsedPath || PropertyBinding.parseTrackName(path);\r\n      this._targetGroup = targetGroup;\r\n      this._bindings = targetGroup.subscribe_(path, parsedPath);\r\n    }\r\n\r\n    getValue(array, offset) {\r\n      this.bind(); // bind all binding\r\n\r\n      const firstValidIndex = this._targetGroup.nCachedObjects_,\r\n        binding = this._bindings[firstValidIndex]; // and only call .getValue on the first\r\n\r\n      if (binding !== undefined) binding.getValue(array, offset);\r\n    }\r\n\r\n    setValue(array, offset) {\r\n      const bindings = this._bindings;\r\n\r\n      for (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\r\n        bindings[i].setValue(array, offset);\r\n      }\r\n    }\r\n\r\n    bind() {\r\n      const bindings = this._bindings;\r\n\r\n      for (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\r\n        bindings[i].bind();\r\n      }\r\n    }\r\n\r\n    unbind() {\r\n      const bindings = this._bindings;\r\n\r\n      for (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\r\n        bindings[i].unbind();\r\n      }\r\n    }\r\n  } // Note: This class uses a State pattern on a per-method basis:\r\n  // 'bind' sets 'this.getValue' / 'setValue' and shadows the\r\n  // prototype version of these methods with one that represents\r\n  // the bound state. When the property is not found, the methods\r\n  // become no-ops.\r\n\r\n  class PropertyBinding {\r\n    constructor(rootNode, path, parsedPath) {\r\n      this.path = path;\r\n      this.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\r\n      this.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\r\n      this.rootNode = rootNode; // initial state of these methods that calls 'bind'\r\n\r\n      this.getValue = this._getValue_unbound;\r\n      this.setValue = this._setValue_unbound;\r\n    }\r\n\r\n    static create(root, path, parsedPath) {\r\n      if (!(root && root.isAnimationObjectGroup)) {\r\n        return new PropertyBinding(root, path, parsedPath);\r\n      } else {\r\n        return new PropertyBinding.Composite(root, path, parsedPath);\r\n      }\r\n    }\r\n    /**\r\n     * Replaces spaces with underscores and removes unsupported characters from\r\n     * node names, to ensure compatibility with parseTrackName().\r\n     *\r\n     * @param {string} name Node name to be sanitized.\r\n     * @return {string}\r\n     */\r\n\r\n    static sanitizeNodeName(name) {\r\n      return name.replace(/\\s/g, '_').replace(_reservedRe, '');\r\n    }\r\n\r\n    static parseTrackName(trackName) {\r\n      const matches = _trackRe.exec(trackName);\r\n\r\n      if (!matches) {\r\n        throw new Error('PropertyBinding: Cannot parse trackName: ' + trackName);\r\n      }\r\n\r\n      const results = {\r\n        // directoryName: matches[ 1 ], // (tschw) currently unused\r\n        nodeName: matches[2],\r\n        objectName: matches[3],\r\n        objectIndex: matches[4],\r\n        propertyName: matches[5],\r\n        // required\r\n        propertyIndex: matches[6],\r\n      };\r\n      const lastDot = results.nodeName && results.nodeName.lastIndexOf('.');\r\n\r\n      if (lastDot !== undefined && lastDot !== -1) {\r\n        const objectName = results.nodeName.substring(lastDot + 1); // Object names must be checked against an allowlist. Otherwise, there\r\n        // is no way to parse 'foo.bar.baz': 'baz' must be a property, but\r\n        // 'bar' could be the objectName, or part of a nodeName (which can\r\n        // include '.' characters).\r\n\r\n        if (_supportedObjectNames.indexOf(objectName) !== -1) {\r\n          results.nodeName = results.nodeName.substring(0, lastDot);\r\n          results.objectName = objectName;\r\n        }\r\n      }\r\n\r\n      if (results.propertyName === null || results.propertyName.length === 0) {\r\n        throw new Error('PropertyBinding: can not parse propertyName from trackName: ' + trackName);\r\n      }\r\n\r\n      return results;\r\n    }\r\n\r\n    static findNode(root, nodeName) {\r\n      if (\r\n        !nodeName ||\r\n        nodeName === '' ||\r\n        nodeName === '.' ||\r\n        nodeName === -1 ||\r\n        nodeName === root.name ||\r\n        nodeName === root.uuid\r\n      ) {\r\n        return root;\r\n      } // search into skeleton bones.\r\n\r\n      if (root.skeleton) {\r\n        const bone = root.skeleton.getBoneByName(nodeName);\r\n\r\n        if (bone !== undefined) {\r\n          return bone;\r\n        }\r\n      } // search into node subtree.\r\n\r\n      if (root.children) {\r\n        const searchNodeSubtree = function (children) {\r\n          for (let i = 0; i < children.length; i++) {\r\n            const childNode = children[i];\r\n\r\n            if (childNode.name === nodeName || childNode.uuid === nodeName) {\r\n              return childNode;\r\n            }\r\n\r\n            const result = searchNodeSubtree(childNode.children);\r\n            if (result) return result;\r\n          }\r\n\r\n          return null;\r\n        };\r\n\r\n        const subTreeNode = searchNodeSubtree(root.children);\r\n\r\n        if (subTreeNode) {\r\n          return subTreeNode;\r\n        }\r\n      }\r\n\r\n      return null;\r\n    } // these are used to \"bind\" a nonexistent property\r\n\r\n    _getValue_unavailable() {}\r\n\r\n    _setValue_unavailable() {} // Getters\r\n\r\n    _getValue_direct(buffer, offset) {\r\n      buffer[offset] = this.node[this.propertyName];\r\n    }\r\n\r\n    _getValue_array(buffer, offset) {\r\n      const source = this.resolvedProperty;\r\n\r\n      for (let i = 0, n = source.length; i !== n; ++i) {\r\n        buffer[offset++] = source[i];\r\n      }\r\n    }\r\n\r\n    _getValue_arrayElement(buffer, offset) {\r\n      buffer[offset] = this.resolvedProperty[this.propertyIndex];\r\n    }\r\n\r\n    _getValue_toArray(buffer, offset) {\r\n      this.resolvedProperty.toArray(buffer, offset);\r\n    } // Direct\r\n\r\n    _setValue_direct(buffer, offset) {\r\n      this.targetObject[this.propertyName] = buffer[offset];\r\n    }\r\n\r\n    _setValue_direct_setNeedsUpdate(buffer, offset) {\r\n      this.targetObject[this.propertyName] = buffer[offset];\r\n      this.targetObject.needsUpdate = true;\r\n    }\r\n\r\n    _setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\r\n      this.targetObject[this.propertyName] = buffer[offset];\r\n      this.targetObject.matrixWorldNeedsUpdate = true;\r\n    } // EntireArray\r\n\r\n    _setValue_array(buffer, offset) {\r\n      const dest = this.resolvedProperty;\r\n\r\n      for (let i = 0, n = dest.length; i !== n; ++i) {\r\n        dest[i] = buffer[offset++];\r\n      }\r\n    }\r\n\r\n    _setValue_array_setNeedsUpdate(buffer, offset) {\r\n      const dest = this.resolvedProperty;\r\n\r\n      for (let i = 0, n = dest.length; i !== n; ++i) {\r\n        dest[i] = buffer[offset++];\r\n      }\r\n\r\n      this.targetObject.needsUpdate = true;\r\n    }\r\n\r\n    _setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\r\n      const dest = this.resolvedProperty;\r\n\r\n      for (let i = 0, n = dest.length; i !== n; ++i) {\r\n        dest[i] = buffer[offset++];\r\n      }\r\n\r\n      this.targetObject.matrixWorldNeedsUpdate = true;\r\n    } // ArrayElement\r\n\r\n    _setValue_arrayElement(buffer, offset) {\r\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\r\n    }\r\n\r\n    _setValue_arrayElement_setNeedsUpdate(buffer, offset) {\r\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\r\n      this.targetObject.needsUpdate = true;\r\n    }\r\n\r\n    _setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\r\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\r\n      this.targetObject.matrixWorldNeedsUpdate = true;\r\n    } // HasToFromArray\r\n\r\n    _setValue_fromArray(buffer, offset) {\r\n      this.resolvedProperty.fromArray(buffer, offset);\r\n    }\r\n\r\n    _setValue_fromArray_setNeedsUpdate(buffer, offset) {\r\n      this.resolvedProperty.fromArray(buffer, offset);\r\n      this.targetObject.needsUpdate = true;\r\n    }\r\n\r\n    _setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\r\n      this.resolvedProperty.fromArray(buffer, offset);\r\n      this.targetObject.matrixWorldNeedsUpdate = true;\r\n    }\r\n\r\n    _getValue_unbound(targetArray, offset) {\r\n      this.bind();\r\n      this.getValue(targetArray, offset);\r\n    }\r\n\r\n    _setValue_unbound(sourceArray, offset) {\r\n      this.bind();\r\n      this.setValue(sourceArray, offset);\r\n    } // create getter / setter pair for a property in the scene graph\r\n\r\n    bind() {\r\n      let targetObject = this.node;\r\n      const parsedPath = this.parsedPath;\r\n      const objectName = parsedPath.objectName;\r\n      const propertyName = parsedPath.propertyName;\r\n      let propertyIndex = parsedPath.propertyIndex;\r\n\r\n      if (!targetObject) {\r\n        targetObject =\r\n          PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\r\n        this.node = targetObject;\r\n      } // set fail state so we can just 'return' on error\r\n\r\n      this.getValue = this._getValue_unavailable;\r\n      this.setValue = this._setValue_unavailable; // ensure there is a value node\r\n\r\n      if (!targetObject) {\r\n        console.error(\r\n          'THREE.PropertyBinding: Trying to update node for track: ' +\r\n            this.path +\r\n            \" but it wasn't found.\",\r\n        );\r\n        return;\r\n      }\r\n\r\n      if (objectName) {\r\n        let objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\r\n\r\n        switch (objectName) {\r\n          case 'materials':\r\n            if (!targetObject.material) {\r\n              console.error(\r\n                'THREE.PropertyBinding: Can not bind to material as node does not have a material.',\r\n                this,\r\n              );\r\n              return;\r\n            }\r\n\r\n            if (!targetObject.material.materials) {\r\n              console.error(\r\n                'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.',\r\n                this,\r\n              );\r\n              return;\r\n            }\r\n\r\n            targetObject = targetObject.material.materials;\r\n            break;\r\n\r\n          case 'bones':\r\n            if (!targetObject.skeleton) {\r\n              console.error(\r\n                'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.',\r\n                this,\r\n              );\r\n              return;\r\n            } // potential future optimization: skip this if propertyIndex is already an integer\r\n            // and convert the integer string to a true integer.\r\n\r\n            targetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\r\n\r\n            for (let i = 0; i < targetObject.length; i++) {\r\n              if (targetObject[i].name === objectIndex) {\r\n                objectIndex = i;\r\n                break;\r\n              }\r\n            }\r\n\r\n            break;\r\n\r\n          default:\r\n            if (targetObject[objectName] === undefined) {\r\n              console.error(\r\n                'THREE.PropertyBinding: Can not bind to objectName of node undefined.',\r\n                this,\r\n              );\r\n              return;\r\n            }\r\n\r\n            targetObject = targetObject[objectName];\r\n        }\r\n\r\n        if (objectIndex !== undefined) {\r\n          if (targetObject[objectIndex] === undefined) {\r\n            console.error(\r\n              'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.',\r\n              this,\r\n              targetObject,\r\n            );\r\n            return;\r\n          }\r\n\r\n          targetObject = targetObject[objectIndex];\r\n        }\r\n      } // resolve property\r\n\r\n      const nodeProperty = targetObject[propertyName];\r\n\r\n      if (nodeProperty === undefined) {\r\n        const nodeName = parsedPath.nodeName;\r\n        console.error(\r\n          'THREE.PropertyBinding: Trying to update property for track: ' +\r\n            nodeName +\r\n            '.' +\r\n            propertyName +\r\n            \" but it wasn't found.\",\r\n          targetObject,\r\n        );\r\n        return;\r\n      } // determine versioning scheme\r\n\r\n      let versioning = this.Versioning.None;\r\n      this.targetObject = targetObject;\r\n\r\n      if (targetObject.needsUpdate !== undefined) {\r\n        // material\r\n        versioning = this.Versioning.NeedsUpdate;\r\n      } else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\r\n        // node transform\r\n        versioning = this.Versioning.MatrixWorldNeedsUpdate;\r\n      } // determine how the property gets bound\r\n\r\n      let bindingType = this.BindingType.Direct;\r\n\r\n      if (propertyIndex !== undefined) {\r\n        // access a sub element of the property array (only primitives are supported right now)\r\n        if (propertyName === 'morphTargetInfluences') {\r\n          // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\r\n          // support resolving morphTarget names into indices.\r\n          if (!targetObject.geometry) {\r\n            console.error(\r\n              'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.',\r\n              this,\r\n            );\r\n            return;\r\n          }\r\n\r\n          if (targetObject.geometry.isBufferGeometry) {\r\n            if (!targetObject.geometry.morphAttributes) {\r\n              console.error(\r\n                'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.',\r\n                this,\r\n              );\r\n              return;\r\n            }\r\n\r\n            if (targetObject.morphTargetDictionary[propertyIndex] !== undefined) {\r\n              propertyIndex = targetObject.morphTargetDictionary[propertyIndex];\r\n            }\r\n          } else {\r\n            console.error(\r\n              'THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.',\r\n              this,\r\n            );\r\n            return;\r\n          }\r\n        }\r\n\r\n        bindingType = this.BindingType.ArrayElement;\r\n        this.resolvedProperty = nodeProperty;\r\n        this.propertyIndex = propertyIndex;\r\n      } else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\r\n        // must use copy for Object3D.Euler/Quaternion\r\n        bindingType = this.BindingType.HasFromToArray;\r\n        this.resolvedProperty = nodeProperty;\r\n      } else if (Array.isArray(nodeProperty)) {\r\n        bindingType = this.BindingType.EntireArray;\r\n        this.resolvedProperty = nodeProperty;\r\n      } else {\r\n        this.propertyName = propertyName;\r\n      } // select getter / setter\r\n\r\n      this.getValue = this.GetterByBindingType[bindingType];\r\n      this.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\r\n    }\r\n\r\n    unbind() {\r\n      this.node = null; // back to the prototype version of getValue / setValue\r\n      // note: avoiding to mutate the shape of 'this' via 'delete'\r\n\r\n      this.getValue = this._getValue_unbound;\r\n      this.setValue = this._setValue_unbound;\r\n    }\r\n  }\r\n\r\n  PropertyBinding.Composite = Composite;\r\n  PropertyBinding.prototype.BindingType = {\r\n    Direct: 0,\r\n    EntireArray: 1,\r\n    ArrayElement: 2,\r\n    HasFromToArray: 3,\r\n  };\r\n  PropertyBinding.prototype.Versioning = {\r\n    None: 0,\r\n    NeedsUpdate: 1,\r\n    MatrixWorldNeedsUpdate: 2,\r\n  };\r\n  PropertyBinding.prototype.GetterByBindingType = [\r\n    PropertyBinding.prototype._getValue_direct,\r\n    PropertyBinding.prototype._getValue_array,\r\n    PropertyBinding.prototype._getValue_arrayElement,\r\n    PropertyBinding.prototype._getValue_toArray,\r\n  ];\r\n  PropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\r\n    [\r\n      // Direct\r\n      PropertyBinding.prototype._setValue_direct,\r\n      PropertyBinding.prototype._setValue_direct_setNeedsUpdate,\r\n      PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\r\n    ],\r\n    [\r\n      // EntireArray\r\n      PropertyBinding.prototype._setValue_array,\r\n      PropertyBinding.prototype._setValue_array_setNeedsUpdate,\r\n      PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\r\n    ],\r\n    [\r\n      // ArrayElement\r\n      PropertyBinding.prototype._setValue_arrayElement,\r\n      PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\r\n      PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\r\n    ],\r\n    [\r\n      // HasToFromArray\r\n      PropertyBinding.prototype._setValue_fromArray,\r\n      PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\r\n      PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\r\n    ],\r\n  ];\r\n\r\n  /**\r\n   *\r\n   * A group of objects that receives a shared animation state.\r\n   *\r\n   * Usage:\r\n   *\r\n   *\t- Add objects you would otherwise pass as 'root' to the\r\n   *\t\tconstructor or the .clipAction method of AnimationMixer.\r\n   *\r\n   *\t- Instead pass this object as 'root'.\r\n   *\r\n   *\t- You can also add and remove objects later when the mixer\r\n   *\t\tis running.\r\n   *\r\n   * Note:\r\n   *\r\n   *\t\tObjects of this class appear as one object to the mixer,\r\n   *\t\tso cache control of the individual objects must be done\r\n   *\t\ton the group.\r\n   *\r\n   * Limitation:\r\n   *\r\n   *\t- The animated properties must be compatible among the\r\n   *\t\tall objects in the group.\r\n   *\r\n   *\t- A single property can either be controlled through a\r\n   *\t\ttarget group or directly, but not both.\r\n   */\r\n\r\n  class AnimationObjectGroup {\r\n    constructor() {\r\n      this.uuid = generateUUID(); // cached objects followed by the active ones\r\n\r\n      this._objects = Array.prototype.slice.call(arguments);\r\n      this.nCachedObjects_ = 0; // threshold\r\n      // note: read by PropertyBinding.Composite\r\n\r\n      const indices = {};\r\n      this._indicesByUUID = indices; // for bookkeeping\r\n\r\n      for (let i = 0, n = arguments.length; i !== n; ++i) {\r\n        indices[arguments[i].uuid] = i;\r\n      }\r\n\r\n      this._paths = []; // inside: string\r\n\r\n      this._parsedPaths = []; // inside: { we don't care, here }\r\n\r\n      this._bindings = []; // inside: Array< PropertyBinding >\r\n\r\n      this._bindingsIndicesByPath = {}; // inside: indices in these arrays\r\n\r\n      const scope = this;\r\n      this.stats = {\r\n        objects: {\r\n          get total() {\r\n            return scope._objects.length;\r\n          },\r\n\r\n          get inUse() {\r\n            return this.total - scope.nCachedObjects_;\r\n          },\r\n        },\r\n\r\n        get bindingsPerObject() {\r\n          return scope._bindings.length;\r\n        },\r\n      };\r\n    }\r\n\r\n    add() {\r\n      const objects = this._objects,\r\n        indicesByUUID = this._indicesByUUID,\r\n        paths = this._paths,\r\n        parsedPaths = this._parsedPaths,\r\n        bindings = this._bindings,\r\n        nBindings = bindings.length;\r\n      let knownObject = undefined,\r\n        nObjects = objects.length,\r\n        nCachedObjects = this.nCachedObjects_;\r\n\r\n      for (let i = 0, n = arguments.length; i !== n; ++i) {\r\n        const object = arguments[i],\r\n          uuid = object.uuid;\r\n        let index = indicesByUUID[uuid];\r\n\r\n        if (index === undefined) {\r\n          // unknown object -> add it to the ACTIVE region\r\n          index = nObjects++;\r\n          indicesByUUID[uuid] = index;\r\n          objects.push(object); // accounting is done, now do the same for all bindings\r\n\r\n          for (let j = 0, m = nBindings; j !== m; ++j) {\r\n            bindings[j].push(new PropertyBinding(object, paths[j], parsedPaths[j]));\r\n          }\r\n        } else if (index < nCachedObjects) {\r\n          knownObject = objects[index]; // move existing object to the ACTIVE region\r\n\r\n          const firstActiveIndex = --nCachedObjects,\r\n            lastCachedObject = objects[firstActiveIndex];\r\n          indicesByUUID[lastCachedObject.uuid] = index;\r\n          objects[index] = lastCachedObject;\r\n          indicesByUUID[uuid] = firstActiveIndex;\r\n          objects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\r\n\r\n          for (let j = 0, m = nBindings; j !== m; ++j) {\r\n            const bindingsForPath = bindings[j],\r\n              lastCached = bindingsForPath[firstActiveIndex];\r\n            let binding = bindingsForPath[index];\r\n            bindingsForPath[index] = lastCached;\r\n\r\n            if (binding === undefined) {\r\n              // since we do not bother to create new bindings\r\n              // for objects that are cached, the binding may\r\n              // or may not exist\r\n              binding = new PropertyBinding(object, paths[j], parsedPaths[j]);\r\n            }\r\n\r\n            bindingsForPath[firstActiveIndex] = binding;\r\n          }\r\n        } else if (objects[index] !== knownObject) {\r\n          console.error(\r\n            'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\r\n              'detected. Clean the caches or recreate your infrastructure when reloading scenes.',\r\n          );\r\n        } // else the object is already where we want it to be\r\n      } // for arguments\r\n\r\n      this.nCachedObjects_ = nCachedObjects;\r\n    }\r\n\r\n    remove() {\r\n      const objects = this._objects,\r\n        indicesByUUID = this._indicesByUUID,\r\n        bindings = this._bindings,\r\n        nBindings = bindings.length;\r\n      let nCachedObjects = this.nCachedObjects_;\r\n\r\n      for (let i = 0, n = arguments.length; i !== n; ++i) {\r\n        const object = arguments[i],\r\n          uuid = object.uuid,\r\n          index = indicesByUUID[uuid];\r\n\r\n        if (index !== undefined && index >= nCachedObjects) {\r\n          // move existing object into the CACHED region\r\n          const lastCachedIndex = nCachedObjects++,\r\n            firstActiveObject = objects[lastCachedIndex];\r\n          indicesByUUID[firstActiveObject.uuid] = index;\r\n          objects[index] = firstActiveObject;\r\n          indicesByUUID[uuid] = lastCachedIndex;\r\n          objects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\r\n\r\n          for (let j = 0, m = nBindings; j !== m; ++j) {\r\n            const bindingsForPath = bindings[j],\r\n              firstActive = bindingsForPath[lastCachedIndex],\r\n              binding = bindingsForPath[index];\r\n            bindingsForPath[index] = firstActive;\r\n            bindingsForPath[lastCachedIndex] = binding;\r\n          }\r\n        }\r\n      } // for arguments\r\n\r\n      this.nCachedObjects_ = nCachedObjects;\r\n    } // remove & forget\r\n\r\n    uncache() {\r\n      const objects = this._objects,\r\n        indicesByUUID = this._indicesByUUID,\r\n        bindings = this._bindings,\r\n        nBindings = bindings.length;\r\n      let nCachedObjects = this.nCachedObjects_,\r\n        nObjects = objects.length;\r\n\r\n      for (let i = 0, n = arguments.length; i !== n; ++i) {\r\n        const object = arguments[i],\r\n          uuid = object.uuid,\r\n          index = indicesByUUID[uuid];\r\n\r\n        if (index !== undefined) {\r\n          delete indicesByUUID[uuid];\r\n\r\n          if (index < nCachedObjects) {\r\n            // object is cached, shrink the CACHED region\r\n            const firstActiveIndex = --nCachedObjects,\r\n              lastCachedObject = objects[firstActiveIndex],\r\n              lastIndex = --nObjects,\r\n              lastObject = objects[lastIndex]; // last cached object takes this object's place\r\n\r\n            indicesByUUID[lastCachedObject.uuid] = index;\r\n            objects[index] = lastCachedObject; // last object goes to the activated slot and pop\r\n\r\n            indicesByUUID[lastObject.uuid] = firstActiveIndex;\r\n            objects[firstActiveIndex] = lastObject;\r\n            objects.pop(); // accounting is done, now do the same for all bindings\r\n\r\n            for (let j = 0, m = nBindings; j !== m; ++j) {\r\n              const bindingsForPath = bindings[j],\r\n                lastCached = bindingsForPath[firstActiveIndex],\r\n                last = bindingsForPath[lastIndex];\r\n              bindingsForPath[index] = lastCached;\r\n              bindingsForPath[firstActiveIndex] = last;\r\n              bindingsForPath.pop();\r\n            }\r\n          } else {\r\n            // object is active, just swap with the last and pop\r\n            const lastIndex = --nObjects,\r\n              lastObject = objects[lastIndex];\r\n\r\n            if (lastIndex > 0) {\r\n              indicesByUUID[lastObject.uuid] = index;\r\n            }\r\n\r\n            objects[index] = lastObject;\r\n            objects.pop(); // accounting is done, now do the same for all bindings\r\n\r\n            for (let j = 0, m = nBindings; j !== m; ++j) {\r\n              const bindingsForPath = bindings[j];\r\n              bindingsForPath[index] = bindingsForPath[lastIndex];\r\n              bindingsForPath.pop();\r\n            }\r\n          } // cached or active\r\n        } // if object is known\r\n      } // for arguments\r\n\r\n      this.nCachedObjects_ = nCachedObjects;\r\n    } // Internal interface used by befriended PropertyBinding.Composite:\r\n\r\n    subscribe_(path, parsedPath) {\r\n      // returns an array of bindings for the given path that is changed\r\n      // according to the contained objects in the group\r\n      const indicesByPath = this._bindingsIndicesByPath;\r\n      let index = indicesByPath[path];\r\n      const bindings = this._bindings;\r\n      if (index !== undefined) return bindings[index];\r\n      const paths = this._paths,\r\n        parsedPaths = this._parsedPaths,\r\n        objects = this._objects,\r\n        nObjects = objects.length,\r\n        nCachedObjects = this.nCachedObjects_,\r\n        bindingsForPath = new Array(nObjects);\r\n      index = bindings.length;\r\n      indicesByPath[path] = index;\r\n      paths.push(path);\r\n      parsedPaths.push(parsedPath);\r\n      bindings.push(bindingsForPath);\r\n\r\n      for (let i = nCachedObjects, n = objects.length; i !== n; ++i) {\r\n        const object = objects[i];\r\n        bindingsForPath[i] = new PropertyBinding(object, path, parsedPath);\r\n      }\r\n\r\n      return bindingsForPath;\r\n    }\r\n\r\n    unsubscribe_(path) {\r\n      // tells the group to forget about a property path and no longer\r\n      // update the array previously obtained with 'subscribe_'\r\n      const indicesByPath = this._bindingsIndicesByPath,\r\n        index = indicesByPath[path];\r\n\r\n      if (index !== undefined) {\r\n        const paths = this._paths,\r\n          parsedPaths = this._parsedPaths,\r\n          bindings = this._bindings,\r\n          lastBindingsIndex = bindings.length - 1,\r\n          lastBindings = bindings[lastBindingsIndex],\r\n          lastBindingsPath = path[lastBindingsIndex];\r\n        indicesByPath[lastBindingsPath] = index;\r\n        bindings[index] = lastBindings;\r\n        bindings.pop();\r\n        parsedPaths[index] = parsedPaths[lastBindingsIndex];\r\n        parsedPaths.pop();\r\n        paths[index] = paths[lastBindingsIndex];\r\n        paths.pop();\r\n      }\r\n    }\r\n  }\r\n\r\n  AnimationObjectGroup.prototype.isAnimationObjectGroup = true;\r\n\r\n  class AnimationAction {\r\n    constructor(mixer, clip, localRoot = null, blendMode = clip.blendMode) {\r\n      this._mixer = mixer;\r\n      this._clip = clip;\r\n      this._localRoot = localRoot;\r\n      this.blendMode = blendMode;\r\n      const tracks = clip.tracks,\r\n        nTracks = tracks.length,\r\n        interpolants = new Array(nTracks);\r\n      const interpolantSettings = {\r\n        endingStart: ZeroCurvatureEnding,\r\n        endingEnd: ZeroCurvatureEnding,\r\n      };\r\n\r\n      for (let i = 0; i !== nTracks; ++i) {\r\n        const interpolant = tracks[i].createInterpolant(null);\r\n        interpolants[i] = interpolant;\r\n        interpolant.settings = interpolantSettings;\r\n      }\r\n\r\n      this._interpolantSettings = interpolantSettings;\r\n      this._interpolants = interpolants; // bound by the mixer\r\n      // inside: PropertyMixer (managed by the mixer)\r\n\r\n      this._propertyBindings = new Array(nTracks);\r\n      this._cacheIndex = null; // for the memory manager\r\n\r\n      this._byClipCacheIndex = null; // for the memory manager\r\n\r\n      this._timeScaleInterpolant = null;\r\n      this._weightInterpolant = null;\r\n      this.loop = LoopRepeat;\r\n      this._loopCount = -1; // global mixer time when the action is to be started\r\n      // it's set back to 'null' upon start of the action\r\n\r\n      this._startTime = null; // scaled local time of the action\r\n      // gets clamped or wrapped to 0..clip.duration according to loop\r\n\r\n      this.time = 0;\r\n      this.timeScale = 1;\r\n      this._effectiveTimeScale = 1;\r\n      this.weight = 1;\r\n      this._effectiveWeight = 1;\r\n      this.repetitions = Infinity; // no. of repetitions when looping\r\n\r\n      this.paused = false; // true -> zero effective time scale\r\n\r\n      this.enabled = true; // false -> zero effective weight\r\n\r\n      this.clampWhenFinished = false; // keep feeding the last frame?\r\n\r\n      this.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\r\n\r\n      this.zeroSlopeAtEnd = true; // clips for start, loop and end\r\n    } // State & Scheduling\r\n\r\n    play() {\r\n      this._mixer._activateAction(this);\r\n\r\n      return this;\r\n    }\r\n\r\n    stop() {\r\n      this._mixer._deactivateAction(this);\r\n\r\n      return this.reset();\r\n    }\r\n\r\n    reset() {\r\n      this.paused = false;\r\n      this.enabled = true;\r\n      this.time = 0; // restart clip\r\n\r\n      this._loopCount = -1; // forget previous loops\r\n\r\n      this._startTime = null; // forget scheduling\r\n\r\n      return this.stopFading().stopWarping();\r\n    }\r\n\r\n    isRunning() {\r\n      return (\r\n        this.enabled &&\r\n        !this.paused &&\r\n        this.timeScale !== 0 &&\r\n        this._startTime === null &&\r\n        this._mixer._isActiveAction(this)\r\n      );\r\n    } // return true when play has been called\r\n\r\n    isScheduled() {\r\n      return this._mixer._isActiveAction(this);\r\n    }\r\n\r\n    startAt(time) {\r\n      this._startTime = time;\r\n      return this;\r\n    }\r\n\r\n    setLoop(mode, repetitions) {\r\n      this.loop = mode;\r\n      this.repetitions = repetitions;\r\n      return this;\r\n    } // Weight\r\n    // set the weight stopping any scheduled fading\r\n    // although .enabled = false yields an effective weight of zero, this\r\n    // method does *not* change .enabled, because it would be confusing\r\n\r\n    setEffectiveWeight(weight) {\r\n      this.weight = weight; // note: same logic as when updated at runtime\r\n\r\n      this._effectiveWeight = this.enabled ? weight : 0;\r\n      return this.stopFading();\r\n    } // return the weight considering fading and .enabled\r\n\r\n    getEffectiveWeight() {\r\n      return this._effectiveWeight;\r\n    }\r\n\r\n    fadeIn(duration) {\r\n      return this._scheduleFading(duration, 0, 1);\r\n    }\r\n\r\n    fadeOut(duration) {\r\n      return this._scheduleFading(duration, 1, 0);\r\n    }\r\n\r\n    crossFadeFrom(fadeOutAction, duration, warp) {\r\n      fadeOutAction.fadeOut(duration);\r\n      this.fadeIn(duration);\r\n\r\n      if (warp) {\r\n        const fadeInDuration = this._clip.duration,\r\n          fadeOutDuration = fadeOutAction._clip.duration,\r\n          startEndRatio = fadeOutDuration / fadeInDuration,\r\n          endStartRatio = fadeInDuration / fadeOutDuration;\r\n        fadeOutAction.warp(1.0, startEndRatio, duration);\r\n        this.warp(endStartRatio, 1.0, duration);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    crossFadeTo(fadeInAction, duration, warp) {\r\n      return fadeInAction.crossFadeFrom(this, duration, warp);\r\n    }\r\n\r\n    stopFading() {\r\n      const weightInterpolant = this._weightInterpolant;\r\n\r\n      if (weightInterpolant !== null) {\r\n        this._weightInterpolant = null;\r\n\r\n        this._mixer._takeBackControlInterpolant(weightInterpolant);\r\n      }\r\n\r\n      return this;\r\n    } // Time Scale Control\r\n    // set the time scale stopping any scheduled warping\r\n    // although .paused = true yields an effective time scale of zero, this\r\n    // method does *not* change .paused, because it would be confusing\r\n\r\n    setEffectiveTimeScale(timeScale) {\r\n      this.timeScale = timeScale;\r\n      this._effectiveTimeScale = this.paused ? 0 : timeScale;\r\n      return this.stopWarping();\r\n    } // return the time scale considering warping and .paused\r\n\r\n    getEffectiveTimeScale() {\r\n      return this._effectiveTimeScale;\r\n    }\r\n\r\n    setDuration(duration) {\r\n      this.timeScale = this._clip.duration / duration;\r\n      return this.stopWarping();\r\n    }\r\n\r\n    syncWith(action) {\r\n      this.time = action.time;\r\n      this.timeScale = action.timeScale;\r\n      return this.stopWarping();\r\n    }\r\n\r\n    halt(duration) {\r\n      return this.warp(this._effectiveTimeScale, 0, duration);\r\n    }\r\n\r\n    warp(startTimeScale, endTimeScale, duration) {\r\n      const mixer = this._mixer,\r\n        now = mixer.time,\r\n        timeScale = this.timeScale;\r\n      let interpolant = this._timeScaleInterpolant;\r\n\r\n      if (interpolant === null) {\r\n        interpolant = mixer._lendControlInterpolant();\r\n        this._timeScaleInterpolant = interpolant;\r\n      }\r\n\r\n      const times = interpolant.parameterPositions,\r\n        values = interpolant.sampleValues;\r\n      times[0] = now;\r\n      times[1] = now + duration;\r\n      values[0] = startTimeScale / timeScale;\r\n      values[1] = endTimeScale / timeScale;\r\n      return this;\r\n    }\r\n\r\n    stopWarping() {\r\n      const timeScaleInterpolant = this._timeScaleInterpolant;\r\n\r\n      if (timeScaleInterpolant !== null) {\r\n        this._timeScaleInterpolant = null;\r\n\r\n        this._mixer._takeBackControlInterpolant(timeScaleInterpolant);\r\n      }\r\n\r\n      return this;\r\n    } // Object Accessors\r\n\r\n    getMixer() {\r\n      return this._mixer;\r\n    }\r\n\r\n    getClip() {\r\n      return this._clip;\r\n    }\r\n\r\n    getRoot() {\r\n      return this._localRoot || this._mixer._root;\r\n    } // Interna\r\n\r\n    _update(time, deltaTime, timeDirection, accuIndex) {\r\n      // called by the mixer\r\n      if (!this.enabled) {\r\n        // call ._updateWeight() to update ._effectiveWeight\r\n        this._updateWeight(time);\r\n\r\n        return;\r\n      }\r\n\r\n      const startTime = this._startTime;\r\n\r\n      if (startTime !== null) {\r\n        // check for scheduled start of action\r\n        const timeRunning = (time - startTime) * timeDirection;\r\n\r\n        if (timeRunning < 0 || timeDirection === 0) {\r\n          return; // yet to come / don't decide when delta = 0\r\n        } // start\r\n\r\n        this._startTime = null; // unschedule\r\n\r\n        deltaTime = timeDirection * timeRunning;\r\n      } // apply time scale and advance time\r\n\r\n      deltaTime *= this._updateTimeScale(time);\r\n\r\n      const clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\r\n      // an effective weight of 0\r\n\r\n      const weight = this._updateWeight(time);\r\n\r\n      if (weight > 0) {\r\n        const interpolants = this._interpolants;\r\n        const propertyMixers = this._propertyBindings;\r\n\r\n        switch (this.blendMode) {\r\n          case AdditiveAnimationBlendMode:\r\n            for (let j = 0, m = interpolants.length; j !== m; ++j) {\r\n              interpolants[j].evaluate(clipTime);\r\n              propertyMixers[j].accumulateAdditive(weight);\r\n            }\r\n\r\n            break;\r\n\r\n          case NormalAnimationBlendMode:\r\n          default:\r\n            for (let j = 0, m = interpolants.length; j !== m; ++j) {\r\n              interpolants[j].evaluate(clipTime);\r\n              propertyMixers[j].accumulate(accuIndex, weight);\r\n            }\r\n        }\r\n      }\r\n    }\r\n\r\n    _updateWeight(time) {\r\n      let weight = 0;\r\n\r\n      if (this.enabled) {\r\n        weight = this.weight;\r\n        const interpolant = this._weightInterpolant;\r\n\r\n        if (interpolant !== null) {\r\n          const interpolantValue = interpolant.evaluate(time)[0];\r\n          weight *= interpolantValue;\r\n\r\n          if (time > interpolant.parameterPositions[1]) {\r\n            this.stopFading();\r\n\r\n            if (interpolantValue === 0) {\r\n              // faded out, disable\r\n              this.enabled = false;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      this._effectiveWeight = weight;\r\n      return weight;\r\n    }\r\n\r\n    _updateTimeScale(time) {\r\n      let timeScale = 0;\r\n\r\n      if (!this.paused) {\r\n        timeScale = this.timeScale;\r\n        const interpolant = this._timeScaleInterpolant;\r\n\r\n        if (interpolant !== null) {\r\n          const interpolantValue = interpolant.evaluate(time)[0];\r\n          timeScale *= interpolantValue;\r\n\r\n          if (time > interpolant.parameterPositions[1]) {\r\n            this.stopWarping();\r\n\r\n            if (timeScale === 0) {\r\n              // motion has halted, pause\r\n              this.paused = true;\r\n            } else {\r\n              // warp done - apply final time scale\r\n              this.timeScale = timeScale;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      this._effectiveTimeScale = timeScale;\r\n      return timeScale;\r\n    }\r\n\r\n    _updateTime(deltaTime) {\r\n      const duration = this._clip.duration;\r\n      const loop = this.loop;\r\n      let time = this.time + deltaTime;\r\n      let loopCount = this._loopCount;\r\n      const pingPong = loop === LoopPingPong;\r\n\r\n      if (deltaTime === 0) {\r\n        if (loopCount === -1) return time;\r\n        return pingPong && (loopCount & 1) === 1 ? duration - time : time;\r\n      }\r\n\r\n      if (loop === LoopOnce) {\r\n        if (loopCount === -1) {\r\n          // just started\r\n          this._loopCount = 0;\r\n\r\n          this._setEndings(true, true, false);\r\n        }\r\n\r\n        handle_stop: {\r\n          if (time >= duration) {\r\n            time = duration;\r\n          } else if (time < 0) {\r\n            time = 0;\r\n          } else {\r\n            this.time = time;\r\n            break handle_stop;\r\n          }\r\n\r\n          if (this.clampWhenFinished) this.paused = true;\r\n          else this.enabled = false;\r\n          this.time = time;\r\n\r\n          this._mixer.dispatchEvent({\r\n            type: 'finished',\r\n            action: this,\r\n            direction: deltaTime < 0 ? -1 : 1,\r\n          });\r\n        }\r\n      } else {\r\n        // repetitive Repeat or PingPong\r\n        if (loopCount === -1) {\r\n          // just started\r\n          if (deltaTime >= 0) {\r\n            loopCount = 0;\r\n\r\n            this._setEndings(true, this.repetitions === 0, pingPong);\r\n          } else {\r\n            // when looping in reverse direction, the initial\r\n            // transition through zero counts as a repetition,\r\n            // so leave loopCount at -1\r\n            this._setEndings(this.repetitions === 0, true, pingPong);\r\n          }\r\n        }\r\n\r\n        if (time >= duration || time < 0) {\r\n          // wrap around\r\n          const loopDelta = Math.floor(time / duration); // signed\r\n\r\n          time -= duration * loopDelta;\r\n          loopCount += Math.abs(loopDelta);\r\n          const pending = this.repetitions - loopCount;\r\n\r\n          if (pending <= 0) {\r\n            // have to stop (switch state, clamp time, fire event)\r\n            if (this.clampWhenFinished) this.paused = true;\r\n            else this.enabled = false;\r\n            time = deltaTime > 0 ? duration : 0;\r\n            this.time = time;\r\n\r\n            this._mixer.dispatchEvent({\r\n              type: 'finished',\r\n              action: this,\r\n              direction: deltaTime > 0 ? 1 : -1,\r\n            });\r\n          } else {\r\n            // keep running\r\n            if (pending === 1) {\r\n              // entering the last round\r\n              const atStart = deltaTime < 0;\r\n\r\n              this._setEndings(atStart, !atStart, pingPong);\r\n            } else {\r\n              this._setEndings(false, false, pingPong);\r\n            }\r\n\r\n            this._loopCount = loopCount;\r\n            this.time = time;\r\n\r\n            this._mixer.dispatchEvent({\r\n              type: 'loop',\r\n              action: this,\r\n              loopDelta: loopDelta,\r\n            });\r\n          }\r\n        } else {\r\n          this.time = time;\r\n        }\r\n\r\n        if (pingPong && (loopCount & 1) === 1) {\r\n          // invert time for the \"pong round\"\r\n          return duration - time;\r\n        }\r\n      }\r\n\r\n      return time;\r\n    }\r\n\r\n    _setEndings(atStart, atEnd, pingPong) {\r\n      const settings = this._interpolantSettings;\r\n\r\n      if (pingPong) {\r\n        settings.endingStart = ZeroSlopeEnding;\r\n        settings.endingEnd = ZeroSlopeEnding;\r\n      } else {\r\n        // assuming for LoopOnce atStart == atEnd == true\r\n        if (atStart) {\r\n          settings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\r\n        } else {\r\n          settings.endingStart = WrapAroundEnding;\r\n        }\r\n\r\n        if (atEnd) {\r\n          settings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\r\n        } else {\r\n          settings.endingEnd = WrapAroundEnding;\r\n        }\r\n      }\r\n    }\r\n\r\n    _scheduleFading(duration, weightNow, weightThen) {\r\n      const mixer = this._mixer,\r\n        now = mixer.time;\r\n      let interpolant = this._weightInterpolant;\r\n\r\n      if (interpolant === null) {\r\n        interpolant = mixer._lendControlInterpolant();\r\n        this._weightInterpolant = interpolant;\r\n      }\r\n\r\n      const times = interpolant.parameterPositions,\r\n        values = interpolant.sampleValues;\r\n      times[0] = now;\r\n      values[0] = weightNow;\r\n      times[1] = now + duration;\r\n      values[1] = weightThen;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  class AnimationMixer extends EventDispatcher {\r\n    constructor(root) {\r\n      super();\r\n      this._root = root;\r\n\r\n      this._initMemoryManager();\r\n\r\n      this._accuIndex = 0;\r\n      this.time = 0;\r\n      this.timeScale = 1.0;\r\n    }\r\n\r\n    _bindAction(action, prototypeAction) {\r\n      const root = action._localRoot || this._root,\r\n        tracks = action._clip.tracks,\r\n        nTracks = tracks.length,\r\n        bindings = action._propertyBindings,\r\n        interpolants = action._interpolants,\r\n        rootUuid = root.uuid,\r\n        bindingsByRoot = this._bindingsByRootAndName;\r\n      let bindingsByName = bindingsByRoot[rootUuid];\r\n\r\n      if (bindingsByName === undefined) {\r\n        bindingsByName = {};\r\n        bindingsByRoot[rootUuid] = bindingsByName;\r\n      }\r\n\r\n      for (let i = 0; i !== nTracks; ++i) {\r\n        const track = tracks[i],\r\n          trackName = track.name;\r\n        let binding = bindingsByName[trackName];\r\n\r\n        if (binding !== undefined) {\r\n          bindings[i] = binding;\r\n        } else {\r\n          binding = bindings[i];\r\n\r\n          if (binding !== undefined) {\r\n            // existing binding, make sure the cache knows\r\n            if (binding._cacheIndex === null) {\r\n              ++binding.referenceCount;\r\n\r\n              this._addInactiveBinding(binding, rootUuid, trackName);\r\n            }\r\n\r\n            continue;\r\n          }\r\n\r\n          const path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\r\n          binding = new PropertyMixer(\r\n            PropertyBinding.create(root, trackName, path),\r\n            track.ValueTypeName,\r\n            track.getValueSize(),\r\n          );\r\n          ++binding.referenceCount;\r\n\r\n          this._addInactiveBinding(binding, rootUuid, trackName);\r\n\r\n          bindings[i] = binding;\r\n        }\r\n\r\n        interpolants[i].resultBuffer = binding.buffer;\r\n      }\r\n    }\r\n\r\n    _activateAction(action) {\r\n      if (!this._isActiveAction(action)) {\r\n        if (action._cacheIndex === null) {\r\n          // this action has been forgotten by the cache, but the user\r\n          // appears to be still using it -> rebind\r\n          const rootUuid = (action._localRoot || this._root).uuid,\r\n            clipUuid = action._clip.uuid,\r\n            actionsForClip = this._actionsByClip[clipUuid];\r\n\r\n          this._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\r\n\r\n          this._addInactiveAction(action, clipUuid, rootUuid);\r\n        }\r\n\r\n        const bindings = action._propertyBindings; // increment reference counts / sort out state\r\n\r\n        for (let i = 0, n = bindings.length; i !== n; ++i) {\r\n          const binding = bindings[i];\r\n\r\n          if (binding.useCount++ === 0) {\r\n            this._lendBinding(binding);\r\n\r\n            binding.saveOriginalState();\r\n          }\r\n        }\r\n\r\n        this._lendAction(action);\r\n      }\r\n    }\r\n\r\n    _deactivateAction(action) {\r\n      if (this._isActiveAction(action)) {\r\n        const bindings = action._propertyBindings; // decrement reference counts / sort out state\r\n\r\n        for (let i = 0, n = bindings.length; i !== n; ++i) {\r\n          const binding = bindings[i];\r\n\r\n          if (--binding.useCount === 0) {\r\n            binding.restoreOriginalState();\r\n\r\n            this._takeBackBinding(binding);\r\n          }\r\n        }\r\n\r\n        this._takeBackAction(action);\r\n      }\r\n    } // Memory manager\r\n\r\n    _initMemoryManager() {\r\n      this._actions = []; // 'nActiveActions' followed by inactive ones\r\n\r\n      this._nActiveActions = 0;\r\n      this._actionsByClip = {}; // inside:\r\n      // {\r\n      // \tknownActions: Array< AnimationAction > - used as prototypes\r\n      // \tactionByRoot: AnimationAction - lookup\r\n      // }\r\n\r\n      this._bindings = []; // 'nActiveBindings' followed by inactive ones\r\n\r\n      this._nActiveBindings = 0;\r\n      this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\r\n\r\n      this._controlInterpolants = []; // same game as above\r\n\r\n      this._nActiveControlInterpolants = 0;\r\n      const scope = this;\r\n      this.stats = {\r\n        actions: {\r\n          get total() {\r\n            return scope._actions.length;\r\n          },\r\n\r\n          get inUse() {\r\n            return scope._nActiveActions;\r\n          },\r\n        },\r\n        bindings: {\r\n          get total() {\r\n            return scope._bindings.length;\r\n          },\r\n\r\n          get inUse() {\r\n            return scope._nActiveBindings;\r\n          },\r\n        },\r\n        controlInterpolants: {\r\n          get total() {\r\n            return scope._controlInterpolants.length;\r\n          },\r\n\r\n          get inUse() {\r\n            return scope._nActiveControlInterpolants;\r\n          },\r\n        },\r\n      };\r\n    } // Memory management for AnimationAction objects\r\n\r\n    _isActiveAction(action) {\r\n      const index = action._cacheIndex;\r\n      return index !== null && index < this._nActiveActions;\r\n    }\r\n\r\n    _addInactiveAction(action, clipUuid, rootUuid) {\r\n      const actions = this._actions,\r\n        actionsByClip = this._actionsByClip;\r\n      let actionsForClip = actionsByClip[clipUuid];\r\n\r\n      if (actionsForClip === undefined) {\r\n        actionsForClip = {\r\n          knownActions: [action],\r\n          actionByRoot: {},\r\n        };\r\n        action._byClipCacheIndex = 0;\r\n        actionsByClip[clipUuid] = actionsForClip;\r\n      } else {\r\n        const knownActions = actionsForClip.knownActions;\r\n        action._byClipCacheIndex = knownActions.length;\r\n        knownActions.push(action);\r\n      }\r\n\r\n      action._cacheIndex = actions.length;\r\n      actions.push(action);\r\n      actionsForClip.actionByRoot[rootUuid] = action;\r\n    }\r\n\r\n    _removeInactiveAction(action) {\r\n      const actions = this._actions,\r\n        lastInactiveAction = actions[actions.length - 1],\r\n        cacheIndex = action._cacheIndex;\r\n      lastInactiveAction._cacheIndex = cacheIndex;\r\n      actions[cacheIndex] = lastInactiveAction;\r\n      actions.pop();\r\n      action._cacheIndex = null;\r\n      const clipUuid = action._clip.uuid,\r\n        actionsByClip = this._actionsByClip,\r\n        actionsForClip = actionsByClip[clipUuid],\r\n        knownActionsForClip = actionsForClip.knownActions,\r\n        lastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\r\n        byClipCacheIndex = action._byClipCacheIndex;\r\n      lastKnownAction._byClipCacheIndex = byClipCacheIndex;\r\n      knownActionsForClip[byClipCacheIndex] = lastKnownAction;\r\n      knownActionsForClip.pop();\r\n      action._byClipCacheIndex = null;\r\n      const actionByRoot = actionsForClip.actionByRoot,\r\n        rootUuid = (action._localRoot || this._root).uuid;\r\n      delete actionByRoot[rootUuid];\r\n\r\n      if (knownActionsForClip.length === 0) {\r\n        delete actionsByClip[clipUuid];\r\n      }\r\n\r\n      this._removeInactiveBindingsForAction(action);\r\n    }\r\n\r\n    _removeInactiveBindingsForAction(action) {\r\n      const bindings = action._propertyBindings;\r\n\r\n      for (let i = 0, n = bindings.length; i !== n; ++i) {\r\n        const binding = bindings[i];\r\n\r\n        if (--binding.referenceCount === 0) {\r\n          this._removeInactiveBinding(binding);\r\n        }\r\n      }\r\n    }\r\n\r\n    _lendAction(action) {\r\n      // [ active actions |\tinactive actions\t]\r\n      // [\tactive actions >| inactive actions ]\r\n      //\t\t\t\t\t\t\t\t s\t\t\t\ta\r\n      //\t\t\t\t\t\t\t\t\t<-swap->\r\n      //\t\t\t\t\t\t\t\t a\t\t\t\ts\r\n      const actions = this._actions,\r\n        prevIndex = action._cacheIndex,\r\n        lastActiveIndex = this._nActiveActions++,\r\n        firstInactiveAction = actions[lastActiveIndex];\r\n      action._cacheIndex = lastActiveIndex;\r\n      actions[lastActiveIndex] = action;\r\n      firstInactiveAction._cacheIndex = prevIndex;\r\n      actions[prevIndex] = firstInactiveAction;\r\n    }\r\n\r\n    _takeBackAction(action) {\r\n      // [\tactive actions\t| inactive actions ]\r\n      // [ active actions |< inactive actions\t]\r\n      //\t\t\t\ta\t\t\t\ts\r\n      //\t\t\t\t <-swap->\r\n      //\t\t\t\ts\t\t\t\ta\r\n      const actions = this._actions,\r\n        prevIndex = action._cacheIndex,\r\n        firstInactiveIndex = --this._nActiveActions,\r\n        lastActiveAction = actions[firstInactiveIndex];\r\n      action._cacheIndex = firstInactiveIndex;\r\n      actions[firstInactiveIndex] = action;\r\n      lastActiveAction._cacheIndex = prevIndex;\r\n      actions[prevIndex] = lastActiveAction;\r\n    } // Memory management for PropertyMixer objects\r\n\r\n    _addInactiveBinding(binding, rootUuid, trackName) {\r\n      const bindingsByRoot = this._bindingsByRootAndName,\r\n        bindings = this._bindings;\r\n      let bindingByName = bindingsByRoot[rootUuid];\r\n\r\n      if (bindingByName === undefined) {\r\n        bindingByName = {};\r\n        bindingsByRoot[rootUuid] = bindingByName;\r\n      }\r\n\r\n      bindingByName[trackName] = binding;\r\n      binding._cacheIndex = bindings.length;\r\n      bindings.push(binding);\r\n    }\r\n\r\n    _removeInactiveBinding(binding) {\r\n      const bindings = this._bindings,\r\n        propBinding = binding.binding,\r\n        rootUuid = propBinding.rootNode.uuid,\r\n        trackName = propBinding.path,\r\n        bindingsByRoot = this._bindingsByRootAndName,\r\n        bindingByName = bindingsByRoot[rootUuid],\r\n        lastInactiveBinding = bindings[bindings.length - 1],\r\n        cacheIndex = binding._cacheIndex;\r\n      lastInactiveBinding._cacheIndex = cacheIndex;\r\n      bindings[cacheIndex] = lastInactiveBinding;\r\n      bindings.pop();\r\n      delete bindingByName[trackName];\r\n\r\n      if (Object.keys(bindingByName).length === 0) {\r\n        delete bindingsByRoot[rootUuid];\r\n      }\r\n    }\r\n\r\n    _lendBinding(binding) {\r\n      const bindings = this._bindings,\r\n        prevIndex = binding._cacheIndex,\r\n        lastActiveIndex = this._nActiveBindings++,\r\n        firstInactiveBinding = bindings[lastActiveIndex];\r\n      binding._cacheIndex = lastActiveIndex;\r\n      bindings[lastActiveIndex] = binding;\r\n      firstInactiveBinding._cacheIndex = prevIndex;\r\n      bindings[prevIndex] = firstInactiveBinding;\r\n    }\r\n\r\n    _takeBackBinding(binding) {\r\n      const bindings = this._bindings,\r\n        prevIndex = binding._cacheIndex,\r\n        firstInactiveIndex = --this._nActiveBindings,\r\n        lastActiveBinding = bindings[firstInactiveIndex];\r\n      binding._cacheIndex = firstInactiveIndex;\r\n      bindings[firstInactiveIndex] = binding;\r\n      lastActiveBinding._cacheIndex = prevIndex;\r\n      bindings[prevIndex] = lastActiveBinding;\r\n    } // Memory management of Interpolants for weight and time scale\r\n\r\n    _lendControlInterpolant() {\r\n      const interpolants = this._controlInterpolants,\r\n        lastActiveIndex = this._nActiveControlInterpolants++;\r\n      let interpolant = interpolants[lastActiveIndex];\r\n\r\n      if (interpolant === undefined) {\r\n        interpolant = new LinearInterpolant(\r\n          new Float32Array(2),\r\n          new Float32Array(2),\r\n          1,\r\n          this._controlInterpolantsResultBuffer,\r\n        );\r\n        interpolant.__cacheIndex = lastActiveIndex;\r\n        interpolants[lastActiveIndex] = interpolant;\r\n      }\r\n\r\n      return interpolant;\r\n    }\r\n\r\n    _takeBackControlInterpolant(interpolant) {\r\n      const interpolants = this._controlInterpolants,\r\n        prevIndex = interpolant.__cacheIndex,\r\n        firstInactiveIndex = --this._nActiveControlInterpolants,\r\n        lastActiveInterpolant = interpolants[firstInactiveIndex];\r\n      interpolant.__cacheIndex = firstInactiveIndex;\r\n      interpolants[firstInactiveIndex] = interpolant;\r\n      lastActiveInterpolant.__cacheIndex = prevIndex;\r\n      interpolants[prevIndex] = lastActiveInterpolant;\r\n    } // return an action for a clip optionally using a custom root target\r\n    // object (this method allocates a lot of dynamic memory in case a\r\n    // previously unknown clip/root combination is specified)\r\n\r\n    clipAction(clip, optionalRoot, blendMode) {\r\n      const root = optionalRoot || this._root,\r\n        rootUuid = root.uuid;\r\n      let clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip;\r\n      const clipUuid = clipObject !== null ? clipObject.uuid : clip;\r\n      const actionsForClip = this._actionsByClip[clipUuid];\r\n      let prototypeAction = null;\r\n\r\n      if (blendMode === undefined) {\r\n        if (clipObject !== null) {\r\n          blendMode = clipObject.blendMode;\r\n        } else {\r\n          blendMode = NormalAnimationBlendMode;\r\n        }\r\n      }\r\n\r\n      if (actionsForClip !== undefined) {\r\n        const existingAction = actionsForClip.actionByRoot[rootUuid];\r\n\r\n        if (existingAction !== undefined && existingAction.blendMode === blendMode) {\r\n          return existingAction;\r\n        } // we know the clip, so we don't have to parse all\r\n        // the bindings again but can just copy\r\n\r\n        prototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\r\n\r\n        if (clipObject === null) clipObject = prototypeAction._clip;\r\n      } // clip must be known when specified via string\r\n\r\n      if (clipObject === null) return null; // allocate all resources required to run it\r\n\r\n      const newAction = new AnimationAction(this, clipObject, optionalRoot, blendMode);\r\n\r\n      this._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\r\n\r\n      this._addInactiveAction(newAction, clipUuid, rootUuid);\r\n\r\n      return newAction;\r\n    } // get an existing action\r\n\r\n    existingAction(clip, optionalRoot) {\r\n      const root = optionalRoot || this._root,\r\n        rootUuid = root.uuid,\r\n        clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\r\n        clipUuid = clipObject ? clipObject.uuid : clip,\r\n        actionsForClip = this._actionsByClip[clipUuid];\r\n\r\n      if (actionsForClip !== undefined) {\r\n        return actionsForClip.actionByRoot[rootUuid] || null;\r\n      }\r\n\r\n      return null;\r\n    } // deactivates all previously scheduled actions\r\n\r\n    stopAllAction() {\r\n      const actions = this._actions,\r\n        nActions = this._nActiveActions;\r\n\r\n      for (let i = nActions - 1; i >= 0; --i) {\r\n        actions[i].stop();\r\n      }\r\n\r\n      return this;\r\n    } // advance the time and update apply the animation\r\n\r\n    update(deltaTime) {\r\n      deltaTime *= this.timeScale;\r\n      const actions = this._actions,\r\n        nActions = this._nActiveActions,\r\n        time = (this.time += deltaTime),\r\n        timeDirection = Math.sign(deltaTime),\r\n        accuIndex = (this._accuIndex ^= 1); // run active actions\r\n\r\n      for (let i = 0; i !== nActions; ++i) {\r\n        const action = actions[i];\r\n\r\n        action._update(time, deltaTime, timeDirection, accuIndex);\r\n      } // update scene graph\r\n\r\n      const bindings = this._bindings,\r\n        nBindings = this._nActiveBindings;\r\n\r\n      for (let i = 0; i !== nBindings; ++i) {\r\n        bindings[i].apply(accuIndex);\r\n      }\r\n\r\n      return this;\r\n    } // Allows you to seek to a specific time in an animation.\r\n\r\n    setTime(timeInSeconds) {\r\n      this.time = 0; // Zero out time attribute for AnimationMixer object;\r\n\r\n      for (let i = 0; i < this._actions.length; i++) {\r\n        this._actions[i].time = 0; // Zero out time attribute for all associated AnimationAction objects.\r\n      }\r\n\r\n      return this.update(timeInSeconds); // Update used to set exact time. Returns \"this\" AnimationMixer object.\r\n    } // return this mixer's root target object\r\n\r\n    getRoot() {\r\n      return this._root;\r\n    } // free all resources specific to a particular clip\r\n\r\n    uncacheClip(clip) {\r\n      const actions = this._actions,\r\n        clipUuid = clip.uuid,\r\n        actionsByClip = this._actionsByClip,\r\n        actionsForClip = actionsByClip[clipUuid];\r\n\r\n      if (actionsForClip !== undefined) {\r\n        // note: just calling _removeInactiveAction would mess up the\r\n        // iteration state and also require updating the state we can\r\n        // just throw away\r\n        const actionsToRemove = actionsForClip.knownActions;\r\n\r\n        for (let i = 0, n = actionsToRemove.length; i !== n; ++i) {\r\n          const action = actionsToRemove[i];\r\n\r\n          this._deactivateAction(action);\r\n\r\n          const cacheIndex = action._cacheIndex,\r\n            lastInactiveAction = actions[actions.length - 1];\r\n          action._cacheIndex = null;\r\n          action._byClipCacheIndex = null;\r\n          lastInactiveAction._cacheIndex = cacheIndex;\r\n          actions[cacheIndex] = lastInactiveAction;\r\n          actions.pop();\r\n\r\n          this._removeInactiveBindingsForAction(action);\r\n        }\r\n\r\n        delete actionsByClip[clipUuid];\r\n      }\r\n    } // free all resources specific to a particular root target object\r\n\r\n    uncacheRoot(root) {\r\n      const rootUuid = root.uuid,\r\n        actionsByClip = this._actionsByClip;\r\n\r\n      for (const clipUuid in actionsByClip) {\r\n        const actionByRoot = actionsByClip[clipUuid].actionByRoot,\r\n          action = actionByRoot[rootUuid];\r\n\r\n        if (action !== undefined) {\r\n          this._deactivateAction(action);\r\n\r\n          this._removeInactiveAction(action);\r\n        }\r\n      }\r\n\r\n      const bindingsByRoot = this._bindingsByRootAndName,\r\n        bindingByName = bindingsByRoot[rootUuid];\r\n\r\n      if (bindingByName !== undefined) {\r\n        for (const trackName in bindingByName) {\r\n          const binding = bindingByName[trackName];\r\n          binding.restoreOriginalState();\r\n\r\n          this._removeInactiveBinding(binding);\r\n        }\r\n      }\r\n    } // remove a targeted clip from the cache\r\n\r\n    uncacheAction(clip, optionalRoot) {\r\n      const action = this.existingAction(clip, optionalRoot);\r\n\r\n      if (action !== null) {\r\n        this._deactivateAction(action);\r\n\r\n        this._removeInactiveAction(action);\r\n      }\r\n    }\r\n  }\r\n\r\n  AnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array(1);\r\n\r\n  class Uniform {\r\n    constructor(value) {\r\n      if (typeof value === 'string') {\r\n        console.warn('THREE.Uniform: Type parameter is no longer needed.');\r\n        value = arguments[1];\r\n      }\r\n\r\n      this.value = value;\r\n    }\r\n\r\n    clone() {\r\n      return new Uniform(this.value.clone === undefined ? this.value : this.value.clone());\r\n    }\r\n  }\r\n\r\n  class InstancedInterleavedBuffer extends InterleavedBuffer {\r\n    constructor(array, stride, meshPerAttribute = 1) {\r\n      super(array, stride);\r\n      this.meshPerAttribute = meshPerAttribute || 1;\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source);\r\n      this.meshPerAttribute = source.meshPerAttribute;\r\n      return this;\r\n    }\r\n\r\n    clone(data) {\r\n      const ib = super.clone(data);\r\n      ib.meshPerAttribute = this.meshPerAttribute;\r\n      return ib;\r\n    }\r\n\r\n    toJSON(data) {\r\n      const json = super.toJSON(data);\r\n      json.isInstancedInterleavedBuffer = true;\r\n      json.meshPerAttribute = this.meshPerAttribute;\r\n      return json;\r\n    }\r\n  }\r\n\r\n  InstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\r\n\r\n  class GLBufferAttribute {\r\n    constructor(buffer, type, itemSize, elementSize, count) {\r\n      this.buffer = buffer;\r\n      this.type = type;\r\n      this.itemSize = itemSize;\r\n      this.elementSize = elementSize;\r\n      this.count = count;\r\n      this.version = 0;\r\n    }\r\n\r\n    set needsUpdate(value) {\r\n      if (value === true) this.version++;\r\n    }\r\n\r\n    setBuffer(buffer) {\r\n      this.buffer = buffer;\r\n      return this;\r\n    }\r\n\r\n    setType(type, elementSize) {\r\n      this.type = type;\r\n      this.elementSize = elementSize;\r\n      return this;\r\n    }\r\n\r\n    setItemSize(itemSize) {\r\n      this.itemSize = itemSize;\r\n      return this;\r\n    }\r\n\r\n    setCount(count) {\r\n      this.count = count;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  GLBufferAttribute.prototype.isGLBufferAttribute = true;\r\n\r\n  class Raycaster {\r\n    constructor(origin, direction, near = 0, far = Infinity) {\r\n      this.ray = new Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n      this.near = near;\r\n      this.far = far;\r\n      this.camera = null;\r\n      this.layers = new Layers();\r\n      this.params = {\r\n        Mesh: {},\r\n        Line: {\r\n          threshold: 1,\r\n        },\r\n        LOD: {},\r\n        Points: {\r\n          threshold: 1,\r\n        },\r\n        Sprite: {},\r\n      };\r\n    }\r\n\r\n    set(origin, direction) {\r\n      // direction is assumed to be normalized (for accurate distance calculations)\r\n      this.ray.set(origin, direction);\r\n    }\r\n\r\n    setFromCamera(coords, camera) {\r\n      if (camera && camera.isPerspectiveCamera) {\r\n        this.ray.origin.setFromMatrixPosition(camera.matrixWorld);\r\n        this.ray.direction\r\n          .set(coords.x, coords.y, 0.5)\r\n          .unproject(camera)\r\n          .sub(this.ray.origin)\r\n          .normalize();\r\n        this.camera = camera;\r\n      } else if (camera && camera.isOrthographicCamera) {\r\n        this.ray.origin\r\n          .set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far))\r\n          .unproject(camera); // set origin in plane of camera\r\n\r\n        this.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\r\n        this.camera = camera;\r\n      } else {\r\n        console.error('THREE.Raycaster: Unsupported camera type: ' + camera.type);\r\n      }\r\n    }\r\n\r\n    intersectObject(object, recursive = false, intersects = []) {\r\n      intersectObject(object, this, intersects, recursive);\r\n      intersects.sort(ascSort);\r\n      return intersects;\r\n    }\r\n\r\n    intersectObjects(objects, recursive = false, intersects = []) {\r\n      for (let i = 0, l = objects.length; i < l; i++) {\r\n        intersectObject(objects[i], this, intersects, recursive);\r\n      }\r\n\r\n      intersects.sort(ascSort);\r\n      return intersects;\r\n    }\r\n  }\r\n\r\n  function ascSort(a, b) {\r\n    return a.distance - b.distance;\r\n  }\r\n\r\n  function intersectObject(object, raycaster, intersects, recursive) {\r\n    if (object.layers.test(raycaster.layers)) {\r\n      object.raycast(raycaster, intersects);\r\n    }\r\n\r\n    if (recursive === true) {\r\n      const children = object.children;\r\n\r\n      for (let i = 0, l = children.length; i < l; i++) {\r\n        intersectObject(children[i], raycaster, intersects, true);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\r\n   *\r\n   * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\r\n   * The azimuthal angle (theta) is measured from the positive z-axis.\r\n   */\r\n\r\n  class Spherical {\r\n    constructor(radius = 1, phi = 0, theta = 0) {\r\n      this.radius = radius;\r\n      this.phi = phi; // polar angle\r\n\r\n      this.theta = theta; // azimuthal angle\r\n\r\n      return this;\r\n    }\r\n\r\n    set(radius, phi, theta) {\r\n      this.radius = radius;\r\n      this.phi = phi;\r\n      this.theta = theta;\r\n      return this;\r\n    }\r\n\r\n    copy(other) {\r\n      this.radius = other.radius;\r\n      this.phi = other.phi;\r\n      this.theta = other.theta;\r\n      return this;\r\n    } // restrict phi to be betwee EPS and PI-EPS\r\n\r\n    makeSafe() {\r\n      const EPS = 0.000001;\r\n      this.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\r\n      return this;\r\n    }\r\n\r\n    setFromVector3(v) {\r\n      return this.setFromCartesianCoords(v.x, v.y, v.z);\r\n    }\r\n\r\n    setFromCartesianCoords(x, y, z) {\r\n      this.radius = Math.sqrt(x * x + y * y + z * z);\r\n\r\n      if (this.radius === 0) {\r\n        this.theta = 0;\r\n        this.phi = 0;\r\n      } else {\r\n        this.theta = Math.atan2(x, z);\r\n        this.phi = Math.acos(clamp(y / this.radius, -1, 1));\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().copy(this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\r\n   */\r\n  class Cylindrical {\r\n    constructor(radius = 1, theta = 0, y = 0) {\r\n      this.radius = radius; // distance from the origin to a point in the x-z plane\r\n\r\n      this.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\r\n\r\n      this.y = y; // height above the x-z plane\r\n\r\n      return this;\r\n    }\r\n\r\n    set(radius, theta, y) {\r\n      this.radius = radius;\r\n      this.theta = theta;\r\n      this.y = y;\r\n      return this;\r\n    }\r\n\r\n    copy(other) {\r\n      this.radius = other.radius;\r\n      this.theta = other.theta;\r\n      this.y = other.y;\r\n      return this;\r\n    }\r\n\r\n    setFromVector3(v) {\r\n      return this.setFromCartesianCoords(v.x, v.y, v.z);\r\n    }\r\n\r\n    setFromCartesianCoords(x, y, z) {\r\n      this.radius = Math.sqrt(x * x + z * z);\r\n      this.theta = Math.atan2(x, z);\r\n      this.y = y;\r\n      return this;\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().copy(this);\r\n    }\r\n  }\r\n\r\n  const _vector$4 = /*@__PURE__*/ new Vector2();\r\n\r\n  class Box2 {\r\n    constructor(min = new Vector2(+Infinity, +Infinity), max = new Vector2(-Infinity, -Infinity)) {\r\n      this.min = min;\r\n      this.max = max;\r\n    }\r\n\r\n    set(min, max) {\r\n      this.min.copy(min);\r\n      this.max.copy(max);\r\n      return this;\r\n    }\r\n\r\n    setFromPoints(points) {\r\n      this.makeEmpty();\r\n\r\n      for (let i = 0, il = points.length; i < il; i++) {\r\n        this.expandByPoint(points[i]);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    setFromCenterAndSize(center, size) {\r\n      const halfSize = _vector$4.copy(size).multiplyScalar(0.5);\r\n\r\n      this.min.copy(center).sub(halfSize);\r\n      this.max.copy(center).add(halfSize);\r\n      return this;\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().copy(this);\r\n    }\r\n\r\n    copy(box) {\r\n      this.min.copy(box.min);\r\n      this.max.copy(box.max);\r\n      return this;\r\n    }\r\n\r\n    makeEmpty() {\r\n      this.min.x = this.min.y = +Infinity;\r\n      this.max.x = this.max.y = -Infinity;\r\n      return this;\r\n    }\r\n\r\n    isEmpty() {\r\n      // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n      return this.max.x < this.min.x || this.max.y < this.min.y;\r\n    }\r\n\r\n    getCenter(target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Box2: .getCenter() target is now required');\r\n        target = new Vector2();\r\n      }\r\n\r\n      return this.isEmpty()\r\n        ? target.set(0, 0)\r\n        : target.addVectors(this.min, this.max).multiplyScalar(0.5);\r\n    }\r\n\r\n    getSize(target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Box2: .getSize() target is now required');\r\n        target = new Vector2();\r\n      }\r\n\r\n      return this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\r\n    }\r\n\r\n    expandByPoint(point) {\r\n      this.min.min(point);\r\n      this.max.max(point);\r\n      return this;\r\n    }\r\n\r\n    expandByVector(vector) {\r\n      this.min.sub(vector);\r\n      this.max.add(vector);\r\n      return this;\r\n    }\r\n\r\n    expandByScalar(scalar) {\r\n      this.min.addScalar(-scalar);\r\n      this.max.addScalar(scalar);\r\n      return this;\r\n    }\r\n\r\n    containsPoint(point) {\r\n      return point.x < this.min.x ||\r\n        point.x > this.max.x ||\r\n        point.y < this.min.y ||\r\n        point.y > this.max.y\r\n        ? false\r\n        : true;\r\n    }\r\n\r\n    containsBox(box) {\r\n      return (\r\n        this.min.x <= box.min.x &&\r\n        box.max.x <= this.max.x &&\r\n        this.min.y <= box.min.y &&\r\n        box.max.y <= this.max.y\r\n      );\r\n    }\r\n\r\n    getParameter(point, target) {\r\n      // This can potentially have a divide by zero if the box\r\n      // has a size dimension of 0.\r\n      if (target === undefined) {\r\n        console.warn('THREE.Box2: .getParameter() target is now required');\r\n        target = new Vector2();\r\n      }\r\n\r\n      return target.set(\r\n        (point.x - this.min.x) / (this.max.x - this.min.x),\r\n        (point.y - this.min.y) / (this.max.y - this.min.y),\r\n      );\r\n    }\r\n\r\n    intersectsBox(box) {\r\n      // using 4 splitting planes to rule out intersections\r\n      return box.max.x < this.min.x ||\r\n        box.min.x > this.max.x ||\r\n        box.max.y < this.min.y ||\r\n        box.min.y > this.max.y\r\n        ? false\r\n        : true;\r\n    }\r\n\r\n    clampPoint(point, target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Box2: .clampPoint() target is now required');\r\n        target = new Vector2();\r\n      }\r\n\r\n      return target.copy(point).clamp(this.min, this.max);\r\n    }\r\n\r\n    distanceToPoint(point) {\r\n      const clampedPoint = _vector$4.copy(point).clamp(this.min, this.max);\r\n\r\n      return clampedPoint.sub(point).length();\r\n    }\r\n\r\n    intersect(box) {\r\n      this.min.max(box.min);\r\n      this.max.min(box.max);\r\n      return this;\r\n    }\r\n\r\n    union(box) {\r\n      this.min.min(box.min);\r\n      this.max.max(box.max);\r\n      return this;\r\n    }\r\n\r\n    translate(offset) {\r\n      this.min.add(offset);\r\n      this.max.add(offset);\r\n      return this;\r\n    }\r\n\r\n    equals(box) {\r\n      return box.min.equals(this.min) && box.max.equals(this.max);\r\n    }\r\n  }\r\n\r\n  Box2.prototype.isBox2 = true;\r\n\r\n  const _startP = /*@__PURE__*/ new Vector3();\r\n\r\n  const _startEnd = /*@__PURE__*/ new Vector3();\r\n\r\n  class Line3 {\r\n    constructor(start = new Vector3(), end = new Vector3()) {\r\n      this.start = start;\r\n      this.end = end;\r\n    }\r\n\r\n    set(start, end) {\r\n      this.start.copy(start);\r\n      this.end.copy(end);\r\n      return this;\r\n    }\r\n\r\n    copy(line) {\r\n      this.start.copy(line.start);\r\n      this.end.copy(line.end);\r\n      return this;\r\n    }\r\n\r\n    getCenter(target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Line3: .getCenter() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      return target.addVectors(this.start, this.end).multiplyScalar(0.5);\r\n    }\r\n\r\n    delta(target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Line3: .delta() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      return target.subVectors(this.end, this.start);\r\n    }\r\n\r\n    distanceSq() {\r\n      return this.start.distanceToSquared(this.end);\r\n    }\r\n\r\n    distance() {\r\n      return this.start.distanceTo(this.end);\r\n    }\r\n\r\n    at(t, target) {\r\n      if (target === undefined) {\r\n        console.warn('THREE.Line3: .at() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      return this.delta(target).multiplyScalar(t).add(this.start);\r\n    }\r\n\r\n    closestPointToPointParameter(point, clampToLine) {\r\n      _startP.subVectors(point, this.start);\r\n\r\n      _startEnd.subVectors(this.end, this.start);\r\n\r\n      const startEnd2 = _startEnd.dot(_startEnd);\r\n\r\n      const startEnd_startP = _startEnd.dot(_startP);\r\n\r\n      let t = startEnd_startP / startEnd2;\r\n\r\n      if (clampToLine) {\r\n        t = clamp(t, 0, 1);\r\n      }\r\n\r\n      return t;\r\n    }\r\n\r\n    closestPointToPoint(point, clampToLine, target) {\r\n      const t = this.closestPointToPointParameter(point, clampToLine);\r\n\r\n      if (target === undefined) {\r\n        console.warn('THREE.Line3: .closestPointToPoint() target is now required');\r\n        target = new Vector3();\r\n      }\r\n\r\n      return this.delta(target).multiplyScalar(t).add(this.start);\r\n    }\r\n\r\n    applyMatrix4(matrix) {\r\n      this.start.applyMatrix4(matrix);\r\n      this.end.applyMatrix4(matrix);\r\n      return this;\r\n    }\r\n\r\n    equals(line) {\r\n      return line.start.equals(this.start) && line.end.equals(this.end);\r\n    }\r\n\r\n    clone() {\r\n      return new this.constructor().copy(this);\r\n    }\r\n  }\r\n\r\n  class ImmediateRenderObject extends Object3D {\r\n    constructor(material) {\r\n      super();\r\n      this.material = material;\r\n\r\n      this.render = function () /* renderCallback */\r\n      {};\r\n\r\n      this.hasPositions = false;\r\n      this.hasNormals = false;\r\n      this.hasColors = false;\r\n      this.hasUvs = false;\r\n      this.positionArray = null;\r\n      this.normalArray = null;\r\n      this.colorArray = null;\r\n      this.uvArray = null;\r\n      this.count = 0;\r\n    }\r\n  }\r\n\r\n  ImmediateRenderObject.prototype.isImmediateRenderObject = true;\r\n\r\n  const _vector$3 = /*@__PURE__*/ new Vector3();\r\n\r\n  class SpotLightHelper extends Object3D {\r\n    constructor(light, color) {\r\n      super();\r\n      this.light = light;\r\n      this.light.updateMatrixWorld();\r\n      this.matrix = light.matrixWorld;\r\n      this.matrixAutoUpdate = false;\r\n      this.color = color;\r\n      const geometry = new BufferGeometry();\r\n      const positions = [\r\n        0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1,\r\n      ];\r\n\r\n      for (let i = 0, j = 1, l = 32; i < l; i++, j++) {\r\n        const p1 = (i / l) * Math.PI * 2;\r\n        const p2 = (j / l) * Math.PI * 2;\r\n        positions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\r\n      }\r\n\r\n      geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\r\n      const material = new LineBasicMaterial({\r\n        fog: false,\r\n        toneMapped: false,\r\n      });\r\n      this.cone = new LineSegments(geometry, material);\r\n      this.add(this.cone);\r\n      this.update();\r\n    }\r\n\r\n    dispose() {\r\n      this.cone.geometry.dispose();\r\n      this.cone.material.dispose();\r\n    }\r\n\r\n    update() {\r\n      this.light.updateMatrixWorld();\r\n      const coneLength = this.light.distance ? this.light.distance : 1000;\r\n      const coneWidth = coneLength * Math.tan(this.light.angle);\r\n      this.cone.scale.set(coneWidth, coneWidth, coneLength);\r\n\r\n      _vector$3.setFromMatrixPosition(this.light.target.matrixWorld);\r\n\r\n      this.cone.lookAt(_vector$3);\r\n\r\n      if (this.color !== undefined) {\r\n        this.cone.material.color.set(this.color);\r\n      } else {\r\n        this.cone.material.color.copy(this.light.color);\r\n      }\r\n    }\r\n  }\r\n\r\n  const _vector$2 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _boneMatrix = /*@__PURE__*/ new Matrix4();\r\n\r\n  const _matrixWorldInv = /*@__PURE__*/ new Matrix4();\r\n\r\n  class SkeletonHelper extends LineSegments {\r\n    constructor(object) {\r\n      const bones = getBoneList(object);\r\n      const geometry = new BufferGeometry();\r\n      const vertices = [];\r\n      const colors = [];\r\n      const color1 = new Color(0, 0, 1);\r\n      const color2 = new Color(0, 1, 0);\r\n\r\n      for (let i = 0; i < bones.length; i++) {\r\n        const bone = bones[i];\r\n\r\n        if (bone.parent && bone.parent.isBone) {\r\n          vertices.push(0, 0, 0);\r\n          vertices.push(0, 0, 0);\r\n          colors.push(color1.r, color1.g, color1.b);\r\n          colors.push(color2.r, color2.g, color2.b);\r\n        }\r\n      }\r\n\r\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n      geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\r\n      const material = new LineBasicMaterial({\r\n        vertexColors: true,\r\n        depthTest: false,\r\n        depthWrite: false,\r\n        toneMapped: false,\r\n        transparent: true,\r\n      });\r\n      super(geometry, material);\r\n      this.type = 'SkeletonHelper';\r\n      this.isSkeletonHelper = true;\r\n      this.root = object;\r\n      this.bones = bones;\r\n      this.matrix = object.matrixWorld;\r\n      this.matrixAutoUpdate = false;\r\n    }\r\n\r\n    updateMatrixWorld(force) {\r\n      const bones = this.bones;\r\n      const geometry = this.geometry;\r\n      const position = geometry.getAttribute('position');\r\n\r\n      _matrixWorldInv.copy(this.root.matrixWorld).invert();\r\n\r\n      for (let i = 0, j = 0; i < bones.length; i++) {\r\n        const bone = bones[i];\r\n\r\n        if (bone.parent && bone.parent.isBone) {\r\n          _boneMatrix.multiplyMatrices(_matrixWorldInv, bone.matrixWorld);\r\n\r\n          _vector$2.setFromMatrixPosition(_boneMatrix);\r\n\r\n          position.setXYZ(j, _vector$2.x, _vector$2.y, _vector$2.z);\r\n\r\n          _boneMatrix.multiplyMatrices(_matrixWorldInv, bone.parent.matrixWorld);\r\n\r\n          _vector$2.setFromMatrixPosition(_boneMatrix);\r\n\r\n          position.setXYZ(j + 1, _vector$2.x, _vector$2.y, _vector$2.z);\r\n          j += 2;\r\n        }\r\n      }\r\n\r\n      geometry.getAttribute('position').needsUpdate = true;\r\n      super.updateMatrixWorld(force);\r\n    }\r\n  }\r\n\r\n  function getBoneList(object) {\r\n    const boneList = [];\r\n\r\n    if (object && object.isBone) {\r\n      boneList.push(object);\r\n    }\r\n\r\n    for (let i = 0; i < object.children.length; i++) {\r\n      boneList.push.apply(boneList, getBoneList(object.children[i]));\r\n    }\r\n\r\n    return boneList;\r\n  }\r\n\r\n  class PointLightHelper extends Mesh {\r\n    constructor(light, sphereSize, color) {\r\n      const geometry = new SphereGeometry(sphereSize, 4, 2);\r\n      const material = new MeshBasicMaterial({\r\n        wireframe: true,\r\n        fog: false,\r\n        toneMapped: false,\r\n      });\r\n      super(geometry, material);\r\n      this.light = light;\r\n      this.light.updateMatrixWorld();\r\n      this.color = color;\r\n      this.type = 'PointLightHelper';\r\n      this.matrix = this.light.matrixWorld;\r\n      this.matrixAutoUpdate = false;\r\n      this.update();\r\n      /*\r\n\t\t\t// TODO: delete this comment?\r\n\t\t\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\r\n\t\t\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\t\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\t\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\t\t\tconst d = light.distance;\r\n\t\t\tif ( d === 0.0 ) {\r\n\t\t\t\tthis.lightDistance.visible = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\t\t}\r\n\t\t\tthis.add( this.lightDistance );\r\n\t\t\t*/\r\n    }\r\n\r\n    dispose() {\r\n      this.geometry.dispose();\r\n      this.material.dispose();\r\n    }\r\n\r\n    update() {\r\n      if (this.color !== undefined) {\r\n        this.material.color.set(this.color);\r\n      } else {\r\n        this.material.color.copy(this.light.color);\r\n      }\r\n      /*\r\n\t\t\tconst d = this.light.distance;\r\n\t\t\t\tif ( d === 0.0 ) {\r\n\t\t\t\t\tthis.lightDistance.visible = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.lightDistance.visible = true;\r\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\t\t\t}\r\n\t\t\t*/\r\n    }\r\n  }\r\n\r\n  const _vector$1 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _color1 = /*@__PURE__*/ new Color();\r\n\r\n  const _color2 = /*@__PURE__*/ new Color();\r\n\r\n  class HemisphereLightHelper extends Object3D {\r\n    constructor(light, size, color) {\r\n      super();\r\n      this.light = light;\r\n      this.light.updateMatrixWorld();\r\n      this.matrix = light.matrixWorld;\r\n      this.matrixAutoUpdate = false;\r\n      this.color = color;\r\n      const geometry = new OctahedronGeometry(size);\r\n      geometry.rotateY(Math.PI * 0.5);\r\n      this.material = new MeshBasicMaterial({\r\n        wireframe: true,\r\n        fog: false,\r\n        toneMapped: false,\r\n      });\r\n      if (this.color === undefined) this.material.vertexColors = true;\r\n      const position = geometry.getAttribute('position');\r\n      const colors = new Float32Array(position.count * 3);\r\n      geometry.setAttribute('color', new BufferAttribute(colors, 3));\r\n      this.add(new Mesh(geometry, this.material));\r\n      this.update();\r\n    }\r\n\r\n    dispose() {\r\n      this.children[0].geometry.dispose();\r\n      this.children[0].material.dispose();\r\n    }\r\n\r\n    update() {\r\n      const mesh = this.children[0];\r\n\r\n      if (this.color !== undefined) {\r\n        this.material.color.set(this.color);\r\n      } else {\r\n        const colors = mesh.geometry.getAttribute('color');\r\n\r\n        _color1.copy(this.light.color);\r\n\r\n        _color2.copy(this.light.groundColor);\r\n\r\n        for (let i = 0, l = colors.count; i < l; i++) {\r\n          const color = i < l / 2 ? _color1 : _color2;\r\n          colors.setXYZ(i, color.r, color.g, color.b);\r\n        }\r\n\r\n        colors.needsUpdate = true;\r\n      }\r\n\r\n      mesh.lookAt(_vector$1.setFromMatrixPosition(this.light.matrixWorld).negate());\r\n    }\r\n  }\r\n\r\n  class GridHelper extends LineSegments {\r\n    constructor(size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888) {\r\n      color1 = new Color(color1);\r\n      color2 = new Color(color2);\r\n      const center = divisions / 2;\r\n      const step = size / divisions;\r\n      const halfSize = size / 2;\r\n      const vertices = [],\r\n        colors = [];\r\n\r\n      for (let i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\r\n        vertices.push(-halfSize, 0, k, halfSize, 0, k);\r\n        vertices.push(k, 0, -halfSize, k, 0, halfSize);\r\n        const color = i === center ? color1 : color2;\r\n        color.toArray(colors, j);\r\n        j += 3;\r\n        color.toArray(colors, j);\r\n        j += 3;\r\n        color.toArray(colors, j);\r\n        j += 3;\r\n        color.toArray(colors, j);\r\n        j += 3;\r\n      }\r\n\r\n      const geometry = new BufferGeometry();\r\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n      geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\r\n      const material = new LineBasicMaterial({\r\n        vertexColors: true,\r\n        toneMapped: false,\r\n      });\r\n      super(geometry, material);\r\n      this.type = 'GridHelper';\r\n    }\r\n  }\r\n\r\n  class PolarGridHelper extends LineSegments {\r\n    constructor(\r\n      radius = 10,\r\n      radials = 16,\r\n      circles = 8,\r\n      divisions = 64,\r\n      color1 = 0x444444,\r\n      color2 = 0x888888,\r\n    ) {\r\n      color1 = new Color(color1);\r\n      color2 = new Color(color2);\r\n      const vertices = [];\r\n      const colors = []; // create the radials\r\n\r\n      for (let i = 0; i <= radials; i++) {\r\n        const v = (i / radials) * (Math.PI * 2);\r\n        const x = Math.sin(v) * radius;\r\n        const z = Math.cos(v) * radius;\r\n        vertices.push(0, 0, 0);\r\n        vertices.push(x, 0, z);\r\n        const color = i & 1 ? color1 : color2;\r\n        colors.push(color.r, color.g, color.b);\r\n        colors.push(color.r, color.g, color.b);\r\n      } // create the circles\r\n\r\n      for (let i = 0; i <= circles; i++) {\r\n        const color = i & 1 ? color1 : color2;\r\n        const r = radius - (radius / circles) * i;\r\n\r\n        for (let j = 0; j < divisions; j++) {\r\n          // first vertex\r\n          let v = (j / divisions) * (Math.PI * 2);\r\n          let x = Math.sin(v) * r;\r\n          let z = Math.cos(v) * r;\r\n          vertices.push(x, 0, z);\r\n          colors.push(color.r, color.g, color.b); // second vertex\r\n\r\n          v = ((j + 1) / divisions) * (Math.PI * 2);\r\n          x = Math.sin(v) * r;\r\n          z = Math.cos(v) * r;\r\n          vertices.push(x, 0, z);\r\n          colors.push(color.r, color.g, color.b);\r\n        }\r\n      }\r\n\r\n      const geometry = new BufferGeometry();\r\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n      geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\r\n      const material = new LineBasicMaterial({\r\n        vertexColors: true,\r\n        toneMapped: false,\r\n      });\r\n      super(geometry, material);\r\n      this.type = 'PolarGridHelper';\r\n    }\r\n  }\r\n\r\n  const _v1 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _v2 = /*@__PURE__*/ new Vector3();\r\n\r\n  const _v3 = /*@__PURE__*/ new Vector3();\r\n\r\n  class DirectionalLightHelper extends Object3D {\r\n    constructor(light, size, color) {\r\n      super();\r\n      this.light = light;\r\n      this.light.updateMatrixWorld();\r\n      this.matrix = light.matrixWorld;\r\n      this.matrixAutoUpdate = false;\r\n      this.color = color;\r\n      if (size === undefined) size = 1;\r\n      let geometry = new BufferGeometry();\r\n      geometry.setAttribute(\r\n        'position',\r\n        new Float32BufferAttribute(\r\n          [-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0],\r\n          3,\r\n        ),\r\n      );\r\n      const material = new LineBasicMaterial({\r\n        fog: false,\r\n        toneMapped: false,\r\n      });\r\n      this.lightPlane = new Line(geometry, material);\r\n      this.add(this.lightPlane);\r\n      geometry = new BufferGeometry();\r\n      geometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\r\n      this.targetLine = new Line(geometry, material);\r\n      this.add(this.targetLine);\r\n      this.update();\r\n    }\r\n\r\n    dispose() {\r\n      this.lightPlane.geometry.dispose();\r\n      this.lightPlane.material.dispose();\r\n      this.targetLine.geometry.dispose();\r\n      this.targetLine.material.dispose();\r\n    }\r\n\r\n    update() {\r\n      _v1.setFromMatrixPosition(this.light.matrixWorld);\r\n\r\n      _v2.setFromMatrixPosition(this.light.target.matrixWorld);\r\n\r\n      _v3.subVectors(_v2, _v1);\r\n\r\n      this.lightPlane.lookAt(_v2);\r\n\r\n      if (this.color !== undefined) {\r\n        this.lightPlane.material.color.set(this.color);\r\n        this.targetLine.material.color.set(this.color);\r\n      } else {\r\n        this.lightPlane.material.color.copy(this.light.color);\r\n        this.targetLine.material.color.copy(this.light.color);\r\n      }\r\n\r\n      this.targetLine.lookAt(_v2);\r\n      this.targetLine.scale.z = _v3.length();\r\n    }\r\n  }\r\n\r\n  const _vector = /*@__PURE__*/ new Vector3();\r\n\r\n  const _camera = /*@__PURE__*/ new Camera();\r\n  /**\r\n   *\t- shows frustum, line of sight and up of the camera\r\n   *\t- suitable for fast updates\r\n   * \t- based on frustum visualization in lightgl.js shadowmap example\r\n   *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n   */\r\n\r\n  class CameraHelper extends LineSegments {\r\n    constructor(camera) {\r\n      const geometry = new BufferGeometry();\r\n      const material = new LineBasicMaterial({\r\n        color: 0xffffff,\r\n        vertexColors: true,\r\n        toneMapped: false,\r\n      });\r\n      const vertices = [];\r\n      const colors = [];\r\n      const pointMap = {}; // colors\r\n\r\n      const colorFrustum = new Color(0xffaa00);\r\n      const colorCone = new Color(0xff0000);\r\n      const colorUp = new Color(0x00aaff);\r\n      const colorTarget = new Color(0xffffff);\r\n      const colorCross = new Color(0x333333); // near\r\n\r\n      addLine('n1', 'n2', colorFrustum);\r\n      addLine('n2', 'n4', colorFrustum);\r\n      addLine('n4', 'n3', colorFrustum);\r\n      addLine('n3', 'n1', colorFrustum); // far\r\n\r\n      addLine('f1', 'f2', colorFrustum);\r\n      addLine('f2', 'f4', colorFrustum);\r\n      addLine('f4', 'f3', colorFrustum);\r\n      addLine('f3', 'f1', colorFrustum); // sides\r\n\r\n      addLine('n1', 'f1', colorFrustum);\r\n      addLine('n2', 'f2', colorFrustum);\r\n      addLine('n3', 'f3', colorFrustum);\r\n      addLine('n4', 'f4', colorFrustum); // cone\r\n\r\n      addLine('p', 'n1', colorCone);\r\n      addLine('p', 'n2', colorCone);\r\n      addLine('p', 'n3', colorCone);\r\n      addLine('p', 'n4', colorCone); // up\r\n\r\n      addLine('u1', 'u2', colorUp);\r\n      addLine('u2', 'u3', colorUp);\r\n      addLine('u3', 'u1', colorUp); // target\r\n\r\n      addLine('c', 't', colorTarget);\r\n      addLine('p', 'c', colorCross); // cross\r\n\r\n      addLine('cn1', 'cn2', colorCross);\r\n      addLine('cn3', 'cn4', colorCross);\r\n      addLine('cf1', 'cf2', colorCross);\r\n      addLine('cf3', 'cf4', colorCross);\r\n\r\n      function addLine(a, b, color) {\r\n        addPoint(a, color);\r\n        addPoint(b, color);\r\n      }\r\n\r\n      function addPoint(id, color) {\r\n        vertices.push(0, 0, 0);\r\n        colors.push(color.r, color.g, color.b);\r\n\r\n        if (pointMap[id] === undefined) {\r\n          pointMap[id] = [];\r\n        }\r\n\r\n        pointMap[id].push(vertices.length / 3 - 1);\r\n      }\r\n\r\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n      geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\r\n      super(geometry, material);\r\n      this.type = 'CameraHelper';\r\n      this.camera = camera;\r\n      if (this.camera.updateProjectionMatrix) this.camera.updateProjectionMatrix();\r\n      this.matrix = camera.matrixWorld;\r\n      this.matrixAutoUpdate = false;\r\n      this.pointMap = pointMap;\r\n      this.update();\r\n    }\r\n\r\n    update() {\r\n      const geometry = this.geometry;\r\n      const pointMap = this.pointMap;\r\n      const w = 1,\r\n        h = 1; // we need just camera projection matrix inverse\r\n      // world matrix must be identity\r\n\r\n      _camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse); // center / target\r\n\r\n      setPoint('c', pointMap, geometry, _camera, 0, 0, -1);\r\n      setPoint('t', pointMap, geometry, _camera, 0, 0, 1); // near\r\n\r\n      setPoint('n1', pointMap, geometry, _camera, -w, -h, -1);\r\n      setPoint('n2', pointMap, geometry, _camera, w, -h, -1);\r\n      setPoint('n3', pointMap, geometry, _camera, -w, h, -1);\r\n      setPoint('n4', pointMap, geometry, _camera, w, h, -1); // far\r\n\r\n      setPoint('f1', pointMap, geometry, _camera, -w, -h, 1);\r\n      setPoint('f2', pointMap, geometry, _camera, w, -h, 1);\r\n      setPoint('f3', pointMap, geometry, _camera, -w, h, 1);\r\n      setPoint('f4', pointMap, geometry, _camera, w, h, 1); // up\r\n\r\n      setPoint('u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, -1);\r\n      setPoint('u2', pointMap, geometry, _camera, -w * 0.7, h * 1.1, -1);\r\n      setPoint('u3', pointMap, geometry, _camera, 0, h * 2, -1); // cross\r\n\r\n      setPoint('cf1', pointMap, geometry, _camera, -w, 0, 1);\r\n      setPoint('cf2', pointMap, geometry, _camera, w, 0, 1);\r\n      setPoint('cf3', pointMap, geometry, _camera, 0, -h, 1);\r\n      setPoint('cf4', pointMap, geometry, _camera, 0, h, 1);\r\n      setPoint('cn1', pointMap, geometry, _camera, -w, 0, -1);\r\n      setPoint('cn2', pointMap, geometry, _camera, w, 0, -1);\r\n      setPoint('cn3', pointMap, geometry, _camera, 0, -h, -1);\r\n      setPoint('cn4', pointMap, geometry, _camera, 0, h, -1);\r\n      geometry.getAttribute('position').needsUpdate = true;\r\n    }\r\n\r\n    dispose() {\r\n      this.geometry.dispose();\r\n      this.material.dispose();\r\n    }\r\n  }\r\n\r\n  function setPoint(point, pointMap, geometry, camera, x, y, z) {\r\n    _vector.set(x, y, z).unproject(camera);\r\n\r\n    const points = pointMap[point];\r\n\r\n    if (points !== undefined) {\r\n      const position = geometry.getAttribute('position');\r\n\r\n      for (let i = 0, l = points.length; i < l; i++) {\r\n        position.setXYZ(points[i], _vector.x, _vector.y, _vector.z);\r\n      }\r\n    }\r\n  }\r\n\r\n  const _box = /*@__PURE__*/ new Box3();\r\n\r\n  class BoxHelper extends LineSegments {\r\n    constructor(object, color = 0xffff00) {\r\n      const indices = new Uint16Array([\r\n        0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7,\r\n      ]);\r\n      const positions = new Float32Array(8 * 3);\r\n      const geometry = new BufferGeometry();\r\n      geometry.setIndex(new BufferAttribute(indices, 1));\r\n      geometry.setAttribute('position', new BufferAttribute(positions, 3));\r\n      super(\r\n        geometry,\r\n        new LineBasicMaterial({\r\n          color: color,\r\n          toneMapped: false,\r\n        }),\r\n      );\r\n      this.object = object;\r\n      this.type = 'BoxHelper';\r\n      this.matrixAutoUpdate = false;\r\n      this.update();\r\n    }\r\n\r\n    update(object) {\r\n      if (object !== undefined) {\r\n        console.warn('THREE.BoxHelper: .update() has no longer arguments.');\r\n      }\r\n\r\n      if (this.object !== undefined) {\r\n        _box.setFromObject(this.object);\r\n      }\r\n\r\n      if (_box.isEmpty()) return;\r\n      const min = _box.min;\r\n      const max = _box.max;\r\n      /*\r\n\t\t\t\t5____4\r\n\t\t\t1/___0/|\r\n\t\t\t| 6__|_7\r\n\t\t\t2/___3/\r\n\t\t\t\t0: max.x, max.y, max.z\r\n\t\t\t1: min.x, max.y, max.z\r\n\t\t\t2: min.x, min.y, max.z\r\n\t\t\t3: max.x, min.y, max.z\r\n\t\t\t4: max.x, max.y, min.z\r\n\t\t\t5: min.x, max.y, min.z\r\n\t\t\t6: min.x, min.y, min.z\r\n\t\t\t7: max.x, min.y, min.z\r\n\t\t\t*/\r\n\r\n      const position = this.geometry.attributes.position;\r\n      const array = position.array;\r\n      array[0] = max.x;\r\n      array[1] = max.y;\r\n      array[2] = max.z;\r\n      array[3] = min.x;\r\n      array[4] = max.y;\r\n      array[5] = max.z;\r\n      array[6] = min.x;\r\n      array[7] = min.y;\r\n      array[8] = max.z;\r\n      array[9] = max.x;\r\n      array[10] = min.y;\r\n      array[11] = max.z;\r\n      array[12] = max.x;\r\n      array[13] = max.y;\r\n      array[14] = min.z;\r\n      array[15] = min.x;\r\n      array[16] = max.y;\r\n      array[17] = min.z;\r\n      array[18] = min.x;\r\n      array[19] = min.y;\r\n      array[20] = min.z;\r\n      array[21] = max.x;\r\n      array[22] = min.y;\r\n      array[23] = min.z;\r\n      position.needsUpdate = true;\r\n      this.geometry.computeBoundingSphere();\r\n    }\r\n\r\n    setFromObject(object) {\r\n      this.object = object;\r\n      this.update();\r\n      return this;\r\n    }\r\n\r\n    copy(source) {\r\n      LineSegments.prototype.copy.call(this, source);\r\n      this.object = source.object;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  class Box3Helper extends LineSegments {\r\n    constructor(box, color = 0xffff00) {\r\n      const indices = new Uint16Array([\r\n        0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7,\r\n      ]);\r\n      const positions = [\r\n        1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1,\r\n      ];\r\n      const geometry = new BufferGeometry();\r\n      geometry.setIndex(new BufferAttribute(indices, 1));\r\n      geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\r\n      super(\r\n        geometry,\r\n        new LineBasicMaterial({\r\n          color: color,\r\n          toneMapped: false,\r\n        }),\r\n      );\r\n      this.box = box;\r\n      this.type = 'Box3Helper';\r\n      this.geometry.computeBoundingSphere();\r\n    }\r\n\r\n    updateMatrixWorld(force) {\r\n      const box = this.box;\r\n      if (box.isEmpty()) return;\r\n      box.getCenter(this.position);\r\n      box.getSize(this.scale);\r\n      this.scale.multiplyScalar(0.5);\r\n      super.updateMatrixWorld(force);\r\n    }\r\n  }\r\n\r\n  class PlaneHelper extends Line {\r\n    constructor(plane, size = 1, hex = 0xffff00) {\r\n      const color = hex;\r\n      const positions = [\r\n        1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0,\r\n        0, 0,\r\n      ];\r\n      const geometry = new BufferGeometry();\r\n      geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\r\n      geometry.computeBoundingSphere();\r\n      super(\r\n        geometry,\r\n        new LineBasicMaterial({\r\n          color: color,\r\n          toneMapped: false,\r\n        }),\r\n      );\r\n      this.type = 'PlaneHelper';\r\n      this.plane = plane;\r\n      this.size = size;\r\n      const positions2 = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1];\r\n      const geometry2 = new BufferGeometry();\r\n      geometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\r\n      geometry2.computeBoundingSphere();\r\n      this.add(\r\n        new Mesh(\r\n          geometry2,\r\n          new MeshBasicMaterial({\r\n            color: color,\r\n            opacity: 0.2,\r\n            transparent: true,\r\n            depthWrite: false,\r\n            toneMapped: false,\r\n          }),\r\n        ),\r\n      );\r\n    }\r\n\r\n    updateMatrixWorld(force) {\r\n      let scale = -this.plane.constant;\r\n      if (Math.abs(scale) < 1e-8) scale = 1e-8; // sign does not matter\r\n\r\n      this.scale.set(0.5 * this.size, 0.5 * this.size, scale);\r\n      this.children[0].material.side = scale < 0 ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\r\n\r\n      this.lookAt(this.plane.normal);\r\n      super.updateMatrixWorld(force);\r\n    }\r\n  }\r\n\r\n  const _axis = /*@__PURE__*/ new Vector3();\r\n\r\n  let _lineGeometry, _coneGeometry;\r\n\r\n  class ArrowHelper extends Object3D {\r\n    // dir is assumed to be normalized\r\n    constructor(\r\n      dir = new Vector3(0, 0, 1),\r\n      origin = new Vector3(0, 0, 0),\r\n      length = 1,\r\n      color = 0xffff00,\r\n      headLength = length * 0.2,\r\n      headWidth = headLength * 0.2,\r\n    ) {\r\n      super();\r\n      this.type = 'ArrowHelper';\r\n\r\n      if (_lineGeometry === undefined) {\r\n        _lineGeometry = new BufferGeometry();\r\n\r\n        _lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\r\n\r\n        _coneGeometry = new CylinderGeometry(0, 0.5, 1, 5, 1);\r\n\r\n        _coneGeometry.translate(0, -0.5, 0);\r\n      }\r\n\r\n      this.position.copy(origin);\r\n      this.line = new Line(\r\n        _lineGeometry,\r\n        new LineBasicMaterial({\r\n          color: color,\r\n          toneMapped: false,\r\n        }),\r\n      );\r\n      this.line.matrixAutoUpdate = false;\r\n      this.add(this.line);\r\n      this.cone = new Mesh(\r\n        _coneGeometry,\r\n        new MeshBasicMaterial({\r\n          color: color,\r\n          toneMapped: false,\r\n        }),\r\n      );\r\n      this.cone.matrixAutoUpdate = false;\r\n      this.add(this.cone);\r\n      this.setDirection(dir);\r\n      this.setLength(length, headLength, headWidth);\r\n    }\r\n\r\n    setDirection(dir) {\r\n      // dir is assumed to be normalized\r\n      if (dir.y > 0.99999) {\r\n        this.quaternion.set(0, 0, 0, 1);\r\n      } else if (dir.y < -0.99999) {\r\n        this.quaternion.set(1, 0, 0, 0);\r\n      } else {\r\n        _axis.set(dir.z, 0, -dir.x).normalize();\r\n\r\n        const radians = Math.acos(dir.y);\r\n        this.quaternion.setFromAxisAngle(_axis, radians);\r\n      }\r\n    }\r\n\r\n    setLength(length, headLength = length * 0.2, headWidth = headLength * 0.2) {\r\n      this.line.scale.set(1, Math.max(0.0001, length - headLength), 1); // see #17458\r\n\r\n      this.line.updateMatrix();\r\n      this.cone.scale.set(headWidth, headLength, headWidth);\r\n      this.cone.position.y = length;\r\n      this.cone.updateMatrix();\r\n    }\r\n\r\n    setColor(color) {\r\n      this.line.material.color.set(color);\r\n      this.cone.material.color.set(color);\r\n    }\r\n\r\n    copy(source) {\r\n      super.copy(source, false);\r\n      this.line.copy(source.line);\r\n      this.cone.copy(source.cone);\r\n      return this;\r\n    }\r\n  }\r\n\r\n  class AxesHelper extends LineSegments {\r\n    constructor(size = 1) {\r\n      const vertices = [0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size];\r\n      const colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\r\n      const geometry = new BufferGeometry();\r\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n      geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\r\n      const material = new LineBasicMaterial({\r\n        vertexColors: true,\r\n        toneMapped: false,\r\n      });\r\n      super(geometry, material);\r\n      this.type = 'AxesHelper';\r\n    }\r\n\r\n    dispose() {\r\n      this.geometry.dispose();\r\n      this.material.dispose();\r\n    }\r\n  }\r\n\r\n  const _floatView = new Float32Array(1);\r\n\r\n  const _int32View = new Int32Array(_floatView.buffer);\r\n\r\n  class DataUtils {\r\n    // Converts float32 to float16 (stored as uint16 value).\r\n    static toHalfFloat(val) {\r\n      // Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\r\n\r\n      /* This method is faster than the OpenEXR implementation (very often\r\n       * used, eg. in Ogre), with the additional benefit of rounding, inspired\r\n       * by James Tursa?s half-precision code. */\r\n      _floatView[0] = val;\r\n      const x = _int32View[0];\r\n      let bits = (x >> 16) & 0x8000;\r\n      /* Get the sign */\r\n\r\n      let m = (x >> 12) & 0x07ff;\r\n      /* Keep one extra bit for rounding */\r\n\r\n      const e = (x >> 23) & 0xff;\r\n      /* Using int is faster here */\r\n\r\n      /* If zero, or denormal, or exponent underflows too much for a denormal\r\n       * half, return signed zero. */\r\n\r\n      if (e < 103) return bits;\r\n      /* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\r\n\r\n      if (e > 142) {\r\n        bits |= 0x7c00;\r\n        /* If exponent was 0xff and one mantissa bit was set, it means NaN,\r\n         * not Inf, so make sure we set one mantissa bit too. */\r\n\r\n        bits |= (e == 255 ? 0 : 1) && x & 0x007fffff;\r\n        return bits;\r\n      }\r\n      /* If exponent underflows but not too much, return a denormal */\r\n\r\n      if (e < 113) {\r\n        m |= 0x0800;\r\n        /* Extra rounding may overflow and set mantissa to 0 and exponent\r\n         * to 1, which is OK. */\r\n\r\n        bits |= (m >> (114 - e)) + ((m >> (113 - e)) & 1);\r\n        return bits;\r\n      }\r\n\r\n      bits |= ((e - 112) << 10) | (m >> 1);\r\n      /* Extra rounding. An overflow will set mantissa to 0 and increment\r\n       * the exponent, which is OK. */\r\n\r\n      bits += m & 1;\r\n      return bits;\r\n    }\r\n  }\r\n\r\n  const LOD_MIN = 4;\r\n  const LOD_MAX = 8;\r\n  const SIZE_MAX = Math.pow(2, LOD_MAX); // The standard deviations (radians) associated with the extra mips. These are\r\n  // chosen to approximate a Trowbridge-Reitz distribution function times the\r\n  // geometric shadowing function. These sigma values squared must match the\r\n  // variance #defines in cube_uv_reflection_fragment.glsl.js.\r\n\r\n  const EXTRA_LOD_SIGMA = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582];\r\n  const TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length; // The maximum length of the blur for loop. Smaller sigmas will use fewer\r\n  // samples and exit early, but not recompile the shader.\r\n\r\n  const MAX_SAMPLES = 20;\r\n  const ENCODINGS = {\r\n    [LinearEncoding]: 0,\r\n    [sRGBEncoding]: 1,\r\n    [RGBEEncoding]: 2,\r\n    [RGBM7Encoding]: 3,\r\n    [RGBM16Encoding]: 4,\r\n    [RGBDEncoding]: 5,\r\n    [GammaEncoding]: 6,\r\n  };\r\n  const backgroundMaterial = new MeshBasicMaterial({\r\n    side: BackSide,\r\n    depthWrite: false,\r\n    depthTest: false,\r\n  });\r\n  const backgroundBox = new Mesh(new BoxGeometry(), backgroundMaterial);\r\n\r\n  const _flatCamera = /*@__PURE__*/ new OrthographicCamera();\r\n\r\n  const { _lodPlanes, _sizeLods, _sigmas } = /*@__PURE__*/ _createPlanes();\r\n\r\n  const _clearColor = /*@__PURE__*/ new Color();\r\n\r\n  let _oldTarget = null; // Golden Ratio\r\n\r\n  const PHI = (1 + Math.sqrt(5)) / 2;\r\n  const INV_PHI = 1 / PHI; // Vertices of a dodecahedron (except the opposites, which represent the\r\n  // same axis), used as axis directions evenly spread on a sphere.\r\n\r\n  const _axisDirections = [\r\n    /*@__PURE__*/ new Vector3(1, 1, 1),\r\n    /*@__PURE__*/ new Vector3(-1, 1, 1),\r\n    /*@__PURE__*/ new Vector3(1, 1, -1),\r\n    /*@__PURE__*/ new Vector3(-1, 1, -1),\r\n    /*@__PURE__*/ new Vector3(0, PHI, INV_PHI),\r\n    /*@__PURE__*/ new Vector3(0, PHI, -INV_PHI),\r\n    /*@__PURE__*/ new Vector3(INV_PHI, 0, PHI),\r\n    /*@__PURE__*/ new Vector3(-INV_PHI, 0, PHI),\r\n    /*@__PURE__*/ new Vector3(PHI, INV_PHI, 0),\r\n    /*@__PURE__*/ new Vector3(-PHI, INV_PHI, 0),\r\n  ];\r\n  /**\r\n   * This class generates a Prefiltered, Mipmapped Radiance Environment Map\r\n   * (PMREM) from a cubeMap environment texture. This allows different levels of\r\n   * blur to be quickly accessed based on material roughness. It is packed into a\r\n   * special CubeUV format that allows us to perform custom interpolation so that\r\n   * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\r\n   * chain, it only goes down to the LOD_MIN level (above), and then creates extra\r\n   * even more filtered 'mips' at the same LOD_MIN resolution, associated with\r\n   * higher roughness levels. In this way we maintain resolution to smoothly\r\n   * interpolate diffuse lighting while limiting sampling computation.\r\n   *\r\n   * Paper: Fast, Accurate Image-Based Lighting\r\n   * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\r\n   */\r\n\r\n  function convertLinearToRGBE(color) {\r\n    const maxComponent = Math.max(color.r, color.g, color.b);\r\n    const fExp = Math.min(Math.max(Math.ceil(Math.log2(maxComponent)), -128.0), 127.0);\r\n    color.multiplyScalar(Math.pow(2.0, -fExp));\r\n    const alpha = (fExp + 128.0) / 255.0;\r\n    return alpha;\r\n  }\r\n\r\n  class PMREMGenerator {\r\n    constructor(renderer) {\r\n      this._renderer = renderer;\r\n      this._pingPongRenderTarget = null;\r\n      this._blurMaterial = _getBlurShader(MAX_SAMPLES);\r\n      this._equirectShader = null;\r\n      this._cubemapShader = null;\r\n\r\n      this._compileMaterial(this._blurMaterial);\r\n    }\r\n    /**\r\n     * Generates a PMREM from a supplied Scene, which can be faster than using an\r\n     * image if networking bandwidth is low. Optional sigma specifies a blur radius\r\n     * in radians to be applied to the scene before PMREM generation. Optional near\r\n     * and far planes ensure the scene is rendered in its entirety (the cubeCamera\r\n     * is placed at the origin).\r\n     */\r\n\r\n    fromScene(scene, sigma = 0, near = 0.1, far = 100) {\r\n      _oldTarget = this._renderer.getRenderTarget();\r\n\r\n      const cubeUVRenderTarget = this._allocateTargets();\r\n\r\n      this._sceneToCubeUV(scene, near, far, cubeUVRenderTarget);\r\n\r\n      if (sigma > 0) {\r\n        this._blur(cubeUVRenderTarget, 0, 0, sigma);\r\n      }\r\n\r\n      this._applyPMREM(cubeUVRenderTarget);\r\n\r\n      this._cleanup(cubeUVRenderTarget);\r\n\r\n      return cubeUVRenderTarget;\r\n    }\r\n    /**\r\n     * Generates a PMREM from an equirectangular texture, which can be either LDR\r\n     * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\r\n     * as this matches best with the 256 x 256 cubemap output.\r\n     */\r\n\r\n    fromEquirectangular(equirectangular) {\r\n      return this._fromTexture(equirectangular);\r\n    }\r\n    /**\r\n     * Generates a PMREM from an cubemap texture, which can be either LDR\r\n     * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\r\n     * as this matches best with the 256 x 256 cubemap output.\r\n     */\r\n\r\n    fromCubemap(cubemap) {\r\n      return this._fromTexture(cubemap);\r\n    }\r\n    /**\r\n     * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\r\n     * your texture's network fetch for increased concurrency.\r\n     */\r\n\r\n    compileCubemapShader() {\r\n      if (this._cubemapShader === null) {\r\n        this._cubemapShader = _getCubemapShader();\r\n\r\n        this._compileMaterial(this._cubemapShader);\r\n      }\r\n    }\r\n    /**\r\n     * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\r\n     * your texture's network fetch for increased concurrency.\r\n     */\r\n\r\n    compileEquirectangularShader() {\r\n      if (this._equirectShader === null) {\r\n        this._equirectShader = _getEquirectShader();\r\n\r\n        this._compileMaterial(this._equirectShader);\r\n      }\r\n    }\r\n    /**\r\n     * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\r\n     * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\r\n     * one of them will cause any others to also become unusable.\r\n     */\r\n\r\n    dispose() {\r\n      this._blurMaterial.dispose();\r\n\r\n      if (this._cubemapShader !== null) this._cubemapShader.dispose();\r\n      if (this._equirectShader !== null) this._equirectShader.dispose();\r\n\r\n      for (let i = 0; i < _lodPlanes.length; i++) {\r\n        _lodPlanes[i].dispose();\r\n      }\r\n    } // private interface\r\n\r\n    _cleanup(outputTarget) {\r\n      this._pingPongRenderTarget.dispose();\r\n\r\n      this._renderer.setRenderTarget(_oldTarget);\r\n\r\n      outputTarget.scissorTest = false;\r\n\r\n      _setViewport(outputTarget, 0, 0, outputTarget.width, outputTarget.height);\r\n    }\r\n\r\n    _fromTexture(texture) {\r\n      _oldTarget = this._renderer.getRenderTarget();\r\n\r\n      const cubeUVRenderTarget = this._allocateTargets(texture);\r\n\r\n      this._textureToCubeUV(texture, cubeUVRenderTarget);\r\n\r\n      this._applyPMREM(cubeUVRenderTarget);\r\n\r\n      this._cleanup(cubeUVRenderTarget);\r\n\r\n      return cubeUVRenderTarget;\r\n    }\r\n\r\n    _allocateTargets(texture) {\r\n      // warning: null texture is valid\r\n      const params = {\r\n        magFilter: NearestFilter,\r\n        minFilter: NearestFilter,\r\n        generateMipmaps: false,\r\n        type: UnsignedByteType,\r\n        format: RGBEFormat,\r\n        encoding: _isLDR(texture) ? texture.encoding : RGBEEncoding,\r\n        depthBuffer: false,\r\n      };\r\n\r\n      const cubeUVRenderTarget = _createRenderTarget(params);\r\n\r\n      cubeUVRenderTarget.depthBuffer = texture ? false : true;\r\n      this._pingPongRenderTarget = _createRenderTarget(params);\r\n      return cubeUVRenderTarget;\r\n    }\r\n\r\n    _compileMaterial(material) {\r\n      const tmpMesh = new Mesh(_lodPlanes[0], material);\r\n\r\n      this._renderer.compile(tmpMesh, _flatCamera);\r\n    }\r\n\r\n    _sceneToCubeUV(scene, near, far, cubeUVRenderTarget) {\r\n      const fov = 90;\r\n      const aspect = 1;\r\n      const cubeCamera = new PerspectiveCamera(fov, aspect, near, far);\r\n      const upSign = [1, -1, 1, 1, 1, 1];\r\n      const forwardSign = [1, 1, 1, -1, -1, -1];\r\n      const renderer = this._renderer;\r\n      const originalAutoClear = renderer.autoClear;\r\n      const outputEncoding = renderer.outputEncoding;\r\n      const toneMapping = renderer.toneMapping;\r\n      renderer.getClearColor(_clearColor);\r\n      renderer.toneMapping = NoToneMapping;\r\n      renderer.outputEncoding = LinearEncoding;\r\n      renderer.autoClear = false;\r\n      let useSolidColor = false;\r\n      const background = scene.background;\r\n\r\n      if (background) {\r\n        if (background.isColor) {\r\n          backgroundMaterial.color.copy(background).convertSRGBToLinear();\r\n          scene.background = null;\r\n          const alpha = convertLinearToRGBE(backgroundMaterial.color);\r\n          backgroundMaterial.opacity = alpha;\r\n          useSolidColor = true;\r\n        }\r\n      } else {\r\n        backgroundMaterial.color.copy(_clearColor).convertSRGBToLinear();\r\n        const alpha = convertLinearToRGBE(backgroundMaterial.color);\r\n        backgroundMaterial.opacity = alpha;\r\n        useSolidColor = true;\r\n      }\r\n\r\n      for (let i = 0; i < 6; i++) {\r\n        const col = i % 3;\r\n\r\n        if (col == 0) {\r\n          cubeCamera.up.set(0, upSign[i], 0);\r\n          cubeCamera.lookAt(forwardSign[i], 0, 0);\r\n        } else if (col == 1) {\r\n          cubeCamera.up.set(0, 0, upSign[i]);\r\n          cubeCamera.lookAt(0, forwardSign[i], 0);\r\n        } else {\r\n          cubeCamera.up.set(0, upSign[i], 0);\r\n          cubeCamera.lookAt(0, 0, forwardSign[i]);\r\n        }\r\n\r\n        _setViewport(cubeUVRenderTarget, col * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX);\r\n\r\n        renderer.setRenderTarget(cubeUVRenderTarget);\r\n\r\n        if (useSolidColor) {\r\n          renderer.render(backgroundBox, cubeCamera);\r\n        }\r\n\r\n        renderer.render(scene, cubeCamera);\r\n      }\r\n\r\n      renderer.toneMapping = toneMapping;\r\n      renderer.outputEncoding = outputEncoding;\r\n      renderer.autoClear = originalAutoClear;\r\n    }\r\n\r\n    _textureToCubeUV(texture, cubeUVRenderTarget) {\r\n      const renderer = this._renderer;\r\n\r\n      if (texture.isCubeTexture) {\r\n        if (this._cubemapShader == null) {\r\n          this._cubemapShader = _getCubemapShader();\r\n        }\r\n      } else {\r\n        if (this._equirectShader == null) {\r\n          this._equirectShader = _getEquirectShader();\r\n        }\r\n      }\r\n\r\n      const material = texture.isCubeTexture ? this._cubemapShader : this._equirectShader;\r\n      const mesh = new Mesh(_lodPlanes[0], material);\r\n      const uniforms = material.uniforms;\r\n      uniforms['envMap'].value = texture;\r\n\r\n      if (!texture.isCubeTexture) {\r\n        uniforms['texelSize'].value.set(1.0 / texture.image.width, 1.0 / texture.image.height);\r\n      }\r\n\r\n      uniforms['inputEncoding'].value = ENCODINGS[texture.encoding];\r\n      uniforms['outputEncoding'].value = ENCODINGS[cubeUVRenderTarget.texture.encoding];\r\n\r\n      _setViewport(cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX);\r\n\r\n      renderer.setRenderTarget(cubeUVRenderTarget);\r\n      renderer.render(mesh, _flatCamera);\r\n    }\r\n\r\n    _applyPMREM(cubeUVRenderTarget) {\r\n      const renderer = this._renderer;\r\n      const autoClear = renderer.autoClear;\r\n      renderer.autoClear = false;\r\n\r\n      for (let i = 1; i < TOTAL_LODS; i++) {\r\n        const sigma = Math.sqrt(_sigmas[i] * _sigmas[i] - _sigmas[i - 1] * _sigmas[i - 1]);\r\n        const poleAxis = _axisDirections[(i - 1) % _axisDirections.length];\r\n\r\n        this._blur(cubeUVRenderTarget, i - 1, i, sigma, poleAxis);\r\n      }\r\n\r\n      renderer.autoClear = autoClear;\r\n    }\r\n    /**\r\n     * This is a two-pass Gaussian blur for a cubemap. Normally this is done\r\n     * vertically and horizontally, but this breaks down on a cube. Here we apply\r\n     * the blur latitudinally (around the poles), and then longitudinally (towards\r\n     * the poles) to approximate the orthogonally-separable blur. It is least\r\n     * accurate at the poles, but still does a decent job.\r\n     */\r\n\r\n    _blur(cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis) {\r\n      const pingPongRenderTarget = this._pingPongRenderTarget;\r\n\r\n      this._halfBlur(\r\n        cubeUVRenderTarget,\r\n        pingPongRenderTarget,\r\n        lodIn,\r\n        lodOut,\r\n        sigma,\r\n        'latitudinal',\r\n        poleAxis,\r\n      );\r\n\r\n      this._halfBlur(\r\n        pingPongRenderTarget,\r\n        cubeUVRenderTarget,\r\n        lodOut,\r\n        lodOut,\r\n        sigma,\r\n        'longitudinal',\r\n        poleAxis,\r\n      );\r\n    }\r\n\r\n    _halfBlur(targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis) {\r\n      const renderer = this._renderer;\r\n      const blurMaterial = this._blurMaterial;\r\n\r\n      if (direction !== 'latitudinal' && direction !== 'longitudinal') {\r\n        console.error('blur direction must be either latitudinal or longitudinal!');\r\n      } // Number of standard deviations at which to cut off the discrete approximation.\r\n\r\n      const STANDARD_DEVIATIONS = 3;\r\n      const blurMesh = new Mesh(_lodPlanes[lodOut], blurMaterial);\r\n      const blurUniforms = blurMaterial.uniforms;\r\n      const pixels = _sizeLods[lodIn] - 1;\r\n      const radiansPerPixel = isFinite(sigmaRadians)\r\n        ? Math.PI / (2 * pixels)\r\n        : (2 * Math.PI) / (2 * MAX_SAMPLES - 1);\r\n      const sigmaPixels = sigmaRadians / radiansPerPixel;\r\n      const samples = isFinite(sigmaRadians)\r\n        ? 1 + Math.floor(STANDARD_DEVIATIONS * sigmaPixels)\r\n        : MAX_SAMPLES;\r\n\r\n      if (samples > MAX_SAMPLES) {\r\n        console.warn(\r\n          `sigmaRadians, ${sigmaRadians}, is too large and will clip, as it requested ${samples} samples when the maximum is set to ${MAX_SAMPLES}`,\r\n        );\r\n      }\r\n\r\n      const weights = [];\r\n      let sum = 0;\r\n\r\n      for (let i = 0; i < MAX_SAMPLES; ++i) {\r\n        const x = i / sigmaPixels;\r\n        const weight = Math.exp((-x * x) / 2);\r\n        weights.push(weight);\r\n\r\n        if (i == 0) {\r\n          sum += weight;\r\n        } else if (i < samples) {\r\n          sum += 2 * weight;\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < weights.length; i++) {\r\n        weights[i] = weights[i] / sum;\r\n      }\r\n\r\n      blurUniforms['envMap'].value = targetIn.texture;\r\n      blurUniforms['samples'].value = samples;\r\n      blurUniforms['weights'].value = weights;\r\n      blurUniforms['latitudinal'].value = direction === 'latitudinal';\r\n\r\n      if (poleAxis) {\r\n        blurUniforms['poleAxis'].value = poleAxis;\r\n      }\r\n\r\n      blurUniforms['dTheta'].value = radiansPerPixel;\r\n      blurUniforms['mipInt'].value = LOD_MAX - lodIn;\r\n      blurUniforms['inputEncoding'].value = ENCODINGS[targetIn.texture.encoding];\r\n      blurUniforms['outputEncoding'].value = ENCODINGS[targetIn.texture.encoding];\r\n      const outputSize = _sizeLods[lodOut];\r\n      const x = 3 * Math.max(0, SIZE_MAX - 2 * outputSize);\r\n      const y =\r\n        (lodOut === 0 ? 0 : 2 * SIZE_MAX) +\r\n        2 * outputSize * (lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0);\r\n\r\n      _setViewport(targetOut, x, y, 3 * outputSize, 2 * outputSize);\r\n\r\n      renderer.setRenderTarget(targetOut);\r\n      renderer.render(blurMesh, _flatCamera);\r\n    }\r\n  }\r\n\r\n  function _isLDR(texture) {\r\n    if (texture === undefined || texture.type !== UnsignedByteType) return false;\r\n    return (\r\n      texture.encoding === LinearEncoding ||\r\n      texture.encoding === sRGBEncoding ||\r\n      texture.encoding === GammaEncoding\r\n    );\r\n  }\r\n\r\n  function _createPlanes() {\r\n    const _lodPlanes = [];\r\n    const _sizeLods = [];\r\n    const _sigmas = [];\r\n    let lod = LOD_MAX;\r\n\r\n    for (let i = 0; i < TOTAL_LODS; i++) {\r\n      const sizeLod = Math.pow(2, lod);\r\n\r\n      _sizeLods.push(sizeLod);\r\n\r\n      let sigma = 1.0 / sizeLod;\r\n\r\n      if (i > LOD_MAX - LOD_MIN) {\r\n        sigma = EXTRA_LOD_SIGMA[i - LOD_MAX + LOD_MIN - 1];\r\n      } else if (i == 0) {\r\n        sigma = 0;\r\n      }\r\n\r\n      _sigmas.push(sigma);\r\n\r\n      const texelSize = 1.0 / (sizeLod - 1);\r\n      const min = -texelSize / 2;\r\n      const max = 1 + texelSize / 2;\r\n      const uv1 = [min, min, max, min, max, max, min, min, max, max, min, max];\r\n      const cubeFaces = 6;\r\n      const vertices = 6;\r\n      const positionSize = 3;\r\n      const uvSize = 2;\r\n      const faceIndexSize = 1;\r\n      const position = new Float32Array(positionSize * vertices * cubeFaces);\r\n      const uv = new Float32Array(uvSize * vertices * cubeFaces);\r\n      const faceIndex = new Float32Array(faceIndexSize * vertices * cubeFaces);\r\n\r\n      for (let face = 0; face < cubeFaces; face++) {\r\n        const x = ((face % 3) * 2) / 3 - 1;\r\n        const y = face > 2 ? 0 : -1;\r\n        const coordinates = [\r\n          x,\r\n          y,\r\n          0,\r\n          x + 2 / 3,\r\n          y,\r\n          0,\r\n          x + 2 / 3,\r\n          y + 1,\r\n          0,\r\n          x,\r\n          y,\r\n          0,\r\n          x + 2 / 3,\r\n          y + 1,\r\n          0,\r\n          x,\r\n          y + 1,\r\n          0,\r\n        ];\r\n        position.set(coordinates, positionSize * vertices * face);\r\n        uv.set(uv1, uvSize * vertices * face);\r\n        const fill = [face, face, face, face, face, face];\r\n        faceIndex.set(fill, faceIndexSize * vertices * face);\r\n      }\r\n\r\n      const planes = new BufferGeometry();\r\n      planes.setAttribute('position', new BufferAttribute(position, positionSize));\r\n      planes.setAttribute('uv', new BufferAttribute(uv, uvSize));\r\n      planes.setAttribute('faceIndex', new BufferAttribute(faceIndex, faceIndexSize));\r\n\r\n      _lodPlanes.push(planes);\r\n\r\n      if (lod > LOD_MIN) {\r\n        lod--;\r\n      }\r\n    }\r\n\r\n    return {\r\n      _lodPlanes,\r\n      _sizeLods,\r\n      _sigmas,\r\n    };\r\n  }\r\n\r\n  function _createRenderTarget(params) {\r\n    const cubeUVRenderTarget = new WebGLRenderTarget(3 * SIZE_MAX, 3 * SIZE_MAX, params);\r\n    cubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\r\n    cubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\r\n    cubeUVRenderTarget.scissorTest = true;\r\n    return cubeUVRenderTarget;\r\n  }\r\n\r\n  function _setViewport(target, x, y, width, height) {\r\n    target.viewport.set(x, y, width, height);\r\n    target.scissor.set(x, y, width, height);\r\n  }\r\n\r\n  function _getBlurShader(maxSamples) {\r\n    const weights = new Float32Array(maxSamples);\r\n    const poleAxis = new Vector3(0, 1, 0);\r\n    const shaderMaterial = new RawShaderMaterial({\r\n      name: 'SphericalGaussianBlur',\r\n      defines: {\r\n        n: maxSamples,\r\n      },\r\n      uniforms: {\r\n        envMap: {\r\n          value: null,\r\n        },\r\n        samples: {\r\n          value: 1,\r\n        },\r\n        weights: {\r\n          value: weights,\r\n        },\r\n        latitudinal: {\r\n          value: false,\r\n        },\r\n        dTheta: {\r\n          value: 0,\r\n        },\r\n        mipInt: {\r\n          value: 0,\r\n        },\r\n        poleAxis: {\r\n          value: poleAxis,\r\n        },\r\n        inputEncoding: {\r\n          value: ENCODINGS[LinearEncoding],\r\n        },\r\n        outputEncoding: {\r\n          value: ENCODINGS[LinearEncoding],\r\n        },\r\n      },\r\n      vertexShader: _getCommonVertexShader(),\r\n      fragmentShader:\r\n        /* glsl */\r\n        `\r\n\r\n\t\t\tprecision mediump float;\r\n\t\t\tprecision mediump int;\r\n\r\n\t\t\tvarying vec3 vOutputDirection;\r\n\r\n\t\t\tuniform sampler2D envMap;\r\n\t\t\tuniform int samples;\r\n\t\t\tuniform float weights[ n ];\r\n\t\t\tuniform bool latitudinal;\r\n\t\t\tuniform float dTheta;\r\n\t\t\tuniform float mipInt;\r\n\t\t\tuniform vec3 poleAxis;\r\n\r\n\t\t\t${_getEncodings()}\r\n\r\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\r\n\t\t\t#include <cube_uv_reflection_fragment>\r\n\r\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\r\n\r\n\t\t\t\tfloat cosTheta = cos( theta );\r\n\t\t\t\t// Rodrigues' axis-angle rotation\r\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\r\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\r\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\r\n\r\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvoid main() {\r\n\r\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\r\n\r\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\r\n\r\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\taxis = normalize( axis );\r\n\r\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\r\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\r\n\r\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\r\n\r\n\t\t\t\t\tif ( i >= samples ) {\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfloat theta = dTheta * float( i );\r\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\r\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\r\n\r\n\t\t\t}\r\n\t\t`,\r\n      blending: NoBlending,\r\n      depthTest: false,\r\n      depthWrite: false,\r\n    });\r\n    return shaderMaterial;\r\n  }\r\n\r\n  function _getEquirectShader() {\r\n    const texelSize = new Vector2(1, 1);\r\n    const shaderMaterial = new RawShaderMaterial({\r\n      name: 'EquirectangularToCubeUV',\r\n      uniforms: {\r\n        envMap: {\r\n          value: null,\r\n        },\r\n        texelSize: {\r\n          value: texelSize,\r\n        },\r\n        inputEncoding: {\r\n          value: ENCODINGS[LinearEncoding],\r\n        },\r\n        outputEncoding: {\r\n          value: ENCODINGS[LinearEncoding],\r\n        },\r\n      },\r\n      vertexShader: _getCommonVertexShader(),\r\n      fragmentShader:\r\n        /* glsl */\r\n        `\r\n\r\n\t\t\tprecision mediump float;\r\n\t\t\tprecision mediump int;\r\n\r\n\t\t\tvarying vec3 vOutputDirection;\r\n\r\n\t\t\tuniform sampler2D envMap;\r\n\t\t\tuniform vec2 texelSize;\r\n\r\n\t\t\t${_getEncodings()}\r\n\r\n\t\t\t#include <common>\r\n\r\n\t\t\tvoid main() {\r\n\r\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\r\n\r\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\r\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\r\n\r\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\r\n\t\t\t\tuv -= f * texelSize;\r\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\r\n\t\t\t\tuv.x += texelSize.x;\r\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\r\n\t\t\t\tuv.y += texelSize.y;\r\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\r\n\t\t\t\tuv.x -= texelSize.x;\r\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\r\n\r\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\r\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\r\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\r\n\r\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\r\n\r\n\t\t\t}\r\n\t\t`,\r\n      blending: NoBlending,\r\n      depthTest: false,\r\n      depthWrite: false,\r\n    });\r\n    return shaderMaterial;\r\n  }\r\n\r\n  function _getCubemapShader() {\r\n    const shaderMaterial = new RawShaderMaterial({\r\n      name: 'CubemapToCubeUV',\r\n      uniforms: {\r\n        envMap: {\r\n          value: null,\r\n        },\r\n        inputEncoding: {\r\n          value: ENCODINGS[LinearEncoding],\r\n        },\r\n        outputEncoding: {\r\n          value: ENCODINGS[LinearEncoding],\r\n        },\r\n      },\r\n      vertexShader: _getCommonVertexShader(),\r\n      fragmentShader:\r\n        /* glsl */\r\n        `\r\n\r\n\t\t\tprecision mediump float;\r\n\t\t\tprecision mediump int;\r\n\r\n\t\t\tvarying vec3 vOutputDirection;\r\n\r\n\t\t\tuniform samplerCube envMap;\r\n\r\n\t\t\t${_getEncodings()}\r\n\r\n\t\t\tvoid main() {\r\n\r\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\r\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\r\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\r\n\r\n\t\t\t}\r\n\t\t`,\r\n      blending: NoBlending,\r\n      depthTest: false,\r\n      depthWrite: false,\r\n    });\r\n    return shaderMaterial;\r\n  }\r\n\r\n  function _getCommonVertexShader() {\r\n    return (\r\n      /* glsl */\r\n      `\r\n\r\n\t\tprecision mediump float;\r\n\t\tprecision mediump int;\r\n\r\n\t\tattribute vec3 position;\r\n\t\tattribute vec2 uv;\r\n\t\tattribute float faceIndex;\r\n\r\n\t\tvarying vec3 vOutputDirection;\r\n\r\n\t\t// RH coordinate system; PMREM face-indexing convention\r\n\t\tvec3 getDirection( vec2 uv, float face ) {\r\n\r\n\t\t\tuv = 2.0 * uv - 1.0;\r\n\r\n\t\t\tvec3 direction = vec3( uv, 1.0 );\r\n\r\n\t\t\tif ( face == 0.0 ) {\r\n\r\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\r\n\r\n\t\t\t} else if ( face == 1.0 ) {\r\n\r\n\t\t\t\tdirection = direction.xzy;\r\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\r\n\r\n\t\t\t} else if ( face == 2.0 ) {\r\n\r\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\r\n\r\n\t\t\t} else if ( face == 3.0 ) {\r\n\r\n\t\t\t\tdirection = direction.zyx;\r\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\r\n\r\n\t\t\t} else if ( face == 4.0 ) {\r\n\r\n\t\t\t\tdirection = direction.xzy;\r\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\r\n\r\n\t\t\t} else if ( face == 5.0 ) {\r\n\r\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn direction;\r\n\r\n\t\t}\r\n\r\n\t\tvoid main() {\r\n\r\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\r\n\t\t\tgl_Position = vec4( position, 1.0 );\r\n\r\n\t\t}\r\n\t`\r\n    );\r\n  }\r\n\r\n  function _getEncodings() {\r\n    return (\r\n      /* glsl */\r\n      `\r\n\r\n\t\tuniform int inputEncoding;\r\n\t\tuniform int outputEncoding;\r\n\r\n\t\t#include <encodings_pars_fragment>\r\n\r\n\t\tvec4 inputTexelToLinear( vec4 value ) {\r\n\r\n\t\t\tif ( inputEncoding == 0 ) {\r\n\r\n\t\t\t\treturn value;\r\n\r\n\t\t\t} else if ( inputEncoding == 1 ) {\r\n\r\n\t\t\t\treturn sRGBToLinear( value );\r\n\r\n\t\t\t} else if ( inputEncoding == 2 ) {\r\n\r\n\t\t\t\treturn RGBEToLinear( value );\r\n\r\n\t\t\t} else if ( inputEncoding == 3 ) {\r\n\r\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\r\n\r\n\t\t\t} else if ( inputEncoding == 4 ) {\r\n\r\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\r\n\r\n\t\t\t} else if ( inputEncoding == 5 ) {\r\n\r\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn GammaToLinear( value, 2.2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvec4 linearToOutputTexel( vec4 value ) {\r\n\r\n\t\t\tif ( outputEncoding == 0 ) {\r\n\r\n\t\t\t\treturn value;\r\n\r\n\t\t\t} else if ( outputEncoding == 1 ) {\r\n\r\n\t\t\t\treturn LinearTosRGB( value );\r\n\r\n\t\t\t} else if ( outputEncoding == 2 ) {\r\n\r\n\t\t\t\treturn LinearToRGBE( value );\r\n\r\n\t\t\t} else if ( outputEncoding == 3 ) {\r\n\r\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\r\n\r\n\t\t\t} else if ( outputEncoding == 4 ) {\r\n\r\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\r\n\r\n\t\t\t} else if ( outputEncoding == 5 ) {\r\n\r\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn LinearToGamma( value, 2.2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\r\n\r\n\t\t\treturn inputTexelToLinear( color );\r\n\r\n\t\t}\r\n\t`\r\n    );\r\n  }\r\n\r\n  const LineStrip = 0;\r\n  const LinePieces = 1;\r\n  const NoColors = 0;\r\n  const FaceColors = 1;\r\n  const VertexColors = 2;\r\n  function MeshFaceMaterial(materials) {\r\n    console.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');\r\n    return materials;\r\n  }\r\n  function MultiMaterial(materials = []) {\r\n    console.warn('THREE.MultiMaterial has been removed. Use an Array instead.');\r\n    materials.isMultiMaterial = true;\r\n    materials.materials = materials;\r\n\r\n    materials.clone = function () {\r\n      return materials.slice();\r\n    };\r\n\r\n    return materials;\r\n  }\r\n  function PointCloud(geometry, material) {\r\n    console.warn('THREE.PointCloud has been renamed to THREE.Points.');\r\n    return new Points(geometry, material);\r\n  }\r\n  function Particle(material) {\r\n    console.warn('THREE.Particle has been renamed to THREE.Sprite.');\r\n    return new Sprite(material);\r\n  }\r\n  function ParticleSystem(geometry, material) {\r\n    console.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\r\n    return new Points(geometry, material);\r\n  }\r\n  function PointCloudMaterial(parameters) {\r\n    console.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\r\n    return new PointsMaterial(parameters);\r\n  }\r\n  function ParticleBasicMaterial(parameters) {\r\n    console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\r\n    return new PointsMaterial(parameters);\r\n  }\r\n  function ParticleSystemMaterial(parameters) {\r\n    console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\r\n    return new PointsMaterial(parameters);\r\n  }\r\n  function Vertex(x, y, z) {\r\n    console.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\r\n    return new Vector3(x, y, z);\r\n  } //\r\n\r\n  function DynamicBufferAttribute(array, itemSize) {\r\n    console.warn(\r\n      'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.',\r\n    );\r\n    return new BufferAttribute(array, itemSize).setUsage(DynamicDrawUsage);\r\n  }\r\n  function Int8Attribute(array, itemSize) {\r\n    console.warn(\r\n      'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.',\r\n    );\r\n    return new Int8BufferAttribute(array, itemSize);\r\n  }\r\n  function Uint8Attribute(array, itemSize) {\r\n    console.warn(\r\n      'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.',\r\n    );\r\n    return new Uint8BufferAttribute(array, itemSize);\r\n  }\r\n  function Uint8ClampedAttribute(array, itemSize) {\r\n    console.warn(\r\n      'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.',\r\n    );\r\n    return new Uint8ClampedBufferAttribute(array, itemSize);\r\n  }\r\n  function Int16Attribute(array, itemSize) {\r\n    console.warn(\r\n      'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.',\r\n    );\r\n    return new Int16BufferAttribute(array, itemSize);\r\n  }\r\n  function Uint16Attribute(array, itemSize) {\r\n    console.warn(\r\n      'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.',\r\n    );\r\n    return new Uint16BufferAttribute(array, itemSize);\r\n  }\r\n  function Int32Attribute(array, itemSize) {\r\n    console.warn(\r\n      'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.',\r\n    );\r\n    return new Int32BufferAttribute(array, itemSize);\r\n  }\r\n  function Uint32Attribute(array, itemSize) {\r\n    console.warn(\r\n      'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.',\r\n    );\r\n    return new Uint32BufferAttribute(array, itemSize);\r\n  }\r\n  function Float32Attribute(array, itemSize) {\r\n    console.warn(\r\n      'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.',\r\n    );\r\n    return new Float32BufferAttribute(array, itemSize);\r\n  }\r\n  function Float64Attribute(array, itemSize) {\r\n    console.warn(\r\n      'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.',\r\n    );\r\n    return new Float64BufferAttribute(array, itemSize);\r\n  } //\r\n\r\n  Curve.create = function (construct, getPoint) {\r\n    console.log('THREE.Curve.create() has been deprecated');\r\n    construct.prototype = Object.create(Curve.prototype);\r\n    construct.prototype.constructor = construct;\r\n    construct.prototype.getPoint = getPoint;\r\n    return construct;\r\n  }; //\r\n\r\n  Path.prototype.fromPoints = function (points) {\r\n    console.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');\r\n    return this.setFromPoints(points);\r\n  }; //\r\n\r\n  function AxisHelper(size) {\r\n    console.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');\r\n    return new AxesHelper(size);\r\n  }\r\n  function BoundingBoxHelper(object, color) {\r\n    console.warn(\r\n      'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.',\r\n    );\r\n    return new BoxHelper(object, color);\r\n  }\r\n  function EdgesHelper(object, hex) {\r\n    console.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');\r\n    return new LineSegments(\r\n      new EdgesGeometry(object.geometry),\r\n      new LineBasicMaterial({\r\n        color: hex !== undefined ? hex : 0xffffff,\r\n      }),\r\n    );\r\n  }\r\n\r\n  GridHelper.prototype.setColors = function () {\r\n    console.error(\r\n      'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.',\r\n    );\r\n  };\r\n\r\n  SkeletonHelper.prototype.update = function () {\r\n    console.error('THREE.SkeletonHelper: update() no longer needs to be called.');\r\n  };\r\n\r\n  function WireframeHelper(object, hex) {\r\n    console.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');\r\n    return new LineSegments(\r\n      new WireframeGeometry(object.geometry),\r\n      new LineBasicMaterial({\r\n        color: hex !== undefined ? hex : 0xffffff,\r\n      }),\r\n    );\r\n  } //\r\n\r\n  Loader.prototype.extractUrlBase = function (url) {\r\n    console.warn(\r\n      'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.',\r\n    );\r\n    return LoaderUtils.extractUrlBase(url);\r\n  };\r\n\r\n  Loader.Handlers = {\r\n    add: function () /* regex, loader */\r\n    {\r\n      console.error(\r\n        'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.',\r\n      );\r\n    },\r\n    get: function () /* file */\r\n    {\r\n      console.error(\r\n        'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.',\r\n      );\r\n    },\r\n  };\r\n  function XHRLoader(manager) {\r\n    console.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');\r\n    return new FileLoader(manager);\r\n  }\r\n  function BinaryTextureLoader(manager) {\r\n    console.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');\r\n    return new DataTextureLoader(manager);\r\n  } //\r\n\r\n  Box2.prototype.center = function (optionalTarget) {\r\n    console.warn('THREE.Box2: .center() has been renamed to .getCenter().');\r\n    return this.getCenter(optionalTarget);\r\n  };\r\n\r\n  Box2.prototype.empty = function () {\r\n    console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\r\n    return this.isEmpty();\r\n  };\r\n\r\n  Box2.prototype.isIntersectionBox = function (box) {\r\n    console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\r\n    return this.intersectsBox(box);\r\n  };\r\n\r\n  Box2.prototype.size = function (optionalTarget) {\r\n    console.warn('THREE.Box2: .size() has been renamed to .getSize().');\r\n    return this.getSize(optionalTarget);\r\n  }; //\r\n\r\n  Box3.prototype.center = function (optionalTarget) {\r\n    console.warn('THREE.Box3: .center() has been renamed to .getCenter().');\r\n    return this.getCenter(optionalTarget);\r\n  };\r\n\r\n  Box3.prototype.empty = function () {\r\n    console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\r\n    return this.isEmpty();\r\n  };\r\n\r\n  Box3.prototype.isIntersectionBox = function (box) {\r\n    console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\r\n    return this.intersectsBox(box);\r\n  };\r\n\r\n  Box3.prototype.isIntersectionSphere = function (sphere) {\r\n    console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\r\n    return this.intersectsSphere(sphere);\r\n  };\r\n\r\n  Box3.prototype.size = function (optionalTarget) {\r\n    console.warn('THREE.Box3: .size() has been renamed to .getSize().');\r\n    return this.getSize(optionalTarget);\r\n  }; //\r\n\r\n  Sphere.prototype.empty = function () {\r\n    console.warn('THREE.Sphere: .empty() has been renamed to .isEmpty().');\r\n    return this.isEmpty();\r\n  }; //\r\n\r\n  Frustum.prototype.setFromMatrix = function (m) {\r\n    console.warn('THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().');\r\n    return this.setFromProjectionMatrix(m);\r\n  }; //\r\n\r\n  Line3.prototype.center = function (optionalTarget) {\r\n    console.warn('THREE.Line3: .center() has been renamed to .getCenter().');\r\n    return this.getCenter(optionalTarget);\r\n  }; //\r\n\r\n  Matrix3.prototype.flattenToArrayOffset = function (array, offset) {\r\n    console.warn(\r\n      'THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.',\r\n    );\r\n    return this.toArray(array, offset);\r\n  };\r\n\r\n  Matrix3.prototype.multiplyVector3 = function (vector) {\r\n    console.warn(\r\n      'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.',\r\n    );\r\n    return vector.applyMatrix3(this);\r\n  };\r\n\r\n  Matrix3.prototype.multiplyVector3Array = function () /* a */\r\n  {\r\n    console.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');\r\n  };\r\n\r\n  Matrix3.prototype.applyToBufferAttribute = function (attribute) {\r\n    console.warn(\r\n      'THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.',\r\n    );\r\n    return attribute.applyMatrix3(this);\r\n  };\r\n\r\n  Matrix3.prototype.applyToVector3Array = function () /* array, offset, length */\r\n  {\r\n    console.error('THREE.Matrix3: .applyToVector3Array() has been removed.');\r\n  };\r\n\r\n  Matrix3.prototype.getInverse = function (matrix) {\r\n    console.warn(\r\n      'THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.',\r\n    );\r\n    return this.copy(matrix).invert();\r\n  }; //\r\n\r\n  Matrix4.prototype.extractPosition = function (m) {\r\n    console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\r\n    return this.copyPosition(m);\r\n  };\r\n\r\n  Matrix4.prototype.flattenToArrayOffset = function (array, offset) {\r\n    console.warn(\r\n      'THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.',\r\n    );\r\n    return this.toArray(array, offset);\r\n  };\r\n\r\n  Matrix4.prototype.getPosition = function () {\r\n    console.warn(\r\n      'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.',\r\n    );\r\n    return new Vector3().setFromMatrixColumn(this, 3);\r\n  };\r\n\r\n  Matrix4.prototype.setRotationFromQuaternion = function (q) {\r\n    console.warn(\r\n      'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().',\r\n    );\r\n    return this.makeRotationFromQuaternion(q);\r\n  };\r\n\r\n  Matrix4.prototype.multiplyToArray = function () {\r\n    console.warn('THREE.Matrix4: .multiplyToArray() has been removed.');\r\n  };\r\n\r\n  Matrix4.prototype.multiplyVector3 = function (vector) {\r\n    console.warn(\r\n      'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.',\r\n    );\r\n    return vector.applyMatrix4(this);\r\n  };\r\n\r\n  Matrix4.prototype.multiplyVector4 = function (vector) {\r\n    console.warn(\r\n      'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.',\r\n    );\r\n    return vector.applyMatrix4(this);\r\n  };\r\n\r\n  Matrix4.prototype.multiplyVector3Array = function () /* a */\r\n  {\r\n    console.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');\r\n  };\r\n\r\n  Matrix4.prototype.rotateAxis = function (v) {\r\n    console.warn(\r\n      'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.',\r\n    );\r\n    v.transformDirection(this);\r\n  };\r\n\r\n  Matrix4.prototype.crossVector = function (vector) {\r\n    console.warn(\r\n      'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.',\r\n    );\r\n    return vector.applyMatrix4(this);\r\n  };\r\n\r\n  Matrix4.prototype.translate = function () {\r\n    console.error('THREE.Matrix4: .translate() has been removed.');\r\n  };\r\n\r\n  Matrix4.prototype.rotateX = function () {\r\n    console.error('THREE.Matrix4: .rotateX() has been removed.');\r\n  };\r\n\r\n  Matrix4.prototype.rotateY = function () {\r\n    console.error('THREE.Matrix4: .rotateY() has been removed.');\r\n  };\r\n\r\n  Matrix4.prototype.rotateZ = function () {\r\n    console.error('THREE.Matrix4: .rotateZ() has been removed.');\r\n  };\r\n\r\n  Matrix4.prototype.rotateByAxis = function () {\r\n    console.error('THREE.Matrix4: .rotateByAxis() has been removed.');\r\n  };\r\n\r\n  Matrix4.prototype.applyToBufferAttribute = function (attribute) {\r\n    console.warn(\r\n      'THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.',\r\n    );\r\n    return attribute.applyMatrix4(this);\r\n  };\r\n\r\n  Matrix4.prototype.applyToVector3Array = function () /* array, offset, length */\r\n  {\r\n    console.error('THREE.Matrix4: .applyToVector3Array() has been removed.');\r\n  };\r\n\r\n  Matrix4.prototype.makeFrustum = function (left, right, bottom, top, near, far) {\r\n    console.warn(\r\n      'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.',\r\n    );\r\n    return this.makePerspective(left, right, top, bottom, near, far);\r\n  };\r\n\r\n  Matrix4.prototype.getInverse = function (matrix) {\r\n    console.warn(\r\n      'THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.',\r\n    );\r\n    return this.copy(matrix).invert();\r\n  }; //\r\n\r\n  Plane.prototype.isIntersectionLine = function (line) {\r\n    console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\r\n    return this.intersectsLine(line);\r\n  }; //\r\n\r\n  Quaternion.prototype.multiplyVector3 = function (vector) {\r\n    console.warn(\r\n      'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.',\r\n    );\r\n    return vector.applyQuaternion(this);\r\n  };\r\n\r\n  Quaternion.prototype.inverse = function () {\r\n    console.warn('THREE.Quaternion: .inverse() has been renamed to invert().');\r\n    return this.invert();\r\n  }; //\r\n\r\n  Ray.prototype.isIntersectionBox = function (box) {\r\n    console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\r\n    return this.intersectsBox(box);\r\n  };\r\n\r\n  Ray.prototype.isIntersectionPlane = function (plane) {\r\n    console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\r\n    return this.intersectsPlane(plane);\r\n  };\r\n\r\n  Ray.prototype.isIntersectionSphere = function (sphere) {\r\n    console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\r\n    return this.intersectsSphere(sphere);\r\n  }; //\r\n\r\n  Triangle.prototype.area = function () {\r\n    console.warn('THREE.Triangle: .area() has been renamed to .getArea().');\r\n    return this.getArea();\r\n  };\r\n\r\n  Triangle.prototype.barycoordFromPoint = function (point, target) {\r\n    console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\r\n    return this.getBarycoord(point, target);\r\n  };\r\n\r\n  Triangle.prototype.midpoint = function (target) {\r\n    console.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');\r\n    return this.getMidpoint(target);\r\n  };\r\n\r\n  Triangle.prototypenormal = function (target) {\r\n    console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\r\n    return this.getNormal(target);\r\n  };\r\n\r\n  Triangle.prototype.plane = function (target) {\r\n    console.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');\r\n    return this.getPlane(target);\r\n  };\r\n\r\n  Triangle.barycoordFromPoint = function (point, a, b, c, target) {\r\n    console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\r\n    return Triangle.getBarycoord(point, a, b, c, target);\r\n  };\r\n\r\n  Triangle.normal = function (a, b, c, target) {\r\n    console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\r\n    return Triangle.getNormal(a, b, c, target);\r\n  }; //\r\n\r\n  Shape.prototype.extractAllPoints = function (divisions) {\r\n    console.warn(\r\n      'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.',\r\n    );\r\n    return this.extractPoints(divisions);\r\n  };\r\n\r\n  Shape.prototype.extrude = function (options) {\r\n    console.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');\r\n    return new ExtrudeGeometry(this, options);\r\n  };\r\n\r\n  Shape.prototype.makeGeometry = function (options) {\r\n    console.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');\r\n    return new ShapeGeometry(this, options);\r\n  }; //\r\n\r\n  Vector2.prototype.fromAttribute = function (attribute, index, offset) {\r\n    console.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');\r\n    return this.fromBufferAttribute(attribute, index, offset);\r\n  };\r\n\r\n  Vector2.prototype.distanceToManhattan = function (v) {\r\n    console.warn(\r\n      'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().',\r\n    );\r\n    return this.manhattanDistanceTo(v);\r\n  };\r\n\r\n  Vector2.prototype.lengthManhattan = function () {\r\n    console.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');\r\n    return this.manhattanLength();\r\n  }; //\r\n\r\n  Vector3.prototype.setEulerFromRotationMatrix = function () {\r\n    console.error(\r\n      'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.',\r\n    );\r\n  };\r\n\r\n  Vector3.prototype.setEulerFromQuaternion = function () {\r\n    console.error(\r\n      'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.',\r\n    );\r\n  };\r\n\r\n  Vector3.prototype.getPositionFromMatrix = function (m) {\r\n    console.warn(\r\n      'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().',\r\n    );\r\n    return this.setFromMatrixPosition(m);\r\n  };\r\n\r\n  Vector3.prototype.getScaleFromMatrix = function (m) {\r\n    console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\r\n    return this.setFromMatrixScale(m);\r\n  };\r\n\r\n  Vector3.prototype.getColumnFromMatrix = function (index, matrix) {\r\n    console.warn(\r\n      'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().',\r\n    );\r\n    return this.setFromMatrixColumn(matrix, index);\r\n  };\r\n\r\n  Vector3.prototype.applyProjection = function (m) {\r\n    console.warn(\r\n      'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.',\r\n    );\r\n    return this.applyMatrix4(m);\r\n  };\r\n\r\n  Vector3.prototype.fromAttribute = function (attribute, index, offset) {\r\n    console.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');\r\n    return this.fromBufferAttribute(attribute, index, offset);\r\n  };\r\n\r\n  Vector3.prototype.distanceToManhattan = function (v) {\r\n    console.warn(\r\n      'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().',\r\n    );\r\n    return this.manhattanDistanceTo(v);\r\n  };\r\n\r\n  Vector3.prototype.lengthManhattan = function () {\r\n    console.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');\r\n    return this.manhattanLength();\r\n  }; //\r\n\r\n  Vector4.prototype.fromAttribute = function (attribute, index, offset) {\r\n    console.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');\r\n    return this.fromBufferAttribute(attribute, index, offset);\r\n  };\r\n\r\n  Vector4.prototype.lengthManhattan = function () {\r\n    console.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');\r\n    return this.manhattanLength();\r\n  }; //\r\n\r\n  Object3D.prototype.getChildByName = function (name) {\r\n    console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\r\n    return this.getObjectByName(name);\r\n  };\r\n\r\n  Object3D.prototype.renderDepth = function () {\r\n    console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\r\n  };\r\n\r\n  Object3D.prototype.translate = function (distance, axis) {\r\n    console.warn(\r\n      'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.',\r\n    );\r\n    return this.translateOnAxis(axis, distance);\r\n  };\r\n\r\n  Object3D.prototype.getWorldRotation = function () {\r\n    console.error(\r\n      'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.',\r\n    );\r\n  };\r\n\r\n  Object3D.prototype.applyMatrix = function (matrix) {\r\n    console.warn('THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().');\r\n    return this.applyMatrix4(matrix);\r\n  };\r\n\r\n  Object.defineProperties(Object3D.prototype, {\r\n    eulerOrder: {\r\n      get: function () {\r\n        console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\r\n        return this.rotation.order;\r\n      },\r\n      set: function (value) {\r\n        console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\r\n        this.rotation.order = value;\r\n      },\r\n    },\r\n    useQuaternion: {\r\n      get: function () {\r\n        console.warn(\r\n          'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.',\r\n        );\r\n      },\r\n      set: function () {\r\n        console.warn(\r\n          'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.',\r\n        );\r\n      },\r\n    },\r\n  });\r\n\r\n  Mesh.prototype.setDrawMode = function () {\r\n    console.error(\r\n      'THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.',\r\n    );\r\n  };\r\n\r\n  Object.defineProperties(Mesh.prototype, {\r\n    drawMode: {\r\n      get: function () {\r\n        console.error(\r\n          'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.',\r\n        );\r\n        return TrianglesDrawMode;\r\n      },\r\n      set: function () {\r\n        console.error(\r\n          'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.',\r\n        );\r\n      },\r\n    },\r\n  });\r\n\r\n  SkinnedMesh.prototype.initBones = function () {\r\n    console.error('THREE.SkinnedMesh: initBones() has been removed.');\r\n  }; //\r\n\r\n  PerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\r\n    console.warn(\r\n      'THREE.PerspectiveCamera.setLens is deprecated. ' +\r\n        'Use .setFocalLength and .filmGauge for a photographic setup.',\r\n    );\r\n    if (filmGauge !== undefined) this.filmGauge = filmGauge;\r\n    this.setFocalLength(focalLength);\r\n  }; //\r\n\r\n  Object.defineProperties(Light.prototype, {\r\n    onlyShadow: {\r\n      set: function () {\r\n        console.warn('THREE.Light: .onlyShadow has been removed.');\r\n      },\r\n    },\r\n    shadowCameraFov: {\r\n      set: function (value) {\r\n        console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\r\n        this.shadow.camera.fov = value;\r\n      },\r\n    },\r\n    shadowCameraLeft: {\r\n      set: function (value) {\r\n        console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\r\n        this.shadow.camera.left = value;\r\n      },\r\n    },\r\n    shadowCameraRight: {\r\n      set: function (value) {\r\n        console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\r\n        this.shadow.camera.right = value;\r\n      },\r\n    },\r\n    shadowCameraTop: {\r\n      set: function (value) {\r\n        console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\r\n        this.shadow.camera.top = value;\r\n      },\r\n    },\r\n    shadowCameraBottom: {\r\n      set: function (value) {\r\n        console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\r\n        this.shadow.camera.bottom = value;\r\n      },\r\n    },\r\n    shadowCameraNear: {\r\n      set: function (value) {\r\n        console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\r\n        this.shadow.camera.near = value;\r\n      },\r\n    },\r\n    shadowCameraFar: {\r\n      set: function (value) {\r\n        console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\r\n        this.shadow.camera.far = value;\r\n      },\r\n    },\r\n    shadowCameraVisible: {\r\n      set: function () {\r\n        console.warn(\r\n          'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.',\r\n        );\r\n      },\r\n    },\r\n    shadowBias: {\r\n      set: function (value) {\r\n        console.warn('THREE.Light: .shadowBias is now .shadow.bias.');\r\n        this.shadow.bias = value;\r\n      },\r\n    },\r\n    shadowDarkness: {\r\n      set: function () {\r\n        console.warn('THREE.Light: .shadowDarkness has been removed.');\r\n      },\r\n    },\r\n    shadowMapWidth: {\r\n      set: function (value) {\r\n        console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\r\n        this.shadow.mapSize.width = value;\r\n      },\r\n    },\r\n    shadowMapHeight: {\r\n      set: function (value) {\r\n        console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\r\n        this.shadow.mapSize.height = value;\r\n      },\r\n    },\r\n  }); //\r\n\r\n  Object.defineProperties(BufferAttribute.prototype, {\r\n    length: {\r\n      get: function () {\r\n        console.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');\r\n        return this.array.length;\r\n      },\r\n    },\r\n    dynamic: {\r\n      get: function () {\r\n        console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\r\n        return this.usage === DynamicDrawUsage;\r\n      },\r\n      set: function () /* value */\r\n      {\r\n        console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\r\n        this.setUsage(DynamicDrawUsage);\r\n      },\r\n    },\r\n  });\r\n\r\n  BufferAttribute.prototype.setDynamic = function (value) {\r\n    console.warn(\r\n      'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.',\r\n    );\r\n    this.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\r\n    return this;\r\n  };\r\n\r\n  (BufferAttribute.prototype.copyIndicesArray = function () /* indices */\r\n  {\r\n    console.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');\r\n  }),\r\n    (BufferAttribute.prototype.setArray = function () /* array */\r\n    {\r\n      console.error(\r\n        'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers',\r\n      );\r\n    }); //\r\n\r\n  BufferGeometry.prototype.addIndex = function (index) {\r\n    console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\r\n    this.setIndex(index);\r\n  };\r\n\r\n  BufferGeometry.prototype.addAttribute = function (name, attribute) {\r\n    console.warn('THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().');\r\n\r\n    if (\r\n      !(attribute && attribute.isBufferAttribute) &&\r\n      !(attribute && attribute.isInterleavedBufferAttribute)\r\n    ) {\r\n      console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\r\n      return this.setAttribute(name, new BufferAttribute(arguments[1], arguments[2]));\r\n    }\r\n\r\n    if (name === 'index') {\r\n      console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\r\n      this.setIndex(attribute);\r\n      return this;\r\n    }\r\n\r\n    return this.setAttribute(name, attribute);\r\n  };\r\n\r\n  BufferGeometry.prototype.addDrawCall = function (start, count, indexOffset) {\r\n    if (indexOffset !== undefined) {\r\n      console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\r\n    }\r\n\r\n    console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\r\n    this.addGroup(start, count);\r\n  };\r\n\r\n  BufferGeometry.prototype.clearDrawCalls = function () {\r\n    console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\r\n    this.clearGroups();\r\n  };\r\n\r\n  BufferGeometry.prototype.computeOffsets = function () {\r\n    console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\r\n  };\r\n\r\n  BufferGeometry.prototype.removeAttribute = function (name) {\r\n    console.warn(\r\n      'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().',\r\n    );\r\n    return this.deleteAttribute(name);\r\n  };\r\n\r\n  BufferGeometry.prototype.applyMatrix = function (matrix) {\r\n    console.warn('THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().');\r\n    return this.applyMatrix4(matrix);\r\n  };\r\n\r\n  Object.defineProperties(BufferGeometry.prototype, {\r\n    drawcalls: {\r\n      get: function () {\r\n        console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\r\n        return this.groups;\r\n      },\r\n    },\r\n    offsets: {\r\n      get: function () {\r\n        console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\r\n        return this.groups;\r\n      },\r\n    },\r\n  });\r\n\r\n  InterleavedBuffer.prototype.setDynamic = function (value) {\r\n    console.warn(\r\n      'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.',\r\n    );\r\n    this.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\r\n    return this;\r\n  };\r\n\r\n  InterleavedBuffer.prototype.setArray = function () /* array */\r\n  {\r\n    console.error(\r\n      'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers',\r\n    );\r\n  }; //\r\n\r\n  ExtrudeGeometry.prototype.getArrays = function () {\r\n    console.error('THREE.ExtrudeGeometry: .getArrays() has been removed.');\r\n  };\r\n\r\n  ExtrudeGeometry.prototype.addShapeList = function () {\r\n    console.error('THREE.ExtrudeGeometry: .addShapeList() has been removed.');\r\n  };\r\n\r\n  ExtrudeGeometry.prototype.addShape = function () {\r\n    console.error('THREE.ExtrudeGeometry: .addShape() has been removed.');\r\n  }; //\r\n\r\n  Scene.prototype.dispose = function () {\r\n    console.error('THREE.Scene: .dispose() has been removed.');\r\n  }; //\r\n\r\n  Uniform.prototype.onUpdate = function () {\r\n    console.warn(\r\n      'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.',\r\n    );\r\n    return this;\r\n  }; //\r\n\r\n  Object.defineProperties(Material.prototype, {\r\n    wrapAround: {\r\n      get: function () {\r\n        console.warn('THREE.Material: .wrapAround has been removed.');\r\n      },\r\n      set: function () {\r\n        console.warn('THREE.Material: .wrapAround has been removed.');\r\n      },\r\n    },\r\n    overdraw: {\r\n      get: function () {\r\n        console.warn('THREE.Material: .overdraw has been removed.');\r\n      },\r\n      set: function () {\r\n        console.warn('THREE.Material: .overdraw has been removed.');\r\n      },\r\n    },\r\n    wrapRGB: {\r\n      get: function () {\r\n        console.warn('THREE.Material: .wrapRGB has been removed.');\r\n        return new Color();\r\n      },\r\n    },\r\n    shading: {\r\n      get: function () {\r\n        console.error(\r\n          'THREE.' +\r\n            this.type +\r\n            ': .shading has been removed. Use the boolean .flatShading instead.',\r\n        );\r\n      },\r\n      set: function (value) {\r\n        console.warn(\r\n          'THREE.' +\r\n            this.type +\r\n            ': .shading has been removed. Use the boolean .flatShading instead.',\r\n        );\r\n        this.flatShading = value === FlatShading;\r\n      },\r\n    },\r\n    stencilMask: {\r\n      get: function () {\r\n        console.warn(\r\n          'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.',\r\n        );\r\n        return this.stencilFuncMask;\r\n      },\r\n      set: function (value) {\r\n        console.warn(\r\n          'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.',\r\n        );\r\n        this.stencilFuncMask = value;\r\n      },\r\n    },\r\n  });\r\n  Object.defineProperties(ShaderMaterial.prototype, {\r\n    derivatives: {\r\n      get: function () {\r\n        console.warn(\r\n          'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.',\r\n        );\r\n        return this.extensions.derivatives;\r\n      },\r\n      set: function (value) {\r\n        console.warn(\r\n          'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.',\r\n        );\r\n        this.extensions.derivatives = value;\r\n      },\r\n    },\r\n  }); //\r\n\r\n  WebGLRenderer.prototype.clearTarget = function (renderTarget, color, depth, stencil) {\r\n    console.warn(\r\n      'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.',\r\n    );\r\n    this.setRenderTarget(renderTarget);\r\n    this.clear(color, depth, stencil);\r\n  };\r\n\r\n  WebGLRenderer.prototype.animate = function (callback) {\r\n    console.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');\r\n    this.setAnimationLoop(callback);\r\n  };\r\n\r\n  WebGLRenderer.prototype.getCurrentRenderTarget = function () {\r\n    console.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');\r\n    return this.getRenderTarget();\r\n  };\r\n\r\n  WebGLRenderer.prototype.getMaxAnisotropy = function () {\r\n    console.warn(\r\n      'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().',\r\n    );\r\n    return this.capabilities.getMaxAnisotropy();\r\n  };\r\n\r\n  WebGLRenderer.prototype.getPrecision = function () {\r\n    console.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');\r\n    return this.capabilities.precision;\r\n  };\r\n\r\n  WebGLRenderer.prototype.resetGLState = function () {\r\n    console.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');\r\n    return this.state.reset();\r\n  };\r\n\r\n  WebGLRenderer.prototype.supportsFloatTextures = function () {\r\n    console.warn(\r\n      \"THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).\",\r\n    );\r\n    return this.extensions.get('OES_texture_float');\r\n  };\r\n\r\n  WebGLRenderer.prototype.supportsHalfFloatTextures = function () {\r\n    console.warn(\r\n      \"THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).\",\r\n    );\r\n    return this.extensions.get('OES_texture_half_float');\r\n  };\r\n\r\n  WebGLRenderer.prototype.supportsStandardDerivatives = function () {\r\n    console.warn(\r\n      \"THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).\",\r\n    );\r\n    return this.extensions.get('OES_standard_derivatives');\r\n  };\r\n\r\n  WebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\r\n    console.warn(\r\n      \"THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).\",\r\n    );\r\n    return this.extensions.get('WEBGL_compressed_texture_s3tc');\r\n  };\r\n\r\n  WebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\r\n    console.warn(\r\n      \"THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).\",\r\n    );\r\n    return this.extensions.get('WEBGL_compressed_texture_pvrtc');\r\n  };\r\n\r\n  WebGLRenderer.prototype.supportsBlendMinMax = function () {\r\n    console.warn(\r\n      \"THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).\",\r\n    );\r\n    return this.extensions.get('EXT_blend_minmax');\r\n  };\r\n\r\n  WebGLRenderer.prototype.supportsVertexTextures = function () {\r\n    console.warn(\r\n      'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.',\r\n    );\r\n    return this.capabilities.vertexTextures;\r\n  };\r\n\r\n  WebGLRenderer.prototype.supportsInstancedArrays = function () {\r\n    console.warn(\r\n      \"THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).\",\r\n    );\r\n    return this.extensions.get('ANGLE_instanced_arrays');\r\n  };\r\n\r\n  WebGLRenderer.prototype.enableScissorTest = function (boolean) {\r\n    console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\r\n    this.setScissorTest(boolean);\r\n  };\r\n\r\n  WebGLRenderer.prototype.initMaterial = function () {\r\n    console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\r\n  };\r\n\r\n  WebGLRenderer.prototype.addPrePlugin = function () {\r\n    console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\r\n  };\r\n\r\n  WebGLRenderer.prototype.addPostPlugin = function () {\r\n    console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\r\n  };\r\n\r\n  WebGLRenderer.prototype.updateShadowMap = function () {\r\n    console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\r\n  };\r\n\r\n  WebGLRenderer.prototype.setFaceCulling = function () {\r\n    console.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');\r\n  };\r\n\r\n  WebGLRenderer.prototype.allocTextureUnit = function () {\r\n    console.warn('THREE.WebGLRenderer: .allocTextureUnit() has been removed.');\r\n  };\r\n\r\n  WebGLRenderer.prototype.setTexture = function () {\r\n    console.warn('THREE.WebGLRenderer: .setTexture() has been removed.');\r\n  };\r\n\r\n  WebGLRenderer.prototype.setTexture2D = function () {\r\n    console.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.');\r\n  };\r\n\r\n  WebGLRenderer.prototype.setTextureCube = function () {\r\n    console.warn('THREE.WebGLRenderer: .setTextureCube() has been removed.');\r\n  };\r\n\r\n  WebGLRenderer.prototype.getActiveMipMapLevel = function () {\r\n    console.warn('THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().');\r\n    return this.getActiveMipmapLevel();\r\n  };\r\n\r\n  Object.defineProperties(WebGLRenderer.prototype, {\r\n    shadowMapEnabled: {\r\n      get: function () {\r\n        return this.shadowMap.enabled;\r\n      },\r\n      set: function (value) {\r\n        console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\r\n        this.shadowMap.enabled = value;\r\n      },\r\n    },\r\n    shadowMapType: {\r\n      get: function () {\r\n        return this.shadowMap.type;\r\n      },\r\n      set: function (value) {\r\n        console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\r\n        this.shadowMap.type = value;\r\n      },\r\n    },\r\n    shadowMapCullFace: {\r\n      get: function () {\r\n        console.warn(\r\n          'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.',\r\n        );\r\n        return undefined;\r\n      },\r\n      set: function () /* value */\r\n      {\r\n        console.warn(\r\n          'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.',\r\n        );\r\n      },\r\n    },\r\n    context: {\r\n      get: function () {\r\n        console.warn('THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.');\r\n        return this.getContext();\r\n      },\r\n    },\r\n    vr: {\r\n      get: function () {\r\n        console.warn('THREE.WebGLRenderer: .vr has been renamed to .xr');\r\n        return this.xr;\r\n      },\r\n    },\r\n    gammaInput: {\r\n      get: function () {\r\n        console.warn(\r\n          'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.',\r\n        );\r\n        return false;\r\n      },\r\n      set: function () {\r\n        console.warn(\r\n          'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.',\r\n        );\r\n      },\r\n    },\r\n    gammaOutput: {\r\n      get: function () {\r\n        console.warn(\r\n          'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.',\r\n        );\r\n        return false;\r\n      },\r\n      set: function (value) {\r\n        console.warn(\r\n          'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.',\r\n        );\r\n        this.outputEncoding = value === true ? sRGBEncoding : LinearEncoding;\r\n      },\r\n    },\r\n    toneMappingWhitePoint: {\r\n      get: function () {\r\n        console.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\r\n        return 1.0;\r\n      },\r\n      set: function () {\r\n        console.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\r\n      },\r\n    },\r\n  });\r\n  Object.defineProperties(WebGLShadowMap.prototype, {\r\n    cullFace: {\r\n      get: function () {\r\n        console.warn(\r\n          'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.',\r\n        );\r\n        return undefined;\r\n      },\r\n      set: function () /* cullFace */\r\n      {\r\n        console.warn(\r\n          'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.',\r\n        );\r\n      },\r\n    },\r\n    renderReverseSided: {\r\n      get: function () {\r\n        console.warn(\r\n          'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.',\r\n        );\r\n        return undefined;\r\n      },\r\n      set: function () {\r\n        console.warn(\r\n          'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.',\r\n        );\r\n      },\r\n    },\r\n    renderSingleSided: {\r\n      get: function () {\r\n        console.warn(\r\n          'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.',\r\n        );\r\n        return undefined;\r\n      },\r\n      set: function () {\r\n        console.warn(\r\n          'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.',\r\n        );\r\n      },\r\n    },\r\n  });\r\n  function WebGLRenderTargetCube(width, height, options) {\r\n    console.warn(\r\n      'THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).',\r\n    );\r\n    return new WebGLCubeRenderTarget(width, options);\r\n  } //\r\n\r\n  Object.defineProperties(WebGLRenderTarget.prototype, {\r\n    wrapS: {\r\n      get: function () {\r\n        console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\r\n        return this.texture.wrapS;\r\n      },\r\n      set: function (value) {\r\n        console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\r\n        this.texture.wrapS = value;\r\n      },\r\n    },\r\n    wrapT: {\r\n      get: function () {\r\n        console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\r\n        return this.texture.wrapT;\r\n      },\r\n      set: function (value) {\r\n        console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\r\n        this.texture.wrapT = value;\r\n      },\r\n    },\r\n    magFilter: {\r\n      get: function () {\r\n        console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\r\n        return this.texture.magFilter;\r\n      },\r\n      set: function (value) {\r\n        console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\r\n        this.texture.magFilter = value;\r\n      },\r\n    },\r\n    minFilter: {\r\n      get: function () {\r\n        console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\r\n        return this.texture.minFilter;\r\n      },\r\n      set: function (value) {\r\n        console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\r\n        this.texture.minFilter = value;\r\n      },\r\n    },\r\n    anisotropy: {\r\n      get: function () {\r\n        console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\r\n        return this.texture.anisotropy;\r\n      },\r\n      set: function (value) {\r\n        console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\r\n        this.texture.anisotropy = value;\r\n      },\r\n    },\r\n    offset: {\r\n      get: function () {\r\n        console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\r\n        return this.texture.offset;\r\n      },\r\n      set: function (value) {\r\n        console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\r\n        this.texture.offset = value;\r\n      },\r\n    },\r\n    repeat: {\r\n      get: function () {\r\n        console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\r\n        return this.texture.repeat;\r\n      },\r\n      set: function (value) {\r\n        console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\r\n        this.texture.repeat = value;\r\n      },\r\n    },\r\n    format: {\r\n      get: function () {\r\n        console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\r\n        return this.texture.format;\r\n      },\r\n      set: function (value) {\r\n        console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\r\n        this.texture.format = value;\r\n      },\r\n    },\r\n    type: {\r\n      get: function () {\r\n        console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\r\n        return this.texture.type;\r\n      },\r\n      set: function (value) {\r\n        console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\r\n        this.texture.type = value;\r\n      },\r\n    },\r\n    generateMipmaps: {\r\n      get: function () {\r\n        console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\r\n        return this.texture.generateMipmaps;\r\n      },\r\n      set: function (value) {\r\n        console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\r\n        this.texture.generateMipmaps = value;\r\n      },\r\n    },\r\n  }); //\r\n\r\n  Audio.prototype.load = function (file) {\r\n    console.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');\r\n    const scope = this;\r\n    const audioLoader = new AudioLoader();\r\n    audioLoader.load(file, function (buffer) {\r\n      scope.setBuffer(buffer);\r\n    });\r\n    return this;\r\n  };\r\n\r\n  AudioAnalyser.prototype.getData = function () {\r\n    console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\r\n    return this.getFrequencyData();\r\n  }; //\r\n\r\n  CubeCamera.prototype.updateCubeMap = function (renderer, scene) {\r\n    console.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');\r\n    return this.update(renderer, scene);\r\n  };\r\n\r\n  CubeCamera.prototype.clear = function (renderer, color, depth, stencil) {\r\n    console.warn('THREE.CubeCamera: .clear() is now .renderTarget.clear().');\r\n    return this.renderTarget.clear(renderer, color, depth, stencil);\r\n  };\r\n\r\n  ImageUtils.crossOrigin = undefined;\r\n\r\n  ImageUtils.loadTexture = function (url, mapping, onLoad, onError) {\r\n    console.warn(\r\n      'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.',\r\n    );\r\n    const loader = new TextureLoader();\r\n    loader.setCrossOrigin(this.crossOrigin);\r\n    const texture = loader.load(url, onLoad, undefined, onError);\r\n    if (mapping) texture.mapping = mapping;\r\n    return texture;\r\n  };\r\n\r\n  ImageUtils.loadTextureCube = function (urls, mapping, onLoad, onError) {\r\n    console.warn(\r\n      'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.',\r\n    );\r\n    const loader = new CubeTextureLoader();\r\n    loader.setCrossOrigin(this.crossOrigin);\r\n    const texture = loader.load(urls, onLoad, undefined, onError);\r\n    if (mapping) texture.mapping = mapping;\r\n    return texture;\r\n  };\r\n\r\n  ImageUtils.loadCompressedTexture = function () {\r\n    console.error(\r\n      'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.',\r\n    );\r\n  };\r\n\r\n  ImageUtils.loadCompressedTextureCube = function () {\r\n    console.error(\r\n      'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.',\r\n    );\r\n  }; //\r\n\r\n  function CanvasRenderer() {\r\n    console.error('THREE.CanvasRenderer has been removed');\r\n  } //\r\n\r\n  function JSONLoader() {\r\n    console.error('THREE.JSONLoader has been removed.');\r\n  } //\r\n\r\n  const SceneUtils = {\r\n    createMultiMaterialObject: function () /* geometry, materials */\r\n    {\r\n      console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\r\n    },\r\n    detach: function () /* child, parent, scene */\r\n    {\r\n      console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\r\n    },\r\n    attach: function () /* child, scene, parent */\r\n    {\r\n      console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\r\n    },\r\n  }; //\r\n\r\n  function LensFlare() {\r\n    console.error('THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js');\r\n  }\r\n\r\n  if (typeof __THREE_DEVTOOLS__ !== 'undefined') {\r\n    /* eslint-disable no-undef */\r\n    __THREE_DEVTOOLS__.dispatchEvent(\r\n      new CustomEvent('register', {\r\n        detail: {\r\n          revision: REVISION,\r\n        },\r\n      }),\r\n    );\r\n    /* eslint-enable no-undef */\r\n  }\r\n\r\n  if (typeof window !== 'undefined') {\r\n    if (window.__THREE__) {\r\n      console.warn('WARNING: Multiple instances of Three.js being imported.');\r\n    } else {\r\n      window.__THREE__ = REVISION;\r\n    }\r\n  }\r\n\r\n  exports.ACESFilmicToneMapping = ACESFilmicToneMapping;\r\n  exports.AddEquation = AddEquation;\r\n  exports.AddOperation = AddOperation;\r\n  exports.AdditiveAnimationBlendMode = AdditiveAnimationBlendMode;\r\n  exports.AdditiveBlending = AdditiveBlending;\r\n  exports.AlphaFormat = AlphaFormat;\r\n  exports.AlwaysDepth = AlwaysDepth;\r\n  exports.AlwaysStencilFunc = AlwaysStencilFunc;\r\n  exports.AmbientLight = AmbientLight;\r\n  exports.AmbientLightProbe = AmbientLightProbe;\r\n  exports.AnimationClip = AnimationClip;\r\n  exports.AnimationLoader = AnimationLoader;\r\n  exports.AnimationMixer = AnimationMixer;\r\n  exports.AnimationObjectGroup = AnimationObjectGroup;\r\n  exports.AnimationUtils = AnimationUtils;\r\n  exports.ArcCurve = ArcCurve;\r\n  exports.ArrayCamera = ArrayCamera;\r\n  exports.ArrowHelper = ArrowHelper;\r\n  exports.Audio = Audio;\r\n  exports.AudioAnalyser = AudioAnalyser;\r\n  exports.AudioContext = AudioContext;\r\n  exports.AudioListener = AudioListener;\r\n  exports.AudioLoader = AudioLoader;\r\n  exports.AxesHelper = AxesHelper;\r\n  exports.AxisHelper = AxisHelper;\r\n  exports.BackSide = BackSide;\r\n  exports.BasicDepthPacking = BasicDepthPacking;\r\n  exports.BasicShadowMap = BasicShadowMap;\r\n  exports.BinaryTextureLoader = BinaryTextureLoader;\r\n  exports.Bone = Bone;\r\n  exports.BooleanKeyframeTrack = BooleanKeyframeTrack;\r\n  exports.BoundingBoxHelper = BoundingBoxHelper;\r\n  exports.Box2 = Box2;\r\n  exports.Box3 = Box3;\r\n  exports.Box3Helper = Box3Helper;\r\n  exports.BoxBufferGeometry = BoxGeometry;\r\n  exports.BoxGeometry = BoxGeometry;\r\n  exports.BoxHelper = BoxHelper;\r\n  exports.BufferAttribute = BufferAttribute;\r\n  exports.BufferGeometry = BufferGeometry;\r\n  exports.BufferGeometryLoader = BufferGeometryLoader;\r\n  exports.ByteType = ByteType;\r\n  exports.Cache = Cache;\r\n  exports.Camera = Camera;\r\n  exports.CameraHelper = CameraHelper;\r\n  exports.CanvasRenderer = CanvasRenderer;\r\n  exports.CanvasTexture = CanvasTexture;\r\n  exports.CatmullRomCurve3 = CatmullRomCurve3;\r\n  exports.CineonToneMapping = CineonToneMapping;\r\n  exports.CircleBufferGeometry = CircleGeometry;\r\n  exports.CircleGeometry = CircleGeometry;\r\n  exports.ClampToEdgeWrapping = ClampToEdgeWrapping;\r\n  exports.Clock = Clock;\r\n  exports.Color = Color;\r\n  exports.ColorKeyframeTrack = ColorKeyframeTrack;\r\n  exports.CompressedTexture = CompressedTexture;\r\n  exports.CompressedTextureLoader = CompressedTextureLoader;\r\n  exports.ConeBufferGeometry = ConeGeometry;\r\n  exports.ConeGeometry = ConeGeometry;\r\n  exports.CubeCamera = CubeCamera;\r\n  exports.CubeReflectionMapping = CubeReflectionMapping;\r\n  exports.CubeRefractionMapping = CubeRefractionMapping;\r\n  exports.CubeTexture = CubeTexture;\r\n  exports.CubeTextureLoader = CubeTextureLoader;\r\n  exports.CubeUVReflectionMapping = CubeUVReflectionMapping;\r\n  exports.CubeUVRefractionMapping = CubeUVRefractionMapping;\r\n  exports.CubicBezierCurve = CubicBezierCurve;\r\n  exports.CubicBezierCurve3 = CubicBezierCurve3;\r\n  exports.CubicInterpolant = CubicInterpolant;\r\n  exports.CullFaceBack = CullFaceBack;\r\n  exports.CullFaceFront = CullFaceFront;\r\n  exports.CullFaceFrontBack = CullFaceFrontBack;\r\n  exports.CullFaceNone = CullFaceNone;\r\n  exports.Curve = Curve;\r\n  exports.CurvePath = CurvePath;\r\n  exports.CustomBlending = CustomBlending;\r\n  exports.CustomToneMapping = CustomToneMapping;\r\n  exports.CylinderBufferGeometry = CylinderGeometry;\r\n  exports.CylinderGeometry = CylinderGeometry;\r\n  exports.Cylindrical = Cylindrical;\r\n  exports.DataTexture = DataTexture;\r\n  exports.DataTexture2DArray = DataTexture2DArray;\r\n  exports.DataTexture3D = DataTexture3D;\r\n  exports.DataTextureLoader = DataTextureLoader;\r\n  exports.DataUtils = DataUtils;\r\n  exports.DecrementStencilOp = DecrementStencilOp;\r\n  exports.DecrementWrapStencilOp = DecrementWrapStencilOp;\r\n  exports.DefaultLoadingManager = DefaultLoadingManager;\r\n  exports.DepthFormat = DepthFormat;\r\n  exports.DepthStencilFormat = DepthStencilFormat;\r\n  exports.DepthTexture = DepthTexture;\r\n  exports.DirectionalLight = DirectionalLight;\r\n  exports.DirectionalLightHelper = DirectionalLightHelper;\r\n  exports.DiscreteInterpolant = DiscreteInterpolant;\r\n  exports.DodecahedronBufferGeometry = DodecahedronGeometry;\r\n  exports.DodecahedronGeometry = DodecahedronGeometry;\r\n  exports.DoubleSide = DoubleSide;\r\n  exports.DstAlphaFactor = DstAlphaFactor;\r\n  exports.DstColorFactor = DstColorFactor;\r\n  exports.DynamicBufferAttribute = DynamicBufferAttribute;\r\n  exports.DynamicCopyUsage = DynamicCopyUsage;\r\n  exports.DynamicDrawUsage = DynamicDrawUsage;\r\n  exports.DynamicReadUsage = DynamicReadUsage;\r\n  exports.EdgesGeometry = EdgesGeometry;\r\n  exports.EdgesHelper = EdgesHelper;\r\n  exports.EllipseCurve = EllipseCurve;\r\n  exports.EqualDepth = EqualDepth;\r\n  exports.EqualStencilFunc = EqualStencilFunc;\r\n  exports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\r\n  exports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\r\n  exports.Euler = Euler;\r\n  exports.EventDispatcher = EventDispatcher;\r\n  exports.ExtrudeBufferGeometry = ExtrudeGeometry;\r\n  exports.ExtrudeGeometry = ExtrudeGeometry;\r\n  exports.FaceColors = FaceColors;\r\n  exports.FileLoader = FileLoader;\r\n  exports.FlatShading = FlatShading;\r\n  exports.Float16BufferAttribute = Float16BufferAttribute;\r\n  exports.Float32Attribute = Float32Attribute;\r\n  exports.Float32BufferAttribute = Float32BufferAttribute;\r\n  exports.Float64Attribute = Float64Attribute;\r\n  exports.Float64BufferAttribute = Float64BufferAttribute;\r\n  exports.FloatType = FloatType;\r\n  exports.Fog = Fog;\r\n  exports.FogExp2 = FogExp2;\r\n  exports.Font = Font;\r\n  exports.FontLoader = FontLoader;\r\n  exports.FrontSide = FrontSide;\r\n  exports.Frustum = Frustum;\r\n  exports.GLBufferAttribute = GLBufferAttribute;\r\n  exports.GLSL1 = GLSL1;\r\n  exports.GLSL3 = GLSL3;\r\n  exports.GammaEncoding = GammaEncoding;\r\n  exports.GreaterDepth = GreaterDepth;\r\n  exports.GreaterEqualDepth = GreaterEqualDepth;\r\n  exports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;\r\n  exports.GreaterStencilFunc = GreaterStencilFunc;\r\n  exports.GridHelper = GridHelper;\r\n  exports.Group = Group;\r\n  exports.HalfFloatType = HalfFloatType;\r\n  exports.HemisphereLight = HemisphereLight;\r\n  exports.HemisphereLightHelper = HemisphereLightHelper;\r\n  exports.HemisphereLightProbe = HemisphereLightProbe;\r\n  exports.IcosahedronBufferGeometry = IcosahedronGeometry;\r\n  exports.IcosahedronGeometry = IcosahedronGeometry;\r\n  exports.ImageBitmapLoader = ImageBitmapLoader;\r\n  exports.ImageLoader = ImageLoader;\r\n  exports.ImageUtils = ImageUtils;\r\n  exports.ImmediateRenderObject = ImmediateRenderObject;\r\n  exports.IncrementStencilOp = IncrementStencilOp;\r\n  exports.IncrementWrapStencilOp = IncrementWrapStencilOp;\r\n  exports.InstancedBufferAttribute = InstancedBufferAttribute;\r\n  exports.InstancedBufferGeometry = InstancedBufferGeometry;\r\n  exports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\r\n  exports.InstancedMesh = InstancedMesh;\r\n  exports.Int16Attribute = Int16Attribute;\r\n  exports.Int16BufferAttribute = Int16BufferAttribute;\r\n  exports.Int32Attribute = Int32Attribute;\r\n  exports.Int32BufferAttribute = Int32BufferAttribute;\r\n  exports.Int8Attribute = Int8Attribute;\r\n  exports.Int8BufferAttribute = Int8BufferAttribute;\r\n  exports.IntType = IntType;\r\n  exports.InterleavedBuffer = InterleavedBuffer;\r\n  exports.InterleavedBufferAttribute = InterleavedBufferAttribute;\r\n  exports.Interpolant = Interpolant;\r\n  exports.InterpolateDiscrete = InterpolateDiscrete;\r\n  exports.InterpolateLinear = InterpolateLinear;\r\n  exports.InterpolateSmooth = InterpolateSmooth;\r\n  exports.InvertStencilOp = InvertStencilOp;\r\n  exports.JSONLoader = JSONLoader;\r\n  exports.KeepStencilOp = KeepStencilOp;\r\n  exports.KeyframeTrack = KeyframeTrack;\r\n  exports.LOD = LOD;\r\n  exports.LatheBufferGeometry = LatheGeometry;\r\n  exports.LatheGeometry = LatheGeometry;\r\n  exports.Layers = Layers;\r\n  exports.LensFlare = LensFlare;\r\n  exports.LessDepth = LessDepth;\r\n  exports.LessEqualDepth = LessEqualDepth;\r\n  exports.LessEqualStencilFunc = LessEqualStencilFunc;\r\n  exports.LessStencilFunc = LessStencilFunc;\r\n  exports.Light = Light;\r\n  exports.LightProbe = LightProbe;\r\n  exports.Line = Line;\r\n  exports.Line3 = Line3;\r\n  exports.LineBasicMaterial = LineBasicMaterial;\r\n  exports.LineCurve = LineCurve;\r\n  exports.LineCurve3 = LineCurve3;\r\n  exports.LineDashedMaterial = LineDashedMaterial;\r\n  exports.LineLoop = LineLoop;\r\n  exports.LinePieces = LinePieces;\r\n  exports.LineSegments = LineSegments;\r\n  exports.LineStrip = LineStrip;\r\n  exports.LinearEncoding = LinearEncoding;\r\n  exports.LinearFilter = LinearFilter;\r\n  exports.LinearInterpolant = LinearInterpolant;\r\n  exports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\r\n  exports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\r\n  exports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;\r\n  exports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;\r\n  exports.LinearToneMapping = LinearToneMapping;\r\n  exports.Loader = Loader;\r\n  exports.LoaderUtils = LoaderUtils;\r\n  exports.LoadingManager = LoadingManager;\r\n  exports.LogLuvEncoding = LogLuvEncoding;\r\n  exports.LoopOnce = LoopOnce;\r\n  exports.LoopPingPong = LoopPingPong;\r\n  exports.LoopRepeat = LoopRepeat;\r\n  exports.LuminanceAlphaFormat = LuminanceAlphaFormat;\r\n  exports.LuminanceFormat = LuminanceFormat;\r\n  exports.MOUSE = MOUSE;\r\n  exports.Material = Material;\r\n  exports.MaterialLoader = MaterialLoader;\r\n  exports.Math = MathUtils;\r\n  exports.MathUtils = MathUtils;\r\n  exports.Matrix3 = Matrix3;\r\n  exports.Matrix4 = Matrix4;\r\n  exports.MaxEquation = MaxEquation;\r\n  exports.Mesh = Mesh;\r\n  exports.MeshBasicMaterial = MeshBasicMaterial;\r\n  exports.MeshDepthMaterial = MeshDepthMaterial;\r\n  exports.MeshDistanceMaterial = MeshDistanceMaterial;\r\n  exports.MeshFaceMaterial = MeshFaceMaterial;\r\n  exports.MeshLambertMaterial = MeshLambertMaterial;\r\n  exports.MeshMatcapMaterial = MeshMatcapMaterial;\r\n  exports.MeshNormalMaterial = MeshNormalMaterial;\r\n  exports.MeshPhongMaterial = MeshPhongMaterial;\r\n  exports.MeshPhysicalMaterial = MeshPhysicalMaterial;\r\n  exports.MeshStandardMaterial = MeshStandardMaterial;\r\n  exports.MeshToonMaterial = MeshToonMaterial;\r\n  exports.MinEquation = MinEquation;\r\n  exports.MirroredRepeatWrapping = MirroredRepeatWrapping;\r\n  exports.MixOperation = MixOperation;\r\n  exports.MultiMaterial = MultiMaterial;\r\n  exports.MultiplyBlending = MultiplyBlending;\r\n  exports.MultiplyOperation = MultiplyOperation;\r\n  exports.NearestFilter = NearestFilter;\r\n  exports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\r\n  exports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\r\n  exports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;\r\n  exports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;\r\n  exports.NeverDepth = NeverDepth;\r\n  exports.NeverStencilFunc = NeverStencilFunc;\r\n  exports.NoBlending = NoBlending;\r\n  exports.NoColors = NoColors;\r\n  exports.NoToneMapping = NoToneMapping;\r\n  exports.NormalAnimationBlendMode = NormalAnimationBlendMode;\r\n  exports.NormalBlending = NormalBlending;\r\n  exports.NotEqualDepth = NotEqualDepth;\r\n  exports.NotEqualStencilFunc = NotEqualStencilFunc;\r\n  exports.NumberKeyframeTrack = NumberKeyframeTrack;\r\n  exports.Object3D = Object3D;\r\n  exports.ObjectLoader = ObjectLoader;\r\n  exports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\r\n  exports.OctahedronBufferGeometry = OctahedronGeometry;\r\n  exports.OctahedronGeometry = OctahedronGeometry;\r\n  exports.OneFactor = OneFactor;\r\n  exports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\r\n  exports.OneMinusDstColorFactor = OneMinusDstColorFactor;\r\n  exports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\r\n  exports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\r\n  exports.OrthographicCamera = OrthographicCamera;\r\n  exports.PCFShadowMap = PCFShadowMap;\r\n  exports.PCFSoftShadowMap = PCFSoftShadowMap;\r\n  exports.PMREMGenerator = PMREMGenerator;\r\n  exports.ParametricBufferGeometry = ParametricGeometry;\r\n  exports.ParametricGeometry = ParametricGeometry;\r\n  exports.Particle = Particle;\r\n  exports.ParticleBasicMaterial = ParticleBasicMaterial;\r\n  exports.ParticleSystem = ParticleSystem;\r\n  exports.ParticleSystemMaterial = ParticleSystemMaterial;\r\n  exports.Path = Path;\r\n  exports.PerspectiveCamera = PerspectiveCamera;\r\n  exports.Plane = Plane;\r\n  exports.PlaneBufferGeometry = PlaneGeometry;\r\n  exports.PlaneGeometry = PlaneGeometry;\r\n  exports.PlaneHelper = PlaneHelper;\r\n  exports.PointCloud = PointCloud;\r\n  exports.PointCloudMaterial = PointCloudMaterial;\r\n  exports.PointLight = PointLight;\r\n  exports.PointLightHelper = PointLightHelper;\r\n  exports.Points = Points;\r\n  exports.PointsMaterial = PointsMaterial;\r\n  exports.PolarGridHelper = PolarGridHelper;\r\n  exports.PolyhedronBufferGeometry = PolyhedronGeometry;\r\n  exports.PolyhedronGeometry = PolyhedronGeometry;\r\n  exports.PositionalAudio = PositionalAudio;\r\n  exports.PropertyBinding = PropertyBinding;\r\n  exports.PropertyMixer = PropertyMixer;\r\n  exports.QuadraticBezierCurve = QuadraticBezierCurve;\r\n  exports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\r\n  exports.Quaternion = Quaternion;\r\n  exports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\r\n  exports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\r\n  exports.REVISION = REVISION;\r\n  exports.RGBADepthPacking = RGBADepthPacking;\r\n  exports.RGBAFormat = RGBAFormat;\r\n  exports.RGBAIntegerFormat = RGBAIntegerFormat;\r\n  exports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\r\n  exports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\r\n  exports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\r\n  exports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\r\n  exports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\r\n  exports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\r\n  exports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\r\n  exports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\r\n  exports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\r\n  exports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\r\n  exports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\r\n  exports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\r\n  exports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\r\n  exports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\r\n  exports.RGBA_BPTC_Format = RGBA_BPTC_Format;\r\n  exports.RGBA_ETC2_EAC_Format = RGBA_ETC2_EAC_Format;\r\n  exports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\r\n  exports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\r\n  exports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\r\n  exports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\r\n  exports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\r\n  exports.RGBDEncoding = RGBDEncoding;\r\n  exports.RGBEEncoding = RGBEEncoding;\r\n  exports.RGBEFormat = RGBEFormat;\r\n  exports.RGBFormat = RGBFormat;\r\n  exports.RGBIntegerFormat = RGBIntegerFormat;\r\n  exports.RGBM16Encoding = RGBM16Encoding;\r\n  exports.RGBM7Encoding = RGBM7Encoding;\r\n  exports.RGB_ETC1_Format = RGB_ETC1_Format;\r\n  exports.RGB_ETC2_Format = RGB_ETC2_Format;\r\n  exports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\r\n  exports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\r\n  exports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\r\n  exports.RGFormat = RGFormat;\r\n  exports.RGIntegerFormat = RGIntegerFormat;\r\n  exports.RawShaderMaterial = RawShaderMaterial;\r\n  exports.Ray = Ray;\r\n  exports.Raycaster = Raycaster;\r\n  exports.RectAreaLight = RectAreaLight;\r\n  exports.RedFormat = RedFormat;\r\n  exports.RedIntegerFormat = RedIntegerFormat;\r\n  exports.ReinhardToneMapping = ReinhardToneMapping;\r\n  exports.RepeatWrapping = RepeatWrapping;\r\n  exports.ReplaceStencilOp = ReplaceStencilOp;\r\n  exports.ReverseSubtractEquation = ReverseSubtractEquation;\r\n  exports.RingBufferGeometry = RingGeometry;\r\n  exports.RingGeometry = RingGeometry;\r\n  exports.SRGB8_ALPHA8_ASTC_10x10_Format = SRGB8_ALPHA8_ASTC_10x10_Format;\r\n  exports.SRGB8_ALPHA8_ASTC_10x5_Format = SRGB8_ALPHA8_ASTC_10x5_Format;\r\n  exports.SRGB8_ALPHA8_ASTC_10x6_Format = SRGB8_ALPHA8_ASTC_10x6_Format;\r\n  exports.SRGB8_ALPHA8_ASTC_10x8_Format = SRGB8_ALPHA8_ASTC_10x8_Format;\r\n  exports.SRGB8_ALPHA8_ASTC_12x10_Format = SRGB8_ALPHA8_ASTC_12x10_Format;\r\n  exports.SRGB8_ALPHA8_ASTC_12x12_Format = SRGB8_ALPHA8_ASTC_12x12_Format;\r\n  exports.SRGB8_ALPHA8_ASTC_4x4_Format = SRGB8_ALPHA8_ASTC_4x4_Format;\r\n  exports.SRGB8_ALPHA8_ASTC_5x4_Format = SRGB8_ALPHA8_ASTC_5x4_Format;\r\n  exports.SRGB8_ALPHA8_ASTC_5x5_Format = SRGB8_ALPHA8_ASTC_5x5_Format;\r\n  exports.SRGB8_ALPHA8_ASTC_6x5_Format = SRGB8_ALPHA8_ASTC_6x5_Format;\r\n  exports.SRGB8_ALPHA8_ASTC_6x6_Format = SRGB8_ALPHA8_ASTC_6x6_Format;\r\n  exports.SRGB8_ALPHA8_ASTC_8x5_Format = SRGB8_ALPHA8_ASTC_8x5_Format;\r\n  exports.SRGB8_ALPHA8_ASTC_8x6_Format = SRGB8_ALPHA8_ASTC_8x6_Format;\r\n  exports.SRGB8_ALPHA8_ASTC_8x8_Format = SRGB8_ALPHA8_ASTC_8x8_Format;\r\n  exports.Scene = Scene;\r\n  exports.SceneUtils = SceneUtils;\r\n  exports.ShaderChunk = ShaderChunk;\r\n  exports.ShaderLib = ShaderLib;\r\n  exports.ShaderMaterial = ShaderMaterial;\r\n  exports.ShadowMaterial = ShadowMaterial;\r\n  exports.Shape = Shape;\r\n  exports.ShapeBufferGeometry = ShapeGeometry;\r\n  exports.ShapeGeometry = ShapeGeometry;\r\n  exports.ShapePath = ShapePath;\r\n  exports.ShapeUtils = ShapeUtils;\r\n  exports.ShortType = ShortType;\r\n  exports.Skeleton = Skeleton;\r\n  exports.SkeletonHelper = SkeletonHelper;\r\n  exports.SkinnedMesh = SkinnedMesh;\r\n  exports.SmoothShading = SmoothShading;\r\n  exports.Sphere = Sphere;\r\n  exports.SphereBufferGeometry = SphereGeometry;\r\n  exports.SphereGeometry = SphereGeometry;\r\n  exports.Spherical = Spherical;\r\n  exports.SphericalHarmonics3 = SphericalHarmonics3;\r\n  exports.SplineCurve = SplineCurve;\r\n  exports.SpotLight = SpotLight;\r\n  exports.SpotLightHelper = SpotLightHelper;\r\n  exports.Sprite = Sprite;\r\n  exports.SpriteMaterial = SpriteMaterial;\r\n  exports.SrcAlphaFactor = SrcAlphaFactor;\r\n  exports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\r\n  exports.SrcColorFactor = SrcColorFactor;\r\n  exports.StaticCopyUsage = StaticCopyUsage;\r\n  exports.StaticDrawUsage = StaticDrawUsage;\r\n  exports.StaticReadUsage = StaticReadUsage;\r\n  exports.StereoCamera = StereoCamera;\r\n  exports.StreamCopyUsage = StreamCopyUsage;\r\n  exports.StreamDrawUsage = StreamDrawUsage;\r\n  exports.StreamReadUsage = StreamReadUsage;\r\n  exports.StringKeyframeTrack = StringKeyframeTrack;\r\n  exports.SubtractEquation = SubtractEquation;\r\n  exports.SubtractiveBlending = SubtractiveBlending;\r\n  exports.TOUCH = TOUCH;\r\n  exports.TangentSpaceNormalMap = TangentSpaceNormalMap;\r\n  exports.TetrahedronBufferGeometry = TetrahedronGeometry;\r\n  exports.TetrahedronGeometry = TetrahedronGeometry;\r\n  exports.TextBufferGeometry = TextGeometry;\r\n  exports.TextGeometry = TextGeometry;\r\n  exports.Texture = Texture;\r\n  exports.TextureLoader = TextureLoader;\r\n  exports.TorusBufferGeometry = TorusGeometry;\r\n  exports.TorusGeometry = TorusGeometry;\r\n  exports.TorusKnotBufferGeometry = TorusKnotGeometry;\r\n  exports.TorusKnotGeometry = TorusKnotGeometry;\r\n  exports.Triangle = Triangle;\r\n  exports.TriangleFanDrawMode = TriangleFanDrawMode;\r\n  exports.TriangleStripDrawMode = TriangleStripDrawMode;\r\n  exports.TrianglesDrawMode = TrianglesDrawMode;\r\n  exports.TubeBufferGeometry = TubeGeometry;\r\n  exports.TubeGeometry = TubeGeometry;\r\n  exports.UVMapping = UVMapping;\r\n  exports.Uint16Attribute = Uint16Attribute;\r\n  exports.Uint16BufferAttribute = Uint16BufferAttribute;\r\n  exports.Uint32Attribute = Uint32Attribute;\r\n  exports.Uint32BufferAttribute = Uint32BufferAttribute;\r\n  exports.Uint8Attribute = Uint8Attribute;\r\n  exports.Uint8BufferAttribute = Uint8BufferAttribute;\r\n  exports.Uint8ClampedAttribute = Uint8ClampedAttribute;\r\n  exports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\r\n  exports.Uniform = Uniform;\r\n  exports.UniformsLib = UniformsLib;\r\n  exports.UniformsUtils = UniformsUtils;\r\n  exports.UnsignedByteType = UnsignedByteType;\r\n  exports.UnsignedInt248Type = UnsignedInt248Type;\r\n  exports.UnsignedIntType = UnsignedIntType;\r\n  exports.UnsignedShort4444Type = UnsignedShort4444Type;\r\n  exports.UnsignedShort5551Type = UnsignedShort5551Type;\r\n  exports.UnsignedShort565Type = UnsignedShort565Type;\r\n  exports.UnsignedShortType = UnsignedShortType;\r\n  exports.VSMShadowMap = VSMShadowMap;\r\n  exports.Vector2 = Vector2;\r\n  exports.Vector3 = Vector3;\r\n  exports.Vector4 = Vector4;\r\n  exports.VectorKeyframeTrack = VectorKeyframeTrack;\r\n  exports.Vertex = Vertex;\r\n  exports.VertexColors = VertexColors;\r\n  exports.VideoTexture = VideoTexture;\r\n  exports.WebGL1Renderer = WebGL1Renderer;\r\n  exports.WebGLCubeRenderTarget = WebGLCubeRenderTarget;\r\n  exports.WebGLMultipleRenderTargets = WebGLMultipleRenderTargets;\r\n  exports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;\r\n  exports.WebGLRenderTarget = WebGLRenderTarget;\r\n  exports.WebGLRenderTargetCube = WebGLRenderTargetCube;\r\n  exports.WebGLRenderer = WebGLRenderer;\r\n  exports.WebGLUtils = WebGLUtils;\r\n  exports.WireframeGeometry = WireframeGeometry;\r\n  exports.WireframeHelper = WireframeHelper;\r\n  exports.WrapAroundEnding = WrapAroundEnding;\r\n  exports.XHRLoader = XHRLoader;\r\n  exports.ZeroCurvatureEnding = ZeroCurvatureEnding;\r\n  exports.ZeroFactor = ZeroFactor;\r\n  exports.ZeroSlopeEnding = ZeroSlopeEnding;\r\n  exports.ZeroStencilOp = ZeroStencilOp;\r\n  exports.sRGBEncoding = sRGBEncoding;\r\n\r\n  Object.defineProperty(exports, '__esModule', { value: true });\r\n});\r\n","// import * as THREE from 'three';\r\n// import getRefs from '../get-refs';\r\n\r\n// const refs = getRefs();\r\n\r\n// // width and height <canvas> element equals page\r\n// // let WIDTH = window.innerWidth;\r\n// let WIDTH = 640;\r\n// // let HEIGHT = window.innerHeight;\r\n// let HEIGHT = 360;\r\n\r\n// // That place where all is happening\r\n// const scene = new THREE.Scene();\r\n// scene.background = new THREE.Color(0xaaaaaa);\r\n// const camera = new THREE.PerspectiveCamera(70, WIDTH / HEIGHT);\r\n\r\n// // for painting scene in browser\r\n// const renderer = new THREE.WebGLRenderer({ alpha: true });\r\n// renderer.setSize(WIDTH, HEIGHT);\r\n// // color BG\r\n// renderer.setClearColor(0x000000, 0);\r\n// // pin DOM element with page\r\n// refs.jsThreeMenu.appendChild(renderer.domElement);\r\n// // document.body.appendChild(renderer.domElement);\r\n\r\n// const geometry = new THREE.BoxGeometry(10, 10, 10);\r\n// const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n// const cube = new THREE.Mesh(geometry, material);\r\n// scene.add(cube);\r\n\r\n// camera.position.z = 15;\r\n// // Added object in scene\r\n// scene.add(camera);\r\n\r\n// // var dodecahedronGeometry = new THREE.DodecahedronBufferGeometry(15, 0);\r\n// // var lambertMaterial = new THREE.MeshLambertMaterial({ color: 0x0095dd });\r\n// // var dodecahedron = new THREE.Mesh(dodecahedronGeometry, lambertMaterial);\r\n// // dodecahedron.position.x = 25;\r\n// // scene.add(dodecahedron);\r\n\r\n// function animate() {\r\n//   requestAnimationFrame(animate);\r\n\r\n//   cube.rotation.x += 0.005;\r\n//   cube.rotation.y += 0.005;\r\n\r\n//   renderer.render(scene, camera);\r\n// }\r\n\r\n// animate();\r\n","import './sass/main.scss';\nimport './js/three/three';\nimport './js/three/options';\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}